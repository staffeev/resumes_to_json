,Filename,Text
0,source/Renat Ivanov.pdf,"Renat IVANOV
"
1,source/Renat Ivanov.pdf,"Senior Software Engineer
"
2,source/Renat Ivanov.pdf,"Moscow
"
3,source/Renat Ivanov.pdf,"+7-999-000-4786
renat@gmail.com
linkedin.com/in/renat
"
4,source/Renat Ivanov.pdf,"Experience
"
5,source/Renat Ivanov.pdf,"Sberbank PJSC
June 2018 – present
"
6,source/Renat Ivanov.pdf,"Senior Software Engineer
Moscow, Russia
"
7,source/Renat Ivanov.pdf,"• Addressed a number of legal issues by developing from scratch and launching a service to control actions with various types of
"
8,source/Renat Ivanov.pdf,"user consents. Designed the service to be usable from other company’s microservices and front-end widgets.
"
9,source/Renat Ivanov.pdf,"• Increased the speed of the sensitive mortgage cases by 50% by implementing, shipping and supporting the services that
"
10,source/Renat Ivanov.pdf,"automate the process. Utilised message-driven architecture to provide high availability and reliability.
"
11,source/Renat Ivanov.pdf,"• Prototyped, organized, and led the development of an ETL-based advisory system to track skills of engineers in the company,
"
12,source/Renat Ivanov.pdf,"bus factor of their teams, and other metrics. The system improved involvement of engineers, dev leads and CTO in the
development process.
"
13,source/Renat Ivanov.pdf,"• Created a performance testing process from scratch. It is used to simulate the expected load and thus to keep our services 99.99%
"
14,source/Renat Ivanov.pdf,"available during peak load. Successfully combined jMeter, APM, cloud and monitoring tools to reach the goal.
"
15,source/Renat Ivanov.pdf,"• Curated development of the corporate portal Java team, applied microservices approach to deliver new features faster and
"
16,source/Renat Ivanov.pdf,"safer. Mentored 2 back-end developers.
"
17,source/Renat Ivanov.pdf,"• Collaborated with back-end & front-end developers of other teams to design REST API contracts. Communicated directly with
"
18,source/Renat Ivanov.pdf,"CTO and Team Leaders, worked with feedback. Applied clean code/architecture best practices on work.
"
19,source/Renat Ivanov.pdf,"Sberbank-Technologies JSC
October 2015 – June 2018
"
20,source/Renat Ivanov.pdf,"Leading Software Engineer
Moscow, Russia
"
21,source/Renat Ivanov.pdf,"• Eliminated possibilities of fraud and saved company millions of rubles by introducing blockage of working from two
"
22,source/Renat Ivanov.pdf,"windows. Fixed security issues by updating the encryption library.
"
23,source/Renat Ivanov.pdf,"• Implemented individual currency conversion and interest rates features, that attracted hundreds of new customers and
"
24,source/Renat Ivanov.pdf,"increased loyalty of existing ones. Gained experience with Enterprise Serial Bus architecture for integration with other systems.
"
25,source/Renat Ivanov.pdf,"• Boosted overall development productivity by extracting a service from the monolithic application with support of a
"
26,source/Renat Ivanov.pdf,"dedicated DB and distributed transactions support.
"
27,source/Renat Ivanov.pdf,"• Successfully migrated functionality of the Deposit subsystem of the Bank Offices and Online Banking systems to
"
28,source/Renat Ivanov.pdf,"microservices achieving 30% faster feature delivery. Analyzed, and fixed bugs and incidents on both front-end and
back-end.
"
29,source/Renat Ivanov.pdf,"• Sped up the development lifecycle by at least 20% and decreased the number of bugs by introducing git-flow with
"
30,source/Renat Ivanov.pdf,"mandatory code review and Kotlin into the project. Co-authored, supported, and advocated the team agreement of
architecture, API designing, and code style.
"
31,source/Renat Ivanov.pdf,"• Interviewed over 30 candidates for Java developer position. Onboarded, and mentored 3 new hires.
"
32,source/Renat Ivanov.pdf,"AVP-Technology LLC
October 2014 – June 2015
"
33,source/Renat Ivanov.pdf,"Software Engineer
Moscow, Russia
"
34,source/Renat Ivanov.pdf,"• Added new features, found and fixed bugs, refactored more than 200000 lines of unstructured and difficult-to-maintain legacy
"
35,source/Renat Ivanov.pdf,"code. Updated and structured the project documentation.
"
36,source/Renat Ivanov.pdf,"Open-Retail LLC
June 2013 – March 2014
"
37,source/Renat Ivanov.pdf,"Web Developer
Moscow, Russia
"
38,source/Renat Ivanov.pdf,"• Developed and launched 3 Internet shopping websites.
"
39,source/Renat Ivanov.pdf,"• Created a package solution for a CMS e-commerce websites consisted of cross-platform mobile app and its back-end.
"
40,source/Renat Ivanov.pdf,"Education
"
41,source/Renat Ivanov.pdf,"Peoples’ Friendship University Of Russia
September 2011 – July 2013
"
42,source/Renat Ivanov.pdf,"Master’s Degree in Control in Technical Systems
Moscow, Russia
"
43,source/Renat Ivanov.pdf,"• A 3rd-degree diploma was received for winning the contest with a paper called ”Cloud computing for solving control
"
44,source/Renat Ivanov.pdf,"problems with the help of network operator method”
"
45,source/Renat Ivanov.pdf,"Peoples’ Friendship University Of Russia
September 2007 – July 2011
"
46,source/Renat Ivanov.pdf,"Bachelor’s Degree in Automation and Control
Moscow, Russia
"
47,source/Renat Ivanov.pdf,"Technical Skills
"
48,source/Renat Ivanov.pdf,"Languages, frameworks: Java, Kotlin, Spring, Micronaut, MERN
Monitoring:
Grafana,
InfluxDB,
Prometheus
"
49,source/Renat Ivanov.pdf,"Persistence: PostgreSQL, MySQL, MongoDB, JOOQ, JPA, JDBC
Build,
tools:
Maven,
Gradle;
Git,
IntelliJ
IDEA
"
50,source/Renat Ivanov.pdf,"Integration: Feign, RestTemplate, RabbitMQ, IBM MQ
CI/CD, Testing: Jenkins, Docker, K8S; JUnit, Mockito
"
51,source/Eshi Juraev.pdf,"SUMMARY
"
52,source/Eshi Juraev.pdf,"Eshi Juraev
"
53,source/Eshi Juraev.pdf,"Email: baaahayotoff@gmail.com
"
54,source/Eshi Juraev.pdf,"LinkedIn: aaakhayot
"
55,source/Eshi Juraev.pdf,"GitHub: aaakhayot
"
56,source/Eshi Juraev.pdf,"Software engineer with 3+ years of experience in back-end development with designing and implementing scalable, cloud appli-
cations and microservice-based distributed systems using various technologies.
"
57,source/Eshi Juraev.pdf,"EXPERIENCE
"
58,source/Eshi Juraev.pdf,"Neulpum Maru — e-commerce platform in South Korea
Remote, Seoul - South Korea
"
59,source/Eshi Juraev.pdf,"•
Software Developer at Development Team
Mar 2023 — Present
"
60,source/Eshi Juraev.pdf,"◦ Developed data scraping mechanisms using Python and web scraping tools for data collecting and analysing
◦ Built a secure back-end API integration for custom order service, enabling real-time data fetching and processing
◦ Implemented CRM system by distributing multiple services and integrating background workers using Celery and Redis
"
61,source/Eshi Juraev.pdf,"Digital Entertainment
Remote, Daegu - South Korea
"
62,source/Eshi Juraev.pdf,"•
Backend Developer at Development Team
Mar 2023 — Jul 2023
"
63,source/Eshi Juraev.pdf,"◦ Developed an AI chat bot application using the OpenAI Chat GPT API
◦ Customized the GPT model to respond as various famous characters, providing engaging and immersive interactions
◦ Integrated the application as part of a metaverse app, enhancing user experience within the virtual world
"
64,source/Eshi Juraev.pdf,"Dirilis Group INC — Innovative IT Solutions Provider
Remote, Chicago - USA
"
65,source/Eshi Juraev.pdf,"•
Backend Developer at Development Team
Jan 2023 — Mar 2023
"
66,source/Eshi Juraev.pdf,"◦ Implemented API integration using Python AWS Lambda functions (Serverless) by storing Data to DynamoDB on AWS
◦ Serviced Cron based jobs by scheduling tasks form AWS lambda functions
◦ Worked with Frontend Team to connect API callbacks from AWS API-Gateways from integrated data
"
67,source/Eshi Juraev.pdf,"Papamarket — e-commerce platform in South Korea
Seoul, South Korea
"
68,source/Eshi Juraev.pdf,"•
Software Engineer at IT Development Team
Jun 2022 — Mar 2023
"
69,source/Eshi Juraev.pdf,"◦ Implemented a scalable Demand Forecasting system using forecasting models and order datasets by enhancing accuracy
◦ Developed Warehouse System with real-time product quantity tracking service that reduced Fresh Team workload by 30%
◦ Built internal services for automation, data fetching, web scraping and data parsing using Python and JavaScript
◦ Implemented CI/CD pipeline for auto deployment using Jenkins and Github actions
"
70,source/Eshi Juraev.pdf,"Keimyung University, Daegu — Outsourcing for Tech Companies
Daegu, South Korea
"
71,source/Eshi Juraev.pdf,"•
Backend Developer at Development Team
Mar 2021 — May 2022
"
72,source/Eshi Juraev.pdf,"◦ Developed (HelpMeUp) Social Platform by bringing several services to solve problems of students during their semesters
◦ Implemented and maintained 10+ web applications by using Python and Go programming languages
◦ Created CRUD based RESTful APIs with JWT authentication methods by using Gin Framework of Golang
"
73,source/Eshi Juraev.pdf,"SKILLS
"
74,source/Eshi Juraev.pdf,"Languages:
Python, JavaScript, Go, C#, SQL
"
75,source/Eshi Juraev.pdf,"Frameworks: Django, FastAPI, Flask, NodeJS, EspressJS, ES6, JQuery, SpringBoot, Gin, PostgreSQL, MySQL, SQLite3
Others:
Docker, Kafka, Celery, Redis, Jenkins, Linux, AWS, Unity Game Engine
"
76,source/Eshi Juraev.pdf,"EDUCATION
"
77,source/Eshi Juraev.pdf,"◦ Bachelor of Engineering in Game Mobile Engineering, Keimyung University
Mar 2020 — Jul 2023
"
78,source/Eshi Juraev.pdf,"Relevant courses: Operating Systems, AI in Game Development, Distributed Systems, Databases, Web Development,
Algorithms, Data Structures, Data Communication, Object Oriented Programming, Networks
"
79,source/Eshi Juraev.pdf,"ADDITIONAL
"
80,source/Eshi Juraev.pdf,"◦ Languages: English, Russian, Korean, Uzbek
◦ Volunteering: Mentored and reviewed homework assignments at Coding School (KMU) programming for beginners
◦ Awards: Best English Translator and Guide of IT Development Team (Papamarket)
"
81,source/Кириленков Матвей.docx,"Кириленков Матвей 
"
82,source/Кириленков Матвей.docx,"Владимирович Москва
"
83,source/Кириленков Матвей.docx,"Цель
"
84,source/Кириленков Матвей.docx,"+7 916 70 000 70
"
85,source/Кириленков Матвей.docx,"ahfhfjei.kirilenkov@gmail.com
"
86,source/Кириленков Матвей.docx,"Руководитель направления, архитектор решений, пресейл, руководитель проектов - в 
области больших данных, озер и хранилищ данных, анализа данных
"
87,source/Кириленков Матвей.docx,"Профиль
"
88,source/Кириленков Матвей.docx,"30-летний опыт работы в ИТ на разных позициях: pre-sales, архитектор решений, руководитель 
проектов, консультант по внедрению, аналитик, администратор БД, разработчик. Последние 15 
лет – специализация в области хранилищ и озер данных, анализа больших данных, 
корпоративных аналитических систем. Опыт работы в предметных областях: телекомы, банки, 
ритейл. Сертифицированный профессионал по Vertica, Teradata, Oracle Hyperion.
Места работы и роли за последние 25 лет
"
89,source/Кириленков Матвей.docx,"1.
2022 — по настоящее время. Twingo (https://twingo.co.il56/) - архитектор решений в 
области больших данных
"
90,source/Кириленков Матвей.docx,"2.
2014 -2022. Vertica (https://www.vertica.com/): архитектор решений (системный инженер, pre-
sales).
"
91,source/Кириленков Матвей.docx,"3.
2011 – 2014. Teradata, архитектор решений
"
92,source/Кириленков Матвей.docx,"4.
2008 – 2011. Sitronics IT, архитектор решений, руководитель проектов, руководитель 
направления.
"
93,source/Кириленков Матвей.docx,"5.
2005 – 2008. Oracle, Старший консультант (BI и Хранилища данных).
"
94,source/Кириленков Матвей.docx,"6.
2003 - 2005. Equant Telco, Аналитик.
"
95,source/Кириленков Матвей.docx,"7.
2000 – 2003. Golden Telecom, Аналитик.
"
96,source/Кириленков Матвей.docx,"8.
1997- 2000. Rostelekom, FORS, Аналитик, разработчик системы биллинга для 
телекомов, администратор БД Оракл.
"
97,source/Кириленков Матвей.docx,"Содержание работы и достижения
"
98,source/Кириленков Матвей.docx,"Twingo
"
99,source/Кириленков Матвей.docx,"Участие, в т.ч. на ключевой роли, в пилотных проектах для внедрения ХД на базе Verticv, 
SingleStore, Работаю с разными инфраструктурами — AWS, GCP, K8S, виртуальные и 
физические среды.
"
100,source/Кириленков Матвей.docx,"Vertica
"
101,source/Кириленков Матвей.docx,"Presales, архитектор решений, официальное название должности – ведущий менеджер по 
техническому консультированию по программным продуктам.
"
102,source/Кириленков Матвей.docx,"Поддержка с технической стороны продаж Vertica в России и ЕМЕА. Ответы на RFх, 
проведение тестов (proof of concept) разной сложности, презентации продукта для клиентов 
и партнеров, семинары, демонстрации, сопровождение клиентов после заключения сделки.
"
103,source/Кириленков Матвей.docx,"С моим участием, иногда решающим (успешное завершение тестов), закрыты несколько сделок в 
ЕМЕА и России, в т.ч. одна из самых крупных сделок по Вертике в ЕМЕА. Был доверенным 
советчиком (trusted advisor) для некоторых, в т.ч.ключевых для бизнеса, клиентов.
"
104,source/Кириленков Матвей.docx,"Последние 4 года одной из моих ролей была поддержка с технической стороны развития 
"
105,source/Кириленков Матвей.docx,"партнерской сети в ЕМЕА. Проводил семинары для партнеров, поддерживал партнерские 
продажи и внедрения.
"
106,source/Кириленков Матвей.docx,"Teradata
"
107,source/Кириленков Матвей.docx,"Архитектор решений в области хранилищ данных. 3 года в роли архитектора на внедрении ХД в 
одном из крупнейших российских банков.
"
108,source/Кириленков Матвей.docx,"Sitronics IT
"
109,source/Кириленков Матвей.docx,"Ведущий архитектор и руководитель проектов разной сложности для одного из крупнейших 
российских телекомов. Главные проекты:
"
110,source/Кириленков Матвей.docx,"￿
Система планирования и бюджетирования (Hyperion Planning and Budgeting).
"
111,source/Кириленков Матвей.docx,"￿
Разработка ТЗ на внедрение биллинга от Oracle (BRM).
"
112,source/Кириленков Матвей.docx,"Oracle
"
113,source/Кириленков Матвей.docx,"Аналитик и консультант по внедрению на проекте в гос-секторе: Cash planning на основе Оракл 
Hyperion Planning. Сбор и анализ требований, составление ТЗ и прочей проектной 
документации, разработка решения, успешное завершение приемочного тестирования.
"
114,source/Кириленков Матвей.docx,"Внедрение Oracle Daily Business Intelligence (DBI) для модулей Financials, Supply Chain, 
Planning, Inventory, Maintenance (Oracle ERP) в рамках проекта внедрения OeBS в одном из 
крупнейших российских предприятий.
"
115,source/Кириленков Матвей.docx,"Equant
"
116,source/Кириленков Матвей.docx,"Аналитик в отделе маркетинга и продуктов. Проводил тендер на создание корпоративного 
портала и витрины данных биллинга. Разработал ТЗ на несколько систем: Price Book, Voice 
tariffs management, Least cost routing.
"
117,source/Кириленков Матвей.docx,"Golden Telecom / Вымпелком
"
118,source/Кириленков Матвей.docx,"Разработка ТЗ и самого решения для системы поддержки предоплатных телефонных карт 
(Oracle DB, SQL, PL\\SQL).
"
119,source/Кириленков Матвей.docx,"FORS, RosTelekom
"
120,source/Кириленков Матвей.docx,"Сбор и анализ требований, разработка ТЗ и самого решения для одного из модулей 
биллинга для операторов фиксированной связи и предоплатного интернета (Oracle DB, 
Oracle Forms & Designer, SQL, PL\\SQL).
Образование:
"
121,source/Кириленков Матвей.docx,"Высшее. МИФИ, факультет теоретической и экспериментальной физики.
Курсы
"
122,source/Кириленков Матвей.docx,"￿
2013, Teradata University: Teradata workload optimization
"
123,source/Кириленков Матвей.docx,"￿
2012, Teradata University: Customer interaction skills
"
124,source/Кириленков Матвей.docx,"￿
2011, Teradata University: Teradata Factory
"
125,source/Кириленков Матвей.docx,"￿
2008, Oracle University: Hyperion Essbase Analytics 9.3 Bootcamp Ed 1
"
126,source/Кириленков Матвей.docx,"￿
2008, Oracle University: Hyperion Financial Reporting 9.3 for Essbase and Planning Ed 1
"
127,source/Кириленков Матвей.docx,"￿
2007, Oracle University: Hyperion Planning 9.3: Create and Manage Applications Ed 1
"
128,source/Кириленков Матвей.docx,"￿
2006-2007, Hock International, Moscow: CMA, Part 2 – Management Accounting and Reporting.
"
129,source/Кириленков Матвей.docx,"￿
2007, Oracle University: 11i Payables Management Fundamentals
"
130,source/Кириленков Матвей.docx,"￿
2006, Oracle University: 11i General Ledger Management Fundamentals
"
131,source/Кириленков Матвей.docx,"￿
2006, Oracle University: Oracle Financial Consolidation Hub.
"
132,source/Кириленков Матвей.docx,"￿
2006, Oracle University: Enterprise Performance Foundation.
"
133,source/Кириленков Матвей.docx,"￿
2005, Oracle University: Oracle Enterprise Planning and Budgeting.
"
134,source/Кириленков Матвей.docx,"￿
2005, Oracle University: 11i Implement Daily Business Intelligence.
"
135,source/Кириленков Матвей.docx,"Сертификаты
"
136,source/Кириленков Матвей.docx,"￿
Vertica 9,10 certified professional
"
137,source/Кириленков Матвей.docx,"￿
Teradata certified professional
"
138,source/Кириленков Матвей.docx,"￿
Oracle Hyperion Planning 9.3 Administrator Certified Expert.
"
139,source/Кириленков Матвей.docx,"￿
Oracle Hyperion Essbase 9.3 Developer Certified Expert.
"
140,source/Кириленков Матвей.docx,"￿
Hyperion Certified Administrator (4H0-048 HCA - Hyperion Planning 9.3: Create/Manage Apps).
"
141,source/Кириленков Матвей.docx,"Навыки
"
142,source/Кириленков Матвей.docx,"￿
Презентации, семинары, рабочие встречи для разных аудиторий (клиенты и партнеры).
"
143,source/Кириленков Матвей.docx,"￿
Руководство проектами по внедрению информационных систем
"
144,source/Кириленков Матвей.docx,"￿
Экспертный уровень в SQL, администрировании и архитектуре аналитических БД (Vertica, 
Teradata, SingleStore), процедурные языки СУБД.
"
145,source/Кириленков Матвей.docx,"￿
Знаком с машинным обучением, инфраструктурами физических серверов, виртуализации и 
Kubernetes,
"
146,source/Кириленков Матвей.docx,"Прочее
"
147,source/Кириленков Матвей.docx,"Семейное положение: женат, двое взрослых детей.
"
148,source/Egor Kormulev.docx,"Egor Kormulev
"
149,source/Egor Kormulev.docx,"Skype: eee.kormulev LinkedIn: eee.kormulev
LeetCode: eeeKormulev Github: eee.kormulev
"
150,source/Egor Kormulev.docx,"EXPERIENCE & PROJECTS
"
151,source/Egor Kormulev.docx,"Polymatica Russia
Server Side Software Developer
"
152,source/Egor Kormulev.docx,"Moscow 
Feb 2019 - Present
"
153,source/Egor Kormulev.docx,"•
Implemented Geospatial search module (C++11, boost,PostgreSQL(Postgis),Redis, 
ODBC,JSON,Docker).
"
154,source/Egor Kormulev.docx,"•
Geospatial search module (C++11,ODBC,JSON,Redis(hiredis)).
"
155,source/Egor Kormulev.docx,"•
Geo-coord server (PostgreSQL(Postgis),PL/pgSQl, Docker).
"
156,source/Egor Kormulev.docx,"•
Postal address to RESP translation script (python 3).
"
157,source/Egor Kormulev.docx,"•
Infrastructure deployment-script. (Modular architecture design. python 3).
"
158,source/Egor Kormulev.docx,"•
unit-tests (gtests).
"
159,source/Egor Kormulev.docx,"•
Page Scroller (Python/OpenCV).
"
160,source/Egor Kormulev.docx,"•
Application testing and maintaining (Integration and Unit tests).
"
161,source/Egor Kormulev.docx,"JSC FinTech
System Software Developer
"
162,source/Egor Kormulev.docx,"Moscow 
April 2017 – Feb 2019
"
163,source/Egor Kormulev.docx,"•
Designed and implemented operation system self-test script (Modular architecture design. 
Python 3, SELinux, PAM).
"
164,source/Egor Kormulev.docx,"•
Designed and implemented SELinux policy provider (Python, SELinux, PAM).
"
165,source/Egor Kormulev.docx,"•
Designed and implemented Linux daemon SELinux policy applier (C/SELinux API/POSIX 
API).
"
166,source/Egor Kormulev.docx,"•
Designed and implemented cross-platform BXML parser (Qt).
"
167,source/Egor Kormulev.docx,"•
Worked on patching AIDE (C).
"
168,source/Egor Kormulev.docx,"•
Worked on patching SPICE (C).
"
169,source/Egor Kormulev.docx,"Ltd. Medicom
Software Developer
"
170,source/Egor Kormulev.docx,"•
Testing and maintaining Linux applications.
"
171,source/Egor Kormulev.docx,"•
Developing software applications using C++ (Qt library).
"
172,source/Egor Kormulev.docx,"EDUCATION
"
173,source/Egor Kormulev.docx,"Bauman Moscow State Technical University
Engineer’s degree (Specialist): “Aerospace, Aeronautical and 
Astronautical/Space Engineering”
"
174,source/Egor Kormulev.docx,"Certification:
IELTS Academic (C1).
"
175,source/Egor Kormulev.docx,"ACTIVITIES 
"
176,source/Egor Kormulev.docx,"KUDO 
"
177,source/Egor Kormulev.docx,"SKILLS
"
178,source/Egor Kormulev.docx,"Moscow  
November 2015 – April 2017
"
179,source/Egor Kormulev.docx,"Moscow
"
180,source/Egor Kormulev.docx,"2009
"
181,source/Egor Kormulev.docx,"Moscow
"
182,source/Egor Kormulev.docx,"2016
"
183,source/Egor Kormulev.docx,"•
Programming: C/C++ stl 11/14/17, boost, Multithreading Python 3, 
PostgreSQL(pl/pgsql), Redis(hiredis), SQLite, Docker, Git, SELinux, Cmake, rpm, spec
"
184,source/Egor Kormulev.docx,"•
Languages: Russian, English(C1)
"
185,source/Alexandr Burakov.pdf,"Alexandr Burakov
"
186,source/Alexandr Burakov.pdf,"(+38) 097-000-81-95 | buaaaov.r@gmail.com | linkedin.com/in/alex-burakov/ | github.com/Anvaaandre
"
187,source/Alexandr Burakov.pdf,"EDUCATION
"
188,source/Alexandr Burakov.pdf,"MFTI
Sep 2019 – June 2023
"
189,source/Alexandr Burakov.pdf,"Bachelor of Computer Science
Moscow
"
190,source/Alexandr Burakov.pdf,"• Relevant coursework: algorithms and data structures, OOP, calculus, linear algebra, advanced graph theory
"
191,source/Alexandr Burakov.pdf,"• GPA – 4.20 out of 5
"
192,source/Alexandr Burakov.pdf,"EXPERIENCE
"
193,source/Alexandr Burakov.pdf,"Data Scientist
Mar 2021 – Present
"
194,source/Alexandr Burakov.pdf,"Fozzy Group
Moscow
"
195,source/Alexandr Burakov.pdf,"• Conducted research and implemented embedding models that helped with cold-start forecasting
"
196,source/Alexandr Burakov.pdf,"• Reviewed and refactored project codebase, which led to much faster iteration and onboarding process
"
197,source/Alexandr Burakov.pdf,"• Performed multiple feature engineering & selection cycles, leading to higher and much cleaner scores
"
198,source/Alexandr Burakov.pdf,"• Participated in early-stage project evaluation: from interpreting business task as ML problem to first MVPs
"
199,source/Alexandr Burakov.pdf,"• Contributed to establishing pipeline standards and documentation
"
200,source/Alexandr Burakov.pdf,"Machine Learning Engineer
Jan 2021 – Mar 2021
"
201,source/Alexandr Burakov.pdf,"Computer Vision startup under NDA
Moscow
"
202,source/Alexandr Burakov.pdf,"• Carried out error analysis and engineered several features which lead to 15% increase in model’s performance
"
203,source/Alexandr Burakov.pdf,"• Developed visualization and evaluation tools that lead to a better understanding of model’s error
"
204,source/Alexandr Burakov.pdf,"• Optimized post-processing pipeline for real-time visualizations
"
205,source/Alexandr Burakov.pdf,"Researcher
Nov 2020 – May 2021
"
206,source/Alexandr Burakov.pdf,"Fido.ai, NaUKMA
Moscow
"
207,source/Alexandr Burakov.pdf,"• Performed code and PR reviews
"
208,source/Alexandr Burakov.pdf,"• Established question answering baseline
"
209,source/Alexandr Burakov.pdf,"• Implemented LSTM model for ethnicity classification
"
210,source/Alexandr Burakov.pdf,"• Made Linear Regression tutorial for newbees
"
211,source/Alexandr Burakov.pdf,"Math and Computer Science tutor
June 2020 – Aug 2020
"
212,source/Alexandr Burakov.pdf,"Self-employed
Moscow
"
213,source/Alexandr Burakov.pdf,"• 6 students of different age (from 12 to 17)
"
214,source/Alexandr Burakov.pdf,"• 100% positive feedback rate
"
215,source/Alexandr Burakov.pdf,"PROJECTS
"
216,source/Alexandr Burakov.pdf,"OpenCV demos | Python, OpenCV
Aug 2020
"
217,source/Alexandr Burakov.pdf,"• Substituting sheet of paper with a honey badger image in real-time
"
218,source/Alexandr Burakov.pdf,"• Detection of AruCo markers and figuring out their angles of rotation in real-time
"
219,source/Alexandr Burakov.pdf,"• Telegram bot that substitutes all faces in picture with a pre-made face mask
"
220,source/Alexandr Burakov.pdf,"Siamese neural network | Python, Keras
Jan 2019
"
221,source/Alexandr Burakov.pdf,"• Performed data collection and augmentation
"
222,source/Alexandr Burakov.pdf,"• Implemented and trained a Siamese neural network with skip-gram technique
"
223,source/Alexandr Burakov.pdf,"• Achieved 95% accuracy on predicting whether two chords are used in same context
"
224,source/Alexandr Burakov.pdf,"• Published a research paper on this project
"
225,source/Alexandr Burakov.pdf,"ACHIEVEMENTS
"
226,source/Alexandr Burakov.pdf,"1% of 100.000 (estimated) participants in Junior Academy of Sciences of Ukraine contest
Mar 2019
"
227,source/Alexandr Burakov.pdf,"Published a research paper on deep similarity learning of piano chords with a Siamese Neural Network
Oct 2018
"
228,source/Alexandr Burakov.pdf,"SKILLS
"
229,source/Alexandr Burakov.pdf,"Programming Languages: Python, Java, SQL (Postgres, MS SQL), C++ and Haskell (beginner)
Frameworks: PyTorch (preffered), Keras, LightGBM, Dask
"
230,source/Alexandr Burakov.pdf,"Tools: Anaconda, Git, Linux, Jupyter, Streamlit, MLFlow
Libraries: scientific Python kit (numpy, pandas, matplotlib, etc.), Flask
Languages: English (advanced), Russian (native)
"
231,source/Yan Doe.pdf,"Yan.doe@gmail.com
"
232,source/Yan Doe.pdf,"Senior Backend Developer
https://www.linkedin.com/in/Yan-doe
"
233,source/Yan Doe.pdf,"Yan Doe
"
234,source/Yan Doe.pdf,"Professional Experience
"
235,source/Yan Doe.pdf,"123 Technology Services
Some town1
"
236,source/Yan Doe.pdf,"Senior Java Developer, online advertising platform
Sep 2020 ‑ present
"
237,source/Yan Doe.pdf,"• Within a team, designed and developed an online advertising platform for the Belgian media company.
• Implemented integration with a payment provider and internal financial system.
• Reduced production deployment cycle from 2 month to 2 weeks.
• Was involved in interviewing, mentoring, and onboarding activities.
Primary technologies: Java 11, AWS, Quarkus, Postgres, Terraform
"
238,source/Yan Doe.pdf,"345 company
Some town2
"
239,source/Yan Doe.pdf,"Java Developer, risk management solution for car loans
Mar 2019 ‑ Aug 2020
"
240,source/Yan Doe.pdf,"• Designed and implemented online service for one of top 20 world bank that is using by car dealers in Germany. The product automates the
"
241,source/Yan Doe.pdf,"process of getting credits for cars and has all necessary services within one platform for car dealers and bank managers.
"
242,source/Yan Doe.pdf,"• Implemented push notifications system sending tens of types of notifications to internal and external users. The system increased user engagement.
• Implemented integration with the archive system. The integration reduced the time of loan application processing by 10%
Primary technologies: Java 11, Spring, ActiveMQ, Postgres, Kubernetes
"
243,source/Yan Doe.pdf,"789 Systems
Some town3
"
244,source/Yan Doe.pdf,"Java Developer, financial risk analysis solution
Sep 2017 ‑ Mar 2019
"
245,source/Yan Doe.pdf,"• Developed a solution for getting information about the ultimate beneficial owners of the business. The product became a part of the financial risk
"
246,source/Yan Doe.pdf,"analysis platform.
"
247,source/Yan Doe.pdf,"• Production environment configuration and deployment.
• Implemented integration with an external system for getting information about company owners.
Primary technologies: Java 8, Guice, AWS, Jenkins
"
248,source/Yan Doe.pdf,"Super company
Some town4
"
249,source/Yan Doe.pdf,"Java Developer, ERP implementation project
Sep 2016 ‑ Dec 2017
"
250,source/Yan Doe.pdf,"• Integrated ERP system with internal logistic services.
• Developed an online dashboard for predicting the number of parcels that will come to the logistic hub in the time range.
• General debugging, bug fixing, and refactoring.
"
251,source/Yan Doe.pdf,"Education
"
252,source/Yan Doe.pdf,"Sometown National Technical Univeristy
Some town5, country
"
253,source/Yan Doe.pdf,"Master’s degree, Economic cybernetics
2008 ‑ 2013
"
254,source/Yan Doe.pdf,"AWS Certified Solutions Architect – Associate
Oracle Certified Associate, Java SE 8 Programmer
"
255,source/Andrey Korovkin.docx,"SUMMARY
"
256,source/Andrey Korovkin.docx,"Andrey Korovkin
"
257,source/Andrey Korovkin.docx,"416-000-8543 | nd.sergey@outlook.com | 
linkedin.com/in/srti-korovkin | Kelowna, BC, 
Canada
"
258,source/Andrey Korovkin.docx,"I am a seasoned Front-end Developer with a track record of enhancing user experiences and automating 
processes to increase efficiency. My expertise stretches across a comprehensive suite of programming 
languages and frameworks. I have been instrumental in developing applications and tools that have 
streamlined refined sales operations, and significantly boosted engagement and productivity within the teams 
I’ve worked with. My hands-on experience has consistently resulted in positive outcomes in both user 
engagement and sales performance.
"
259,source/Andrey Korovkin.docx,"EXPERIENCE
"
260,source/Andrey Korovkin.docx,"Front-end  Developer
Dec. 2021 – Present
"
261,source/Andrey Korovkin.docx,"Leroy Merlin
"
262,source/Andrey Korovkin.docx,"• Spearheaded the development of a marketplace app using React.js and Node.js, leading to a 35% increase in 
user engagement and a 25% rise in transactions
"
263,source/Andrey Korovkin.docx,"• Designed and implemented a user-friendly interface for returns initiation using HTML5 and CSS, improving 
process efficiency by 40%
"
264,source/Andrey Korovkin.docx,"• Contributed to the automation of the claims processing system, reducing technical support inquiries by half, 
using TypeScript and Redux
"
265,source/Andrey Korovkin.docx,"• Conducted interviews and mentored new developers, enhancing team performance and expediting 
project onboarding
"
266,source/Andrey Korovkin.docx,"Front-end  Developer
Jul. 2021 to Dec. 2021
"
267,source/Andrey Korovkin.docx,"Decart
"
268,source/Andrey Korovkin.docx,"• Developed a competency map application in React, enhancing employee skill assessment transparency 
and efficiency.
"
269,source/Andrey Korovkin.docx,"• Instrumental in improving skill audit accuracy by 25% post-launch, aiding in talent management and career 
development
"
270,source/Andrey Korovkin.docx,"• Optimized skill tracking processes, reducing time for managerial and HR assessments by 50%
"
271,source/Andrey Korovkin.docx,"Front-end Developer
Apr. 2020 to Jun. 2021
"
272,source/Andrey Korovkin.docx,"Kata Academy
"
273,source/Andrey Korovkin.docx,"• Enhanced a training platform using JavaScript and AJAX, improving user experience and resource accessibility.
"
274,source/Andrey Korovkin.docx,"• Implemented features to create an optimal learning environment, utilizing React Query and Material-UI
"
275,source/Andrey Korovkin.docx,"• Mentored 50+ students, fostering a supportive learning atmosphere and improving skill mastery
"
276,source/Andrey Korovkin.docx,"• Developed an automated service generation library with Swagger, increasing development efficiency by 20%
"
277,source/Andrey Korovkin.docx,"Front-end  Developer
Dec. 2018 to Apr. 2020
"
278,source/Andrey Korovkin.docx,"IEK Group of Companies
"
279,source/Andrey Korovkin.docx,"• Developed configurators for electrical equipment using JavaScript, boosting the sales process efficiency by 50%
"
280,source/Andrey Korovkin.docx,"• Collaborated with product managers to understand specifications, reflected in accurate and effective configurators
"
281,source/Andrey Korovkin.docx,"• Implemented a feature to generate specifications of recommended products, which could be downloaded in Excel 
or PDF formats, enhancing customer convenience and increasing downloads by 25%
"
282,source/Andrey Korovkin.docx,"• Utilized analytics to enhance user experience, improving sales performance by 20%
"
283,source/Andrey Korovkin.docx,"EDUCATION
"
284,source/Andrey Korovkin.docx,"Sevastopol State Technical University
Sevastopol, Ukraine
"
285,source/Andrey Korovkin.docx,"Master’s degree, Electronic systems and complexes
Sep.  2016 – Jan.  2022
"
286,source/Andrey Korovkin.docx,"TECHNICAL SKILLS
"
287,source/Andrey Korovkin.docx,"Languages: JavaScript, TypeScript, HTML5, CSS, SQL, PHP, JSON
Frameworks: React.js, Node.js, Express.js, Next.js, Tailwind CSS
Developer Tools: GitHub, Git, Jenkins, Webpack, ESLint, Prettier, Jest, Cypress
Libraries: AJAX, Redux, React Query, Material-UI, TypeORM, RestAPI, Formik, Swagger
"
288,source/Marat Dolya.pdf,"Marat Dolya
"
289,source/Marat Dolya.pdf,"aaaam.dolya@gmail.com
"
290,source/Marat Dolya.pdf,"+14000075075
linkedin.com/in/aaaaolya
"
291,source/Marat Dolya.pdf,"Summary
"
292,source/Marat Dolya.pdf,"• 19+ years of experience in building various software solutions (.NET/.NET Core as a main Stack)
• In my previous company I went from team lead to .NET Software Architect managing team 16
•
Currently I’m a solutions architect helping teams to adopt services at AWS, and improving SaaS
"
293,source/Marat Dolya.pdf,"platform sales attractiveness and standardization
"
294,source/Marat Dolya.pdf,"Experience
"
295,source/Marat Dolya.pdf,"Software Architect
"
296,source/Marat Dolya.pdf,"Itera
"
297,source/Marat Dolya.pdf,"Jul 2023 - Aug 2023 (2 months)
• Requirements gathering
• Presales
"
298,source/Marat Dolya.pdf,"Cloud Solutions Architect
"
299,source/Marat Dolya.pdf,"Itera
"
300,source/Marat Dolya.pdf,"Nov 2021 - Jun 2023 (1 year 8 months)
• Supported teams in migrating and adapting services from on-premise to the cloud.
• Consulted teams for developing cloud-native applications.
• Introduced an open-source API management tool after conducting market research.
• Provided Requirements Analysis in communication with UX and Frontend team for proof of concept.
•
Presented other scenarios of API management tool used to improve the software
"
301,source/Marat Dolya.pdf,"development process.
"
302,source/Marat Dolya.pdf,"• Designed architecture solutions and contributed to overall strategic planning.
• Actively participated in knowledge-sharing activities within the team.
"
303,source/Marat Dolya.pdf,"Software Architect
Namecheap, Inc
"
304,source/Marat Dolya.pdf,"Apr 2018 - Oct 2021 (3 years 7 months)
• Provided interviews and code reviews.
• Led the integration of a child product with the main one.
• Led migration of company products from on-premises to AWS cloud.
"
305,source/Marat Dolya.pdf,"Technical Lead
Namecheap, Inc
"
306,source/Marat Dolya.pdf,"Mar 2016 - Mar 2018 (2 years 1 month)
"
307,source/Marat Dolya.pdf,"• Led the development of a multifunctional team of developers, QA, and product owners.
• Managed team of 16
Introduced Software Development Life Cycle for existing WCF application and introduced database
migrations for Microsoft SQL Server to Windows servers.
• Designed solution architecture for key systems.
•
Decoupled a monolithic product to a service-oriented, Linux-friendly, cloud-agnostic
"
308,source/Marat Dolya.pdf,"system, and migrated
the database from on-premise to AWS Postgres.
• Designed highly-available web services.
• Improved customer support effectiveness by providing training and demos.
• Implemented IdentityServer4 as the main security tool at the company-wide level.
"
309,source/Marat Dolya.pdf,"Technical Lead
Dev.Pro
"
310,source/Marat Dolya.pdf,"Jul 2015 - Mar 2016 (9 months)
• Improved communication and collaboration between the development team and QA.
• Introduced best practices from Agile Methodologies to the team.
• Conducted interviews and code reviews for efficient resource allocation.
• Developed integrations with Microsoft Exchange to enhance functionality.
• Automated deployment processes and initiated the migration from Bugzilla and SVN to TFS.
• Provided support to other teams for backend integration.
• Actively involved in software development and gathering requirements.
"
311,source/Marat Dolya.pdf,"Team Lead
"
312,source/Marat Dolya.pdf,"TEAM International
"
313,source/Marat Dolya.pdf,"Sep 2014 - Jun 2015 (10 months)
• Gathered requirements and facilitated effective communication with stakeholders.
• Conducted code reviews and interviews to ensure code quality and team productivity.
• Developed software for CMS systems.
• Designed services based on best practices from Agile methodologies.
• Introduced and implemented Agile practices within the team
"
314,source/Marat Dolya.pdf,"Senior .NET Developer
Antarasoft Ltd
"
315,source/Marat Dolya.pdf,"Jan 2009 - Oct 2009 (10 months)
•
Actively participated in the development of desktop and web applications, ensuring the
"
316,source/Marat Dolya.pdf,"delivery of high-quality solutions.
• Conducted code reviews to maintain code quality and adherence to best practices.
• Led the design and development of applications from scratch, meeting client requirements.
• Gathered requirements and maintained effective communication with customers
"
317,source/Marat Dolya.pdf,"Developer
Terrapoint Canada (Ambercore)
"
318,source/Marat Dolya.pdf,"Sep 2004 - Dec 2008 (4 years 4 months)
• Developed software solutions for desktop applications, meeting client requirements.
• Conducted code reviews to ensure adherence to coding standards and maintain code quality.
• Gathered requirements and actively participated in communication with customers.
"
319,source/Marat Dolya.pdf,"Education
"
320,source/Marat Dolya.pdf,"National Technical University ""Kharkiv Polytechnic Institute""
Engineer – System Analyst, Information Management Systems and Technologies
"
321,source/Marat Dolya.pdf,"Sep 1998 - Feb 2004
"
322,source/Albert SERIAKOV.pdf,"Albert SERIAKOV
"
323,source/Albert SERIAKOV.pdf,"Moscow, Russia • +7(968) 000-5611 • saaakov@gmail.com
"
324,source/Albert SERIAKOV.pdf,"Position of Interest:
"
325,source/Albert SERIAKOV.pdf,"Consultant, Information Technology (IT)
"
326,source/Albert SERIAKOV.pdf,"Offer the following qualifications:
"
327,source/Albert SERIAKOV.pdf,"●
Establish procedures and implement policies; Consult and advise clients; Confer with clients to identify and
document requirements; Provide advice on information systems strategy, policy, management and service
delivery; Develop and implement policies and procedures throughout the software development life cycle;
"
328,source/Albert SERIAKOV.pdf,"●
Analyze test results and instrument readings; Analyze clients' financial records; Analyze data and prepare
reports.
"
329,source/Albert SERIAKOV.pdf,"●
Manage distributed teams, project management, coaching; maintain excellent interpersonal
communications, time management, and problem resolution skills.
"
330,source/Albert SERIAKOV.pdf,"Languages: ABAP, SQL
"
331,source/Albert SERIAKOV.pdf,"Software: Windows 7/10, Microsoft Office, Project, Visio, Power Point, ARIS, Jira, Confluence and SAP
"
332,source/Albert SERIAKOV.pdf,"HCM/SD/MM
"
333,source/Albert SERIAKOV.pdf,"Relevant Experience
"
334,source/Albert SERIAKOV.pdf,"Head of HCM Department,
10.2016 - Present
"
335,source/Albert SERIAKOV.pdf,"HCM Department, SAP ERP Division, AT Consulting, Moscow
"
336,source/Albert SERIAKOV.pdf,"●
Pre-sale and sale, both within the framework of its direction, and in other areas of SAP practice;
"
337,source/Albert SERIAKOV.pdf,"●
Organization and coordination of the work of SAP HCM;
"
338,source/Albert SERIAKOV.pdf,"●
Organization of work of project teams on projects;
"
339,source/Albert SERIAKOV.pdf,"●
Coordination of work with the Customer, negotiation and coordination of deadlines and tasks;
"
340,source/Albert SERIAKOV.pdf,"●
Preparation and conduct of tenders, project evaluation, preparation of commercial proposals;
"
341,source/Albert SERIAKOV.pdf,"●
IOT projects design.
"
342,source/Albert SERIAKOV.pdf,"Achievements:
• SAP HCM practice created;
• Developing the direction of customer experience;
• All projects were finished with positive profitability.
"
343,source/Albert SERIAKOV.pdf,"Leading Consultant,
12.2015 – 10.2016
"
344,source/Albert SERIAKOV.pdf,"HCM practice, Implementation Division, MOLGA Consulting, Moscow
"
345,source/Albert SERIAKOV.pdf,"●
Pre-sale, project appraisal and planning, preparation of indicative and commercial proposals;
"
346,source/Albert SERIAKOV.pdf,"●
Projects for the implementation of SAP HCM;
"
347,source/Albert SERIAKOV.pdf,"●
Meetings with the customer on the development of design solutions. The solution of methodological issues.
Development of design solutions.
"
348,source/Albert SERIAKOV.pdf,"Team Leader,
02.2015 – 12.2015
"
349,source/Albert SERIAKOV.pdf,"HCM practice, ERP Division, Science IT University, Moscow
"
350,source/Albert SERIAKOV.pdf,"●
Management of consultants of the PY-center;
"
351,source/Albert SERIAKOV.pdf,"●
Negotiation with the customers;
"
352,source/Albert SERIAKOV.pdf,"●
Development of design solutions, graphic models for describing business processes;
"
353,source/Albert SERIAKOV.pdf,"●
Supervising the work of consultants from a subcontractor
"
354,source/Albert SERIAKOV.pdf,"Senior Consultant,
08.2012 – 02.2015
"
355,source/Albert SERIAKOV.pdf,"SAP HCM Department, HR Division, METRO Cash&Carry, Moscow
"
356,source/Albert SERIAKOV.pdf,"●
Development and support of the SAP HCM (PA, OM, PT, PY);
"
357,source/Albert SERIAKOV.pdf,"●
ABAP development.
"
358,source/Albert SERIAKOV.pdf,"Consultant,
03.2011 – 08.2012
"
359,source/Albert SERIAKOV.pdf,"SAP HCM Department, ERP Division, BDO Consulting, Moscow
"
360,source/Albert SERIAKOV.pdf,"●
Development and implementation of the PW module - piecework pay (Z);
"
361,source/Albert SERIAKOV.pdf,"●
Settings of PY changes.
"
362,source/Albert SERIAKOV.pdf,"Achievements:
• Developed the concept of the Z-module ""Calculation of piecework wages."";
• Successfully integrated the module into the SAP HCM.
"
363,source/Albert SERIAKOV.pdf,"Consultant,
04.2010 – 03.2011
"
364,source/Albert SERIAKOV.pdf,"IT Develop Department, IT Division, Adidas, Moscow
"
365,source/Albert SERIAKOV.pdf,"●
Development and support of the SAP HCM (PA, OM, PT, PY).
"
366,source/Albert SERIAKOV.pdf,"Consultant,
04.2009 – 03.2011
"
367,source/Albert SERIAKOV.pdf,"IT Support Department, IT Division, Kopeyka, Moscow
"
368,source/Albert SERIAKOV.pdf,"●
Support for business processes based on SAP ERP, SD / MM modules.
"
369,source/Albert SERIAKOV.pdf,"Achievements:
•
Successful implementation of a parallelization project for inventory accounting and sales
"
370,source/Albert SERIAKOV.pdf,"analysis on servers.
"
371,source/Albert SERIAKOV.pdf,"Education
"
372,source/Albert SERIAKOV.pdf,"Bachelor of Engineering – Electronic Systems Engineering, 2012
"
373,source/Albert SERIAKOV.pdf,"BMSTU Bauman Moscow State Technical University
"
374,source/Albert SERIAKOV.pdf,"Bachelor of Economy – Electronic Systems Engineering, 2016
"
375,source/Albert SERIAKOV.pdf,"Financial University under the Government of the Russian Federation (Diploma with Honor)
"
376,source/Albert SERIAKOV.pdf,"SAP CIS, SAP Certified Application Associate - SAP HCM ERP 6.0 EHP7, 2018
"
377,source/DANIIL BULYGA.pdf,"Igor Korniltsev 
"
378,source/DANIIL BULYGA.pdf,"Data Scientist Team Leader 
Saint Petersburg, Russian Federation 
+79226039000 
kornilaaaa@yandex.ru 
"
379,source/DANIIL BULYGA.pdf," 
 
"
380,source/DANIIL BULYGA.pdf,"SUMMARY 
"
381,source/DANIIL BULYGA.pdf," 
"
382,source/DANIIL BULYGA.pdf,"Data Scientist with 5+ years of experience in using predictive modeling, data processing and data mining algorithms to 
solve challenging business problems. Involved in Python open source community and passionate about deep learning. 
Competencies include leading teams and large portfolios of data science projects, representing the company at 
conferences through public speaking, working with diverse ML-technologies: NLP, NN, Recommender Systems, ensuring 
good communication between the parties to optimize strategies. 
"
383,source/DANIIL BULYGA.pdf," 
"
384,source/DANIIL BULYGA.pdf,"WORK EXPERIENCE 
"
385,source/DANIIL BULYGA.pdf," 
"
386,source/DANIIL BULYGA.pdf,"Sberbank. Data Scientist Team Leader 
"
387,source/DANIIL BULYGA.pdf,"Jul 2017 – Present 
"
388,source/DANIIL BULYGA.pdf,"/ Led 2 teams of 5 data scientists working on 10 different projects in the banking sphere 
/ Built a scalable PySpark pipeline for data processing from scratch which increased the overall productivity by 40% 
/ Built a model based on a payments graph, using embedding outputs from several models such as collaborative 
"
389,source/DANIIL BULYGA.pdf,"filtering, content-based factorisation, word2vec, LDA, to identify the company’s business industry. It earned the bank 
$100M 
"
390,source/DANIIL BULYGA.pdf,"/ Used 2B+ documents to train spark word2vec embeddings to improve 20+ bank’s models 
/ Collaborated with DevOps and Data Engineers that increased team’s productivity and speeded up the time to market 
/ Deployed into production 8 models in one year using Python, Spark, Jenkins. The result was marked as the highest 
"
391,source/DANIIL BULYGA.pdf,"across 15 DS teams 
"
392,source/DANIIL BULYGA.pdf,"/ Created a model capable of predicting the annual revenue of 4 million companies. The model was widely covered in 
"
393,source/DANIIL BULYGA.pdf,"mass media and presented at the main national conference 
"
394,source/DANIIL BULYGA.pdf,"/ Ensured good communication between CEOs and engineers to optimize strategies 
/ Represented the company in AI/ML research at conferences through public speaking 
"
395,source/DANIIL BULYGA.pdf," 
"
396,source/DANIIL BULYGA.pdf,"Mobile Telesystem (MBT). Data Scientist 
"
397,source/DANIIL BULYGA.pdf,"Jul 2015 – Jun 2017 
"
398,source/DANIIL BULYGA.pdf,"/ Designed and created an anomaly detection system from start to finish (from data mining and modelling to creating the 
"
399,source/DANIIL BULYGA.pdf,"report in Tableau for data analysts) which saved the company more than $2M per year 
"
400,source/DANIIL BULYGA.pdf,"/ Implemented a technique based on sARIMA and time series classification to identify suspicious patterns in network 
"
401,source/DANIIL BULYGA.pdf,"traffic 
"
402,source/DANIIL BULYGA.pdf,"/ Established Tableau BI report for highlighting risk zone, e.g. fraude events, equipment breaks, which decreased 
"
403,source/DANIIL BULYGA.pdf,"the time-to-insights by 148% and saved more than 30% of data analysis time 
"
404,source/DANIIL BULYGA.pdf,"/ Used 10000M+ transactions in an ETL-process via SAS EG and Teradata 
/ Built strong communication across parties to successfully launch the project 
"
405,source/DANIIL BULYGA.pdf," 
"
406,source/DANIIL BULYGA.pdf,"SKILLS 
"
407,source/DANIIL BULYGA.pdf," 
"
408,source/DANIIL BULYGA.pdf,"Languages 
"
409,source/DANIIL BULYGA.pdf,"Python 
SQL 
Scala 
"
410,source/DANIIL BULYGA.pdf,"ML 
"
411,source/DANIIL BULYGA.pdf,"Classification 
Regression 
RecSys 
Time 
Series 
"
412,source/DANIIL BULYGA.pdf,"Databases 
"
413,source/DANIIL BULYGA.pdf,"Hadoop/Spark 
Oracle 
PL/SQL 
Teradata 
"
414,source/DANIIL BULYGA.pdf,"BI 
"
415,source/DANIIL BULYGA.pdf,"Tableau 
Power 
BI Excel 
"
416,source/DANIIL BULYGA.pdf," 
"
417,source/DANIIL BULYGA.pdf,"EDUCATION 
"
418,source/DANIIL BULYGA.pdf," 
"
419,source/DANIIL BULYGA.pdf,"/ Ural Federal University. Bachelor’s degree of Program engineering, 6/2021 
/ Ural Federal University. Master’s degree of Financial markets and investments, 6/2014 
/ Ural State Mining University. Master’s degree of Underground construction, 5/2012 
"
420,source/ZAKHAR LOPTEV.docx,"ZAKHAR LOPTEV
"
421,source/ZAKHAR LOPTEV.docx,"EDUCATION
"
422,source/ZAKHAR LOPTEV.docx,"Higher  School  of  Economics
Sep 2019 – Expected Jun 
"
423,source/ZAKHAR LOPTEV.docx,"2023 Bachelor in Applied Mathematics and Information Science
GPA: 
"
424,source/ZAKHAR LOPTEV.docx,"9.11/10.0 
"
425,source/ZAKHAR LOPTEV.docx,"SKILLS
"
426,source/ZAKHAR LOPTEV.docx,"Programming  Languages C/C++, Python, Bash, Assembler
Technologies
Linux, Windows, Cygwin, WSL, Git, GitHub/GitLab, vim, gdb/pdb, 
"
427,source/ZAKHAR LOPTEV.docx,"tmux,
"
428,source/ZAKHAR LOPTEV.docx,"LaTeX, Markdown, Tcl/Tk, Make, numpy, matplotlib, pandas
"
429,source/ZAKHAR LOPTEV.docx,"WORK EXPERIENCE
"
430,source/ZAKHAR LOPTEV.docx,"Software Engineering Intern
Jul 2020 – Sep 
"
431,source/ZAKHAR LOPTEV.docx,"2020
Huawei
Moscow, 
"
432,source/ZAKHAR LOPTEV.docx,"Russia
"
433,source/ZAKHAR LOPTEV.docx,"• Made an OS performance analysis system available for over 400 Windows-using colleagues by 
"
434,source/ZAKHAR LOPTEV.docx,"porting it from Linux to Windows using Cygwin, Bash and Python.
"
435,source/ZAKHAR LOPTEV.docx,"• Taught myself Tcl/Tk in a few days and reduced time for visualizing OS performance analysis 
"
436,source/ZAKHAR LOPTEV.docx,"by 80% by implementing a GUI using Python and Tkinter library.
"
437,source/ZAKHAR LOPTEV.docx,"Python Developer
Jun 2018 – Aug 
"
438,source/ZAKHAR LOPTEV.docx,"2018
SamExpress
Samara, 
"
439,source/ZAKHAR LOPTEV.docx,"Russia
"
440,source/ZAKHAR LOPTEV.docx,"• Reduced time for searching applications on a website by 2 man-hours a day by 
"
441,source/ZAKHAR LOPTEV.docx,"implementing a script using Python with Selenium and SMTP libraries.
"
442,source/ZAKHAR LOPTEV.docx,"• Created a program making a raw Excel document readable using Python and xlrd, xlwt, 
"
443,source/ZAKHAR LOPTEV.docx,"xlutils libraries. TEACHING EXPERIENCE
"
444,source/ZAKHAR LOPTEV.docx,"Linear  Algebra  Teaching  Assistant
Sep 2020 – Jun 
"
445,source/ZAKHAR LOPTEV.docx,"2021
Higher School of Economics
Moscow, 
"
446,source/ZAKHAR LOPTEV.docx,"Russia
"
447,source/ZAKHAR LOPTEV.docx,"• Checked homeworks, conducted weekly consultations, took exams and colloquiums.
• Generated homework variants using Python with numpy, sympy, latex and other libraries.
"
448,source/ZAKHAR LOPTEV.docx,"Algorithms  Teaching  Assistant
Aug 2019
"
449,source/ZAKHAR LOPTEV.docx,"Summer Informatics School
Laagna, 
"
450,source/ZAKHAR LOPTEV.docx,"Estonia
"
451,source/ZAKHAR LOPTEV.docx,"• Developed front-end for a sports website using HTML5, CSS3 and 
"
452,source/ZAKHAR LOPTEV.docx,"JavaScript. PROJECTS
"
453,source/ZAKHAR LOPTEV.docx,"External Sorting.  Implemented external sorting (the algorithms splits all input into blocks, sorts 
them sepa-
rately, and then ends up with a sorted array by recursively merging K array’s segments) using C++.
"
454,source/ZAKHAR LOPTEV.docx,"Time Series Forecast.  Taught myself a one-year course of  Probability  Theory  and  Mathematical  
"
455,source/ZAKHAR LOPTEV.docx,"Statis- tics in one semester, currently developing a tool that, given a series of share prices, calculates 
a probability of the price moving in a certain range. Using Python with numpy, plotly, pandas and 
other libraries.
"
456,source/ZAKHAR LOPTEV.docx,"Hash Map. Implemented hash map with full functionality (including iterators) using separate chaining 
with linked list in C++ for my homework project.
"
457,source/ZAKHAR LOPTEV.docx,"VS projects cleaner. Created a Python tool that clears a code repo from memory-intense Visual 
Studio projects using os library and dfs-like algorithm.
"
458,source/ZAKHAR LOPTEV.docx,"ACADEMIC ACHIEVEMENTS
"
459,source/ZAKHAR LOPTEV.docx,"• Awardee of All-Russian Informatics Olympiad (also known as ROI).
• Master at Codeforces.
"
460,source/Timofey Makarov.docx,"EXPERIENCE
"
461,source/Timofey Makarov.docx,"Timofey 
"
462,source/Timofey Makarov.docx,"Makarov
"
463,source/Timofey Makarov.docx,"makarov67@gmail.com | 
linkedin.com/in/makarov567 | 
github.com/makarov567
"
464,source/Timofey Makarov.docx,"Senior  Frontend  Engineer
Mar 2019 – Present
"
465,source/Timofey Makarov.docx,"Joom
Moscow, Russia
"
466,source/Timofey Makarov.docx,"• Improved scalability of the component libraries by combining multiple storybooks from different frontend projects 
into one application and publishing it on a private network.
"
467,source/Timofey Makarov.docx,"• Collaborated with backend engineer to develop an admin panel for a new project.
"
468,source/Timofey Makarov.docx,"• Successfully migrated a codebase with over 100 pages to React and TypeScript with co-workers.
"
469,source/Timofey Makarov.docx,"• Built a full stack web application from scratch using React, NodeJS, MongoDB, Docker, which represented 
the office map which most of the company employees currently use.
"
470,source/Timofey Makarov.docx,"• Reduced initial application size by 35% by splitting the monolith bundle into separate chunks.
"
471,source/Timofey Makarov.docx,"• Improved the accuracy of understanding the user experience by introducing a new analytical tool.
"
472,source/Timofey Makarov.docx,"• Implemented several complex libraries and UI components like CSV parser, storage manager, image 
cropping component, drag and drop functionality, dynamic form creation to name a few.
"
473,source/Timofey Makarov.docx,"• Created text formatting guidelines for 5 languages, which reduced the number of incorrect translations for 
complex templates.
"
474,source/Timofey Makarov.docx,"Frontend  Engineer
Sep 2018 – Mar 2019
"
475,source/Timofey Makarov.docx,"Kvint
Yekaterinburg, Russia
"
476,source/Timofey Makarov.docx,"• Developed a client-side engine for building interactive dialogues for voice robot, which reduced the time required 
to create a dialogue by 80%.
"
477,source/Timofey Makarov.docx,"• Implemented modification of the dialogue in real time by implementing Web Socket communication between the 
client and the server. This process successfully allowed several people to work concurrently without losing any 
data.
"
478,source/Timofey Makarov.docx,"Frontend  Engineer
Jun 2018 – Sep 2018
"
479,source/Timofey Makarov.docx,"Umka
Yekaterinburg, Russia
"
480,source/Timofey Makarov.docx,"• Implemented loading various resources into S3 bucket.
"
481,source/Timofey Makarov.docx,"• Collaborated with designer to develop complex web user interface using React, Styled Components and GraphQL.
"
482,source/Timofey Makarov.docx,"Frontend Engineer
Oct 2017 – Apr 2018
"
483,source/Timofey Makarov.docx,"Naumen
Yekaterinburg,  Russia
"
484,source/Timofey Makarov.docx,"• Taught myself Angular in a few days and built an adaptive application for searching through documents from 
scratch.
"
485,source/Timofey Makarov.docx,"• Redesigned the web application using HTML5 and CSS3.
"
486,source/Timofey Makarov.docx,"TECHNICAL SKILLS
"
487,source/Timofey Makarov.docx,"Languages:  TypeScript, JavaScript, HTML/CSS.
Technologies: React, Redux, Mobx, GraphQL, NodeJS, Express, Webpack, Yarn, Jenkins, Docker, Git, Jest.
"
488,source/Timofey Makarov.docx,"PROJECTS
"
489,source/Timofey Makarov.docx,"Travel startup | React, Mobx, Styled Components, Webpack, Flow
2017 – 2019
"
490,source/Timofey Makarov.docx,"• Developed a web application for a travel startup from scratch, designed data structures and API endpoints.
"
491,source/Timofey Makarov.docx,"• Developed real-time data flow with Web Socket.
"
492,source/Timofey Makarov.docx,"EDUCATION
"
493,source/Timofey Makarov.docx,"Bachelor’s degree, Mathematics and Computer Science
Yekaterinburg
"
494,source/Timofey Makarov.docx,"Ural State University named after A.M.Gorky
2014 – 2018
"
495,source/Kirill Piaternev.pdf,"Kirill Piaternev
"
496,source/Kirill Piaternev.pdf,"DATA SCiENTiST · MACHiNE LEARNiNG ENGiNEER
"
497,source/Kirill Piaternev.pdf,"+7 915-000-2003 |
aaaternev@gmail.com |
pyataaaev
"
498,source/Kirill Piaternev.pdf,"Education
"
499,source/Kirill Piaternev.pdf,"Higher School of Economics
Moscow, Russia
"
500,source/Kirill Piaternev.pdf,"BACHELOR OF MATHEMATiCS
September 2015 ‑ June 2020
"
501,source/Kirill Piaternev.pdf,"• studied deep learning and reinforcement learning courses from Computer Science department
"
502,source/Kirill Piaternev.pdf,"Skills
"
503,source/Kirill Piaternev.pdf,"Programming Python, SQL, C++
"
504,source/Kirill Piaternev.pdf,"ML/DL frameworks sklearn, nltk, pytorch
"
505,source/Kirill Piaternev.pdf,"Databases PostgreSQL, Spark, Greenplum, Teradata, MongoDB, MySQL
"
506,source/Kirill Piaternev.pdf,"DevOps Docker, Kubernetes, Jenkins, GitlabCI
"
507,source/Kirill Piaternev.pdf,"Back‑end Flask, fastapi
"
508,source/Kirill Piaternev.pdf,"Languages English, Russian
"
509,source/Kirill Piaternev.pdf,"Experience
"
510,source/Kirill Piaternev.pdf,"Sberbank
Moscow, Russia
"
511,source/Kirill Piaternev.pdf,"DATA SCiENTiST
May 2020 ‑ present
"
512,source/Kirill Piaternev.pdf,"• improved the quality of promotions, conversion was increased from from 3% to 9% via recommendation model
"
513,source/Kirill Piaternev.pdf,"based on 17 prediction models for 9 bank partners
"
514,source/Kirill Piaternev.pdf,"• reduced time of creation prototype of binary classification model from 8 to 4 hours via adding dask support in
"
515,source/Kirill Piaternev.pdf,"model creation pipeline
"
516,source/Kirill Piaternev.pdf,"CROC
Moscow, Russia
"
517,source/Kirill Piaternev.pdf,"DATA SCiENTiST
June 2018 ‑ April 2020
"
518,source/Kirill Piaternev.pdf,"• created prototype of recommendation model that can reduce the percentage of rejects from 1% to 0.2% via
"
519,source/Kirill Piaternev.pdf,"cascade of models based on time series factory data
"
520,source/Kirill Piaternev.pdf,"• created an MVP to automate a verification of documents in insurance claim process that can shorten it to a few
"
521,source/Kirill Piaternev.pdf,"minutes with using computer vision recognition and named entity recognition models
"
522,source/Kirill Piaternev.pdf,"• designed ML management system that can operate dozens of models in production based on Kubeflow
• automation process of making optimal daily routes for more than 100 train conductors with graph‑based model
• developed tool for managing resources for rzd cargo train stations with prediction models and special UI
"
523,source/Kirill Piaternev.pdf,"Tracktrack
Moscow, Russia
"
524,source/Kirill Piaternev.pdf,"MACHiNE LEARNiNG ENGiNEER
March 2018 ‑ June 2018
"
525,source/Kirill Piaternev.pdf,"• upgrade postitive feedback on MVP of interactive digest for Russian Railway managers to 85% with creation and
"
526,source/Kirill Piaternev.pdf,"embedding text classification models
"
527,source/Kirill Piaternev.pdf,"Asteros
Moscow, Russia
"
528,source/Kirill Piaternev.pdf,"JUNiOR DATA SCiENTiST
October 2017 ‑ March 2018
"
529,source/Kirill Piaternev.pdf,"• reduced year integral downtime time of isobutane reactor from weeks to days with predictive model
• shorten call‑center client waiting time to seconds with MVP of QA recommendation model
"
530,source/Kirill Piaternev.pdf,"Research
"
531,source/Kirill Piaternev.pdf,"Higher School of Economics
Moscow, Russia
"
532,source/Kirill Piaternev.pdf,"RESEARCH ENGiNEER
September 2020 ‑ present
"
533,source/Kirill Piaternev.pdf,"• speed up the process of data markup by 10 times with implemented a special web app written with Flask
• created a baseline for code classification task (43 classes) with mean accuracy 0.45 with regex‑based models
"
534,source/Kirill Piaternev.pdf,"1
"
535,source/ALMAZ ManSUrOV.docx,"https://products.aspose.com/words/
"
536,source/ALMAZ ManSUrOV.docx,"|
"
537,source/ALMAZ ManSUrOV.docx,"|
"
538,source/ALMAZ ManSUrOV.docx,"|
"
539,source/ALMAZ ManSUrOV.docx,"|
"
540,source/ALMAZ ManSUrOV.docx,"|
"
541,source/ALMAZ ManSUrOV.docx,"mr.behraaaansurov@gmail.com |
link:mrbaaauzmansurov | github:aaasurovB-source
"
542,source/ALMAZ ManSUrOV.docx,"Education
"
543,source/ALMAZ ManSUrOV.docx,"ITMO University
Saint Petersburg, Russian Federation
"
544,source/ALMAZ ManSUrOV.docx,"Bachelor of Software Engineering
Sep 2018 – Sep 2022
"
545,source/ALMAZ ManSUrOV.docx,"• GPA - 4.2/5.0
"
546,source/ALMAZ ManSUrOV.docx,"Experience
"
547,source/ALMAZ ManSUrOV.docx,"Software engineer intern
Remote, full-time
"
548,source/ALMAZ ManSUrOV.docx,"Nethermind - provides the world’s fastest .NET Ethereum Client
Jun – Oct 2021
"
549,source/ALMAZ ManSUrOV.docx,"• Contributed to the implementation of the eth call module to send a transaction immediately, without creating a transaction in 
"
550,source/ALMAZ ManSUrOV.docx,"the blockchain. The module can be used to query the state of an internal contract, to execute validations coded into a contract, 
"
551,source/ALMAZ ManSUrOV.docx,"or even to test what the effect of a transaction will be without running it in real-time.
"
552,source/ALMAZ ManSUrOV.docx,"• The calculation of transaction costs implemented in the eth call module helps to calculate exactly how many resources are 
"
553,source/ALMAZ ManSUrOV.docx,"needed to complete the transaction
"
554,source/ALMAZ ManSUrOV.docx,"• Implemented automatic detection of the transaction type in the eth call namespace, which simplifies the process of 
"
555,source/ALMAZ ManSUrOV.docx,"sending a transaction
"
556,source/ALMAZ ManSUrOV.docx,"Highlighted projects
"
557,source/ALMAZ ManSUrOV.docx,"File-Exchange C, Bash
"
558,source/ALMAZ ManSUrOV.docx,"• Develop a client-server application. To organize interaction over the network, support multiple connections, use the software 
"
559,source/ALMAZ ManSUrOV.docx,"interfaces (APIs) of the operating system. The server and clients communicate using a socket-based protocol. The server must 
"
560,source/ALMAZ ManSUrOV.docx,"support a conditionally unlimited number of clients. At all stages of interaction between the client and the server, data 
"
561,source/ALMAZ ManSUrOV.docx,"processing should be provided, regardless of their size. Simultaneous downloading of different fragments of the same file from 
"
562,source/ALMAZ ManSUrOV.docx,"several sources is implemented.
"
563,source/ALMAZ ManSUrOV.docx,"Gangster-NTFS C, Bash
"
564,source/ALMAZ ManSUrOV.docx,"• Is basic application for serving NTFS file system. Gangster-NTFS is a user-space driver for working with the NTFS file 
"
565,source/ALMAZ ManSUrOV.docx,"system. Gangster-NTFS can read and copy files and directories from the NTFS file system to the outside and can output all 
"
566,source/ALMAZ ManSUrOV.docx,"connected devices to the computer.
"
567,source/ALMAZ ManSUrOV.docx,"Kabiri Java 8, PostgreSQL, Spring Framework, VueJs
"
568,source/ALMAZ ManSUrOV.docx,"• A REST web application based on VueJs with user authorization to order sausage products. The Spring backend is 
"
569,source/ALMAZ ManSUrOV.docx,"responsible for verifying and storing data. Triggers and functions were created for the designed database to ensure data 
"
570,source/ALMAZ ManSUrOV.docx,"integrity. And added indexes to some tables to achieve high query performance.
"
571,source/ALMAZ ManSUrOV.docx,"BmpTools C, Bash
"
572,source/ALMAZ ManSUrOV.docx,"• A simple C-based app for rotating, blurring, and mirroring, as well as a sepia filter for BMP image format.
"
573,source/ALMAZ ManSUrOV.docx,"Notebook Java 8, PostgreSQL, Spring Framework, VueJs
"
574,source/ALMAZ ManSUrOV.docx,"• A REST web application based on VueJS. The Spring server part is responsible for checking and storing data.
"
575,source/ALMAZ ManSUrOV.docx,"https://products.aspose.com/words/
"
576,source/ALMAZ ManSUrOV.docx,"|
"
577,source/ALMAZ ManSUrOV.docx,"|
"
578,source/ALMAZ ManSUrOV.docx,"|
"
579,source/ALMAZ ManSUrOV.docx,"Balloc C, Bash
"
580,source/ALMAZ ManSUrOV.docx,"• Implementation of own version of malloc and free based on the memory mapping system call mmap and a linked list of 
"
581,source/ALMAZ ManSUrOV.docx,"chunks of arbitrary sizes. It can be viewed as a simplified version of a memory manager typical for the standard C library 
"
582,source/ALMAZ ManSUrOV.docx,"and shares most of its weaknesses.
"
583,source/ALMAZ ManSUrOV.docx,"MathX  Java 8
"
584,source/ALMAZ ManSUrOV.docx,"• Created several utilities that can find solutions to systems of linear and nonlinear algebraic equations, Cauchy problems; 
"
585,source/ALMAZ ManSUrOV.docx,"integrate, approximate and interpolate functions.
"
586,source/ALMAZ ManSUrOV.docx,"TCP - Exchanger   Java 8, PostgreSQL
"
587,source/ALMAZ ManSUrOV.docx,"• Client-server application with registration, authorization in ”pure” Java, the transmission of data about user objects via TCP in 
"
588,source/ALMAZ ManSUrOV.docx,"JSON format, and data storage in a database. Users can view all the objects which stored on the DB, but can change only their 
"
589,source/ALMAZ ManSUrOV.docx,"own ones.
"
590,source/ALMAZ ManSUrOV.docx,"Achievements
"
591,source/ALMAZ ManSUrOV.docx,"Google Hash Code 2021, top 12% in Online Qualification
"
592,source/ALMAZ ManSUrOV.docx,"Finalist, International Zhautykov Olympiad in Math, Physics and Programming 2018
"
593,source/ALMAZ ManSUrOV.docx,"1st place in HackNU 2021 from Facebook, International Online Hackathon
"
594,source/ALMAZ ManSUrOV.docx,"Skills
"
595,source/ALMAZ ManSUrOV.docx,"Languages: Java, C, C++, C#, JavaScript, HTML/CSS
"
596,source/ALMAZ ManSUrOV.docx,"Frameworks: Spring Frameworks, VueJs
"
597,source/ALMAZ ManSUrOV.docx,"Developer Tools: Git, SVN, JUnit, Selenium, ANT, Maven
"
598,source/ALMAZ ManSUrOV.docx,"DBMS: PostgreSQL, MySQL
"
599,source/ALMAZ ManSUrOV.docx,"Experience with:Python, Shell
"
600,source/Viktor Gavrilov.docx,"◦
"
601,source/Viktor Gavrilov.docx,"gavrilov_vikkk@gmail.com
Mobile : +1-438-000-7854
"
602,source/Viktor Gavrilov.docx,"EXPERIENCE
"
603,source/Viktor Gavrilov.docx,"• Ubisoft
Montreal, Canada
Online Developer
Sep 2019 - Present
"
604,source/Viktor Gavrilov.docx,"Development and operations (DevOps) of Cloud-Native backend RESTful web services on 
AWS that scale in the cloud and that are hit by millions of users every day (hundreds of 
thousands of concurrent users per service). From API Design, Implementation, Continuous 
Delivery and Maintenance to Support.
Working with multiple distant teams to achieve a common goal.
"
605,source/Viktor Gavrilov.docx,"◦ Reduced legacy codebase by 20% by migrating old monolithic core service to run in the cloud.
◦ Built an internal tool about shadow-testing that reduced the number of production issues. (C#, 
"
606,source/Viktor Gavrilov.docx,"Python ) Experienced with resource provisioning on AWS using different techniques, 
including Cloud Formation Template and Troposphere/Sceptre.
Developed tooling that handles accounts data migration from MSSQL to AWS Aurora, 
which lead to saving at least 30 minutes/day per team member. (Python, Bash, AWS)
"
607,source/Viktor Gavrilov.docx,"• Contractor
Munich, Germany
Lead Software Engineer
2018 - 2019
"
608,source/Viktor Gavrilov.docx,"Development backend RESTful web service of a fitness class booking system in Go. Took 
ownership of a project shortly before the release and managed to meet all the deadlines. 
Experienced with Docker, and multiple databases, including MongoDB (On Prem  and  
DigitalOcean),  PostgreSQL,  from  the  development and performance optimization to operations. 
Experienced with payment workflows using Stripe as well as client passport implementation. (Go, 
PostgresSQL, JavaScript)
Experienced with ethereum blockchain network, developing smart contracts using Solidity for 
insurance policy contracts.
Singly developed from scratch a full working Go based a low latency/high throughput web-
chat on top of gorilla-WebSockets decorated with a distributed cache layer for read heavy parts. 
(Go, PostgreSQL, Redis)
"
609,source/Viktor Gavrilov.docx,"• AutoScout24
Munich, Germany
Senior Software Engineer
Oct 2018 - Sep 2019
"
610,source/Viktor Gavrilov.docx,"Development of backend event-driven microservices on top of Scala, Akka and Kafka and that are 
hit by millions of users every day across Europe (hundreds of thousands of concurrent users per 
service). Created CI/CD workflow utilizing Python, Shell, on top of Jenkins. (Scala, Bash, AWS, 
Kafka)
Reduced legacy codebase by 30% by migrating old monolithic web service to event-driven 
microservice architecture on top of Scala, Akka, and Kafka. Improved availability by 
introducing monitoring  and alerting solutions with DataDog and OpsGenie.
Reduced amortization cost of AWS infrastructure by implementing a separate Kafka 
processor that is responsible for soft-cleanup of the orphan images. (Scala, Kafka, S3, 
DynamoDb)
Implemented tooling that handles AWS scenarios (SSM parameters, assuming roles, etc.) 
which lead to saving at least an hour/week per team member. (Bash, Go, AWS)
"
611,source/Viktor Gavrilov.docx,"• Carl Zeiss Microscopy GmbH
Munich, Germany
Software Engineer B
Apr 2017 - Sep 2018
"
612,source/Viktor Gavrilov.docx,"Helped and onboarded new hires, created short-term, and long-term goals and supported 
them along the way
Improved fail-safe by fixing memory leaks causing the crash of the software while trying to 
import
high-resolution snaps.  Reduced time needed to finalize an experiment by introducing a digital 
signature
"
613,source/Viktor Gavrilov.docx,"◦
"
614,source/Viktor Gavrilov.docx,"◦
"
615,source/Viktor Gavrilov.docx,"◦
"
616,source/Viktor Gavrilov.docx,"◦
"
617,source/Viktor Gavrilov.docx,"◦
"
618,source/Viktor Gavrilov.docx,"◦
"
619,source/Viktor Gavrilov.docx,"◦
"
620,source/Viktor Gavrilov.docx,"◦
"
621,source/Viktor Gavrilov.docx,"◦
"
622,source/Viktor Gavrilov.docx,"◦
"
623,source/Viktor Gavrilov.docx,"◦
"
624,source/Viktor Gavrilov.docx,"lead to saving time for inter-department communication.(Python, C#)
Fixed more than 25 bugs over a year timeframe while analyzing the Carl Zeiss image 
segmentation and reporting engine. Migrated legacy grain segmentation algorithm into the new 
modern technologies. (C++)
"
625,source/Viktor Gavrilov.docx,"• Congree Language Technologies GmbH
Karlsbad, Germany
Software Developer
Apr 2014 - Mar 2017
"
626,source/Viktor Gavrilov.docx,"◦ Achieved at least 30% code quality improvement by integrating a static-code analyzer with 
"
627,source/Viktor Gavrilov.docx,"SonarQube.
"
628,source/Viktor Gavrilov.docx,"◦
"
629,source/Viktor Gavrilov.docx,"Accomplished scalability and fail-safe improvement by implementing a thin REST layer on top of
language-check service. Improved performance by at least 40% by adding a cache  layer  for  read-
heavy  parts of the system.(Java, C#)
Speed up document check by 15 % by implementing a new Congree API and migrating all 
the existing editor-plugins to it. (Java, C#, C++)
Developed robust tooling that handles many test scenarios & enables automated deployment in 
test env,
reducing time-to-test from weeks to days (JavaScript, Java, Vmware vSphere).
Reduced deployment time by almost 80% by implementing a distributed deployment system, 
leading to saving 30% of time spent by solution specialists on the customer side. (JavaScript, C#)
"
630,source/Viktor Gavrilov.docx,"• Andera, Inc.
Providence, RI, 
USA
Software Developer - remotely from Russia
Jun 2011 - May 2013
"
631,source/Viktor Gavrilov.docx,"Bulk rates processing and import tool from CSV to Oracle and provides command interface on top for 
scheduling data processing. Also created a strategy for saving rates history to FTP and SFTP 
servers. (C#)
Web application used by online account opening system for financial institutions.Involved in features such 
as delivery time optimization, tracking, queuing, and testing. Designed and implemented an overview 
dashboard for the multi-branch financial institutions. (JavaScript)
"
632,source/Viktor Gavrilov.docx,"EDUCATION
"
633,source/Viktor Gavrilov.docx,"• Tomsk Polytechnic University
Master of Science in Computer Science
"
634,source/Viktor Gavrilov.docx,"• Tomsk Polytechnic University
Bachelor of Science in Computer Science
"
635,source/Viktor Gavrilov.docx,"SIDE PROJECTS
"
636,source/Viktor Gavrilov.docx,"• gochat (in progress) Golang based web-chat on top of gorilla-websockets decorated with a cache layer 
(Go, Redis, PostgresSQL, gRPC)
"
637,source/Viktor Gavrilov.docx,"◦
"
638,source/Viktor Gavrilov.docx,"◦
"
639,source/Viktor Gavrilov.docx,"◦
"
640,source/Viktor Gavrilov.docx,"◦
"
641,source/Viktor Gavrilov.docx,"◦
"
642,source/Viktor Gavrilov.docx,"◦
"
643,source/Mark Ten.docx,"M
ark Ten, Software Engineer
"
644,source/Mark Ten.docx,"+998900016537, vlad029594@gmail.com
"
645,source/Mark Ten.docx,"LINKS
LinkedIn, GitHub, YouTube, Twitter
"
646,source/Mark Ten.docx,"EMPLOYMENT HISTORY
"
647,source/Mark Ten.docx,"Jun 2020 — Sep 2021
Software Engineer (Go), Mobalytics
Remote 
"
648,source/Mark Ten.docx,"Product: Gaming assistant
"
649,source/Mark Ten.docx,"• Worked on the new part of our product online-shooter Valorant
• Improved and developed internal services for reducing infrastructure costs by 20% and response 
time by 30%, including global cache manager, gateways
"
650,source/Mark Ten.docx,"• Refactored old code base and move it to new microservice architecture
"
651,source/Mark Ten.docx,"May 2020 — Jun 2020
Software Engineer (Go), Express24 (Contractor)
"
652,source/Mark Ten.docx,"Tashken
"
653,source/Mark Ten.docx,"t Product: Food ordering application
"
654,source/Mark Ten.docx,"• Designed and developed from scratch cashback service which helped increase repeat purchases up 
to 10% based on user research
"
655,source/Mark Ten.docx,"Feb 2020 — May 2020
Software Engineer (Go), Paul Camper
Remote 
"
656,source/Mark Ten.docx,"Product: Private camper rental platform
"
657,source/Mark Ten.docx,"• Worked with cross-functional team on developing new features: Booking prolongation, Booking 
deactivation from idea to actual implementation. Almost 20% of our users needed those features, 
which also helped the company to save costs on the technical support side
"
658,source/Mark Ten.docx,"Sep 2019 — Dec 2019
Software Engineer (Go), Yandex
"
659,source/Mark Ten.docx,"Product: Video meetings platform (Yandex.Telemost)
"
660,source/Mark Ten.docx,"• Worked on CI/CD pipelines, metrics coverage, test coverage
"
661,source/Mark Ten.docx,"Moscow
"
662,source/Mark Ten.docx,"EDUCATION
"
663,source/Mark Ten.docx,"Sep 2014 — Jul 2018
Bachelor's degree, Lomonosov Moscow State University
"
664,source/Mark Ten.docx,"Applied Mathematics and Computer Science
"
665,source/Mark Ten.docx,"Moscow - Tashkent
"
666,source/Mark Ten.docx,"LANGUAGES
English (C1)
Highly proficient
Russian
Native speaker
"
667,source/Mark Orlov.docx,"Back End Developer
"
668,source/Mark Orlov.docx,"orlaaan.job@gmail.com | LinkedIn
"
669,source/Mark Orlov.docx,"10+ years of extensive experience as a back end web developer with a focus on creating websites and different customer services. During this 
time I've been creating more than 200 websites. I've been working with PHP since 2008. Also have experience with Python, Java, and Android 
mobile development. Absolutely comfortable working remotely and know how to stay organized and how to work in a remote team. I love to 
learn new things, and I pick up on new concepts fast, especially in a hands-on environment. My goal is to find a full-time remote position in an 
international company and to grow up as a professional.
"
670,source/Mark Orlov.docx,"Technical Skills
"
671,source/Mark Orlov.docx,"PHP (OOP, SOLID, Patterns) | Symfony | WordPress | Python | Django | Flask | Java | VueJS | Slim | WebPack | Git | HTML | CSS | jQuery | 
PHPUnit | MySQL | PostgreSQL | MongoDB | Redis | AWS | Rest API | SOAP | Composer | Docker | Scrum | Linux | RabbitMQ | Sphinx | 
JavaScript
"
672,source/Mark Orlov.docx,"Work Experience
"
673,source/Mark Orlov.docx,"Senior Back End Developer
"
674,source/Mark Orlov.docx,"RT Labs
Aug 2020 - Present
"
675,source/Mark Orlov.docx,"Participated in development of SAAS platform for creating ~200-250k government websites. Developed a REST API module for 
communication between the base platform and websites. Developed service for creating patches and central updating websites.
"
676,source/Mark Orlov.docx,"●
working in a team with remote coworkers: developers, analytics, and designers
"
677,source/Mark Orlov.docx,"●
elements and pages of base websites
"
678,source/Mark Orlov.docx,"●
logging system
"
679,source/Mark Orlov.docx,"Senior Back End Developer
"
680,source/Mark Orlov.docx,"WebWay
May 2017 - Aug 2020
"
681,source/Mark Orlov.docx,"Created a website for one of the biggest insurance companies.
"
682,source/Mark Orlov.docx,"●
25+ calculators and forms to buy a new policy, to send a report, or to ask some questions
"
683,source/Mark Orlov.docx,"●
analytical system with reports, graphics, and filters
"
684,source/Mark Orlov.docx,"●
connections with different services (SOAP and REST)
"
685,source/Mark Orlov.docx,"●
connection with payment systems and receipt printing system
"
686,source/Mark Orlov.docx,"●
automatic testing of all forms
"
687,source/Mark Orlov.docx,"Website for one of the famous business coaches in Russia.
"
688,source/Mark Orlov.docx,"●
website with a possibility to choose and order physical or digital content (books, CD, DVD, MP3, etc)
"
689,source/Mark Orlov.docx,"●
a personal cabinet for the customers
"
690,source/Mark Orlov.docx,"●
a ticket system for the event when you can choose the cost of your ticket, buy this ticket, and print it
"
691,source/Mark Orlov.docx,"Back End Developer
"
692,source/Mark Orlov.docx,"Individ
Aug 2016 - May 2017
"
693,source/Mark Orlov.docx,"My main focus was on the Bitrix framework. I was responsible for development of new projects and technical support of current projects.
"
694,source/Mark Orlov.docx,"●
created a website for a chain of federal medicine clinics
"
695,source/Mark Orlov.docx,"●
e-store for a big tech company with many pages, services, and connections
"
696,source/Mark Orlov.docx,"●
technical support of current projects
"
697,source/Mark Orlov.docx,"Back End Developer
"
698,source/Mark Orlov.docx,"NetCat
Mar 2013 - Aug 2016
"
699,source/Mark Orlov.docx,"For this company I worked as a tech writer and as a developer. For this company I:
"
700,source/Mark Orlov.docx,"●
rewrote all official documentation for developers and users
"
701,source/Mark Orlov.docx,"●
created module «Bills» for the main product of company
"
702,source/Mark Orlov.docx,"●
tested components of the system
"
703,source/Mark Orlov.docx,"●
communicated with other remote developers
"
704,source/Mark Orlov.docx,"●
performed technical support of other developers
"
705,source/Mark Orlov.docx,"Full Stack Developer
"
706,source/Mark Orlov.docx,"The South Urals Chamber Of Commerce And Industry
Feb 2010 - Mar 2013
"
707,source/Mark Orlov.docx,"My main role is the development and support of the company's main website and support services. Communicated with the company's customers 
and created websites for them.
"
708,source/Mark Orlov.docx,"●
finished courses as a specialist with creating security tokens.
"
709,source/Mark Orlov.docx,"●
worked as a coach and taught people how to work in a auction platforms
"
710,source/Mark Orlov.docx,"Full Stack Developer
"
711,source/Mark Orlov.docx,"Web Group «W»
Nov 2008 - Feb 2010
"
712,source/Mark Orlov.docx,"Created a social-network for the builder's community, a portal for a regional city with different services. At this company I was 
"
713,source/Mark Orlov.docx,"responsible for:
"
714,source/Mark Orlov.docx,"●
development of new projects
"
715,source/Mark Orlov.docx,"●
technical support of current projects
"
716,source/Mark Orlov.docx,"●
review code to increase the code quality and working with other developers
"
717,source/Mark Orlov.docx,"Education
"
718,source/Mark Orlov.docx,"Master in Computer Science (2002 — 2006)
"
719,source/Danila Doroshenko.pdf," 
 
 
 
"
720,source/Danila Doroshenko.pdf,"Professional Summary 
"
721,source/Danila Doroshenko.pdf,"Software Engineer who is familiar with helping to create detailed 
application codes and design. Extensive collaboration with 
developers to draft and test programs for in-field rollout. Experience 
with Python and Git development environments to standardize and 
customize CI/CD. The ability for generating automation frameworks 
and procedures like parsing, web scraping, and HTTP requests. 
"
722,source/Danila Doroshenko.pdf," 
"
723,source/Danila Doroshenko.pdf,"Work Experience 
"
724,source/Danila Doroshenko.pdf," 
"
725,source/Danila Doroshenko.pdf,"Make it in Ukraine 
• Developed an asynchronous telegram chatbot 
"
726,source/Danila Doroshenko.pdf," 
 
03/2020 - Current 
"
727,source/Danila Doroshenko.pdf,"Danila 
Doroshenko 
"
728,source/Danila Doroshenko.pdf," 
Contact 
"
729,source/Danila Doroshenko.pdf," 
"
730,source/Danila Doroshenko.pdf,"(@MakeItInUkrainebot) for IT talents using parsing with Beautiful 
Soup, telegram API, aiogram and SQLite database which led to 
automatization of Vacancies and Articles notifications depending on 
each user subscription and interests, that stores in the database. 
"
731,source/Danila Doroshenko.pdf,"• Implemented the quick apply feature by saving user’s data into 
"
732,source/Danila Doroshenko.pdf,"the database, shortening generated mailto link by web scrape my 
link shortener (a pet project that shortens links using NodeJS, 
MongoDB and Express) and attaching the link to every vacancy 
which led to better UX and makes the application process available 
in one click. 
"
733,source/Danila Doroshenko.pdf," 
"
734,source/Danila Doroshenko.pdf,"+380964647000 
"
735,source/Danila Doroshenko.pdf," 
"
736,source/Danila Doroshenko.pdf,"Rothem 
"
737,source/Danila Doroshenko.pdf,"10/2019 - 03/2020 
"
738,source/Danila Doroshenko.pdf," 
 
"
739,source/Danila Doroshenko.pdf,"ddddanchik@gmail.com 
"
740,source/Danila Doroshenko.pdf,"Researched a computer vision real-time semantic segmentation 
model in deeplab (mobilenetv2) trained on Cityscape dataset, 
quantized it for coralTPU, and transformed it to TFlite to run in AWS 
via SSH connection to Raspberry pi 3. 
"
741,source/Danila Doroshenko.pdf," 
 
Additional Skills 
 
"
742,source/Danila Doroshenko.pdf,"• Experience in Python 
"
743,source/Danila Doroshenko.pdf,"development 
"
744,source/Danila Doroshenko.pdf,"Education 
"
745,source/Danila Doroshenko.pdf," 
"
746,source/Danila Doroshenko.pdf,"KNU, CSC 
"
747,source/Danila Doroshenko.pdf," 
"
748,source/Danila Doroshenko.pdf," 
"
749,source/Danila Doroshenko.pdf,"09/2020 - 11/2020 
"
750,source/Danila Doroshenko.pdf,"• Parsing with BS 
• Web scraping with selenium 
• HTTP requests 
• SQLite and PostgreSQL 
"
751,source/Danila Doroshenko.pdf,"database management 
"
752,source/Danila Doroshenko.pdf,"• Teamwork & collaboration 
• API design knowledge 
• Experience building client- 
"
753,source/Danila Doroshenko.pdf,"server architecture 
"
754,source/Danila Doroshenko.pdf,"• Research models using 
"
755,source/Danila Doroshenko.pdf,"Tensorflow, Sklearn, Keras 
"
756,source/Danila Doroshenko.pdf,"• Front-end: HTML/CSS/JS, 
"
757,source/Danila Doroshenko.pdf,"jQuery, Bootstrap 
"
758,source/Danila Doroshenko.pdf,"• Back-end: Django 
"
759,source/Danila Doroshenko.pdf,"A freshman pursuing a Bachelor's degree in Software engineering 
and intelligent software systems. 
"
760,source/Danila Doroshenko.pdf," 
"
761,source/Danila Doroshenko.pdf,"01/2013 - 06/2020 
"
762,source/Danila Doroshenko.pdf,"Lyceum 142 
Technical high school diploma 
"
763,source/Danila Doroshenko.pdf," 
"
764,source/Danila Doroshenko.pdf," 
Certificates and articles 
"
765,source/Danila Doroshenko.pdf,"- Google Code-in 2019 competition 
- FCE B2 English level 
- Tutorial on Polynomial regression: https://colab.research.google.co 
m/drive/1-sY2pAgx1rYEuRXn6Tr_ojfXq7PDGotR 
"
766,source/Albina Roshchupkina.docx,"Albina Roshchupkina, Software Engineer in Test
"
767,source/Albina Roshchupkina.docx,"+380000617225, albina.roshchupkina@gmail.com
"
768,source/Albina Roshchupkina.docx,"LINKS
Linkedin
"
769,source/Albina Roshchupkina.docx,"PROFILE
• Certified Test Engineer/Test Analyst with 10 years’ experience in software testing
• Certified Scrum Master
• Experience in Test Automation using Java, Serenity, RestAssured, Cucumber JVM
• Experience in different types and techniques of software testing
• Experience in Leading QA teams
• Working experience in Waterfall and Agile software development methodologies.
"
770,source/Albina Roshchupkina.docx,"EMPLOYMENT HISTORY
"
771,source/Albina Roshchupkina.docx,"May 2021 — Present
Software Engineer in Test, 6-Systems/SIXT
Riga
"
772,source/Albina Roshchupkina.docx,"IT branch of SIXT, which is one of the biggest international mobility service provider. Project is payment 
service that facilitates payment transactions and settlement for the SIXT exposing only relevant payment 
logic to the clients
"
773,source/Albina Roshchupkina.docx,"• Implementing and reviewing automation tests using Java, RestAssured, Serenity BDD.
• Improving quality of the product by reviewing every functionality from business and technical 
point of view.
"
774,source/Albina Roshchupkina.docx,"• Improving processes in test automation, to achieve better coverage, simplify code and fix outdated 
failed tests in order to elevate monitoring results.
"
775,source/Albina Roshchupkina.docx,"May 2018 — May 2021
Software Engineer in Test, SIXT
Riga
"
776,source/Albina Roshchupkina.docx,"Connected car/Telematics platform. Data retrieval and communication via IoT, virtual handling of 
customer interaction via smartphone app, condition monitoring of the vehicles.
"
777,source/Albina Roshchupkina.docx,"• Created API test automation framework from scratch using Java, RestAssured, Serenity BDD
• Implemented Java Spring Boot service to have possibility control Vehicle Simulator via HTTP and 
to create automation tests using Vehicle Simulator
"
778,source/Albina Roshchupkina.docx,"• Implemented Java mock service based on the Wiremock to be able to test project services 
independent from other architecture
"
779,source/Albina Roshchupkina.docx,"• Tested smartphone application with real vehicles and simulator
"
780,source/Albina Roshchupkina.docx,"Mar 2015 — Mar 2017
Quality Assurance 
Engineer/ QA Lead, Luxury Fashion Trade
"
781,source/Albina Roshchupkina.docx,"GmbH
"
782,source/Albina Roshchupkina.docx,"Online store based on 
open source e-commerce 
platform.
"
783,source/Albina Roshchupkina.docx,"• Introduced web automation testing to the team using Java, Cucumber JVM and Serenity BDD 
which allowed to perform regression tests everyday
"
784,source/Albina Roshchupkina.docx,"• Trained manual QA team to work with the framework and create automation tests
• Tested and supported Magento platform based online store
• Leading manual and Automation QA teams, implemented, improved and reviewed QA processes
"
785,source/Albina Roshchupkina.docx,"Nov 2013 — Jan 2015
Quality Assurance Engineer, Aginity LLC
"
786,source/Albina Roshchupkina.docx,"Kharki
"
787,source/Albina Roshchupkina.docx,"v Enterprise Business Process Improvement software solution that allows process large volumes of 
"
788,source/Albina Roshchupkina.docx,"information
"
789,source/Albina Roshchupkina.docx,"• Tested data processing
• Created SQL scripts as automation tests to run them everyday and check data is correctly stored
• Tested stored procedure, templates and reports to improve quality of the product
"
790,source/Albina Roshchupkina.docx,"Nov 2010 — Nov 2013
Quality Assurance Engineer, Nix Solutions Ltd.
Riga
"
791,source/Albina Roshchupkina.docx,"Web-based ""business to business"" search system that provides access and search facilities through scientific 
"
792,source/Albina Roshchupkina.docx,"publications database for universities, laboratories, etc.
"
793,source/Albina Roshchupkina.docx,"• As it was my first company I gained experience in web testing, requirement analysis, test 
documentation development
"
794,source/Albina Roshchupkina.docx,"• Was responsible for manual testing and test documentation development in the project and 
later for training new team members
"
795,source/Albina Roshchupkina.docx,"EDUCATION
"
796,source/Albina Roshchupkina.docx,"Sep 2006 — May 2012
Master, National 
Technical University (Kharkiv Polytechnical
"
797,source/Albina Roshchupkina.docx,"Institute)
"
798,source/Albina Roshchupkina.docx,"Electronics engineer 
researcher (honor 
diploma)
"
799,source/Albina Roshchupkina.docx,"Kharkiv
"
800,source/Albina Roshchupkina.docx,"SKILLS
SQL
"
801,source/Albina Roshchupkina.docx,"Git 
"
802,source/Albina Roshchupkina.docx,"Selenium 
"
803,source/Albina Roshchupkina.docx,"Java Jenkins
"
804,source/Albina Roshchupkina.docx,"Cucumb
"
805,source/Albina Roshchupkina.docx,"er 
"
806,source/Albina Roshchupkina.docx,"Docker 
"
807,source/Albina Roshchupkina.docx,"API 
"
808,source/Albina Roshchupkina.docx,"Testing
"
809,source/Albina Roshchupkina.docx,"Automated Testing 
"
810,source/Albina Roshchupkina.docx,"Manual Testing
"
811,source/Albina Roshchupkina.docx,"CERTIFICATES
"
812,source/Albina Roshchupkina.docx,"ISTQB Certified 
"
813,source/Albina Roshchupkina.docx,"tester Advanced 
"
814,source/Albina Roshchupkina.docx,"Level - Test 
"
815,source/Albina Roshchupkina.docx,"Analyst ISTQB 
"
816,source/Albina Roshchupkina.docx,"Certified Tester, 
"
817,source/Albina Roshchupkina.docx,"Foundation Level 
"
818,source/Albina Roshchupkina.docx,"Professional 
"
819,source/Albina Roshchupkina.docx,"Scrum Master I 
"
820,source/Albina Roshchupkina.docx,"Assessment
"
821,source/Albina Roshchupkina.docx,"M101J: MongoDB for Java Developers
"
822,source/Vladislav Zakharchenko.docx,"Vladislav Zakharchenko
"
823,source/Vladislav Zakharchenko.docx,"Vancouver, BC, Canada
"
824,source/Vladislav Zakharchenko.docx,"+1-672-000-2033 | aaaaey.zakharchenko@gmail.com | linkedin.com/in/caass
"
825,source/Vladislav Zakharchenko.docx,"SUMMARY
"
826,source/Vladislav Zakharchenko.docx,"Seasoned professional with two decades of experience, driven by unwavering passion for software 
development
"
827,source/Vladislav Zakharchenko.docx,"EXPERIENCE
"
828,source/Vladislav Zakharchenko.docx,"Staff Engineer, Senior Software Engineer
Jun 2022 – Present
"
829,source/Vladislav Zakharchenko.docx,"Bitso SAPI de CV – The first crypto unicorn in Latin America
Remote
"
830,source/Vladislav Zakharchenko.docx,"• Led development of Clearing Service resulting in 31% increase of trading engine overall throughput
"
831,source/Vladislav Zakharchenko.docx,"• Developed a reliable queue library on top of Redis Streams which is used in other trading engine services 
resulting in significant development time decrease for other services. Blog post pending
"
832,source/Vladislav Zakharchenko.docx,"• Identified a bottleneck and implemented the solution to get rid of distributed locking in balance updates resulting 
in 70% throughput increase
"
833,source/Vladislav Zakharchenko.docx,"• Mentored team members in pilot mentoring program resulting in several tangible improvements in mentee’s 
next cycle 360 review
"
834,source/Vladislav Zakharchenko.docx,"Principal Engineer, Software Architect
Apr 2016 – Jun 2022
"
835,source/Vladislav Zakharchenko.docx,"Crossover for Work – Top 1% of global remote talent
Remote
"
836,source/Vladislav Zakharchenko.docx,"• Led WorkSmart NextGen project leveraging AWS data processing and analysis stack that provided regular 
insights of employees performance and fraud risk, resulting in a several dozens proven cases of fraud identified
"
837,source/Vladislav Zakharchenko.docx,"• Identified and fixed a bug in a legacy telecom codebase of fearful quality, saving 0.2M$ of customers 
annual revenue
"
838,source/Vladislav Zakharchenko.docx,"• Enhanced code delivery pipeline for AntiPatterns project resulting in several months of zero-failure 
weekly production deliveries
"
839,source/Vladislav Zakharchenko.docx,"Senior Software Engineer
May 2021 – Aug 2021
"
840,source/Vladislav Zakharchenko.docx,"GoodIt.Works – We launch startups
Remote, part-time
"
841,source/Vladislav Zakharchenko.docx,"• Developed a triangular arbitrage bot MVP and potential profitability chain analysis for intra-Binance trading. 
"
842,source/Vladislav Zakharchenko.docx,"https://github.com/ululam/patron-arby/blob/main/notebooks/arbydol.ipynb
"
843,source/Vladislav Zakharchenko.docx,"Senior QA Automation Engineer
Feb 2015 – Jan 2016
"
844,source/Vladislav Zakharchenko.docx,"Incryptex – Digital currency marketplace
Remote
"
845,source/Vladislav Zakharchenko.docx,"• Created automated testing harness for integration and performance testing based on production data, leading 
to two times faster feature deliveries
"
846,source/Vladislav Zakharchenko.docx,"Senior Software Engineer
Jan 2013 – Feb 2015
"
847,source/Vladislav Zakharchenko.docx,"AlphaOpen – Digital Ecosystems
Moscow, RU
"
848,source/Vladislav Zakharchenko.docx,"• Conducted a comprehensive back-end redesign, resulting in a 10x increase in write throughput
"
849,source/Vladislav Zakharchenko.docx,"• Developed a novel approach to event processing, increasing the system’s overall performance to a peak of 1 
million events per second
"
850,source/Vladislav Zakharchenko.docx,"• Established an automated testing pipeline, reducing the overall QA cycle time by approximately 30%.
Software Engineer, Architect, Lead Engineer, CTO, Self-Employed
1999 – 2013
"
851,source/Vladislav Zakharchenko.docx,"Wygee, Reaxion, Luxoft, INCOM, RPC Overseas, CyberVision
"
852,source/Vladislav Zakharchenko.docx,"EDUCATION
"
853,source/Vladislav Zakharchenko.docx,"Moscow Institute of Physics and Technology
Moscow, RU
"
854,source/Vladislav Zakharchenko.docx,"Master of Science in Computer Science
Sep 1996 – June 2001
"
855,source/Vladislav Zakharchenko.docx,"MIRBIS Moscow International Business School
Moscow, RU
"
856,source/Vladislav Zakharchenko.docx,"MBA
Sep 2005 – Feb 2008
"
857,source/Vladislav Zakharchenko.docx,"TECHNICAL SKILLS
"
858,source/Vladislav Zakharchenko.docx,"Languages: Java, Python, SQL, JavaScript, TypeScript, PHP
Cloud: AWS S3, EC2, SNS/SQS, ECR/ECS/Fargate, Kinesis Firehose/Streams, RDS/Aurora, DynamoDB, 
CloudWatch, Glue ETL, Step Functions/Lambdas, SageMaker, Comprehend, Rekognition, RedShift, QuickSight, ELB 
Other Tools: Git, Docker, k8s, Spock/JUnit, Spring/Micronaut, PostgreSQL, mysql, k6, Splunk, Datadog, Jupyter 
Certifications: AWS Certified Solutions Architect, AWS Certified Machine Learning - Speciality
"
859,source/Dasha Yavorska.pdf,"Dasha Yavorska
"
860,source/Dasha Yavorska.pdf,"Project Manager / Analyst
"
861,source/Dasha Yavorska.pdf,"San Francisco Bay Area, CA,
"
862,source/Dasha Yavorska.pdf,"USA
"
863,source/Dasha Yavorska.pdf,"yavaaakaya670@gmail.com | (341) 000 3449 |
"
864,source/Dasha Yavorska.pdf,"SUMMARY:
"
865,source/Dasha Yavorska.pdf,"Project manager with 15+ years of experience, a passion for analysis, and expertise in
"
866,source/Dasha Yavorska.pdf,"process design and systems analysis. Goal-oriented leader and collaborative team player with
diverse domain knowledge. Versatile asset to any team committed to achieving goals.
"
867,source/Dasha Yavorska.pdf,"EXPERIENCE:
ZeroAvia
Hollister, CA, USA | 2022 - 2023 (1yrs 5mos)
"
868,source/Dasha Yavorska.pdf,"Project Manager
Achievements:
"
869,source/Dasha Yavorska.pdf,"❖ Led the development and internal launch of a groundbreaking Energy supply monitoring and
"
870,source/Dasha Yavorska.pdf,"control system, based on a smart algorithm using AI, for a hydrogen production system.
"
871,source/Dasha Yavorska.pdf,"❖ Contributed to the building and led a high-performing team of engineers and scientists,
"
872,source/Dasha Yavorska.pdf,"fostering a culture of innovation and continuous improvement.
"
873,source/Dasha Yavorska.pdf,"❖ Collaborated effectively with cross-functional teams to gather requirements, deﬁne scope, and
"
874,source/Dasha Yavorska.pdf,"develop project plans, ensuring that the project aligned with overall business goals.
"
875,source/Dasha Yavorska.pdf,"❖ Successfully tracked progress, identiﬁed and mitigated risks, and oversaw the testing of the
"
876,source/Dasha Yavorska.pdf,"system, ensuring its timely and successful delivery.
"
877,source/Dasha Yavorska.pdf,"Enel X (eMotorWerks)
USA, Remote | 2019 - 2022 (3yrs 4mos)
"
878,source/Dasha Yavorska.pdf,"Project Manager
Achievements:
"
879,source/Dasha Yavorska.pdf,"❖ Successfully delivered 5+ projects on time and within scope, including creating detailed project
"
880,source/Dasha Yavorska.pdf,"workﬂows, templates for PMO documentation, and ensuring resource availability and
allocation.
"
881,source/Dasha Yavorska.pdf,"❖ Facilitated collaborative estimation and planning processes, bringing together stakeholders
"
882,source/Dasha Yavorska.pdf,"from different teams to ensure alignment on goals and expectations.
"
883,source/Dasha Yavorska.pdf,"❖ Ensured cross-team cooperation by coordinating communication and activities across multiple
"
884,source/Dasha Yavorska.pdf,"teams, leading to successful project outcomes.
"
885,source/Dasha Yavorska.pdf,"Change And Release Manager
Achievements:
"
886,source/Dasha Yavorska.pdf,"❖ Improved release eﬃciency by streamlining release processes and implementing a binary
"
887,source/Dasha Yavorska.pdf,"delivery approach and shortened release cycle time by 65%, from 40-35 days to 14 days.
"
888,source/Dasha Yavorska.pdf,"Tickets Travel Network (Tickets.ua)
| 2014 - 2017 (3yrs)
"
889,source/Dasha Yavorska.pdf,"Project Manager, Analyst
Achievements:
"
890,source/Dasha Yavorska.pdf,"❖ Implemented and integrated Jira/Conﬂuence tools and corporate portal for 800+ employees,
"
891,source/Dasha Yavorska.pdf,"streamlining workﬂows and improving eﬃciency.
"
892,source/Dasha Yavorska.pdf,"❖ Led the successful delivery of 13+ corporate and 3 external projects, meeting all deadlines and
"
893,source/Dasha Yavorska.pdf,"requirements, including an employee 360-degree Feedback system.
"
894,source/Dasha Yavorska.pdf,"Training and Development Team Lead
Achievements:
"
895,source/Dasha Yavorska.pdf,"❖ Improved team performance and efficiency by developing and implementing training programs,
"
896,source/Dasha Yavorska.pdf,"automating business processes, and running team-building events.
"
897,source/Dasha Yavorska.pdf,"JSC ""Teleradiocompany Lux""
| 2010 - 2013 (3yrs 2mos)
"
898,source/Dasha Yavorska.pdf,"Product/Project Manager, Chief Editor
Achievements:
"
899,source/Dasha Yavorska.pdf,"❖ Launched web portal: from developing a concept, and managing the development team up to
"
900,source/Dasha Yavorska.pdf,"content creation and 3 years of support for the project as a Chief editor.
"
901,source/Dasha Yavorska.pdf,"International Humanitarian Pedagogical Institute
| 2008 - 2010 (2yrs)
"
902,source/Dasha Yavorska.pdf,"Head of IT Media library
Achievements:
"
903,source/Dasha Yavorska.pdf,"❖ Launched university website and taught IT classes to students
"
904,source/Dasha Yavorska.pdf,"CERTIFICATES:
"
905,source/Dasha Yavorska.pdf,"❖ 2023 - Advanced Project Management Course | Online Ukrainian School of Project
"
906,source/Dasha Yavorska.pdf,"Management by Denys Prylutskyi
"
907,source/Dasha Yavorska.pdf,"❖ 2021 - PMI Agile Certiﬁed Practitioner (PMI-ACP) preparation course | Tenstep Academy
"
908,source/Dasha Yavorska.pdf,"❖ 2017 - Arts and Crafts of Business Analysis | SoftServe University & Business Analysis Oﬃce
❖ 2017 - Emotional intelligence course | Alena Sysoeva
❖ 2016 - Fundamentals of Business Analysis | Lviv BDA School
❖ 2016 - Financial management | Lviv Business School
❖ 2016 - Development of leadership potential. Management functions | Lviv Business School
"
909,source/Dasha Yavorska.pdf,"and Women's leadership program “Leadership. Success. Inspiration” | Lviv Business School
"
910,source/Dasha Yavorska.pdf,"❖ 2016 - MS Excel Pro, MS Project courses
"
911,source/Dasha Yavorska.pdf,"❖ 2014 - 13 steps to a successful SCRUM | Kseniya Kobryn and Kanban System Design,
"
912,source/Dasha Yavorska.pdf,"KANBAN Management Professional | Kirill Klimov
"
913,source/Dasha Yavorska.pdf,"EDUCATION:
"
914,source/Dasha Yavorska.pdf,"❖ Master's degree | Social pedagogue, a practicing psychologist | Crimean
"
915,source/Dasha Yavorska.pdf,"Humanitarian University, Ukraine | 2007 - 2012, Graduated with honors
"
916,source/Dasha Yavorska.pdf,"❖ Bachelor degree | Elementary School Teacher, Hebrew teacher | Dnipropetrovsk
"
917,source/Dasha Yavorska.pdf,"International Humanitarian Pedagogical Institute, Ukraine | 2005 - 2010, Graduated with
honors
"
918,source/Dasha Yavorska.pdf,"LANGUAGES:
"
919,source/Dasha Yavorska.pdf,"❖ English - Professional working proﬁciency | Ukraine/Russian - Native | Hebrew/Polish - Basic
"
920,source/Mark Iarish.docx,"Front End Developer
"
921,source/Mark Iarish.docx,"mark78.yarish@gmail.com • 
LinkedIn
"
922,source/Mark Iarish.docx,"Three years of extensive experience as front end developer. Skilled in striking balance between functional and user experience. Excel at 
building reusable code for future use, as well as optimizing web pages for maximum speed and scalability. Tech-savvy professional with 
progressive experience decomposing and distributing complex tasks to team members. Articulate communicator with credible history of 
cultivating and maintaining positive collaborations with clients, key stakeholders.
"
923,source/Mark Iarish.docx,"Technical Skills
"
924,source/Mark Iarish.docx,"JavaScript | CSS | React.js | HTML | Git | Redux.js | SASS | Webpack | Node.js
"
925,source/Mark Iarish.docx,"Work Experience
"
926,source/Mark Iarish.docx,"Lead Front End Developer
OptiSystems, Russia
Feb 2018 – Present
"
927,source/Mark Iarish.docx,"Provide first-class services as leading front-end developer of main project, which is the leader in the CIS among peers. Leverage proven 
expertise for development of web interfaces with ReactJS, Redux. Facilitate workflows by refactoring legacy code as well as develop 
application architecture to better code maintainability. Estimate time and distribute tasks in team of 5 front-end developers. Optimize 
performance and user experience.
"
928,source/Mark Iarish.docx,"·
Implemented best practices for testing, performance improvement, and documentation.
"
929,source/Mark Iarish.docx,"·
Adviced to 4 other developers to ensure process and performance improvement.
"
930,source/Mark Iarish.docx,"·
Successfully initiated development of next project that is gaining popularity among clients.
"
931,source/Mark Iarish.docx,"Python Developer
Clinical Oncology Center No. 1, Russia
Oct 2017 – Feb 2018
"
932,source/Mark Iarish.docx,"Participated in development of medical information system. Responsible for module for integration with Electronic Medical Record.
"
933,source/Mark Iarish.docx,"·
Proactively improved module for uploading data to third-party service that resulted in over 1000 of new medical cases to be 
uploaded per day.
"
934,source/Mark Iarish.docx,"System Administrator
Regional Association of Builders of Kuban, Russia
Sept 2013 – Sept 2017
"
935,source/Mark Iarish.docx,"Provide user support and online safety. Configure access policies. Maintain 2 servers, manage data backups. Modify official site with 
new modules. Provide process automation.
"
936,source/Mark Iarish.docx,"·
Automated loading of up-to-date information about 400 partner organizations to official website.
"
937,source/Mark Iarish.docx,"·
Organized infrastructure covering branches of organization in 4 cities.
"
938,source/Mark Iarish.docx,"·
A system for registering changes on the site has been developed, which has been working smoothly for over 5 years.
"
939,source/Mark Iarish.docx,"Engineer, Teacher
Krasnodar Information Technology College, Russia
Jan 2012 – Aug 2013 
"
940,source/Mark Iarish.docx,"Taught group of 20 students a course of lectures on basics of programming and system administration.
"
941,source/Mark Iarish.docx,"·
Developed exam questions that were also used in work by other teachers
"
942,source/Mark Iarish.docx,"Education
"
943,source/Mark Iarish.docx,"Master in Computer Science (2005 – 2008) 
"
944,source/Mark Iarish.docx,"Russian State Social University, Moscow, Russia
"
945,source/Lysikov Nikita.docx,"Lysikov Nikita
"
946,source/Lysikov Nikita.docx,"DAtA SciEncE IntERn · MAchinE LEARninG IntERn
"
947,source/Lysikov Nikita.docx,"Kharkiv, Ukraine | ready for relocation
"
948,source/Lysikov Nikita.docx,"Education  
"
949,source/Lysikov Nikita.docx,"V.N.KARAZIN KHARKIV NATIONAL UNIVERSITY
Sep. 2018 ‑ May 2022
"
950,source/Lysikov Nikita.docx,"• Bachelor of Math of School of Math and Computer Science
"
951,source/Lysikov Nikita.docx,"Projects  
"
952,source/Lysikov Nikita.docx,"2D‑BAsED stRAtEGY With pRocEDuRAllY GEnERAtED WoRlD | C++
Jun. 2017 ‑ May. 2018
"
953,source/Lysikov Nikita.docx,"• Implemented basic behavior mechanics by programming randomised movement and resource consuming algorithms
"
954,source/Lysikov Nikita.docx,"• Developed random world generation algorithm, which used multiple random seeds to build realistic world.
• Programmed UI and savefile structure by implementing game configuration menus and save‑load system
"
955,source/Lysikov Nikita.docx,"NAtURAl lAnGUAGE EMUlAtinG Bot | C++
Sep. 2017 ‑ Jul. 2018
"
956,source/Lysikov Nikita.docx,"• Implemented dictionary expanding algorithm by adding ”Ask meaning of word” and ”Add Word to dictionary” functions
"
957,source/Lysikov Nikita.docx,"• Developed sentence building simulation by programming basic language grammar rules
• Built mood simulation system by adding randomly generated mood coefficients and altering used dictionary according to 
"
958,source/Lysikov Nikita.docx,"them
"
959,source/Lysikov Nikita.docx,"OnlinE Shop WEBsitE | Python
Jan. 2020 ‑ May 2020
"
960,source/Lysikov Nikita.docx,"• Implemented UI and user database using Django
"
961,source/Lysikov Nikita.docx,"• Developed Order and Delivery Interface by implementing user and provider order interface using Django
• Built online cart using Django
"
962,source/Lysikov Nikita.docx,"Honors & Awards  
INTERNATIONAL
"
963,source/Lysikov Nikita.docx,"2019
Honorable Mention, Ukraine ACM‑ICPC (Top 75 of 883 participants)
Kharkiv, Ukraine
"
964,source/Lysikov Nikita.docx,"Aug. 2020 C1 Level Certificate, Cambridge Assessment English test
Kharkiv, Ukraine
"
965,source/Lysikov Nikita.docx,"Aug. 2019 C1 Level Certificate, ÖSD test
Vienna, Austria
"
966,source/Lysikov Nikita.docx,"Certificates  
"
967,source/Lysikov Nikita.docx,"Packt Publishing
Online
"
968,source/Lysikov Nikita.docx,"DATA ScIENcE WORKshOp
"
969,source/Lysikov Nikita.docx,"• Completed Data Science Workshop created by Packt Publishing
"
970,source/Lysikov Nikita.docx,"Coursera
Online
"
971,source/Lysikov Nikita.docx,"MACHINE LEARNING WORKSHOP
"
972,source/Lysikov Nikita.docx,"• Completed Machine Learning Workshop created by Coursera
Coursera
Online
"
973,source/Lysikov Nikita.docx,"NATURAL LANGUAGE COURSES
"
974,source/Lysikov Nikita.docx,"• Completed Natural Language Courses created by Coursera
"
975,source/Lysikov Nikita.docx,"Additional & Volunteer Activities  
IEEE V. N. Karazin Kharkiv National University Student Branch
Kharkiv, Ukraine
"
976,source/Lysikov Nikita.docx,"WEBMASTER 2020‑PRESENT TIME
"
977,source/Lysikov Nikita.docx,"• Programmed official website of V. N. Karazin Kharkiv National University 
"
978,source/Lysikov Nikita.docx,"Student Branch
"
979,source/Lysikov Nikita.docx,"• Proposed various marketing and network activities to raise awareness
Organized educational events and Karazin University 
Programming Cup
"
980,source/Lysikov Nikita.docx,"Aug. 2020 ‑ present time
"
981,source/Lysikov Nikita.docx,"1
"
982,source/Egor Pianykh.pdf,"Egor Pianykh
206-482-7070
egor.pianykh@gmail.com
"
983,source/Egor Pianykh.pdf,"A decent software engineer is looking to build expertise in distributed software at scale.
"
984,source/Egor Pianykh.pdf,"GlobalLogic Inc
2013 - present
"
985,source/Egor Pianykh.pdf,"Backend Engineer, a hospitality company
Feb 2021 - Present
"
986,source/Egor Pianykh.pdf,"● Developing card payment services for a hospitality company
"
987,source/Egor Pianykh.pdf,"Primary technologies: Azure, C#, Java
"
988,source/Egor Pianykh.pdf,"Software Engineer, medical ECG monitoring
May 2020 - Nov 2020
"
989,source/Egor Pianykh.pdf,"●
Created an infrastructure as a code for on-prem Cassandra cluster deployments. This
is a part of a system that will enable my client to deploy solutions to military hospitals
and hospitals that prefer to manage their infrastructure.
"
990,source/Egor Pianykh.pdf,"●
Implemented a metrics agent to monitor the health of the Cassandra cluster. The
agent, along with the Kibana dashboard, will allow the ops team to monitor the cluster's
health and provide appropriate SLA.
"
991,source/Egor Pianykh.pdf,"Primary technologies: Linux, Docker, Docker swarm mode, Cassandra, Elastic, Kibana
"
992,source/Egor Pianykh.pdf,"Project Coordinator, legacy ECG devices
Oct 2019 - May 2020
"
993,source/Egor Pianykh.pdf,"●
Provided technical leadership and direction to 35 software engineers, quality engineers,
and
business
analysts.
Facilitated
collaboration
between
stakeholders
and
"
994,source/Egor Pianykh.pdf,"development
teams
and
saved
hundreds
of
work
hours
by
minimizing
the
"
995,source/Egor Pianykh.pdf,"communication time gap.
"
996,source/Egor Pianykh.pdf,"●
Represented a team on organization meetings, enabled quick issue resolution.
"
997,source/Egor Pianykh.pdf,"●
Conducted cost-benefit analysis for remote customer support tooling. Presented
the findings to a team of executives. The decision that was made saved a company
hundreds of thousands of dollars per year.
"
998,source/Egor Pianykh.pdf,"●
Led an effort to adjust APIs with a third-party vendor. Fast problem solving led to
the timely release and avoided reputation losses to my client.
"
999,source/Egor Pianykh.pdf,"Primary technologies: communication, PowerPoint, Excel
"
1000,source/Egor Pianykh.pdf,"Senior Software Engineer, medical ultrasound machines
Jun 2017 - Oct 2019
"
1001,source/Egor Pianykh.pdf,"●
Designed and implemented a set of tools to reprogram faulty ultrasonic transducers in
the field. This toolset saved over 20M dollars, avoiding the replacement of probes.
And most importantly prevented ultrasonographers from cancer misdiagnosis.
"
1002,source/Egor Pianykh.pdf,"●
Implemented a workaround for a bug in the NVIDIA display driver that appears only
with custom display and in out-of-support cards. This workaround could save thousands
of hours of field engineers' work and millions of company losses.
"
1003,source/Egor Pianykh.pdf,"●
Fixed numerous hard to reproduce issues in legacy systems with over 2M lines of
code and heavily dependent on global variables.
"
1004,source/Egor Pianykh.pdf,"Primary technologies: C++, C#, .NET Framework, WPF
"
1005,source/Egor Pianykh.pdf,"Tech Lead, semiconductor burn-in oven automation
Jan 2017 - Mar 2017
"
1006,source/Egor Pianykh.pdf,"●
Established the agile process, sprints and enabled my team on every demo.
"
1007,source/Egor Pianykh.pdf,"●
Designed a portal for configuring a semiconductor burn-in oven. Improved
production floor operators' speed of work and reduced the number of defective
batches by 5%.
"
1008,source/Egor Pianykh.pdf,"●
Led a team to the successful implementation of the project on time. Prevented the
downtime for already installed equipment and enabling the next round of million
dollars budgeting for a greater team.
"
1009,source/Egor Pianykh.pdf,"● Facilitated collaboration between developers and business analysts.
"
1010,source/Egor Pianykh.pdf,"Primary technologies: ASP.NET WebApi, Angular, Bootstrap, SQL Server
"
1011,source/Egor Pianykh.pdf,"Software Engineer, CRM system
Jun 2016 - Jan 2017
"
1012,source/Egor Pianykh.pdf,"●
Tracked a rare critical bug that was missed by dozens of eyes. Nobody knew how it
was introduced to the system. Spent hundreds of hours researching codebase and
experimenting with the CI/CD system. Successfully unblocked a team on their goal to
unbind CRM from SQL Server.
"
1013,source/Egor Pianykh.pdf,"●
Merged an enormous amount of branches in git in a system with around 1500 active
developers. Enabled my teammates to move faster and saved hundreds of
development time by using my git expertise.
"
1014,source/Egor Pianykh.pdf,"Fullstack Engineer, Private Equity Fund
Nov 2012 - May 2016
"
1015,source/Egor Pianykh.pdf,"●
Implemented an Excel macro merge tool that could save a team over 96
person-days yearly.
"
1016,source/Egor Pianykh.pdf,"●
Optimized a data ingestion endpoint by using a low-level reading API. This enabled
accountants to load ten times bigger documents and decreased processing times by four
times on average.
"
1017,source/Egor Pianykh.pdf,"Primary technologies: ASP.NET WebApi, ExtJS SQL Server
"
1018,source/Egor Pianykh.pdf,"EPAM Systems
June 2012 - Nov 2013
"
1019,source/Egor Pianykh.pdf,"Software Engineer, market risk calculation platform
"
1020,source/Egor Pianykh.pdf,"●
Developed software to migrate config files used across the bank.
"
1021,source/Egor Pianykh.pdf,"●
Effectively communicated to pull people from the different teams together and migrated
configs in one release. This enabled the retirement of old services earlier and saved
hundreds of man-hours of developers' work.
"
1022,source/Egor Pianykh.pdf,"Other projects that I have done while studying or off work
2008 - 2012
"
1023,source/Egor Pianykh.pdf,"●
Architecture and implementation of automated dispatch GIS system for a trucking
company
"
1024,source/Egor Pianykh.pdf,"●
Driving the insurance company payroll platform from 0 to completion.
"
1025,source/Egor Pianykh.pdf,"Education and certificates
"
1026,source/Egor Pianykh.pdf,"●
Bachelor degree in Applied Mathematics in East Ukrainian State University
"
1027,source/Egor Pianykh.pdf,"●
Deep Learning School by Moscow Institute of Physics and Technology (completed
the first-semester study, to be completed in 2021)
"
1028,source/Egor Pianykh.pdf,"●
Deeplearning.ai specialization on coursera.org
"
1029,source/Egor Pianykh.pdf,"●
Machine Learning Scientist with Python on DataCamp.com
"
1030,source/Vadim Traigel.docx,"Vadim Traigel
"
1031,source/Vadim Traigel.docx,"Moscow, RU ⧫ gtc.12356@gmail.com ⧫ +79773330008 
"
1032,source/Vadim Traigel.docx,"SOFTWARE DEVELOPER
"
1033,source/Vadim Traigel.docx,"High-Performance Applications ⧫ Optimizing and Integration ⧫ Full-Stack Developer
"
1034,source/Vadim Traigel.docx,"Web developer valued for driving quality and consistency throughout all phases of software development 
projects. Team with developers, analysts, QA and support engineers throughout the product lifecycle to produce 
high-quality, user-friendly, scalable and bug-free web platforms.
"
1035,source/Vadim Traigel.docx,"Technical proficiencies:
"
1036,source/Vadim Traigel.docx,"Python, Django, PHP, Node.JS, Vue.JS, VueX, REST, Sockets, Multithreading, Unit Testing 
MySQL, Postgres, MongoDB, Memcached, Redis, Celery
"
1037,source/Vadim Traigel.docx,"SOFTWARE ENGINEERING SKILLS
"
1038,source/Vadim Traigel.docx,"−
Solutions Engineering, Testing & 
Optimization
"
1039,source/Vadim Traigel.docx,"−
Planning and implementing data storage 
solutions
"
1040,source/Vadim Traigel.docx,"−
Implementing security and data protection
"
1041,source/Vadim Traigel.docx,"−
Optimizing applications for maximum performance 
and scalability
"
1042,source/Vadim Traigel.docx,"−
Creating new and innovative solutions to meet 
business needs
"
1043,source/Vadim Traigel.docx,"−
Object-Oriented Methodologies
"
1044,source/Vadim Traigel.docx,"PROFESSIONAL EXPERIENCE
"
1045,source/Vadim Traigel.docx,"TEAM LEADER, FULLSTACK DEVELOPER, 06/2019 to Present ⧫ Least.sale – Moscow, RU
"
1046,source/Vadim Traigel.docx,"￿
Frontend: Vue.js + VueX, Stylus, Bootstrap
"
1047,source/Vadim Traigel.docx,"￿
Backend: PHP, Node.js, MySQL, MongoDB (3 hosts, replica set). Bull and Redis. PM2 (8 process 
cluster). MochaJS for testing, CI/CD with GitLab CI.
"
1048,source/Vadim Traigel.docx,"−
Start to work in this company when it was 3 men and rise it to over 20 people.
"
1049,source/Vadim Traigel.docx,"−
Writing new version on Node.JS and make it work with legacy PHP version
"
1050,source/Vadim Traigel.docx,"−
Integrate foreign services to the project to make experience and usage better
"
1051,source/Vadim Traigel.docx,"−
Develop close-knit team that make all the busyness wishes come true.
"
1052,source/Vadim Traigel.docx,"FULLSTACK DEVELOPER, 10/2018 to 06/2019 ⧫ Phenom Team – Moscow, RU
"
1053,source/Vadim Traigel.docx,"￿
Frontend: Vue.js + VueX, Pug, SASS, Bootstrap
"
1054,source/Vadim Traigel.docx,"￿
Backend: Python, Django. Postgres + MongoDB. Celery and Redis. Pipenv virtual environment. CI/CD 
with Ansible
"
1055,source/Vadim Traigel.docx,"−
Highly involved in the crypto exchange project.
"
1056,source/Vadim Traigel.docx,"−
Architect backend application for Binance Hackathon in Singapore 19-20 Jan 2019. (Finalists)
"
1057,source/Vadim Traigel.docx,"−
Engineered software release for speed and improved the user experience.
"
1058,source/Vadim Traigel.docx,"−
Mastering exchange logic for deposit and withdrawal crypto.
"
1059,source/Vadim Traigel.docx,"TEAM LEADER, FULLSTACK DEVELOPER, 8/2017 to 10/2018 ⧫ WhenSpeak – Moscow, RU
"
1060,source/Vadim Traigel.docx,"￿
Frontend: Angular 2, Vue.JS + VueX, SASS, Gulp
"
1061,source/Vadim Traigel.docx,"￿
Backend: PHP Yii2, Node.JS, WebSocket, Socket.io, WebRTC, HLS, MySQL
"
1062,source/Vadim Traigel.docx,"−
Start to collaborate with such companies as Sberbank, Teva, Abbott
"
1063,source/Vadim Traigel.docx,"−
Integrate WhenSpeak platform with Abbott Education System to provide cutting edge technologies in 
education
"
1064,source/Vadim Traigel.docx,"−
Develop and support streaming server with WebRTC and HLS to deliver low time latency video
"
1065,source/Vadim Traigel.docx,"−
Creating new testing system with advanced results providing
"
1066,source/Vadim Traigel.docx,"−
Adhered to high-quality development standards while delivering solutions on-time
"
1067,source/Vadim Traigel.docx,"FULLSTACK DEVELOPER, 8/2016 to 8/2017 ⧫ Reikartz – Moscow, RU
"
1068,source/Vadim Traigel.docx,"￿
Python, Django CMS, SASS, Twig, Bootstrap, MySQL, Git
"
1069,source/Vadim Traigel.docx,"−
Rebuild websites from Joomla to Django
"
1070,source/Vadim Traigel.docx,"−
Integrate rent API to the new sites
"
1071,source/Vadim Traigel.docx,"−
Optimizing server performance
"
1072,source/Vadim Traigel.docx,"−
Integrate caching for maximum performance
"
1073,source/Vadim Traigel.docx,"FULLSTACK DEVELOPER, 3/2015 to 8/2016 ⧫ MitLabs – Voronezh, RU
"
1074,source/Vadim Traigel.docx,"￿
Joomla, Wordpress, Magento, Twig, Bootstrap, MySQL, Git
"
1075,source/Vadim Traigel.docx,"−
Developing websites using Joomla and Wordpress
"
1076,source/Vadim Traigel.docx,"−
2 huge projects of e-commerce, based on Magento CMS
"
1077,source/Vadim Traigel.docx,"−
SVN and Git as version controls system
"
1078,source/Vadim Traigel.docx,"−
Integration outer services through REST and SOAP
"
1079,source/Vadim Traigel.docx,"2ND LINE SQL SUPPORT, TEAM LEADER, JUNIOR DEVELOPER, 9/2013 to 3/2015
"
1080,source/Vadim Traigel.docx,"⧫ AtConsulting – Voronezh, RU
"
1081,source/Vadim Traigel.docx,"−
Oracle SQL and Linux 2nd line support
"
1082,source/Vadim Traigel.docx,"−
PL/SQL scripts
"
1083,source/Vadim Traigel.docx,"−
Develop, test and deploy updates for high loaded service
"
1084,source/Vadim Traigel.docx,"−
4 month experience of team leading
"
1085,source/Vadim Traigel.docx,"EDUCATION & CERTIFICATIONS
"
1086,source/Vadim Traigel.docx,"Master's degree, Computers, complexes, systems, networks ⧫ International Institute of Computer 
"
1087,source/Vadim Traigel.docx,"Technology (IICT), Voronezh, RU
"
1088,source/Vadim Traigel.docx,"Certifications:
"
1089,source/Vadim Traigel.docx,"Go: The Complete Developer's Guide (Udemy)
Nuxt.js - Vue.js on steroids (Udemy)
"
1090,source/Danil Kikvadze.pdf,"Danil Kikvadze
"
1091,source/Danil Kikvadze.pdf,"Python Developer
"
1092,source/Danil Kikvadze.pdf,"Enthusiastic 3th grade student eager to contribute to team success
through hard work, attention to detail and excellent organization
skills. Clear understanding of Python zen and REST concept and
"
1093,source/Danil Kikvadze.pdf,"training in web frameworks.
"
1094,source/Danil Kikvadze.pdf,"I've been learning stack of technologies for web development since
2019. Motivated to learn, grow and excel in Web Industry.
"
1095,source/Danil Kikvadze.pdf,"CONTACT
Address
Moscow
Phone number
+79140989765
E-mail kikvadze673@lll.kpi.ua
LinkedIn
https://www.linkedin.com/in/yar-gty/
"
1096,source/Danil Kikvadze.pdf,"GitHub
https://github.com/yar-rfk
"
1097,source/Danil Kikvadze.pdf,"SKILLS
Frontend
HTML, CSS, JS, jQuery, React.js
Backend
Python,
Flask/Django,
SQL,
noSQL,
"
1098,source/Danil Kikvadze.pdf,"REST API, Celery
Other
Docker, Linux, Git, Unit testing, CI/CD
"
1099,source/Danil Kikvadze.pdf,"EDUCATION
National Technical University of Ukraine
«Kyiv Polytechnic Institute»
Bachelor's degree, Biomedical engineering
2018 – 2022
"
1100,source/Danil Kikvadze.pdf,"LANGUAGES
Russian
English
"
1101,source/Danil Kikvadze.pdf,"EXPERIENCE
"
1102,source/Danil Kikvadze.pdf,"Flask Bookshop, 2021-04 – 2021-06
"
1103,source/Danil Kikvadze.pdf,"● Created a RESTful API application
"
1104,source/Danil Kikvadze.pdf,"using Flask. JWT token was used for
authentication and role-based access.
"
1105,source/Danil Kikvadze.pdf,"● PostgreSQL was used as a database,
"
1106,source/Danil Kikvadze.pdf,"Redis was used for caching and task
queue.
"
1107,source/Danil Kikvadze.pdf,"● Celery was used for asynchronous tasks
"
1108,source/Danil Kikvadze.pdf,"such as sending email. Elasticsearch
was used for searching query.
"
1109,source/Danil Kikvadze.pdf,"● Development
also
required
Docker,
"
1110,source/Danil Kikvadze.pdf,"writing unit-tests and Travis CI.
"
1111,source/Danil Kikvadze.pdf,"● Production version of application uses
"
1112,source/Danil Kikvadze.pdf,"Gunicorn and NGINX.
"
1113,source/Danil Kikvadze.pdf,"Django Blog, 2020-07 – 2020-12
"
1114,source/Danil Kikvadze.pdf,"● PostgreSQL was used as a database.
● Django-template was used for SSR,
"
1115,source/Danil Kikvadze.pdf,"jQuery was used for AJAX calls.
"
1116,source/Danil Kikvadze.pdf,"● Added Docker, Travis, logging and
"
1117,source/Danil Kikvadze.pdf,"unit- tests.
"
1118,source/Danil Kikvadze.pdf,"● Added role-based access.
● Production
version
of
application
"
1119,source/Danil Kikvadze.pdf,"uses Gunicorn
and
NGINX
"
1120,source/Danil Kikvadze.pdf,"INTERESTS
Computer
Games Movies
Programming
"
1121,source/Aldar Ulubayev.pdf,"Aldar Ulubayev
"
1122,source/Aldar Ulubayev.pdf,"aldar.ulubayev@gmail.com |
aldarulubayev |
askar3280 |
+7 708 000 38 12
"
1123,source/Aldar Ulubayev.pdf,"Education
"
1124,source/Aldar Ulubayev.pdf,"Suleyman Demirel University
Almaty, Kaskelen district
"
1125,source/Aldar Ulubayev.pdf,"Faculty of Engineering and Natural Sciences
Aug. 2016 – May 2020
"
1126,source/Aldar Ulubayev.pdf,"Projects
"
1127,source/Aldar Ulubayev.pdf,"Alfa-Bank (App store) | ATFBank (App store) | Altyn-i (App store)|
"
1128,source/Aldar Ulubayev.pdf,"Experience
"
1129,source/Aldar Ulubayev.pdf,"iOS developer
Feb 2020 – Ongoing
"
1130,source/Aldar Ulubayev.pdf,"Alfa-Bank Kazakhstan
"
1131,source/Aldar Ulubayev.pdf,"• Decreased build time by comparing carthages and pods
"
1132,source/Aldar Ulubayev.pdf,"• Explored new technologies and shared findings with the team
"
1133,source/Aldar Ulubayev.pdf,"iOS developer
Sep – Jan 2020
"
1134,source/Aldar Ulubayev.pdf,"DAR
"
1135,source/Aldar Ulubayev.pdf,"• Worked on network layer which can be reused in every project
"
1136,source/Aldar Ulubayev.pdf,"• Configured push notifications of the project
"
1137,source/Aldar Ulubayev.pdf,"iOS developer
Jul 2019 – Sep 2020
"
1138,source/Aldar Ulubayev.pdf,"ATFBank
"
1139,source/Aldar Ulubayev.pdf,"• Head of the development iOS team
"
1140,source/Aldar Ulubayev.pdf,"• Developed and launched the application from scratch in over 60 k people (Rating: 4.7)
"
1141,source/Aldar Ulubayev.pdf,"• Worked closely with product managers and designers to define a rich iOS experience for
"
1142,source/Aldar Ulubayev.pdf,"the user
"
1143,source/Aldar Ulubayev.pdf,"• Configured architecture and security of the application
"
1144,source/Aldar Ulubayev.pdf,"• Improved product quality through code reviews
"
1145,source/Aldar Ulubayev.pdf,"• Performed technical designs and implementation of the application
"
1146,source/Aldar Ulubayev.pdf,"Internship
Jan 2019 – May 2019
"
1147,source/Aldar Ulubayev.pdf,"Infin-IT Solution
"
1148,source/Aldar Ulubayev.pdf,"• Worked on mobile-banking applications
"
1149,source/Aldar Ulubayev.pdf,"• Fixed bugs
"
1150,source/Aldar Ulubayev.pdf,"• Refactored codes
"
1151,source/Aldar Ulubayev.pdf,"• Added new functionalities like filter for dates and custom reusable views
"
1152,source/Aldar Ulubayev.pdf,"Skills
"
1153,source/Aldar Ulubayev.pdf,"Swift, Java, Multi-threading, CI/CD, Fastlane, Dependency Injection, Reactive programming
patterns (RX), SOLID, Clean Swift architecture (VIP), VIPER, MVVM
"
1154,source/Vsevolod Vinogradov.pdf,"Vsevolod Vinogradov
Preferred role: Machine Learning Engineer
"
1155,source/Vsevolod Vinogradov.pdf,"Tel: +4571000077 (DK)
E-mail: seva.vin@gmail.com
Education: M.Sc. in Communications Engineering (2012)
Citizenship: Russia
Residence: Copenhagen, DK, ready to relocate
Linked IN Blog
"
1156,source/Vsevolod Vinogradov.pdf,"Background
"
1157,source/Vsevolod Vinogradov.pdf,"I have 11 years of experience in computer hardware engineering. The key focus were DSP algorithms
"
1158,source/Vsevolod Vinogradov.pdf,"implementation win an FPGA and ASIC chips.
"
1159,source/Vsevolod Vinogradov.pdf,"DSP (Digital Signal Processing) is a wide area that uses techniques from the applied math, analyses,
"
1160,source/Vsevolod Vinogradov.pdf,"statistics and statistical learning to proceed signals, like radio, voice, images, in a digital form. DSP gives
theoretical and practical recipes to develop digital circuits for signal processing. ASIC is small pieces of silicon
with integrated circuits of digital logic, that we often refer as microchip. Your dishwasher controller, GPU and CPU
are ASICs. ASIC manufacturing process requires millions of $ of investment, so there’s an option to assemble
custom digital circuit from predefined building blocks “in-filed”. FPGA (Filed Programmable Gate Array) is kind of
a LEGO blocks set, from which an engineer may assemble digital circuits “in the field” by reconfiguring the
firmware of the FPGA chip. FPGA and ASIC are consist of IP(Intellectual Property) Cores, sort of the functional
block.
"
1161,source/Vsevolod Vinogradov.pdf,"I switched to a Software Engineering Role to expand my area of the expertise and more widely utilize my
"
1162,source/Vsevolod Vinogradov.pdf,"theoretical skills
"
1163,source/Vsevolod Vinogradov.pdf,"Skill Set
"
1164,source/Vsevolod Vinogradov.pdf,"Machine Learning
"
1165,source/Vsevolod Vinogradov.pdf,"●
Strong theoretical background in linear algebra, statistics and numerical methods
"
1166,source/Vsevolod Vinogradov.pdf,"●
Matlab, SciPy, RandomForest, XGBoost
"
1167,source/Vsevolod Vinogradov.pdf,"●
Deep Learning with TensorFlow, Keras
"
1168,source/Vsevolod Vinogradov.pdf,"●
Extensive data exploration and visualization skills
"
1169,source/Vsevolod Vinogradov.pdf,"Software Engineering:
"
1170,source/Vsevolod Vinogradov.pdf,"●
Modern C++14/17/20 with for Linux and Windows
"
1171,source/Vsevolod Vinogradov.pdf,"●
DevOps: CI/CD, TDD, Jenkins, Gitlab, Doctest, GoogleTest, Bash, CMake
"
1172,source/Vsevolod Vinogradov.pdf,"Computer Hardware
"
1173,source/Vsevolod Vinogradov.pdf,"●
Deep understanding of CPU and GPU architectures, DRAM/SRAM memory controllers, PCIe
and network interfaces
"
1174,source/Vsevolod Vinogradov.pdf,"Work Experience
Alipes A/S Denmark
"
1175,source/Vsevolod Vinogradov.pdf,"Quant Developer,
"
1176,source/Vsevolod Vinogradov.pdf,"●
Accelerate decision trees and DNN models on the FPGAs for financial applications
"
1177,source/Vsevolod Vinogradov.pdf,"●
Throughput accelerations Vitis Flow, Xilinx software oriented OpenCL-like system for
Alveo cards series. For quantized model achieved ~30% performance in prediction/sec
against GPU
"
1178,source/Vsevolod Vinogradov.pdf,"●
Low latency application - full stack system design - HLS kernel development, low latency PCIe
drivers and IP Core, project design in Vivado, Windows/Ubuntu cross-platform library, integration
with existing computational framework. Reduced prediction latency on a 50% in comparison with
GPU CUDA implementation
"
1179,source/Vsevolod Vinogradov.pdf,"Widex A/S, Denmark
"
1180,source/Vsevolod Vinogradov.pdf,"IC Specialist, Digital Design
"
1181,source/Vsevolod Vinogradov.pdf,"● Design and implementation of ultra-low-power DSP blocks for next-generation hearing aids for ASIC
"
1182,source/Vsevolod Vinogradov.pdf,"with a strong focus on space and power usage optimization. Maintain and documentation of the
existing legacy IP cores. Functional, integrations and code coverage testing
"
1183,source/Vsevolod Vinogradov.pdf,"● I helped our team with the transition from SVN to Git and from hardware design language VHDL to
"
1184,source/Vsevolod Vinogradov.pdf,"System Verilog. Prepared training materials and held more than 10 workshops in a small groups for
cross-border teams in Germany and Denmark.
"
1185,source/Vsevolod Vinogradov.pdf,"● Working under FDA and EMEA regulation regarding the safety and reliability requirements for
"
1186,source/Vsevolod Vinogradov.pdf,"medical devices.
"
1187,source/Vsevolod Vinogradov.pdf,"Cobham Satcom (ex. Thrane&Thrane), Denmark
FPGA Development Engineer in Aviator S-team March 2018 — December 2018
"
1188,source/Vsevolod Vinogradov.pdf,"●
Design, support and maintain IP Cores for Zynq SoC in Aviator S Smart Aircraft project
"
1189,source/Vsevolod Vinogradov.pdf,"●
Safety and security requirements writing and implementing, design test cases and specification for
commercial airlines' avionics certification
"
1190,source/Vsevolod Vinogradov.pdf,"Huawei Technologies, Russian Research Center, Moscow
"
1191,source/Vsevolod Vinogradov.pdf,"Algorithm researcher in Nonlinear IRF sector
"
1192,source/Vsevolod Vinogradov.pdf,"Key projects:
"
1193,source/Vsevolod Vinogradov.pdf,"●
Develop in Matlab and implement in the FPGA complex-arithmetic multilayer non-linear adaptive
filtering system (DPD) for radio frequency applications in 4G+ base stations
"
1194,source/Vsevolod Vinogradov.pdf,"●
4x4 MIMO Platform. Developed embedded platform software and Matlab API for communication
over 1G Ethernet
"
1195,source/Vsevolod Vinogradov.pdf,"Awards:
Outstanding Contractor award 2016 of Russian R&D
Center Member of Outstanding Team Award 2017
"
1196,source/Vsevolod Vinogradov.pdf,"Digital Solutions, SPE, LLC Moscow
"
1197,source/Vsevolod Vinogradov.pdf,"FPGA designer
Full-stack electronic design from small IP cores to device production.
Key Projects:
"
1198,source/Vsevolod Vinogradov.pdf,"●
Member of FPGA team on the Deep packet inspection (DPI) project
"
1199,source/Vsevolod Vinogradov.pdf,"●
Develop Error Correction Code for System-on-Chip ASIC
"
1200,source/Vsevolod Vinogradov.pdf,"Research Institute of Precision Instruments, Moscow
"
1201,source/Vsevolod Vinogradov.pdf,"FPGA designer
"
1202,source/Vsevolod Vinogradov.pdf,"-
Research satellite radio channel and develop error correction codes for space applications
"
1203,source/Vsevolod Vinogradov.pdf,"-
Develop FPGA based satellite hardware
"
1204,source/Vsevolod Vinogradov.pdf,"Awards: Concatenation codes research project took the prize “Youth and future of aviation and space
exploration 2012” of Russian Aerospace Agency [ru link]
"
1205,source/Vsevolod Vinogradov.pdf,"Education
"
1206,source/Vsevolod Vinogradov.pdf,"-
M.Sc. in Communications Engineering. National Research University ""MAI""(Aviation Institute)
2006-2012, 5.5 years
"
1207,source/Vsevolod Vinogradov.pdf,"-
Advanced specialization, 2 years, Information technology in electronic design - DSP, ARM,
PCB design, FPGA, microcontrollers, amplifiers. Certificated, with honors
"
1208,source/Vsevolod Vinogradov.pdf,"-
Specialization “Advanced Machine Learning”[link] by NRE Higher School of Economics, 2020
"
1209,source/Vsevolod Vinogradov.pdf,"○ Introduction to Machine learning 100%
○ Introduction to deep learning. 98.2% With Honor
○ Bayesian Methods for Machine Learning With Honor
○ Practical Reinforcement Learning, With Honors
○ Addressing Large Hadron Collider Challenges by Machine Learning
○ How to Win a Data Science Competition
○ Natural Language Processing
○ Deep Learning in Computer vision
"
1210,source/Vsevolod Vinogradov.pdf,"-
Online Courses:
"
1211,source/Vsevolod Vinogradov.pdf,"●
EDX
:Circuits & Electronics: MITx 6.002x MITx, 2012
"
1212,source/Vsevolod Vinogradov.pdf,"●
Coursera: IBM: Databases and SQL for Data Science, 2020
"
1213,source/Vsevolod Vinogradov.pdf,"●
Udemy Advanced C++Programming 2020
"
1214,source/BURAKOV FEDOR.docx,"BURAKOV FEDOR
"
1215,source/BURAKOV FEDOR.docx,"Machine Learning Engineer, NaUKMA (2019-2023)
"
1216,source/BURAKOV FEDOR.docx,"buracov122@gmail.com
+7 907 506-81-00
"
1217,source/BURAKOV FEDOR.docx,"EXPERIENCE
"
1218,source/BURAKOV FEDOR.docx,"Machine Learning Engineer
Camai, Miniso (contract)
"
1219,source/BURAKOV FEDOR.docx," January 2021 – Present
Kyiv, Ukraine
"
1220,source/BURAKOV FEDOR.docx,"• Developed visualization and evaluation tools that lead to bet- 
ter understanding of model’s error
"
1221,source/BURAKOV FEDOR.docx,"• Engineered and implemented several features which lead to 
15% increase in model’s performance
"
1222,source/BURAKOV FEDOR.docx,"Contributed to ML Lab
Fido.ai, NaUKMA
"
1223,source/BURAKOV FEDOR.docx," November 2020 – Present
Kyiv, Ukraine
"
1224,source/BURAKOV FEDOR.docx,"• Implemented LSTM model for ethnicity classification
• Translated SQuAD dataset for Ukrainian BERT training
• Made Linear Regression tutorial for newbees
"
1225,source/BURAKOV FEDOR.docx,"Math & Computer Science tutor
Self-employed
"
1226,source/BURAKOV FEDOR.docx," July 2020 – August 2020
Mariupol, Ukraine
"
1227,source/BURAKOV FEDOR.docx,"Worked as a private teacher on summer holidays
• 100% positive feedback rate
"
1228,source/BURAKOV FEDOR.docx,"SKILLS
"
1229,source/BURAKOV FEDOR.docx,"• Programming languages: Python (confident), Java, C++ 
"
1230,source/BURAKOV FEDOR.docx,"and Haskell (beginner)
"
1231,source/BURAKOV FEDOR.docx,"• Frameworks: PyTorch (prefferred), Keras, Dask
• Libraries: scientific Python kit (numpy, pandas, matplotlib, etc.)
• Tools: Git, Linux, Jupyter&Colab, Streamlit, MLFlow
• Languages: English (Advanced), Russian and Ukrainian (native)
"
1232,source/BURAKOV FEDOR.docx,"COURSES
"
1233,source/BURAKOV FEDOR.docx,"Deeplearning.ai
Coursera
"
1234,source/BURAKOV FEDOR.docx," September 2020 – October 2020
"
1235,source/BURAKOV FEDOR.docx,"• Neural Networks and Deep Learning
• Improving Deep Neural Networks: Hyperparameter tuning, 
Regularization and Optimization
"
1236,source/BURAKOV FEDOR.docx,"• Structuring Machine Learning Projects
• Natural Language Processing with Classification and Vector 
Spaces
"
1237,source/BURAKOV FEDOR.docx,"Atlassian
Coursera
"
1238,source/BURAKOV FEDOR.docx," June 2020
"
1239,source/BURAKOV FEDOR.docx,"• Version Control with Git
"
1240,source/BURAKOV FEDOR.docx,"EDUCATION
"
1241,source/BURAKOV FEDOR.docx,"National University of ""Kyiv-Mohyla Academy""
Computer Science, BSc
"
1242,source/BURAKOV FEDOR.docx," September 2019– July 2023
"
1243,source/BURAKOV FEDOR.docx,"• Cumulative GPA 4.5/5
• GPA of 4.75/5 in math related disciplines
"
1244,source/BURAKOV FEDOR.docx,"PROJECTS
"
1245,source/BURAKOV FEDOR.docx,"OpenCV demos
"
1246,source/BURAKOV FEDOR.docx," August 2020
"
1247,source/BURAKOV FEDOR.docx,"Several OpenCV based pet-projects, includ- ing telegram 
bet that detects faces on pic- ture and replaces them 
with a pre-made face mask
"
1248,source/BURAKOV FEDOR.docx,"Pac-Man inspired game
444 studios
"
1249,source/BURAKOV FEDOR.docx," June 2020
"
1250,source/BURAKOV FEDOR.docx,"Was responsible for complete Ghost-AI part of the game, 
data structures and some of the game logic
"
1251,source/BURAKOV FEDOR.docx,"Siamese neural network
"
1252,source/BURAKOV FEDOR.docx," January 2019
"
1253,source/BURAKOV FEDOR.docx,"Word2Vec inspired project. The idea is to adapt NLP 
methods to music processing and to find piano chords 
that sound best suited together. Released a scientific 
paper on the topic
"
1254,source/BURAKOV FEDOR.docx,"EXTRA-CURRICULAR
"
1255,source/BURAKOV FEDOR.docx,"Ukrainian Junior Science Academy
"
1256,source/BURAKOV FEDOR.docx," March 2019
"
1257,source/BURAKOV FEDOR.docx,"1st place in region
"
1258,source/BURAKOV FEDOR.docx,"Published scientific paper
"
1259,source/BURAKOV FEDOR.docx," October 2018
"
1260,source/BURAKOV FEDOR.docx,"“Machine learning of distributive semantics of musical 
chords in classical piano pieces”
"
1261,source/BURAKOV FEDOR.docx,"Participated in several conferences on 
computer science
"
1262,source/BURAKOV FEDOR.docx," November 2018 – January 2019
"
1263,source/Nikolas Evsiukov.pdf," 
"
1264,source/Nikolas Evsiukov.pdf," 
 
 
EDUCATION 
"
1265,source/Nikolas Evsiukov.pdf,"Nikolas Evsiukov 
"
1266,source/Nikolas Evsiukov.pdf,"+7966321-11-22 | Evsiukkkov@phystech.edu | 
"
1267,source/Nikolas Evsiukov.pdf," 
"
1268,source/Nikolas Evsiukov.pdf," 
"
1269,source/Nikolas Evsiukov.pdf,"Moscow Institute of Physics and Technology 
Moscow, Russia 
"
1270,source/Nikolas Evsiukov.pdf,"Bachelor of Applied Mathematics, Physics and Computer Science 
Sept. 2019 – Aug. 2023 (Expected) 
"
1271,source/Nikolas Evsiukov.pdf,"◦ GPA: 9.2 of 10 
"
1272,source/Nikolas Evsiukov.pdf,"PROJECTS 
• WildHack — strategy game 
"
1273,source/Nikolas Evsiukov.pdf,"May 2020 
"
1274,source/Nikolas Evsiukov.pdf,"◦ Taught myself Qt in a month and collaborated with a classmate to develop the cross-platform game. 
◦ Implemented clear and flexible architecture by learning design patterns. 
◦ Developed game core on C++ and GUI on Qt. 
"
1275,source/Nikolas Evsiukov.pdf,"Built a continuous integration pipeline that automates the process of unit testing, GUI testing, documentation generation, and 
game distribution. 
"
1276,source/Nikolas Evsiukov.pdf,"• Time-management website 
"
1277,source/Nikolas Evsiukov.pdf," 
"
1278,source/Nikolas Evsiukov.pdf," 
"
1279,source/Nikolas Evsiukov.pdf,"◦ Taught myself Django framework in 3 weeks and developed backend, launching with PostgreSQL database. 
◦ Designed frontend using HTML/CSS and Bootstrap library. 
◦ Learned Docker and built a continuous integration pipeline that automates the process of unit testing and deployment. 
"
1280,source/Nikolas Evsiukov.pdf,"• Self-driving logistic system (Bootcamp) 
"
1281,source/Nikolas Evsiukov.pdf,"Apr. 2020 
 
 
 
 
"
1282,source/Nikolas Evsiukov.pdf,"July 2018 
"
1283,source/Nikolas Evsiukov.pdf,"◦ Taught myself Robot Operation System in a week and developed microservices on C++ for robot navigation and communication. 
◦ Exploring documentation, fixed an unexpected problem with microservice-sensor communication appeared just before the deadline. 
"
1284,source/Nikolas Evsiukov.pdf,"• Universal Bluetooth Controller 
"
1285,source/Nikolas Evsiukov.pdf,"May 2018 
"
1286,source/Nikolas Evsiukov.pdf,"◦ Taught myself development for Android in 2 months and developed a mobile app for creating custom Bluetooth controllers. 
◦ Implemented the GUI system for an easy controllers configuration. 
◦ Adapted this app for using as a controlling interface for the robotic goat in local museum. 
"
1287,source/Nikolas Evsiukov.pdf,"ACHIEVEMENTS 
• 1st place in project competition (Analysis of the load structure of the consumer) 
"
1288,source/Nikolas Evsiukov.pdf,"Aug. 2018 – Feb. 2019 
"
1289,source/Nikolas Evsiukov.pdf,"Working with a team, this began as an education project that I drove to completion so our team take 1st place (of 384) in the 
All-Russian project competition ”Energy breakthrough” and get a partnership with the biggest energy transfer company in Russia. 
"
1290,source/Nikolas Evsiukov.pdf,"◦ Designed server’s architecture and implemented it using C++ and PostgreSQL. 
"
1291,source/Nikolas Evsiukov.pdf,"Fixed the problem with a slow transferring a large amount of data for machine learning algorithm by learning WebSocket protocol 
fastly and optimized communication with the server. 
"
1292,source/Nikolas Evsiukov.pdf,"SKILLS 
• Programming languages: C++, Python, C, basic knowledge of Java. 
• Technologies: Git, GitHub Action, Django, Qt, Docker. 
• Knowledge: Algorithms, Data Structures. 
• Other:  Linux, LATEX. 
OTHER 
• Contributed to the faculty website project. 
• Maintained the faculty git repository of LaTeX lecture notes. 
• Took part in the All-Russian educational conference ”Digital lesson” for school students as a speaker. 
"
1293,source/Nikolas Evsiukov.pdf," 
"
1294,source/Nikolas Evsiukov.pdf," 
"
1295,source/Nikolas Evsiukov.pdf," 
"
1296,source/Nikolas Evsiukov.pdf," 
"
1297,source/Nikolas Evsiukov.pdf,"• 
"
1298,source/Nikolas Evsiukov.pdf,"◦ 
"
1299,source/Nikolas Evsiukov.pdf,"◦ 
"
1300,source/Nikolas Evsiukov.pdf,"◦ 
"
1301,source/Резниченко Алексей.pdf,"Резниченко Алексей 
"
1302,source/Резниченко Алексей.pdf,"Екатеринбург |   +7(912)03-000-00 |  
 
"
1303,source/Резниченко Алексей.pdf,"Краткое описание 
"
1304,source/Резниченко Алексей.pdf,"Data Scientist/ML Engineer Имею более года опыта коммерческой работы с глубоким обучением и 
ML. Хочу развиваться в направлении timeseries или ML. 
"
1305,source/Резниченко Алексей.pdf,"Технологический  стек 
"
1306,source/Резниченко Алексей.pdf,"Python: pytorch, pandas, sklearn, xgboost, matplotlib, optuna, plotly, statsmodels, numpy, scipy, etc. 
Вспомогательные инструменты: SQL, pyspark, bash. 
Нейронные сети: CNN, LSTM, GRU, FC, Transformer, etc. 
Математический стек: Теория вероятности, статистика, оптимизация, линейная алгебра и другое. 
"
1307,source/Резниченко Алексей.pdf," 
Опыт работы 
"
1308,source/Резниченко Алексей.pdf,"Data Scientist/ML Engineer 
Июнь 2022 - Июнь 2023 
"
1309,source/Резниченко Алексей.pdf,"AXALIT 
"
1310,source/Резниченко Алексей.pdf,"• Разработал пайплайн на sklearn/pytorch/optuna, классифицирующий химические составы в камне для 
"
1311,source/Резниченко Алексей.pdf,"горнодобывающей промышленности. Модель обрабатывала трехмерный тензор спектральных отсчетов. 
Имплементировал модель в AXALIT. Точность модели составила 0.89 по метрике kappa. Результаты 
позволили привлечь инвестиции в проект. 
"
1312,source/Резниченко Алексей.pdf,"• Разработка и развертывание SMP/XGBoost системы по обнаружению и классификации отходов оптического 
"
1313,source/Резниченко Алексей.pdf,"сепаратора WingsBee. Обучил модель семантической сегментации с метрикой IoU=0.89. Индексы 
соответствующих классов выхода модели SS поступали в модель Xgboost. Cohen Kappa=0.82. Cистема 
получила звание: ""Лучшее распознавание и анализ отходов!""на выставке Иннопром (Главная 
промышленная выставка страны). 
"
1314,source/Резниченко Алексей.pdf,"• Разработал систему по object detection поврежденного тросса на базе YOLOv5. Внедрил квантизированный 
"
1315,source/Резниченко Алексей.pdf,"пайплайн в процессор дрона, с последующим съемом данных с местного жесткого диска и максимизации 
метрик до IoU=0,892. Это привело к снижению расходов заказчика на 12.8%. 
"
1316,source/Резниченко Алексей.pdf,"• Классификация овальнообразных металлов с микроскопа. Организовал детектор контуров на OpenCV-java. 
"
1317,source/Резниченко Алексей.pdf,"Из-за недостатка данных, синтезировал их самостоятельно на Opencv-python. Обучил 3-слойную CNN. 
"
1318,source/Резниченко Алексей.pdf,"• Детекция и расчет псевдодиаметров овальнообразного пресса на базе Grabcut OpenCV. 
"
1319,source/Резниченко Алексей.pdf,"Репетитор по теории связи 
Октябрь 2020 - Апрель 2022 
"
1320,source/Резниченко Алексей.pdf,"Profi 
"
1321,source/Резниченко Алексей.pdf,"• 3 моих учеников сдали экзамен по цифровой обработке сигналов на отлично. 1 ученик сдал курсовую на тему 
"
1322,source/Резниченко Алексей.pdf,"оптимальной линейной фильтрации. 2 Также 1 ученик сдал на отлично диплом на тему “Методы борьбы с 
межсимвольной интерференцией на основе оптимального H-infinity управления.” 
"
1323,source/Резниченко Алексей.pdf,"• 2 ученика сдали курсовые работы на тему линейных моделей в ML на 5. 
"
1324,source/Резниченко Алексей.pdf,"В рамках потенциального стартапа 
Февраль 2023 - Август 2023 
"
1325,source/Резниченко Алексей.pdf," 
"
1326,source/Резниченко Алексей.pdf,"• Разрабатывал модели по прогнозированию движения актива на базе скрытых моделей Маркова, 
"
1327,source/Резниченко Алексей.pdf,"AR/аналогов AR, deep learning и classic ML. Но как Джим Саймонс пока не разбогател:) 
"
1328,source/Резниченко Алексей.pdf,"• Исследовал методологию mean reversion trading на базе процессов Орнштейна-Уленбека, AR(1) процессов, 
"
1329,source/Резниченко Алексей.pdf,"Калмановской фильтрации и OLS 
"
1330,source/Резниченко Алексей.pdf,"Научная  деятельность 
"
1331,source/Резниченко Алексей.pdf,"Malygin, A. Loginovskikh and G. Reznichenko, ""The Use of Spread Spectrum Signals to Increase the Noise 
Immunity of Optical Communication Systems Based on the Effect of LED Reversibility"", 2019 International 
Multi-Conference on Engineering, Computer and Information Sciences (SIBIRCON), Novosibirsk, Russia, 2019, 
pp. 0069-0072, doi: 10.1109/SIBIRCON48586.2019.8958423 
"
1332,source/Резниченко Алексей.pdf,"Образование 
"
1333,source/Резниченко Алексей.pdf,"Уральский Федеральный Университет 
ИРИТ - РТФ. Инфокоммуникационные технологии и системы связи 
Сентябрь 2016 - Май 2020 
"
1334,source/EGOR BALIUK.pdf,"EGOR BALIUK 
"
1335,source/EGOR BALIUK.pdf,"  baliuk.eeee@gmail.com 
  
baliuuuuu 
   
7 977 111-06-39 
"
1336,source/EGOR BALIUK.pdf," 
EDUCATION 
"
1337,source/EGOR BALIUK.pdf,"Higher School of Economics, Moscow, Russia 
2019 – 2023 
"
1338,source/EGOR BALIUK.pdf,"Bachelor of Computer Science, Applied Mathematics and Information Science 
"
1339,source/EGOR BALIUK.pdf," 
EXPERIENCE 
"
1340,source/EGOR BALIUK.pdf,"Chatex (a peer-to-peer cryptocurrency marketplace) 
Feb 2020 – Present 
"
1341,source/EGOR BALIUK.pdf,"As a golang developer: 
"
1342,source/EGOR BALIUK.pdf,"• Decreased number of questions and requests from the support team to the developers by 95% by developing 
"
1343,source/EGOR BALIUK.pdf,"an administration tool. 
"
1344,source/EGOR BALIUK.pdf,"• Created a RabbitMQ consumer that receives data from various parts of the product, enriches, groups 
"
1345,source/EGOR BALIUK.pdf,"events in batches, and sends to several resources (Google Analytics, etc.) for further analysis. 
"
1346,source/EGOR BALIUK.pdf,"• Introduced and developed a mechanism of A/B test integration. Thanks to this development, we have 
"
1347,source/EGOR BALIUK.pdf,"tested new hypotheses and increased the conversion of successful registration by 8%. 
"
1348,source/EGOR BALIUK.pdf,"• Wrote a specification for our public API. Added and implemented logic for new endpoints and maintained 
"
1349,source/EGOR BALIUK.pdf,"the old ones. 
"
1350,source/EGOR BALIUK.pdf,"• Reduced the 95 percentile response time of several API methods by 2.5 times by optimizing the code and 
"
1351,source/EGOR BALIUK.pdf,"removing redundant remote procedure calls. 
"
1352,source/EGOR BALIUK.pdf," 
PERSONAL PROJECTS 
"
1353,source/EGOR BALIUK.pdf,"BDayTracker [Go, Kotlin] 
A Telegram bot that reminds you about your friends’ birthdays. Users can add new friends manually or ask 
the bot to parse the information from VK — the largest CIS-oriented social network. At first, I implemented 
it in Kotlin, but then rewrote it in Go. On average, the bot sends reminders to nearly 90 users every day. 
"
1354,source/EGOR BALIUK.pdf,"DocumentConverter [Python] 
It’s a simple web application that can convert documents from one format to another (e.g., DOCX to PDF). 
I used Flask (Python framework) to develop it. My fellow students use it regularly for our studies. 
"
1355,source/EGOR BALIUK.pdf," 
SKILLS 
"
1356,source/EGOR BALIUK.pdf,"Languages 
Go (main language), C++, Python 
"
1357,source/EGOR BALIUK.pdf,"Other 
PostgreSQL, RabbitMQ, Prometheus, k8s, Docker, gRPC, SQL, Bash 
"
1358,source/EGOR BALIUK.pdf," 
AWARDS 
"
1359,source/EGOR BALIUK.pdf,"Yandex Championship 
Prizewinner 
"
1360,source/EGOR BALIUK.pdf,"The competition for backend developers. 
2019 
"
1361,source/EGOR BALIUK.pdf,"Belarusian National Olympiad in Informatics 
Silver medal 
"
1362,source/EGOR BALIUK.pdf,"The largest and most the important competition for Belarusian high school students. 
2018, 2019 
"
1363,source/EGOR BALIUK.pdf,"Russian Open Olympiad in Informatics 
Silver medal 
"
1364,source/EGOR BALIUK.pdf,"Exciting and one of the most valuable olympiad for Russian high school students. 
2019 
"
1365,source/EGOR BALIUK.pdf,"International Zhautykov Olympiad 
Bronze medal 
"
1366,source/EGOR BALIUK.pdf,"One of the most prestigious educational events held in Kazakhstan. 
2019 
"
1367,source/EGOR BALIUK.pdf,"Hashcode, Google Code Jam, Kotlin Heroes 
Participant 
2018 - 2020 
"
1368,source/Petr Aleksandrov.docx,"Email:
wadeeeec@gmail.com 
"
1369,source/Petr Aleksandrov.docx,"Mobile: +7-921-754-00-00
Saint-Petersburg, Russia
Visa sponsorship required
"
1370,source/Petr Aleksandrov.docx,"An enthusiastic and dedicated software developer with over 7+ years experience. Extremely organized with the ability to work 
both independently of own initiative or as part of a successful team, demonstrating the motivation and multi-tasking abilities 
required to meet demanding deadlines while maintaining the highest of standards.
"
1371,source/Petr Aleksandrov.docx,"Experience
"
1372,source/Petr Aleksandrov.docx,"Combined Ratio Solutions
Hartford, United States
"
1373,source/Petr Aleksandrov.docx,"Senior Software Developer
oil 2020 - Present
"
1374,source/Petr Aleksandrov.docx,"• Added functionality for sending mail from internal documents to the project and created an additional service for 
processing emails.
"
1375,source/Petr Aleksandrov.docx,"Key achievements: C# ASPNET, MVC, WCF, REST, Html, CSS, JavaScript, React.
"
1376,source/Petr Aleksandrov.docx,"SetlCity Company
saint-Petersburg, Russia
"
1377,source/Petr Aleksandrov.docx,"Software Developer
June 2078 - Oct 2020
"
1378,source/Petr Aleksandrov.docx,"• Developed a service for processing incoming phone calls which determined whether the number belonged to the region.
"
1379,source/Petr Aleksandrov.docx,"• Developed Android applications, which eventually made it easier to control the construction site.
"
1380,source/Petr Aleksandrov.docx,"• Developed a web application that allows you to optimize and group access to internal documents.
"
1381,source/Petr Aleksandrov.docx,"Key achievements: C# ASP.NET, .Net Core, Android.Xamarin, WPF, WCF, REST, Html, CSS, JavaScript, React, Redux
"
1382,source/Petr Aleksandrov.docx,"BFT Company
saint-Petersburg, Russia
"
1383,source/Petr Aleksandrov.docx,"Software Developer
Sept 2015 - June 2078
"
1384,source/Petr Aleksandrov.docx,"-
Developed more than 50 report templates using Eclipse BIRT, allowing, as a result, to make fast, informative reports for a 
large amount of information.
"
1385,source/Petr Aleksandrov.docx,"• Developed Helpers for the report generation module, which reduced the development time of each report by more than 
three times.
"
1386,source/Petr Aleksandrov.docx,"Key achievements: Java, C# ASP.NET, .NET Core, MVC, PostgreSQL
"
1387,source/Petr Aleksandrov.docx,"Innovation Systems Laboratory
saint-Petersburg, Russia
"
1388,source/Petr Aleksandrov.docx,"Software Developer
Sept 20J4 - Sept 20 5
"
1389,source/Petr Aleksandrov.docx,"- Developed a logging system for the desktop application, which notified developers about the presence of errors.
"
1390,source/Petr Aleksandrov.docx,"- Developed a system for searching for items on targeted state-owned online auction sites, which reduced the development 
time of each site from 4 days to 1.
"
1391,source/Petr Aleksandrov.docx,"Key achievements: C# WinForms and special crypto-keys, NUnit/TDD
"
1392,source/Petr Aleksandrov.docx,"Education
"
1393,source/Petr Aleksandrov.docx,"Herzen University, Saint-Petersburg
Bachelor of Science in Economics
"
1394,source/Petr Aleksandrov.docx,"Saint-Petersburg, Russia
"
1395,source/Petr Aleksandrov.docx,"Jan 2012 - Jule 2019
"
1396,source/Petr Aleksandrov.docx,"Personal projects
"
1397,source/Petr Aleksandrov.docx,"Naeded
Demo service that allows you to find employers to solve everyday and business issues.
"
1398,source/Petr Aleksandrov.docx,"WI/Vw.naeded.com
Requisites for testing: login: setter@set.set
"
1399,source/Petr Aleksandrov.docx,"password: drakavlifte
"
1400,source/Denis Rakitnykh.pdf,"Denis
Rakitnykh
Software Engineer
"
1401,source/Denis Rakitnykh.pdf,"LinkedIn
"
1402,source/Denis Rakitnykh.pdf,"iaaaitnykh@gmail.com
"
1403,source/Denis Rakitnykh.pdf,"+7 960 000 364 64
"
1404,source/Denis Rakitnykh.pdf,"Moscow,
"
1405,source/Denis Rakitnykh.pdf,"Russia Visa sponsorship
"
1406,source/Denis Rakitnykh.pdf,"required
"
1407,source/Denis Rakitnykh.pdf,"A highly-skilled software engineer with 9+ years of experience in SDLC/ Programming, Software Architecture and
Team Management. A result-oriented person with effective clean coding practices, including design, unit testing,
and peer code-reviews. Strong ability to quickly learn and utilize new technologies.
"
1408,source/Denis Rakitnykh.pdf,"EXPERIENCE
"
1409,source/Denis Rakitnykh.pdf,"Project: Blockchain core. Smart contract programming language.
"
1410,source/Denis Rakitnykh.pdf,"●
Developed a new parser and compiler of the smart contract language.
"
1411,source/Denis Rakitnykh.pdf,"●
Created specification of the smart contract web IDE improvements, implemented a backend module that
provides syntax and compiler data and led its integration.
"
1412,source/Denis Rakitnykh.pdf,"●
Profiled and optimized the code. The improvement increased the speed of the blockchain
importing process by 46% (from 72 to 39 hours).
"
1413,source/Denis Rakitnykh.pdf,"●
Analyzed users' comments, made a requirement list and optimized the language code according to it. The
improvement decreased the smart contract system usage cost and its maintenance by 30%.
"
1414,source/Denis Rakitnykh.pdf,"●
Leading a process of release planning which includes creation and gathering ideas, analytics, specification
development and task creation.
"
1415,source/Denis Rakitnykh.pdf,"●
Initiated optimization of the release planning process and created a set of measures to avoid deadline
problems.
"
1416,source/Denis Rakitnykh.pdf,"●
Leading a team of 4 software engineers.
"
1417,source/Denis Rakitnykh.pdf,"Project: Online travel agency (tour and lodging search and reservations).
"
1418,source/Denis Rakitnykh.pdf,"●
Designed a distributed system for search and aggregation of tours, which replaced the previous monolithic
application. Implemented main modules of the system. It allowed the team to manage the app instance
amount in a more flexible manner, according to load, and saved around 15% of the server rent budget.
"
1419,source/Denis Rakitnykh.pdf,"●
Developed a subsystem for aggregation of peculiar errors and statistics of backend performance and their
visualization.
"
1420,source/Denis Rakitnykh.pdf,"●
Developed automated hotel names-mapping and photo-tagging modules using machine learning
tools: CatBoost, TensorFlow. Reduced handwork for content managers.
"
1421,source/Denis Rakitnykh.pdf,"●
Led a team of 3 software engineers.
"
1422,source/Denis Rakitnykh.pdf,"●
Involved in all full stack development processes on 4 different projects.
"
1423,source/Denis Rakitnykh.pdf,"●
Developed an error prediction system (Healthcare - insurance reports) which included: data preparation,
cycles of prototyping and result analysis.
"
1424,source/Denis Rakitnykh.pdf,"●
Taught myself Scala and rewrote two core modules of an outdated Java project. This revealed the
advantages of the new language to the team and led to rewriting the whole project.
"
1425,source/Denis Rakitnykh.pdf,"TECHNICAL SKILLS
"
1426,source/Denis Rakitnykh.pdf,"●
Java, Scala, Python, JavaScript, R
"
1427,source/Denis Rakitnykh.pdf,"●
Spring, Hibernate, Kafka, Jenkins, AWS, Nginx, ElasticSearch, Docker, Kubernetes
"
1428,source/Denis Rakitnykh.pdf,"EDUCATION
"
1429,source/Denis Rakitnykh.pdf,"Tver State University (Tver, Russia)
"
1430,source/Denis Rakitnykh.pdf,"●
Master's degree: Fundamental Informatics and Information Technologies in July 2013
"
1431,source/Denis Rakitnykh.pdf,"●
Bachelor's degree: Information Technology in July 2011
"
1432,source/SEMEN BOKUN.pdf,"• 
"
1433,source/SEMEN BOKUN.pdf,"Budniak Ivan 
Software Engineer with significant competitive programming experience 
 
"
1434,source/SEMEN BOKUN.pdf,"Email: budniakkkk@yandex.by  
Mobile: +375 (44) 543-11-11 
 
"
1435,source/SEMEN BOKUN.pdf," 
"
1436,source/SEMEN BOKUN.pdf,"EDUCATION 
"
1437,source/SEMEN BOKUN.pdf,"Belarusian State University in Informatics and Radioelectronics 
Minsk, Belarus 
"
1438,source/SEMEN BOKUN.pdf,"Bachelor’s degree in Computer Science 
September 2017 — Expected 2021 
"
1439,source/SEMEN BOKUN.pdf,"Yandex School of Data Analysis 
Moscow, Russia 
"
1440,source/SEMEN BOKUN.pdf,"Master’s level program, Machine Learning development track 
September 2019 — Expected 2021 
"
1441,source/SEMEN BOKUN.pdf,"Relevant courses: Probability and Statistics, Machine Learning, Computer Vision, Natural Language Processing, Deep 
Learning, Reinforcement Learning, Python, C++, GoLang, Algorithms and Data Structures, BigData, Parallel and 
Distributed Computations 
"
1442,source/SEMEN BOKUN.pdf," 
"
1443,source/SEMEN BOKUN.pdf,"WORK   EXPERIENCE 
"
1444,source/SEMEN BOKUN.pdf,"Deltix (Bought by EPAM Systems at january 2020) 
Minsk, Belarus 
"
1445,source/SEMEN BOKUN.pdf,"Software Engineer 
August 2018 – Present 
"
1446,source/SEMEN BOKUN.pdf,"Developed a system for integration with various top crypto-custodies for crypto-trading platform used by hundreds of 
thousands. 
"
1447,source/SEMEN BOKUN.pdf,"• Created a service for secure interacting with any Ethereum tokens. 
• Fixed major issues of crypto-trading platform high loaded module. 
• Built a tool for crypto-trading platform stress-testing. 
"
1448,source/SEMEN BOKUN.pdf,"Mogilev State Regional Institute for Education Development 
Mogilev, Belarus 
"
1449,source/SEMEN BOKUN.pdf,"Competitive Programming Mentor 
Febrary, March 2018&2019 
"
1450,source/SEMEN BOKUN.pdf,"• Preparing students of Mogilev region for the National Olympiad in Informatics. Many of them were awarded. 
"
1451,source/SEMEN BOKUN.pdf,"PROJECTS 
"
1452,source/SEMEN BOKUN.pdf,"JPEG decoder: Baseline sequential mode of JPEG decoder, written in C++ using OOP and various algorithms such as 
Huffman decoding. 
Ukrainian-Russian translator: Written in Python with Sklearn library, using embedding space mapping with optimal 
transformation derived from SVD decomposition. Used public dataset with 1M word pairs. 
LightBulbChan: Student assistant in the form of a multifunctional telegram bot. Uses various APIs to help students 
prepare for classes. 
"
1453,source/SEMEN BOKUN.pdf,"AWARDS 
"
1454,source/SEMEN BOKUN.pdf,"ACM ICPC, NEERC ICPC 
Saint-Petersburg, Russia — December, 2017 
"
1455,source/SEMEN BOKUN.pdf,"• Competition in sports programming among teams of universities of the North Eastern Europe, Western Subregion 
• III degree award (2017, 81/244 place) 
"
1456,source/SEMEN BOKUN.pdf,"ACM ICPC, Belarus and Baltics Regional Contest 
Minsk, Belarus — October, 2017&2018 
"
1457,source/SEMEN BOKUN.pdf,"• Competition in sports programming among teams of universities of the North Eastern Europe, Western Subregion 
• III degree award (2019, 18/57 place) 
• II degree award (2017, 8/57 place) 
"
1458,source/SEMEN BOKUN.pdf,"Individual Olympiad in Informatics and Programming 
Saint-Petersburg, Russia — March 2017 
"
1459,source/SEMEN BOKUN.pdf,"• Programming competition among schoolchildren of Belarus, Russia and Kazakhstan 
• I degree award (10/180 place) 
"
1460,source/SEMEN BOKUN.pdf,"Belarusian National Olympiad in Informatics 
Belarus — March 2015&2016&2017 
"
1461,source/SEMEN BOKUN.pdf,"• II degree award (2017, 12/123 place) 
• II degree award (2016, 12/120 place) 
• III degree award (2015, 39/118 place) 
"
1462,source/SEMEN BOKUN.pdf,"Top 3% on Codeforces — ednotdead 
Top 2% on Hackerrank — Ed_Os 
"
1463,source/SEMEN BOKUN.pdf,"• 
"
1464,source/SEMEN BOKUN.pdf,"• 
"
1465,source/SEMEN BOKUN.pdf,"• 
"
1466,source/SEMEN BOKUN.pdf,"• 
"
1467,source/Artur Yapparov.docx,"CONTACT
"
1468,source/Artur Yapparov.docx,"+61400037444
"
1469,source/Artur Yapparov.docx,"araaaufa88@gmail.com 
"
1470,source/Artur Yapparov.docx,"https://au.linkedin.com/in/araaayapparov
"
1471,source/Artur Yapparov.docx,"PROFILE
"
1472,source/Artur Yapparov.docx,"Software engineer with master’s in 
information security and 10 years of 
experience specializing in front end. 
Seeking to leverage my technical and soft 
skills to become the next software 
engineer at ByteDance.
"
1473,source/Artur Yapparov.docx,"EDUCATION
"
1474,source/Artur Yapparov.docx,"2005-2010
Information security, Master's 
degree,
Ufa State Aviation Technical University
"
1475,source/Artur Yapparov.docx,"SKILLS
"
1476,source/Artur Yapparov.docx,"FRONT END DEVELOPMENT
Javascript, Typescript, React,
Angular
"
1477,source/Artur Yapparov.docx,"BACK END DEVELOPMENT
PHP, Java, Node.js
"
1478,source/Artur Yapparov.docx,"MOBILE DEVELOPMENT
React Native, Cordova
"
1479,source/Artur Yapparov.docx,"DATABASES
MySQL, Postgres, MongoDB,
CouchDB, InfluxDB
"
1480,source/Artur Yapparov.docx,"FEATURE LEADING
"
1481,source/Artur Yapparov.docx,"EXPERIENCE
"
1482,source/Artur Yapparov.docx,"SENIOR SOFTWARE ENGINEER
"
1483,source/Artur Yapparov.docx,"Atlassian, Australia | jun 2017 - present
"
1484,source/Artur Yapparov.docx,"Writing tons of javascript code. 
Refactoring legacy, adding new features.
Monitoring our team’s SLAs
Feature Leading. Led multiple projects from 
planning to delivery. Drove key decisions, 
such as choosing tech stack and building an 
API. Facilitated deployment and managed 
expectations of customers and stakeholders.
Mitigated potential negative impact on 
customers by adding metrics and SLAs.
Mentoring junior developers.
Gave several public talks. Topics: JS fundamentals
- event loop/call stack; Accessibility; How 
to handle very long recursions.
"
1485,source/Artur Yapparov.docx,"SOFTWARE ENGINEER
"
1486,source/Artur Yapparov.docx,"Philips, Netherlands|nov 2016 - may 2017
"
1487,source/Artur Yapparov.docx,"As part of PPF (proto-pilot factory) team, 
I was developing prototype mobile apps 
using React Native.
"
1488,source/Artur Yapparov.docx,"TEACHER
"
1489,source/Artur Yapparov.docx,"Belarusian State University of Informatics 
and Radioelectronics, Belarus|sep 2015 - jun 
2016
"
1490,source/Artur Yapparov.docx,"Initially started as a lab assistant, I had to 
replace the teacher and led one subject for 
two semesters. I conducted lectures, lab 
sessions and exam in the end of second 
semester.
"
1491,source/Artur Yapparov.docx,"FULL STACK DEVELOPER
"
1492,source/Artur Yapparov.docx,"HQSoftware, Belarus|nov 2014 - oct 2016
"
1493,source/Artur Yapparov.docx,"Developed all sort of apps 
(web/mobile/desktop) using various languages 
(Javascript, PHP), libraries and frameworks 
(React, React Native, Angular, Ember, 
Symphony, Laravel, Electron) and databases 
(MySQL, Postgres, MongoDB, CouchDB, 
InfluxDB)
Communicated with customers and together 
with them planned our work
Managed the team work and collaboration
"
1494,source/Artur Yapparov.docx,"PHP  DEVELOPER
"
1495,source/Artur Yapparov.docx,"B2B-Center, Belarus|feb 2014 - oct 2014
"
1496,source/Artur Yapparov.docx,"As a PHP developer during my time at B2B-
Center I was developing trade platform used 
by large businesses in Russia.
"
1497,source/Artur Yapparov.docx,"WEB DEVELOPER
"
1498,source/Artur Yapparov.docx,"Prestigia.com, 
Morocco|sep 2011 - nov 2013
"
1499,source/Artur Yapparov.docx,"Prestigia is a small online travel agency, where 
I worked on both back end (PHP, MySQL) 
and front end (Javascript, jQuery).
"
1500,source/Artur Yapparov.docx,"ARTUR YAPPAROV
"
1501,source/Artur Yapparov.docx,"SOFTWARE ENGINEER
"
1502,source/Alan Iusupov .pdf,"Alan Iusupov  
iOS Developer 
"
1503,source/Alan Iusupov .pdf,"+996 (505) 21-11-11 |iusupov.aaaaai@gmail.com  
"
1504,source/Alan Iusupov .pdf," 
WORK EXPERIENCE 
"
1505,source/Alan Iusupov .pdf,"OAO Optima Bank iOS Developer Nov 2022 – Present ● Successfully produced 5 releases under my guidance.. 
● Developed over 8 complex functionalities that facilitated the use of repetitive screens and brought over 1 million 
"
1506,source/Alan Iusupov .pdf,"KGS to the company, and partnered with over 35 companies. 
"
1507,source/Alan Iusupov .pdf,"● Optimization: Improvement of Git and TestFlight workflows. Experienced in implementing new targeting 
"
1508,source/Alan Iusupov .pdf,"strategies for developers and optimizing app build times. Successfully improved collaboration, distribution, and 
testing processes, significantly reducing app build time from 5-10 minutes to 1-3 minutes 
"
1509,source/Alan Iusupov .pdf,"Geeks Bishkek, Kyrgyzstan iOS Trainer Dec 2022 – Aug 2023 ● Trained over 100 students in iOS development ● 
In the middle of a full course of study, 5% got a job/internship. 
"
1510,source/Alan Iusupov .pdf," 
"
1511,source/Alan Iusupov .pdf,"Mustard Inc. Bishkek, Kyrgyzstan iOS Developer May 2021 – Nov 2022 ● Developed error handling solutions for 
server applications, providing efficient and consistent error and exception handling using ""Strategy"" design pattern. 
● GIF optimization has reduced memory consumption by 40% for smooth playback and minimal resource usage. 
● Refactored the profile page, which increased its use by 10% more often, made it smoother and more pleasant to 
use. 
"
1512,source/Alan Iusupov .pdf," 
EDUCATION 
"
1513,source/Alan Iusupov .pdf,"International Alatoo University Bishkek, Kyrgyzstan Bachelor of Computer Science June 2023 Relevant 
Coursework: Software Engineering; Operating Systems; Algorithms; 
 
 
"
1514,source/Alan Iusupov .pdf,"SKILLS 
"
1515,source/Alan Iusupov .pdf,"Technologies: Swift, UIKit, SwiftUI, Swift Concurrency, Combine, SPM, Cocoapods, KMM 
"
1516,source/Alan Iusupov .pdf,"Architectures: MVx, VIPER 
"
1517,source/Владимир Никонов.docx,"visit: https://products.aspose.com/words/
"
1518,source/Владимир Никонов.docx,"Владимир Никонов
"
1519,source/Владимир Никонов.docx,"nikono67833@gmail.com | linkedin.com/in/aaaanii-nikonov | telegram: taaaaab33 | github: taaaaab33
"
1520,source/Владимир Никонов.docx,"￿ ￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿ Python ￿ ￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿ ￿ ￿￿￿￿￿ ￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿ ￿ Django, ￿￿￿￿￿￿￿￿￿￿￿￿￿￿￿￿￿￿ ￿￿ ￿￿￿￿￿￿￿￿￿￿￿￿￿￿￿ 
"
1521,source/Владимир Никонов.docx,"￿￿￿￿￿￿￿￿￿￿￿. ￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿, ￿￿￿￿￿ ￿￿￿ Django, Redis, Postgres ￿ Docker, ￿ ￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿.
"
1522,source/Владимир Никонов.docx,"Опыт
"
1523,source/Владимир Никонов.docx,"Django Разработчик
￿￿￿ 2022 – ￿￿￿￿￿￿
"
1524,source/Владимир Никонов.docx,"ТРАЕКТО, ООО
Удалённо
"
1525,source/Владимир Никонов.docx,"• ￿￿￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿ (Learning Management System) ￿ ￿￿￿￿
"
1526,source/Владимир Никонов.docx,"• ￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿ API ￿ ￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿￿￿￿￿￿ BigBlueButton, ￿￿￿ ￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿ 13,3% ￿￿￿￿￿￿￿￿￿￿
"
1527,source/Владимир Никонов.docx,"• ￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿ ￿ ￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿￿ API ￿ ￿￿￿￿￿￿￿ drf-spectacular, ￿￿￿ ￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿￿ ￿￿ 70%
"
1528,source/Владимир Никонов.docx,"• ￿￿￿￿￿￿￿￿ ￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿ ￿￿ 35%, ￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿ ￿ ￿￿￿￿￿ Sentry
"
1529,source/Владимир Никонов.docx,"• ￿￿￿￿ CI/CD ￿￿￿￿￿￿￿ c ￿￿￿￿￿￿￿ GitHub Actions ￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿￿￿, ￿￿￿￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿￿ ￿ ￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿, ￿￿￿ 
"
1530,source/Владимир Никонов.docx,"￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿ ￿￿ ￿￿￿￿￿￿￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿ ￿ ￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿ 10-15 ￿￿￿￿￿ ￿￿￿￿￿￿ ￿￿￿￿￿￿ ￿￿￿￿￿ 
"
1531,source/Владимир Никонов.docx,"￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿
"
1532,source/Владимир Никонов.docx,"Проекты
"
1533,source/Владимир Никонов.docx,"Система Управления Обучением | Python, Django, PostgreSQL, Docker, Celery, Redis
￿￿￿ 2022 – ￿￿￿￿￿￿
"
1534,source/Владимир Никонов.docx,"• ￿￿￿￿￿￿ ￿￿￿￿￿￿￿ ￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿, ￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿ ￿￿￿￿￿￿ ￿ ￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿￿￿ ￿￿￿ ￿￿￿￿￿ ￿￿￿ 10 000 ￿￿￿￿￿￿￿￿￿￿￿ ￿ 
"
1535,source/Владимир Никонов.docx,"￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿ (LMS).
"
1536,source/Владимир Никонов.docx,"• ￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿ SCORM (Content Sharing Object Reference Model) ￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿￿￿s
"
1537,source/Владимир Никонов.docx,"• ￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿ ￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿￿￿ ￿￿ Active Directory ￿ ￿￿￿￿￿￿ ￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿￿￿￿, ￿￿￿￿￿ ￿￿￿ iSpring, 
"
1538,source/Владимир Никонов.docx,"￿￿￿ ￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿ ￿￿￿￿￿￿ ￿￿￿￿￿￿ ￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿￿￿ LMS ￿￿ 2 ￿￿￿￿
"
1539,source/Владимир Никонов.docx,"Образование
"
1540,source/Владимир Никонов.docx,"Авиационный техникум
￿￿￿￿￿, ￿￿￿￿￿￿
"
1541,source/Владимир Никонов.docx,"Программист
Сен 2019 – Июль 2023
"
1542,source/Владимир Никонов.docx,"Языки
"
1543,source/Владимир Никонов.docx,"• ￿￿￿￿￿￿￿￿￿￿, B2
"
1544,source/Владимир Никонов.docx,"• ￿￿￿￿￿￿￿, ￿￿￿￿￿￿
"
1545,source/Владимир Никонов.docx,"visit: https://products.aspose.com/words/
"
1546,source/Владимир Никонов.docx,"Технические навыки
"
1547,source/Владимир Никонов.docx,"Языки: Python, SQL (Postgres)
"
1548,source/Владимир Никонов.docx,"Фреймворки: Django, Django Rest Franework, Django Channels
"
1549,source/Владимир Никонов.docx,"Инструменты для разработки: Docker, GitHub, PyCharm, Postman, Linux, Poetry, Nginx
"
1550,source/Владимир Никонов.docx,"Библиотеки: PyTest, bs4, drf-spectacular, requests, ldap3, Sentry, celery, redis
"
1551,source/Mitya Brezovsky.pdf," 
"
1552,source/Mitya Brezovsky.pdf," 
"
1553,source/Mitya Brezovsky.pdf,"Mitya Brezovsky 
"
1554,source/Mitya Brezovsky.pdf," 
"
1555,source/Mitya Brezovsky.pdf,"Java Software Developer 
"
1556,source/Mitya Brezovsky.pdf," 
"
1557,source/Mitya Brezovsky.pdf," 
"
1558,source/Mitya Brezovsky.pdf,"Summary 
"
1559,source/Mitya Brezovsky.pdf," 
"
1560,source/Mitya Brezovsky.pdf,"• 
Experience in commercial software development - 1 year as Java developer. 
"
1561,source/Mitya Brezovsky.pdf,"• 
Have 4 months of remote work experience. 
"
1562,source/Mitya Brezovsky.pdf,"• 
Practical work with Python, Bash and SQL. 
"
1563,source/Mitya Brezovsky.pdf,"• 
Good work in team. Easy to learn. Admirable analytical skills. 
"
1564,source/Mitya Brezovsky.pdf," 
"
1565,source/Mitya Brezovsky.pdf,"Skills 
"
1566,source/Mitya Brezovsky.pdf," 
"
1567,source/Mitya Brezovsky.pdf,"• 
Java: Spring Framework (Boot, MVC, Data), Gradle, Maven, Hibernate, JUnit. 
"
1568,source/Mitya Brezovsky.pdf,"• 
JavaScript: React, npm. 
"
1569,source/Mitya Brezovsky.pdf,"• 
Databases: SQL (SQLite, PostgreSQL, MS SQL Server). 
"
1570,source/Mitya Brezovsky.pdf,"• 
Other skills: Linux (primary OS), Git, AWS, HTML, CSS, Bootstrap, Jenkins, Bash, 
Python. 
"
1571,source/Mitya Brezovsky.pdf," 
"
1572,source/Mitya Brezovsky.pdf,"Employment 
"
1573,source/Mitya Brezovsky.pdf," 
"
1574,source/Mitya Brezovsky.pdf,"• 
STiM (Nov 2019 - Present) 
◦ Wialon Analytics – analytical system for cars sensors monitoring: 
"
1575,source/Mitya Brezovsky.pdf,"▪ Designed and implemented the system (both front and backend) from scratch. 
"
1576,source/Mitya Brezovsky.pdf,"Technologies: Java, JavaScript, React, SQLite, MS SQL Server. 
"
1577,source/Mitya Brezovsky.pdf," 
"
1578,source/Mitya Brezovsky.pdf,"Awards and Initiatives 
"
1579,source/Mitya Brezovsky.pdf," 
"
1580,source/Mitya Brezovsky.pdf,"• 
Hackathon""#BRESTHACK2018""- 3rd place as a team member of 2 people: 
◦ Developed product from scratch to MVP in a limited time (only 48h). 
◦ Prepared and presented our product (experience with public speaking). 
"
1581,source/Mitya Brezovsky.pdf,"• 
Brest Python Meetup (Feb 29, 2019) - co-organizer and speaker. 
"
1582,source/Mitya Brezovsky.pdf," 
"
1583,source/Mitya Brezovsky.pdf,"Languages 
"
1584,source/Mitya Brezovsky.pdf," 
"
1585,source/Mitya Brezovsky.pdf,"• 
English – B1 (Intermediate). 
"
1586,source/Mitya Brezovsky.pdf,"• 
Russian – Native. 
"
1587,source/Mitya Brezovsky.pdf," 
"
1588,source/Mitya Brezovsky.pdf,"Education 
"
1589,source/Mitya Brezovsky.pdf," 
"
1590,source/Mitya Brezovsky.pdf,"• 
Brest State Polytechnic College - Mechanical Technical (2016 – 2020). 
"
1591,source/Kirill Radezky.docx,"Kirill Radezky
Software 
Engineer
"
1592,source/Kirill Radezky.docx,"daniaaaadezky@gmail.com
+370003501501
Visa sponsorship required Minsk, 
Belarus
GitHub LinkedIn
"
1593,source/Kirill Radezky.docx,"Technical skills
"
1594,source/Kirill Radezky.docx,"JS, TS, node.js, mongo, graphql, react.js, docker, gatsby, redux saga, OAuth 2.0, GitLab 
CI, GitHub actions, agile, various git workflows, design patterns
"
1595,source/Kirill Radezky.docx,"Work experience
"
1596,source/Kirill Radezky.docx,"Oveo (January 2021 - present) | start-up
"
1597,source/Kirill Radezky.docx,"BeatHead (October 2019 - November 2020) | product company | Back-end engineer
●
Saved dozens of hours of fellow workers' time by implementing an application to 
create new accounts in many tools like AppsFlyer, Firebase, etc.
"
1598,source/Kirill Radezky.docx,"●
Implemented generation of http clients from swagger schema automatically 
connecting 4 microservices together
"
1599,source/Kirill Radezky.docx,"●
Implemented a music analyzing tool showing BPM and onsets in audio
"
1600,source/Kirill Radezky.docx,"Expert Soft (September 2017-January 2021) | outsource company 
Projects
Credit rating website (August 2020-January 2021) | Leading front-end engineer
●
Implemented the micro frontend project 2 months faster than it was expected by 
leading and teaching a team of two back-end developers
"
1601,source/Kirill Radezky.docx,"Health and beauty websites group (March 2019-August 2020) | full-stack engineer
●
Implemented a user tracking and personalization module for all websites of the group and 
reduced by 8 times the time of subsequent changes
"
1602,source/Kirill Radezky.docx,"Life science e-commerce website (September 2018-March 2019) | front-end engineer
●
Redesigned the whole web-site
"
1603,source/Kirill Radezky.docx,"●
Set up an optimizing front-end resources build system, thereby accelerated the page 
loading time by 20%
"
1604,source/Kirill Radezky.docx,"E-commerce drugstore website (September 2017-September 2018) | full-stack engineer
●
Taught myself React.js in 1 month and eliminated the need for a dedicated front-end 
developer
"
1605,source/Kirill Radezky.docx,"●
Connected the website to a payment system
"
1606,source/Kirill Radezky.docx,"●
Brought the project to production release
"
1607,source/Kirill Radezky.docx,"Education
"
1608,source/Kirill Radezky.docx,"B.S. in Software Engineering at Belarusian State University of Informatics and 
Radioelectronics
"
1609,source/Viktor Shupenka.pdf,"Personal Information 
"
1610,source/Viktor Shupenka.pdf,"Name and Surname: 
Viktor Shupenka 
"
1611,source/Viktor Shupenka.pdf,"Date of Birth: 
03.02.1987 
"
1612,source/Viktor Shupenka.pdf,"Phone number: 
+37533691122225 
"
1613,source/Viktor Shupenka.pdf," 
 
"
1614,source/Viktor Shupenka.pdf,"Junior frontend developer, React  developer 
"
1615,source/Viktor Shupenka.pdf," 
 
"
1616,source/Viktor Shupenka.pdf,"Profile 
"
1617,source/Viktor Shupenka.pdf," 
  
Education 
"
1618,source/Viktor Shupenka.pdf,"09.2004 - 05.2007 
"
1619,source/Viktor Shupenka.pdf," 
"
1620,source/Viktor Shupenka.pdf,"Web developer, at the start of my way, looking for a 
"
1621,source/Viktor Shupenka.pdf,"company in which there will be  an  opportunity to grow 
"
1622,source/Viktor Shupenka.pdf,"as a very good specialist. 
"
1623,source/Viktor Shupenka.pdf," 
 
 
 
"
1624,source/Viktor Shupenka.pdf,"MGPK, Maladechna, Belarus 
"
1625,source/Viktor Shupenka.pdf,"Electrician  technician 
"
1626,source/Viktor Shupenka.pdf," 
Experience 
"
1627,source/Viktor Shupenka.pdf,"04.2009 - present 
"
1628,source/Viktor Shupenka.pdf," 
 
 
 
 
"
1629,source/Viktor Shupenka.pdf,"12.2019 - present 
"
1630,source/Viktor Shupenka.pdf," 
 
 
"
1631,source/Viktor Shupenka.pdf,"Construction and assembly organizations 
"
1632,source/Viktor Shupenka.pdf,"Technical worker, builder 
"
1633,source/Viktor Shupenka.pdf," 
 
"
1634,source/Viktor Shupenka.pdf,"The whole range of construction and electrical work 
"
1635,source/Viktor Shupenka.pdf," 
"
1636,source/Viktor Shupenka.pdf,"Self-education 
"
1637,source/Viktor Shupenka.pdf,"Frontend developer, React developer 
"
1638,source/Viktor Shupenka.pdf,"Create React apps, SPA, functional components, class components, interactions between 
"
1639,source/Viktor Shupenka.pdf,"components, HOC, work with Context API, Fetch, Axios, Redux 
"
1640,source/Viktor Shupenka.pdf," 
Skills 
Personality 
"
1641,source/Viktor Shupenka.pdf," 
"
1642,source/Viktor Shupenka.pdf,"� HTML, CSS, JS - basic 
"
1643,source/Viktor Shupenka.pdf,"�   React, Redux, Context API, Hooks 
"
1644,source/Viktor Shupenka.pdf,"�   Figma, Zeplin, Adobe Photoshop - basic 
"
1645,source/Viktor Shupenka.pdf,"�   Self- learning 
"
1646,source/Viktor Shupenka.pdf,"�  Creativity 
"
1647,source/Viktor Shupenka.pdf,"�  Responsibility 
"
1648,source/Viktor Shupenka.pdf,"�  Organized 
"
1649,source/Viktor Shupenka.pdf," 
Languages 
Software 
"
1650,source/Viktor Shupenka.pdf," 
"
1651,source/Viktor Shupenka.pdf,"English - B1 Intermediate 
"
1652,source/Viktor Shupenka.pdf,"Russian - Native 
"
1653,source/Viktor Shupenka.pdf,"Figma - basic 
"
1654,source/Viktor Shupenka.pdf,"Zeplin - basic 
"
1655,source/Viktor Shupenka.pdf,"Adobe Photoshop -    basic 
"
1656,source/Viktor Shupenka.pdf," 
Hobbies 
� 
"
1657,source/Viktor Shupenka.pdf,"Technology � 
"
1658,source/Viktor Shupenka.pdf,"Music 
� 
"
1659,source/Viktor Shupenka.pdf,"Reading 
"
1660,source/Viktor Shupenka.pdf," 
 
 
 
 
"
1661,source/Viktor Shupenka.pdf,"I agree that m y personal data will be processed in order to recruit for the position I am applying for. 
"
1662,source/pymupdf.pdf,"PyMuPDF Documentation
"
1663,source/pymupdf.pdf,"Release 1.23.25
"
1664,source/pymupdf.pdf,"Artifex
"
1665,source/pymupdf.pdf,"Feb 21, 2024
"
1666,source/pymupdf.pdf,"ABOUT
"
1667,source/pymupdf.pdf,"1
Features Comparison
3
"
1668,source/pymupdf.pdf,"2
Performance
5
"
1669,source/pymupdf.pdf,"3
License and Copyright
7
"
1670,source/pymupdf.pdf,"4
Installation
9
"
1671,source/pymupdf.pdf,"5
The Basics
15
"
1672,source/pymupdf.pdf,"6
Tutorial
25
"
1673,source/pymupdf.pdf,"7
Opening Files
35
"
1674,source/pymupdf.pdf,"8
Text
37
"
1675,source/pymupdf.pdf,"9
Images
55
"
1676,source/pymupdf.pdf,"10 Annotations
71
"
1677,source/pymupdf.pdf,"11 Drawing and Graphics
81
"
1678,source/pymupdf.pdf,"12 Stories
87
"
1679,source/pymupdf.pdf,"13 Journalling
131
"
1680,source/pymupdf.pdf,"14 Multiprocessing
135
"
1681,source/pymupdf.pdf,"15 Optional Content Support
141
"
1682,source/pymupdf.pdf,"16 Low-Level Interfaces
143
"
1683,source/pymupdf.pdf,"17 Common Issues and their Solutions
153
"
1684,source/pymupdf.pdf,"18 Module fitz
161
"
1685,source/pymupdf.pdf,"19 Classes
173
"
1686,source/pymupdf.pdf,"20 Operator Algebra for Geometry Objects
397
"
1687,source/pymupdf.pdf,"21 Low Level Functions and Classes
403
"
1688,source/pymupdf.pdf,"22 Glossary
427
"
1689,source/pymupdf.pdf,"i
"
1690,source/pymupdf.pdf,"23 Constants and Enumerations
433
"
1691,source/pymupdf.pdf,"24 Color Database
443
"
1692,source/pymupdf.pdf,"25 Appendix 1: Details on Text Extraction
445
"
1693,source/pymupdf.pdf,"26 Appendix 2: Considerations on Embedded Files
453
"
1694,source/pymupdf.pdf,"27 Appendix 3: Assorted Technical Information
455
"
1695,source/pymupdf.pdf,"28 Appendix 4: Performance Comparison Methodology
465
"
1696,source/pymupdf.pdf,"29 Change Log
471
"
1697,source/pymupdf.pdf,"30 Deprecated Names
519
"
1698,source/pymupdf.pdf,"31 Find out about PyMuPDF Utilities
527
"
1699,source/pymupdf.pdf,"32 Do you need PDF to DOCX conversion?
529
"
1700,source/pymupdf.pdf,"Index
531
"
1701,source/pymupdf.pdf,"ii
"
1702,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
1703,source/pymupdf.pdf,"PyMuPDF is a high-performance Python library for data extraction, analysis, conversion & manipulation of PDF (and
other) documents.
"
1704,source/pymupdf.pdf,"PyMuPDF is hosted on GitHub and registered on PyPI.
"
1705,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
1706,source/pymupdf.pdf,"ABOUT
1
"
1707,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
1708,source/pymupdf.pdf,"2
ABOUT
"
1709,source/pymupdf.pdf,"CHAPTER
"
1710,source/pymupdf.pdf,"ONE
"
1711,source/pymupdf.pdf,"FEATURES COMPARISON
"
1712,source/pymupdf.pdf,"1.1 Feature Matrix
"
1713,source/pymupdf.pdf,"The following table illustrates how PyMuPDF compares with other typical solutions.
"
1714,source/pymupdf.pdf,"3
"
1715,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
1716,source/pymupdf.pdf,"4
Chapter 1. Features Comparison
"
1717,source/pymupdf.pdf,"CHAPTER
"
1718,source/pymupdf.pdf,"TWO
"
1719,source/pymupdf.pdf,"PERFORMANCE
"
1720,source/pymupdf.pdf,"To benchmark PyMuPDF performance against a range of tasks a test suite with a fixed set of 8 PDFs with a total of
7,031 pages containing text & images is used to obtain performance timings.
"
1721,source/pymupdf.pdf,"Here are current results, grouped by task:
"
1722,source/pymupdf.pdf,"Note:
For more detail regarding the methodology for these performance timings see: Performance Comparison
Methodology.
"
1723,source/pymupdf.pdf,"5
"
1724,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
1725,source/pymupdf.pdf,"6
Chapter 2. Performance
"
1726,source/pymupdf.pdf,"CHAPTER
"
1727,source/pymupdf.pdf,"THREE
"
1728,source/pymupdf.pdf,"LICENSE AND COPYRIGHT
"
1729,source/pymupdf.pdf,"PyMuPDF and MuPDF are now available under both, open-source AGPL and commercial license agreements. Please
read the full text of the AGPL license agreement, available in the distribution material (file COPYING) and here, to
ensure that your use case complies with the guidelines of the license. If you determine you cannot meet the requirements
of the AGPL, please contact Artifex for more information regarding a commercial license.
"
1730,source/pymupdf.pdf,"Artifex is the exclusive commercial licensing agent for MuPDF.
"
1731,source/pymupdf.pdf,"Artifex, the Artifex logo, MuPDF, and the MuPDF logo are registered trademarks of Artifex Software Inc.
"
1732,source/pymupdf.pdf,"This documentation covers PyMuPDF v1.23.25 features as of 2024-02-20 00:00:01.
"
1733,source/pymupdf.pdf,"The major and minor versions of PyMuPDF and MuPDF will always be the same. Only the third qualifier (patch
level) may deviate from that of MuPDF.
"
1734,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
1735,source/pymupdf.pdf,"7
"
1736,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
1737,source/pymupdf.pdf,"8
Chapter 3. License and Copyright
"
1738,source/pymupdf.pdf,"CHAPTER
"
1739,source/pymupdf.pdf,"FOUR
"
1740,source/pymupdf.pdf,"INSTALLATION
"
1741,source/pymupdf.pdf,"4.1 Requirements
"
1742,source/pymupdf.pdf,"All the examples below assume that you are running inside a Python virtual environment. See: https://docs.python.
org/3/library/venv.html for details. We also assume that pip is up to date.
"
1743,source/pymupdf.pdf,"For example:
"
1744,source/pymupdf.pdf,"• Windows:
"
1745,source/pymupdf.pdf,"py -m venv pymupdf-venv
.\\pymupdf-venv\\Scripts\\activate
python -m pip install --upgrade pip
"
1746,source/pymupdf.pdf,"• Linux, MacOS:
"
1747,source/pymupdf.pdf,"python -m venv pymupdf-venv
. pymupdf-venv/bin/activate
python -m pip install --upgrade pip
"
1748,source/pymupdf.pdf,"4.2 Installation
"
1749,source/pymupdf.pdf,"PyMuPDF should be installed using pip with:
"
1750,source/pymupdf.pdf,"pip install --upgrade pymupdf
"
1751,source/pymupdf.pdf,"This will install from a Python wheel if one is available for your platform.
"
1752,source/pymupdf.pdf,"4.3 Installation when a suitable wheel is not available
"
1753,source/pymupdf.pdf,"If a suitable Python wheel is not available, pip will automatically build from source using a Python sdist.
"
1754,source/pymupdf.pdf,"This requires C/C++ development tools to be installed:
"
1755,source/pymupdf.pdf,"• On Windows:
"
1756,source/pymupdf.pdf,"– Install Visual Studio 2019.
If not installed in a standard location, set environmental variable
PYMUPDF_SETUP_DEVENV to the location of the devenv.com binary.
"
1757,source/pymupdf.pdf,"– Having other installed versions of Visual Studio, for example Visual Studio 2022, can cause problems
because one can end up with MuPDF and PyMuPDF code being compiled with different compiler versions.
"
1758,source/pymupdf.pdf,"9
"
1759,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
1760,source/pymupdf.pdf,"As of PyMuPDF-1.20.0, the required MuPDF source code is already in the sdist and is automatically built into
PyMuPDF.
"
1761,source/pymupdf.pdf,"4.4 Problems after installation
"
1762,source/pymupdf.pdf,"• On Windows ImportError:
DLL load failed while importing _fitz.
"
1763,source/pymupdf.pdf,"This has been occasionally seen if MSVCP140.dll is missing, and appears to be caused by a bug in some versions
(2015-2017) of Microsoft Visual C++ Redistributables.
"
1764,source/pymupdf.pdf,"It is recommended to search for MSVCP140.dll in https://msdn.com to find instructions for how to reinstall
it. For example https://learn.microsoft.com/cpp/windows/latest-supported-vc-redist has permalinks to the latest
supported versions.
"
1765,source/pymupdf.pdf,"See https://github.com/pymupdf/PyMuPDF/issues/2678 for more details.
"
1766,source/pymupdf.pdf,"4.5 Notes
"
1767,source/pymupdf.pdf,"Wheels are available for Windows (32-bit Intel, 64-bit Intel), Linux (64-bit Intel, 64-bit ARM) and Mac OSX (64-bit
Intel, 64-bit ARM), Python versions 3.7 and up.
"
1768,source/pymupdf.pdf,"Wheels are not available for Python installed with Chocolatey on Windows. Instead install Python using the Windows
installer from the python.org website, see: http://www.python.org/downloads
"
1769,source/pymupdf.pdf,"PyMuPDF does not support Python versions prior to 3.8. Older wheels can be found in this repository and on PyPI.
Please note that we generally follow the official Python release schedules. For Python versions dropping out of official
support this means, that generation of wheels will also be ceased for them.
"
1770,source/pymupdf.pdf,"There are no mandatory external dependencies. However, some optional feature are available only if additional com-
ponents are installed:
"
1771,source/pymupdf.pdf,"• Pillow is required for Pixmap.pil_save() and Pixmap.pil_tobytes().
"
1772,source/pymupdf.pdf,"• fontTools is required for Document.subset_fonts().
"
1773,source/pymupdf.pdf,"• pymupdf-fonts is a collection of nice fonts to be used for text output methods.
"
1774,source/pymupdf.pdf,"• Tesseract-OCR for optical character recognition in images and document pages. Tesseract is separate software,
not a Python package. To enable OCR functions in PyMuPDF, the software must be installed and the system envi-
ronment variable ""TESSDATA_PREFIX"" must be defined and contain the tessdata folder name of the Tesseract
installation location. See below.
"
1775,source/pymupdf.pdf,"Note: You can install these additional components at any time – before or after installing PyMuPDF. PyMuPDF will
detect their presence during import or when the respective functions are being used.
"
1776,source/pymupdf.pdf,"10
Chapter 4. Installation
"
1777,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
1778,source/pymupdf.pdf,"4.6 Build and install from local PyMuPDF checkout and optional local
MuPDF checkout
"
1779,source/pymupdf.pdf,"• Install C/C++ development tools as described above.
"
1780,source/pymupdf.pdf,"• Enter a Python venv and update pip, as described above.
"
1781,source/pymupdf.pdf,"• Get a PyMuPDF source tree:
"
1782,source/pymupdf.pdf,"– Clone the PyMuPDF git repository:
"
1783,source/pymupdf.pdf,"git clone https://github.com/pymupdf/PyMuPDF.git
"
1784,source/pymupdf.pdf,"– Or download and extract a .zip or .tar.gz source release from https://github.com/pymupdf/PyMuPDF/
releases.
"
1785,source/pymupdf.pdf,"• Build and install PyMuPDF:
"
1786,source/pymupdf.pdf,"cd PyMuPDF && pip install .
"
1787,source/pymupdf.pdf,"This will automatically download a specific hard-coded MuPDF source release, and build it into PyMuPDF.
"
1788,source/pymupdf.pdf,"Build and install PyMuPDF using a local MuPDF source tree:
"
1789,source/pymupdf.pdf,"• Clone the MuPDF git repository:
"
1790,source/pymupdf.pdf,"git clone --recursive https://ghostscript.com:/home/git/mupdf.git
"
1791,source/pymupdf.pdf,"• Build PyMuPDF, specifying the location of the local MuPDF tree with the environmental variables
PYMUPDF_SETUP_MUPDF_BUILD:
"
1792,source/pymupdf.pdf,"cd PyMuPDF && PYMUPDF_SETUP_MUPDF_BUILD=../mupdf pip install .
"
1793,source/pymupdf.pdf,"Building for different Python versions in same PyMuPDF tree:
"
1794,source/pymupdf.pdf,"• PyMuPDF will build for the version of Python that is being used to run pip. To run pip with a specific Python
version, use python -m pip instead of pip.
"
1795,source/pymupdf.pdf,"So for example on Windows one can build different versions with:
"
1796,source/pymupdf.pdf,"cd PyMuPDF && py -3.9 -m pip install .
"
1797,source/pymupdf.pdf,"or:
"
1798,source/pymupdf.pdf,"cd PyMuPDF && py -3.10-32 -m pip install .
"
1799,source/pymupdf.pdf,"Note:
When running Python scripts that use PyMuPDF, make sure that the current directory is not the PyMuPDF/
directory.
"
1800,source/pymupdf.pdf,"Otherwise, confusingly, Python will attempt to import fitz from the local fitz/ directory, which will fail because it
only contains source files.
"
1801,source/pymupdf.pdf,"4.6. Build and install from local PyMuPDF checkout and optional local MuPDF checkout
11
"
1802,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
1803,source/pymupdf.pdf,"4.7 Running tests
"
1804,source/pymupdf.pdf,"Having a PyMuPDF tree available allows one to run PyMuPDF’s pytest test suite:
"
1805,source/pymupdf.pdf,"pip install pytest fontTools
pytest PyMuPDF/tests
"
1806,source/pymupdf.pdf,"4.7.1 Notes about using a non-default MuPDF
"
1807,source/pymupdf.pdf,"Using a non-default build of MuPDF by setting environmental variable PYMUPDF_SETUP_MUPDF_BUILD can cause
various things to go wrong and so is not generally supported:
"
1808,source/pymupdf.pdf,"• If MuPDF’s major version number differs from what PyMuPDF uses by default, PyMuPDF can fail to build,
because MuPDF’s API can change between major versions.
"
1809,source/pymupdf.pdf,"• Runtime behaviour of PyMuPDF can change because MuPDF’s runtime behaviour changes between different
minor releases. This can also break some PyMuPDF tests.
"
1810,source/pymupdf.pdf,"• If MuPDF was built with its default config instead of PyMuPDF’s customised config (for example if MuPDF is
a system install), it is possible that tests/test_textbox.py:test_textbox3() will fail. One can skip this
particular test by adding -k 'not test_textbox3' to the pytest command line.
"
1811,source/pymupdf.pdf,"4.8 Packaging
"
1812,source/pymupdf.pdf,"See packaging.
"
1813,source/pymupdf.pdf,"4.9 Enabling Integrated OCR Support
"
1814,source/pymupdf.pdf,"If you do not intend to use this feature, skip this step. Otherwise, it is required for both installation paths: from wheels
and from sources.
"
1815,source/pymupdf.pdf,"PyMuPDF will already contain all the logic to support OCR functions. But it additionally does need Tesseract’s lan-
guage support data, so installation of Tesseract-OCR is still required.
"
1816,source/pymupdf.pdf,"The language support folder location must be communicated either via storing it in the environment variable
""TESSDATA_PREFIX"", or as a parameter in the applicable functions.
"
1817,source/pymupdf.pdf,"So for a working OCR functionality, make sure to complete this checklist:
"
1818,source/pymupdf.pdf,"1. Install Tesseract.
"
1819,source/pymupdf.pdf,"2. Locate Tesseract’s language support folder. Typically you will find it here:
"
1820,source/pymupdf.pdf,"• Windows: C:/Program Files/Tesseract-OCR/tessdata
"
1821,source/pymupdf.pdf,"• Unix systems: /usr/share/tesseract-ocr/4.00/tessdata
"
1822,source/pymupdf.pdf,"3. Set the environment variable TESSDATA_PREFIX
"
1823,source/pymupdf.pdf,"• Windows: setx TESSDATA_PREFIX ""C:/Program Files/Tesseract-OCR/tessdata""
"
1824,source/pymupdf.pdf,"• Unix systems: declare -x TESSDATA_PREFIX=/usr/share/tesseract-ocr/4.00/tessdata
"
1825,source/pymupdf.pdf,"12
Chapter 4. Installation
"
1826,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
1827,source/pymupdf.pdf,"Note:
On Windows systems, this must happen outside Python – before starting your script. Just manipulating os.
environ will not work!
"
1828,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
1829,source/pymupdf.pdf,"4.9. Enabling Integrated OCR Support
13
"
1830,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
1831,source/pymupdf.pdf,"14
Chapter 4. Installation
"
1832,source/pymupdf.pdf,"CHAPTER
"
1833,source/pymupdf.pdf,"FIVE
"
1834,source/pymupdf.pdf,"THE BASICS
"
1835,source/pymupdf.pdf,"5.1 Opening a File
"
1836,source/pymupdf.pdf,"To open a file, do the following:
"
1837,source/pymupdf.pdf,"Note: Taking it further
"
1838,source/pymupdf.pdf,"See the list of supported file types and The How to Guide on Opening Files for more advanced options.
"
1839,source/pymupdf.pdf,"5.2 Extract text from a PDF
"
1840,source/pymupdf.pdf,"To extract all the text from a PDF file, do the following:
"
1841,source/pymupdf.pdf,"Note: Taking it further
"
1842,source/pymupdf.pdf,"There are many more examples which explain how to extract text from specific areas or how to extract tables from
documents. Please refer to the How to Guide for Text.
"
1843,source/pymupdf.pdf,"API reference
"
1844,source/pymupdf.pdf,"• Page.get_text()
"
1845,source/pymupdf.pdf,"5.3 Extract images from a PDF
"
1846,source/pymupdf.pdf,"To extract all the images from a PDF file, do the following:
"
1847,source/pymupdf.pdf,"Note: Taking it further
"
1848,source/pymupdf.pdf,"There are many more examples which explain how to extract text from specific areas or how to extract tables from
documents. Please refer to the How to Guide for Text.
"
1849,source/pymupdf.pdf,"API reference
"
1850,source/pymupdf.pdf,"• Page.get_images()
"
1851,source/pymupdf.pdf,"15
"
1852,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
1853,source/pymupdf.pdf,"• Pixmap
"
1854,source/pymupdf.pdf,"5.4 Merging PDF files
"
1855,source/pymupdf.pdf,"To merge PDF files, do the following:
"
1856,source/pymupdf.pdf,"5.4.1 Merging PDF files with other types of file
"
1857,source/pymupdf.pdf,"With Document.insert_file() you can invoke the method to merge supported files with PDF. For example:
"
1858,source/pymupdf.pdf,"Note: Taking it further
"
1859,source/pymupdf.pdf,"It is easy to join PDFs with Document.insert_pdf() & Document.insert_file(). Given open PDF documents,
you can copy page ranges from one to the other. You can select the point where the copied pages should be placed, you
can revert the page sequence and also change page rotation. This Wiki article contains a full description.
"
1860,source/pymupdf.pdf,"The GUI script join.py uses this method to join a list of files while also joining the respective table of contents segments.
It looks like this:
"
1861,source/pymupdf.pdf,"API reference
"
1862,source/pymupdf.pdf,"• Document.insert_pdf()
"
1863,source/pymupdf.pdf,"• Document.insert_file()
"
1864,source/pymupdf.pdf,"16
Chapter 5. The Basics
"
1865,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
1866,source/pymupdf.pdf,"5.5 Working with Coordinates
"
1867,source/pymupdf.pdf,"There is one mathematical term that you should feel comfortable with when using PyMuPDF - “coordinates”. Please
have a quick look at the Coordinates section to understand the coordinate system to help you with positioning objects
and understand your document space.
"
1868,source/pymupdf.pdf,"5.6 Adding a watermark to a PDF
"
1869,source/pymupdf.pdf,"To add a watermark to a PDF file, do the following:
"
1870,source/pymupdf.pdf,"Note: Taking it further
"
1871,source/pymupdf.pdf,"Adding watermarks is essentially as simple as adding an image at the base of each PDF page. You should ensure that
the image has the required opacity and aspect ratio to make it look the way you need it to.
"
1872,source/pymupdf.pdf,"In the example above a new image is created from each file reference, but to be more performant (by saving mem-
ory and file size) this image data should be referenced only once - see the code example and explanation on Page.
insert_image() for the implementation.
"
1873,source/pymupdf.pdf,"API reference
"
1874,source/pymupdf.pdf,"• Page.bound()
"
1875,source/pymupdf.pdf,"• Page.insert_image()
"
1876,source/pymupdf.pdf,"5.7 Adding an image to a PDF
"
1877,source/pymupdf.pdf,"To add an image to a PDF file, for example a logo, do the following:
"
1878,source/pymupdf.pdf,"Note: Taking it further
"
1879,source/pymupdf.pdf,"As with the watermark example you should ensure to be more performant by only referencing the image once if possible
- see the code example and explanation on Page.insert_image().
"
1880,source/pymupdf.pdf,"API reference
"
1881,source/pymupdf.pdf,"• Rect
"
1882,source/pymupdf.pdf,"• Page.insert_image()
"
1883,source/pymupdf.pdf,"5.5. Working with Coordinates
17
"
1884,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
1885,source/pymupdf.pdf,"5.8 Rotating a PDF
"
1886,source/pymupdf.pdf,"To add a rotation to a page, do the following:
"
1887,source/pymupdf.pdf,"Note: API reference
"
1888,source/pymupdf.pdf,"• Page.set_rotation()
"
1889,source/pymupdf.pdf,"5.9 Cropping a PDF
"
1890,source/pymupdf.pdf,"To crop a page to a defined Rect, do the following:
"
1891,source/pymupdf.pdf,"Note: API reference
"
1892,source/pymupdf.pdf,"• Page.set_cropbox()
"
1893,source/pymupdf.pdf,"5.10 Attaching Files
"
1894,source/pymupdf.pdf,"To attach another file to a page, do the following:
"
1895,source/pymupdf.pdf,"Note: Taking it further
"
1896,source/pymupdf.pdf,"When adding the file with Page.add_file_annot() note that the third parameter for the filename should include
the actual file extension. Without this the attachment possibly will not be able to be recognized as being something
which can be opened. For example, if the filename is just “attachment” when view the resulting PDF and attempting
to open the attachment you may well get an error. However, with “attachment.pdf” this can be recognized and opened
by PDF viewers as a valid file type.
"
1897,source/pymupdf.pdf,"The default icon for the attachment is by default a “push pin”, however you can change this by setting the icon param-
eter.
"
1898,source/pymupdf.pdf,"API reference
"
1899,source/pymupdf.pdf,"• Point
"
1900,source/pymupdf.pdf,"• Document.tobytes()
"
1901,source/pymupdf.pdf,"• Page.add_file_annot()
"
1902,source/pymupdf.pdf,"18
Chapter 5. The Basics
"
1903,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
1904,source/pymupdf.pdf,"5.11 Embedding Files
"
1905,source/pymupdf.pdf,"To embed a file to a document, do the following:
"
1906,source/pymupdf.pdf,"Note: Taking it further
"
1907,source/pymupdf.pdf,"As with attaching files, when adding the file with Document.embfile_add() note that the first parameter for the
filename should include the actual file extension.
"
1908,source/pymupdf.pdf,"API reference
"
1909,source/pymupdf.pdf,"• Document.tobytes()
"
1910,source/pymupdf.pdf,"• Document.embfile_add()
"
1911,source/pymupdf.pdf,"5.12 Deleting Pages
"
1912,source/pymupdf.pdf,"To delete a page from a document, do the following:
"
1913,source/pymupdf.pdf,"To delete a multiple pages from a document, do the following:
"
1914,source/pymupdf.pdf,"Note: Taking it further
"
1915,source/pymupdf.pdf,"The page index is zero-based, so to delete page 10 of a document you would do the following doc.delete_page(9).
"
1916,source/pymupdf.pdf,"Similarly, doc.delete_pages(from_page=9, to_page=14) will delete pages 10 - 15 inclusive.
"
1917,source/pymupdf.pdf,"API reference
"
1918,source/pymupdf.pdf,"• Document.delete_page()
"
1919,source/pymupdf.pdf,"• Document.delete_pages()
"
1920,source/pymupdf.pdf,"5.13 Re-Arranging Pages
"
1921,source/pymupdf.pdf,"To re-arrange pages, do the following:
"
1922,source/pymupdf.pdf,"Note: API reference
"
1923,source/pymupdf.pdf,"• Document.move_page()
"
1924,source/pymupdf.pdf,"5.11. Embedding Files
19
"
1925,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
1926,source/pymupdf.pdf,"5.14 Copying Pages
"
1927,source/pymupdf.pdf,"To copy pages, do the following:
"
1928,source/pymupdf.pdf,"Note: API reference
"
1929,source/pymupdf.pdf,"• Document.copy_page()
"
1930,source/pymupdf.pdf,"5.15 Selecting Pages
"
1931,source/pymupdf.pdf,"To select pages, do the following:
"
1932,source/pymupdf.pdf,"Note: Taking it further
"
1933,source/pymupdf.pdf,"With PyMuPDF you have all options to copy, move, delete or re-arrange the pages of a PDF. Intuitive methods exist
that allow you to do this on a page-by-page level, like the Document.copy_page() method.
"
1934,source/pymupdf.pdf,"Or you alternatively prepare a complete new page layout in form of a Python sequence, that contains the page numbers
you want, in the sequence you want, and as many times as you want each page. The following may illustrate what can
be done with Document.select()
"
1935,source/pymupdf.pdf,"Now let’s prepare a PDF for double-sided printing (on a printer not directly supporting this):
"
1936,source/pymupdf.pdf,"The number of pages is given by len(doc) (equal to doc.page_count). The following lists represent the even and
the odd page numbers, respectively:
"
1937,source/pymupdf.pdf,"This snippet creates the respective sub documents which can then be used to print the document:
"
1938,source/pymupdf.pdf,"For more information also have a look at this Wiki article.
"
1939,source/pymupdf.pdf,"The following example will reverse the order of all pages (extremely fast: sub-second time for the 756 pages of the
Adobe PDF References):
"
1940,source/pymupdf.pdf,"This snippet duplicates the PDF with itself so that it will contain the pages 0, 1, ..., n, 0, 1, ..., n (extremely fast and
without noticeably increasing the file size!):
"
1941,source/pymupdf.pdf,"API reference
"
1942,source/pymupdf.pdf,"• Document.select()
"
1943,source/pymupdf.pdf,"5.16 Adding Blank Pages
"
1944,source/pymupdf.pdf,"To add a blank page, do the following:
"
1945,source/pymupdf.pdf,"Note: Taking it further
"
1946,source/pymupdf.pdf,"Use this to create the page with another pre-defined paper format:
"
1947,source/pymupdf.pdf,"20
Chapter 5. The Basics
"
1948,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
1949,source/pymupdf.pdf,"The convenience function paper_size() knows over 40 industry standard paper formats to choose from. To see them,
inspect dictionary paperSizes. Pass the desired dictionary key to paper_size() to retrieve the paper dimensions.
Upper and lower case is supported. If you append “-L” to the format name, the landscape version is returned.
"
1950,source/pymupdf.pdf,"Here is a 3-liner that creates a PDF: with one empty page. Its file size is 460 bytes:
"
1951,source/pymupdf.pdf,"API reference
"
1952,source/pymupdf.pdf,"• Document.new_page()
"
1953,source/pymupdf.pdf,"• paperSizes
"
1954,source/pymupdf.pdf,"5.17 Inserting Pages with Text Content
"
1955,source/pymupdf.pdf,"Using the Document.insert_page() method also inserts a new page and accepts the same width and height
parameters. But it lets you also insert arbitrary text into the new page and returns the number of inserted lines.
"
1956,source/pymupdf.pdf,"Note: Taking it further
"
1957,source/pymupdf.pdf,"The text parameter can be a (sequence of) string (assuming UTF-8 encoding). Insertion will start at Point (50, 72),
which is one inch below top of page and 50 points from the left. The number of inserted text lines is returned.
"
1958,source/pymupdf.pdf,"API reference
"
1959,source/pymupdf.pdf,"• Document.insert_page()
"
1960,source/pymupdf.pdf,"5.18 Splitting Single Pages
"
1961,source/pymupdf.pdf,"This deals with splitting up pages of a PDF in arbitrary pieces. For example, you may have a PDF with Letter format
pages which you want to print with a magnification factor of four: each page is split up in 4 pieces which each going
to a separate PDF page in Letter format again.
"
1962,source/pymupdf.pdf,"Example:
"
1963,source/pymupdf.pdf,"Note: API reference
"
1964,source/pymupdf.pdf,"• Page.cropbox_position()
"
1965,source/pymupdf.pdf,"• Page.show_pdf_page()
"
1966,source/pymupdf.pdf,"5.17. Inserting Pages with Text Content
21
"
1967,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
1968,source/pymupdf.pdf,"5.19 Combining Single Pages
"
1969,source/pymupdf.pdf,"This deals with joining PDF pages to form a new PDF with pages each combining two or four original ones (also
called “2-up”, “4-up”, etc.). This could be used to create booklets or thumbnail-like overviews.
"
1970,source/pymupdf.pdf,"Example:
"
1971,source/pymupdf.pdf,"Note: API reference
"
1972,source/pymupdf.pdf,"• Page.cropbox_position()
"
1973,source/pymupdf.pdf,"• Page.show_pdf_page()
"
1974,source/pymupdf.pdf,"5.20 PDF Encryption & Decryption
"
1975,source/pymupdf.pdf,"Starting with version 1.16.0, PDF decryption and encryption (using passwords) are fully supported. You can do the
following:
"
1976,source/pymupdf.pdf,"• Check whether a document is password protected / (still) encrypted (Document.needs_pass, Document.
is_encrypted).
"
1977,source/pymupdf.pdf,"• Gain access authorization to a document (Document.authenticate()).
"
1978,source/pymupdf.pdf,"• Set encryption details for PDF files using Document.save() or Document.write() and
"
1979,source/pymupdf.pdf,"– decrypt or encrypt the content
"
1980,source/pymupdf.pdf,"– set password(s)
"
1981,source/pymupdf.pdf,"– set the encryption method
"
1982,source/pymupdf.pdf,"– set permission details
"
1983,source/pymupdf.pdf,"Note: A PDF document may have two different passwords:
"
1984,source/pymupdf.pdf,"• The owner password provides full access rights, including changing passwords, encryption method, or permis-
sion detail.
"
1985,source/pymupdf.pdf,"• The user password provides access to document content according to the established permission details. If
present, opening the PDF in a viewer will require providing it.
"
1986,source/pymupdf.pdf,"Method Document.authenticate() will automatically establish access rights according to the password used.
"
1987,source/pymupdf.pdf,"22
Chapter 5. The Basics
"
1988,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
1989,source/pymupdf.pdf,"The following snippet creates a new PDF and encrypts it with separate user and owner passwords. Permissions are
granted to print, copy and annotate, but no changes are allowed to someone authenticating with the user password.
"
1990,source/pymupdf.pdf,"Note: Taking it further
"
1991,source/pymupdf.pdf,"Opening this document with some viewer (Nitro Reader 5) reflects these settings:
"
1992,source/pymupdf.pdf,"Decrypting will automatically happen on save as before when no encryption parameters are provided.
"
1993,source/pymupdf.pdf,"To keep the encryption method of a PDF save it using encryption=fitz.PDF_ENCRYPT_KEEP. If doc.
can_save_incrementally() == True, an incremental save is also possible.
"
1994,source/pymupdf.pdf,"To change the encryption method specify the full range of options above (encryption, owner_pw, user_pw,
permissions). An incremental save is not possible in this case.
"
1995,source/pymupdf.pdf,"5.20. PDF Encryption & Decryption
23
"
1996,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
1997,source/pymupdf.pdf,"API reference
"
1998,source/pymupdf.pdf,"• Document.save()
"
1999,source/pymupdf.pdf,"5.21 Extracting Tables from a Page
"
2000,source/pymupdf.pdf,"Tables can be found and extracted from any document Page.
"
2001,source/pymupdf.pdf,"Note: API reference
"
2002,source/pymupdf.pdf,"• Page.find_tables()
"
2003,source/pymupdf.pdf,"Important: There is also the pdf2docx extract tables method which is capable of table extraction if you prefer.
"
2004,source/pymupdf.pdf,"5.22 Getting Page Links
"
2005,source/pymupdf.pdf,"Links can be extracted from a Page to return Link objects.
"
2006,source/pymupdf.pdf,"Note: API reference
"
2007,source/pymupdf.pdf,"• Page.first_link()
"
2008,source/pymupdf.pdf,"5.23 Getting All Annotations from a Document
"
2009,source/pymupdf.pdf,"Annotations (Annot) on pages can be retrieved with the page.annots() method.
"
2010,source/pymupdf.pdf,"Note: API reference
"
2011,source/pymupdf.pdf,"• Page.annots()
"
2012,source/pymupdf.pdf,"5.24 Converting PDF Documents
"
2013,source/pymupdf.pdf,"We recommend the pdf2docx library which uses PyMuPDF and the python-docx library to provide simple document
conversion from PDF to DOCX format.
"
2014,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
2015,source/pymupdf.pdf,"24
Chapter 5. The Basics
"
2016,source/pymupdf.pdf,"CHAPTER
"
2017,source/pymupdf.pdf,"SIX
"
2018,source/pymupdf.pdf,"TUTORIAL
"
2019,source/pymupdf.pdf,"This tutorial will show you the use of PyMuPDF, MuPDF in Python, step by step.
"
2020,source/pymupdf.pdf,"Because MuPDF supports not only PDF, but also XPS, OpenXPS, CBZ, CBR, FB2 and EPUB formats, so does
PyMuPDF1. Nevertheless, for the sake of brevity we will only talk about PDF files. At places where indeed only
PDF files are supported, this will be mentioned explicitly.
"
2021,source/pymupdf.pdf,"6.1 Importing the Bindings
"
2022,source/pymupdf.pdf,"The Python bindings to MuPDF are made available by this import statement. We also show here how your version can
be checked:
"
2023,source/pymupdf.pdf,">>> import fitz
>>> print(fitz.__doc__)
PyMuPDF 1.16.0: Python bindings for the MuPDF 1.16.0 library.
Version date: 2019-07-28 07:30:14.
Built for Python 3.7 on win32 (64-bit).
"
2024,source/pymupdf.pdf,"6.1.1 Note on the Name fitz
"
2025,source/pymupdf.pdf,"The top level Python import name for this library is “fitz”. This has historical reasons:
"
2026,source/pymupdf.pdf,"The original rendering library for MuPDF was called Libart.
"
2027,source/pymupdf.pdf,"“After Artifex Software acquired the MuPDF project, the development focus shifted on writing a new modern graphics
library called “Fitz”. Fitz was originally intended as an R&D project to replace the aging Ghostscript graphics library,
but has instead become the rendering engine powering MuPDF.” (Quoted from Wikipedia).
"
2028,source/pymupdf.pdf,"Note: So PyMuPDF cannot coexist with packages named “fitz” in the same Python environment.
"
2029,source/pymupdf.pdf,"1 PyMuPDF lets you also open several image file types just like normal documents. See section Supported Input Image Formats in chapter
"
2030,source/pymupdf.pdf,"Pixmap for more comments.
"
2031,source/pymupdf.pdf,"25
"
2032,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2033,source/pymupdf.pdf,"6.2 Opening a Document
"
2034,source/pymupdf.pdf,"To access a supported document, it must be opened with the following statement:
"
2035,source/pymupdf.pdf,"doc = fitz.open(filename)
# or fitz.Document(filename)
"
2036,source/pymupdf.pdf,"This creates the Document object doc. filename must be a Python string (or a pathlib.Path) specifying the name of
an existing file.
"
2037,source/pymupdf.pdf,"It is also possible to open a document from memory data, or to create a new, empty PDF. See Document for details.
You can also use Document as a context manager.
"
2038,source/pymupdf.pdf,"A document contains many attributes and functions. Among them are meta information (like “author” or “subject”),
number of total pages, outline and encryption information.
"
2039,source/pymupdf.pdf,"6.3 Some Document Methods and Attributes
"
2040,source/pymupdf.pdf,"Method / Attribute
Description
"
2041,source/pymupdf.pdf,"Document.page_count
the number of pages (int)
"
2042,source/pymupdf.pdf,"Document.metadata
the metadata (dict)
"
2043,source/pymupdf.pdf,"Document.get_toc()
get the table of contents (list)
"
2044,source/pymupdf.pdf,"Document.load_page()
read a Page
"
2045,source/pymupdf.pdf,"6.4 Accessing Meta Data
"
2046,source/pymupdf.pdf,"PyMuPDF fully supports standard metadata. Document.metadata is a Python dictionary with the following keys. It
is available for all document types, though not all entries may always contain data. For details of their meanings and
formats consult the respective manuals, e.g. Adobe PDF References for PDF. Further information can also be found in
chapter Document. The meta data fields are strings or None if not otherwise indicated. Also be aware that not all of
them always contain meaningful data – even if they are not None.
"
2047,source/pymupdf.pdf,"Key
Value
"
2048,source/pymupdf.pdf,"producer
producer (producing software)
"
2049,source/pymupdf.pdf,"format
format: ‘PDF-1.4’, ‘EPUB’, etc.
"
2050,source/pymupdf.pdf,"encryption
encryption method used if any
"
2051,source/pymupdf.pdf,"author
author
"
2052,source/pymupdf.pdf,"modDate
date of last modification
"
2053,source/pymupdf.pdf,"keywords
keywords
"
2054,source/pymupdf.pdf,"title
title
"
2055,source/pymupdf.pdf,"creationDate
date of creation
"
2056,source/pymupdf.pdf,"creator
creating application
"
2057,source/pymupdf.pdf,"subject
subject
"
2058,source/pymupdf.pdf,"Note: Apart from these standard metadata, PDF documents starting from PDF version 1.4 may also contain so-called
“metadata streams” (see also stream). Information in such streams is coded in XML. PyMuPDF deliberately contains
no XML components for this purpose (the PyMuPDF Xml class is a helper class intended to access the DOM content
of a Story object), so we do not directly support access to information contained therein. But you can extract the stream
"
2059,source/pymupdf.pdf,"26
Chapter 6. Tutorial
"
2060,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2061,source/pymupdf.pdf,"as a whole, inspect or modify it using a package like lxml and then store the result back into the PDF. If you want, you
can also delete this data altogether.
"
2062,source/pymupdf.pdf,"Note: There are two utility scripts in the repository that metadata import (PDF only) resp. metadata export metadata
from resp. to CSV files.
"
2063,source/pymupdf.pdf,"6.5 Working with Outlines
"
2064,source/pymupdf.pdf,"The easiest way to get all outlines (also called “bookmarks”) of a document, is by loading its table of contents:
"
2065,source/pymupdf.pdf,"toc = doc.get_toc()
"
2066,source/pymupdf.pdf,"This will return a Python list of lists [[lvl, title, page, ...], ...] which looks much like a conventional table of contents
found in books.
"
2067,source/pymupdf.pdf,"lvl is the hierarchy level of the entry (starting from 1), title is the entry’s title, and page the page number (1-based!).
Other parameters describe details of the bookmark target.
"
2068,source/pymupdf.pdf,"Note: There are two utility scripts in the repository that toc import (PDF only) resp. toc export table of contents from
resp. to CSV files.
"
2069,source/pymupdf.pdf,"6.6 Working with Pages
"
2070,source/pymupdf.pdf,"Page handling is at the core of MuPDF’s functionality.
"
2071,source/pymupdf.pdf,"• You can render a page into a raster or vector (SVG) image, optionally zooming, rotating, shifting or shearing it.
"
2072,source/pymupdf.pdf,"• You can extract a page’s text and images in many formats and search for text strings.
"
2073,source/pymupdf.pdf,"• For PDF documents many more methods are available to add text or images to pages.
"
2074,source/pymupdf.pdf,"First, a Page must be created. This is a method of Document:
"
2075,source/pymupdf.pdf,"page = doc.load_page(pno)
# loads page number 'pno' of the document (0-based)
"
2076,source/pymupdf.pdf,"page = doc[pno]
# the short form
"
2077,source/pymupdf.pdf,"Any integer -∞ < pno < page_count is possible here. Negative numbers count backwards from the end, so doc[-1]
is the last page, like with Python sequences.
"
2078,source/pymupdf.pdf,"Some more advanced way would be using the document as an iterator over its pages:
"
2079,source/pymupdf.pdf,"for page in doc:
"
2080,source/pymupdf.pdf,"# do something with 'page'
"
2081,source/pymupdf.pdf,"# ... or read backwards
for page in reversed(doc):
"
2082,source/pymupdf.pdf,"# do something with 'page'
"
2083,source/pymupdf.pdf,"# ... or even use 'slicing'
"
2084,source/pymupdf.pdf,"(continues on next page)
"
2085,source/pymupdf.pdf,"6.5. Working with Outlines
27
"
2086,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2087,source/pymupdf.pdf,"(continued from previous page)
"
2088,source/pymupdf.pdf,"for page in doc.pages(start, stop, step):
"
2089,source/pymupdf.pdf,"# do something with 'page'
"
2090,source/pymupdf.pdf,"Once you have your page, here is what you would typically do with it:
"
2091,source/pymupdf.pdf,"6.6.1 Inspecting the Links, Annotations or Form Fields of a Page
"
2092,source/pymupdf.pdf,"Links are shown as “hot areas” when a document is displayed with some viewer software. If you click while your cursor
shows a hand symbol, you will usually be taken to the target that is encoded in that hot area. Here is how to get all
links:
"
2093,source/pymupdf.pdf,"# get all links on a page
links = page.get_links()
"
2094,source/pymupdf.pdf,"links is a Python list of dictionaries. For details see Page.get_links().
"
2095,source/pymupdf.pdf,"You can also use an iterator which emits one link at a time:
"
2096,source/pymupdf.pdf,"for link in page.links():
"
2097,source/pymupdf.pdf,"# do something with 'link'
"
2098,source/pymupdf.pdf,"If dealing with a PDF document page, there may also exist annotations (Annot) or form fields (Widget), each of which
have their own iterators:
"
2099,source/pymupdf.pdf,"for annot in page.annots():
"
2100,source/pymupdf.pdf,"# do something with 'annot'
"
2101,source/pymupdf.pdf,"for field in page.widgets():
"
2102,source/pymupdf.pdf,"# do something with 'field'
"
2103,source/pymupdf.pdf,"6.6.2 Rendering a Page
"
2104,source/pymupdf.pdf,"This example creates a raster image of a page’s content:
"
2105,source/pymupdf.pdf,"pix = page.get_pixmap()
"
2106,source/pymupdf.pdf,"pix is a Pixmap object which (in this case) contains an RGB image of the page, ready to be used for many pur-
poses. Method Page.get_pixmap() offers lots of variations for controlling the image: resolution / DPI, colorspace
(e.g. to produce a grayscale image or an image with a subtractive color scheme), transparency, rotation, mirroring,
shifting, shearing, etc. For example: to create an RGBA image (i.e. containing an alpha channel), specify pix =
page.get_pixmap(alpha=True).
"
2107,source/pymupdf.pdf,"A Pixmap contains a number of methods and attributes which are referenced below. Among them are the integers
width, height (each in pixels) and stride (number of bytes of one horizontal image line). Attribute samples represents
a rectangular area of bytes representing the image data (a Python bytes object).
"
2108,source/pymupdf.pdf,"Note: You can also create a vector image of a page by using Page.get_svg_image(). Refer to this Vector Image
Support page for details.
"
2109,source/pymupdf.pdf,"28
Chapter 6. Tutorial
"
2110,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2111,source/pymupdf.pdf,"6.6.3 Saving the Page Image in a File
"
2112,source/pymupdf.pdf,"We can simply store the image in a PNG file:
"
2113,source/pymupdf.pdf,"pix.save(""page-%i.png"" % page.number)
"
2114,source/pymupdf.pdf,"6.6.4 Displaying the Image in GUIs
"
2115,source/pymupdf.pdf,"We can also use it in GUI dialog managers. Pixmap.samples represents an area of bytes of all the pixels as a Python
bytes object. Here are some examples, find more in the examples directory.
"
2116,source/pymupdf.pdf,"wxPython
"
2117,source/pymupdf.pdf,"Consult their documentation for adjustments to RGB(A) pixmaps and, potentially, specifics for your wxPython release:
"
2118,source/pymupdf.pdf,"if pix.alpha:
bitmap = wx.Bitmap.FromBufferRGBA(pix.width, pix.height, pix.samples)
"
2119,source/pymupdf.pdf,"else:
bitmap = wx.Bitmap.FromBuffer(pix.width, pix.height, pix.samples)
"
2120,source/pymupdf.pdf,"Tkinter
"
2121,source/pymupdf.pdf,"Please also see section 3.19 of the Pillow documentation:
"
2122,source/pymupdf.pdf,"from PIL import Image, ImageTk
"
2123,source/pymupdf.pdf,"# set the mode depending on alpha
mode = ""RGBA"" if pix.alpha else ""RGB""
img = Image.frombytes(mode, [pix.width, pix.height], pix.samples)
tkimg = ImageTk.PhotoImage(img)
"
2124,source/pymupdf.pdf,"The following avoids using Pillow:
"
2125,source/pymupdf.pdf,"# remove alpha if present
pix1 = fitz.Pixmap(pix, 0) if pix.alpha else pix
# PPM does not support transparency
"
2126,source/pymupdf.pdf,"imgdata = pix1.tobytes(""ppm"")
# extremely fast!
"
2127,source/pymupdf.pdf,"tkimg = tkinter.PhotoImage(data = imgdata)
"
2128,source/pymupdf.pdf,"If you are looking for a complete Tkinter script paging through any supported document, here it is!. It can also zoom
into pages, and it runs under Python 2 or 3. It requires the extremely handy PySimpleGUI pure Python package.
"
2129,source/pymupdf.pdf,"PyQt4, PyQt5, PySide
"
2130,source/pymupdf.pdf,"Please also see section 3.16 of the Pillow documentation:
"
2131,source/pymupdf.pdf,"from PIL import Image, ImageQt
"
2132,source/pymupdf.pdf,"# set the mode depending on alpha
mode = ""RGBA"" if pix.alpha else ""RGB""
img = Image.frombytes(mode, [pix.width, pix.height], pix.samples)
qtimg = ImageQt.ImageQt(img)
"
2133,source/pymupdf.pdf,"6.6. Working with Pages
29
"
2134,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2135,source/pymupdf.pdf,"Again, you also can get along without using Pillow. Qt’s QImage luckily supports native Python pointers, so the
following is the recommended way to create Qt images:
"
2136,source/pymupdf.pdf,"from PyQt5.QtGui import QImage
"
2137,source/pymupdf.pdf,"# set the correct QImage format depending on alpha
fmt = QImage.Format_RGBA8888 if pix.alpha else QImage.Format_RGB888
qtimg = QImage(pix.samples_ptr, pix.width, pix.height, fmt)
"
2138,source/pymupdf.pdf,"6.6.5 Extracting Text and Images
"
2139,source/pymupdf.pdf,"We can also extract all text, images and other information of a page in many different forms, and levels of detail:
"
2140,source/pymupdf.pdf,"text = page.get_text(opt)
"
2141,source/pymupdf.pdf,"Use one of the following strings for opt to obtain different formats2:
"
2142,source/pymupdf.pdf,"• “text”: (default) plain text with line breaks. No formatting, no text position details, no images.
"
2143,source/pymupdf.pdf,"• “blocks”: generate a list of text blocks (= paragraphs).
"
2144,source/pymupdf.pdf,"• “words”: generate a list of words (strings not containing spaces).
"
2145,source/pymupdf.pdf,"• “html”: creates a full visual version of the page including any images. This can be displayed with your internet
browser.
"
2146,source/pymupdf.pdf,"• “dict” / “json”: same information level as HTML, but provided as a Python dictionary or resp. JSON string.
See TextPage.extractDICT() for details of its structure.
"
2147,source/pymupdf.pdf,"• “rawdict” / “rawjson”: a super-set of “dict” / “json”. It additionally provides character detail information like
XML. See TextPage.extractRAWDICT() for details of its structure.
"
2148,source/pymupdf.pdf,"• “xhtml”: text information level as the TEXT version but includes images. Can also be displayed by internet
browsers.
"
2149,source/pymupdf.pdf,"• “xml”: contains no images, but full position and font information down to each single text character. Use an
XML module to interpret.
"
2150,source/pymupdf.pdf,"To give you an idea about the output of these alternatives, we did text example extracts. See Appendix 2: Considerations
on Embedded Files.
"
2151,source/pymupdf.pdf,"6.6.6 Searching for Text
"
2152,source/pymupdf.pdf,"You can find out, exactly where on a page a certain text string appears:
"
2153,source/pymupdf.pdf,"areas = page.search_for(""mupdf"")
"
2154,source/pymupdf.pdf,"This delivers a list of rectangles (see Rect), each of which surrounds one occurrence of the string “mupdf” (case
insensitive). You could use this information to e.g. highlight those areas (PDF only) or create a cross reference of the
document.
"
2155,source/pymupdf.pdf,"Please also do have a look at chapter Working together: DisplayList and TextPage and at demo programs demo.py and
demo-lowlevel.py. Among other things they contain details on how the TextPage, Device and DisplayList classes can
be used for a more direct control, e.g. when performance considerations suggest it.
"
2156,source/pymupdf.pdf,"2 Page.get_text() is a convenience wrapper for several methods of another PyMuPDF class, TextPage. The names of these methods correspond
to the argument string passed to Page.get_text() : Page.get_text(“dict”) is equivalent to TextPage.extractDICT() .
"
2157,source/pymupdf.pdf,"30
Chapter 6. Tutorial
"
2158,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2159,source/pymupdf.pdf,"6.7 Stories: Generating PDF from HTML Source
"
2160,source/pymupdf.pdf,"The Story class is a new feature of PyMuPDF version 1.21.0. It represents support for MuPDF’s “story” interface.
"
2161,source/pymupdf.pdf,"The following is a quote from the book “MuPDF Explored” by Robin Watts from Artifex:
"
2162,source/pymupdf.pdf,"Stories provide a way to easily layout styled content for use with devices, such as those offered by Document Writers
(...). The concept of a story comes from desktop publishing, which in turn (...) gets it from newspapers. If you consider
a traditional newspaper layout, it will consist of various news articles (stories) that are laid out into multiple columns,
possibly across multiple pages.
"
2163,source/pymupdf.pdf,"Accordingly, MuPDF uses a story to represent a flow of text with styling information. The user of the story can then
supply a sequence of rectangles into which the story will be laid out, and the positioned text can then be drawn to an
output device. This keeps the concept of the text itself (the story) to be separated from the areas into which the text
should be flowed (the layout).
"
2164,source/pymupdf.pdf,"Note: A Story works somewhat similar to an internet browser: It faithfully parses and renders HTML hypertext and
also optional stylesheets (CSS). But its output is a PDF – not web pages.
"
2165,source/pymupdf.pdf,"When creating a Story, the input from up to three different information sources is taken into account. All these items
are optional.
"
2166,source/pymupdf.pdf,"1. HTML source code, either a Python string or created by the script using methods of Xml.
"
2167,source/pymupdf.pdf,"2. CSS (Cascaded Style Sheet) source code, provided as a Python string. CSS can be used to provide styling
information (text font size, color, etc.) like it would happen for web pages. Obviously, this string may also be
read from a file.
"
2168,source/pymupdf.pdf,"3. An Archive must be used whenever the DOM references images, or uses text fonts except the standard PDF Base
14 Fonts, CJK fonts and the NOTO fonts generated into the PyMuPDF binary.
"
2169,source/pymupdf.pdf,"The API allows creating DOMs completely from scratch, including desired styling information. It can also be used to
modify or extend provided HTML: text can be deleted or replaced, or its styling can be changed. Text – for example
extracted from databases – can also be added and fill template-like HTML documents.
"
2170,source/pymupdf.pdf,"It is not required to provide syntactically complete HTML documents: snippets like <b>Hello are fully accepted, and
many / most syntax errors are automatically corrected.
"
2171,source/pymupdf.pdf,"After the HTML is considered complete, it can be used to create a PDF document. This happens via the new Docu-
mentWriter class. The programmer calls its methods to create a new empty page, and passes rectangles to the Story to
fill them.
"
2172,source/pymupdf.pdf,"The story in turn will return completion codes indicating whether or not more content is waiting to be written. Which
part of the content will land in which rectangle or on which page is automatically determined by the story itself – it
cannot be influenced other than by providing the rectangles.
"
2173,source/pymupdf.pdf,"Please see the Stories recipes for a number of typical use cases.
"
2174,source/pymupdf.pdf,"6.7. Stories: Generating PDF from HTML Source
31
"
2175,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2176,source/pymupdf.pdf,"6.8 PDF Maintenance
"
2177,source/pymupdf.pdf,"PDFs are the only document type that can be modified using PyMuPDF. Other file types are read-only.
"
2178,source/pymupdf.pdf,"However, you can convert any document (including images) to a PDF and then apply all PyMuPDF features to the con-
version result. Find out more here Document.convert_to_pdf(), and also look at the demo script pdf-converter.py
which can convert any supported document to PDF.
"
2179,source/pymupdf.pdf,"Document.save() always stores a PDF in its current (potentially modified) state on disk.
"
2180,source/pymupdf.pdf,"You normally can choose whether to save to a new file, or just append your modifications to the existing one (“incre-
mental save”), which often is very much faster.
"
2181,source/pymupdf.pdf,"The following describes ways how you can manipulate PDF documents. This description is by no means complete:
much more can be found in the following chapters.
"
2182,source/pymupdf.pdf,"6.8.1 Modifying, Creating, Re-arranging and Deleting Pages
"
2183,source/pymupdf.pdf,"There are several ways to manipulate the so-called page tree (a structure describing all the pages) of a PDF:
"
2184,source/pymupdf.pdf,"Document.delete_page() and Document.delete_pages() delete pages.
"
2185,source/pymupdf.pdf,"Document.copy_page(), Document.fullcopy_page() and Document.move_page() copy or move a page to
other locations within the same document.
"
2186,source/pymupdf.pdf,"Document.select() shrinks a PDF down to selected pages. Parameter is a sequence3 of the page numbers that you
want to keep. These integers must all be in range 0 <= i < page_count. When executed, all pages missing in this list
will be deleted. Remaining pages will occur in the sequence and as many times (!) as you specify them.
"
2187,source/pymupdf.pdf,"So you can easily create new PDFs with
"
2188,source/pymupdf.pdf,"• the first or last 10 pages,
"
2189,source/pymupdf.pdf,"• only the odd or only the even pages (for doing double-sided printing),
"
2190,source/pymupdf.pdf,"• pages that do or don’t contain a given text,
"
2191,source/pymupdf.pdf,"• reverse the page sequence, ...
"
2192,source/pymupdf.pdf,"... whatever you can think of.
"
2193,source/pymupdf.pdf,"The saved new document will contain links, annotations and bookmarks that are still valid (i.a.w. either pointing to a
selected page or to some external resource).
"
2194,source/pymupdf.pdf,"Document.insert_page() and Document.new_page() insert new pages.
"
2195,source/pymupdf.pdf,"Pages themselves can moreover be modified by a range of methods (e.g. page rotation, annotation and link maintenance,
text and image insertion).
"
2196,source/pymupdf.pdf,"3 “Sequences” are Python objects conforming to the sequence protocol. These objects implement a method named __getitem__(). Best known
examples are Python tuples and lists. But array.array, numpy.array and PyMuPDF’s “geometry” objects (Operator Algebra for Geometry Objects)
are sequences, too. Refer to Using Python Sequences as Arguments in PyMuPDF for details.
"
2197,source/pymupdf.pdf,"32
Chapter 6. Tutorial
"
2198,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2199,source/pymupdf.pdf,"6.8.2 Joining and Splitting PDF Documents
"
2200,source/pymupdf.pdf,"Method Document.insert_pdf() copies pages between different PDF documents. Here is a simple joiner example
(doc1 and doc2 being opened PDFs):
"
2201,source/pymupdf.pdf,"# append complete doc2 to the end of doc1
doc1.insert_pdf(doc2)
"
2202,source/pymupdf.pdf,"Here is a snippet that splits doc1. It creates a new document of its first and its last 10 pages:
"
2203,source/pymupdf.pdf,"doc2 = fitz.open()
# new empty PDF
"
2204,source/pymupdf.pdf,"doc2.insert_pdf(doc1, to_page = 9)
# first 10 pages
"
2205,source/pymupdf.pdf,"doc2.insert_pdf(doc1, from_page = len(doc1) - 10) # last 10 pages
doc2.save(""first-and-last-10.pdf"")
"
2206,source/pymupdf.pdf,"More can be found in the Document chapter. Also have a look at PDFjoiner.py.
"
2207,source/pymupdf.pdf,"6.8.3 Embedding Data
"
2208,source/pymupdf.pdf,"PDFs can be used as containers for arbitrary data (executables, other PDFs, text or binary files, etc.) much like ZIP
archives.
"
2209,source/pymupdf.pdf,"PyMuPDF fully supports this feature via Document embfile_* methods and attributes. For some detail read Appendix
3, consult the Wiki on dealing with embedding files, or the example scripts embedded-copy.py, embedded-export.py,
embedded-import.py, and embedded-list.py.
"
2210,source/pymupdf.pdf,"6.8.4 Saving
"
2211,source/pymupdf.pdf,"As mentioned above, Document.save() will always save the document in its current state.
"
2212,source/pymupdf.pdf,"You can write changes back to the original PDF by specifying option incremental=True. This process is (usually)
extremely fast, since changes are appended to the original file without completely rewriting it.
"
2213,source/pymupdf.pdf,"Document.save() options correspond to options of MuPDF’s command line utility mutool clean, see the following
table.
"
2214,source/pymupdf.pdf,"Save Option
mutool
Effect
"
2215,source/pymupdf.pdf,"garbage=1
g
garbage collect unused objects
"
2216,source/pymupdf.pdf,"garbage=2
gg
in addition to 1, compact xref tables
"
2217,source/pymupdf.pdf,"garbage=3
ggg
in addition to 2, merge duplicate objects
"
2218,source/pymupdf.pdf,"garbage=4
gggg
in addition to 3, merge duplicate stream content
"
2219,source/pymupdf.pdf,"clean=True
cs
clean and sanitize content streams
"
2220,source/pymupdf.pdf,"deflate=True
z
deflate uncompressed streams
"
2221,source/pymupdf.pdf,"deflate_images=True
i
deflate image streams
"
2222,source/pymupdf.pdf,"deflate_fonts=True
f
deflate fontfile streams
"
2223,source/pymupdf.pdf,"ascii=True
a
convert binary data to ASCII format
"
2224,source/pymupdf.pdf,"linear=True
l
create a linearized version
"
2225,source/pymupdf.pdf,"expand=True
d
decompress all streams
"
2226,source/pymupdf.pdf,"Note: For an explanation of terms like object, stream, xref consult the Glossary chapter.
"
2227,source/pymupdf.pdf,"6.8. PDF Maintenance
33
"
2228,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2229,source/pymupdf.pdf,"For example, mutool clean -ggggz file.pdf yields excellent compression results. It corresponds to doc.save(filename,
garbage=4, deflate=True).
"
2230,source/pymupdf.pdf,"6.9 Closing
"
2231,source/pymupdf.pdf,"It is often desirable to “close” a document to relinquish control of the underlying file to the OS, while your program
continues.
"
2232,source/pymupdf.pdf,"This can be achieved by the Document.close() method. Apart from closing the underlying file, buffer areas associated
with the document will be freed.
"
2233,source/pymupdf.pdf,"6.10 Further Reading
"
2234,source/pymupdf.pdf,"Also have a look at PyMuPDF’s Wiki pages. Especially those named in the sidebar under title “Recipes” cover over
15 topics written in “How-To” style.
"
2235,source/pymupdf.pdf,"This document also contains a FAQ. This chapter has close connection to the aforementioned recipes, and it will be
extended with more content over time.
"
2236,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
2237,source/pymupdf.pdf,"34
Chapter 6. Tutorial
"
2238,source/pymupdf.pdf,"CHAPTER
"
2239,source/pymupdf.pdf,"SEVEN
"
2240,source/pymupdf.pdf,"OPENING FILES
"
2241,source/pymupdf.pdf,"7.1 Supported File Types
"
2242,source/pymupdf.pdf,"PyMuPDF supports the following file types:
"
2243,source/pymupdf.pdf,"7.2 How to Open a File
"
2244,source/pymupdf.pdf,"To open a file, do the following:
"
2245,source/pymupdf.pdf,"doc = fitz.open(""a.pdf"")
"
2246,source/pymupdf.pdf,"7.2.1 Opening with a Wrong File Extension
"
2247,source/pymupdf.pdf,"If you have a document with a wrong file extension for its type, you can still correctly open it.
"
2248,source/pymupdf.pdf,"Assume that “some.file” is actually an XPS. Open it like so:
"
2249,source/pymupdf.pdf,"doc = fitz.open(""some.file"", filetype=""xps"")
"
2250,source/pymupdf.pdf,"Note: PyMuPDF itself does not try to determine the file type from the file contents. You are responsible for supplying
the file type information in some way – either implicitly, via the file extension, or explicitly as shown with the filetype
parameter. There are pure Python packages like filetype that help you doing this. Also consult the Document chapter
for a full description.
"
2251,source/pymupdf.pdf,"If PyMuPDF encounters a file with an unknown / missing extension, it will try to open it as a PDF. So in these
cases there is no need for additional precautions. Similarly, for memory documents, you can just specify doc=fitz.
open(stream=mem_area) to open it as a PDF document.
"
2252,source/pymupdf.pdf,"If you attempt to open an unsupported file then PyMuPDF will throw a file data error.
"
2253,source/pymupdf.pdf,"35
"
2254,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2255,source/pymupdf.pdf,"7.3 Opening Files as Text
"
2256,source/pymupdf.pdf,"PyMuPDF has the capability to open any plain text file as a document. In order to do this you should provide the
filetype parameter for the fitz.open function as ""txt"".
"
2257,source/pymupdf.pdf,"doc = fitz.open(""my_program.py"", filetype=""txt"")
"
2258,source/pymupdf.pdf,"In this way you are able to open a variety of file types and perform the typical non-PDF specific features like text
searching, text extracting and page rendering. Obviously, once you have rendered your txt content, then saving as
PDF or merging with other PDF files is no problem.
"
2259,source/pymupdf.pdf,"7.3.1 Examples
"
2260,source/pymupdf.pdf,"Opening a C# file
"
2261,source/pymupdf.pdf,"doc = fitz.open(""MyClass.cs"", filetype=""txt"")
"
2262,source/pymupdf.pdf,"Opening an XML file
"
2263,source/pymupdf.pdf,"doc = fitz.open(""my_data.xml"", filetype=""txt"")
"
2264,source/pymupdf.pdf,"Opening a JSON file
"
2265,source/pymupdf.pdf,"doc = fitz.open(""more_of_my_data.json"", filetype=""txt"")
"
2266,source/pymupdf.pdf,"And so on!
"
2267,source/pymupdf.pdf,"As you can imagine many text based file formats can be very simply opened and interpreted by PyMuPDF. This can
make data analysis and extraction for a wide range of previously unavailable files suddenly possible.
"
2268,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
2269,source/pymupdf.pdf,"36
Chapter 7. Opening Files
"
2270,source/pymupdf.pdf,"CHAPTER
"
2271,source/pymupdf.pdf,"EIGHT
"
2272,source/pymupdf.pdf,"TEXT
"
2273,source/pymupdf.pdf,"8.1 How to Extract all Document Text
"
2274,source/pymupdf.pdf,"This script will take a document filename and generate a text file from all of its text.
"
2275,source/pymupdf.pdf,"The document can be any supported type.
"
2276,source/pymupdf.pdf,"The script works as a command line tool which expects the document filename supplied as a parameter. It generates
one text file named “filename.txt” in the script directory. Text of pages is separated by a form feed character:
"
2277,source/pymupdf.pdf,"import sys, pathlib, fitz
fname = sys.argv[1]
# get document filename
"
2278,source/pymupdf.pdf,"with fitz.open(fname) as doc:
# open document
"
2279,source/pymupdf.pdf,"text = chr(12).join([page.get_text() for page in doc])
"
2280,source/pymupdf.pdf,"# write as a binary file to support non-ASCII characters
pathlib.Path(fname + "".txt"").write_bytes(text.encode())
"
2281,source/pymupdf.pdf,"The output will be plain text as it is coded in the document. No effort is made to prettify in any way. Specifically for
PDF, this may mean output not in usual reading order, unexpected line breaks and so forth.
"
2282,source/pymupdf.pdf,"You have many options to rectify this – see chapter Appendix 2: Considerations on Embedded Files. Among them are:
"
2283,source/pymupdf.pdf,"1. Extract text in HTML format and store it as a HTML document, so it can be viewed in any browser.
"
2284,source/pymupdf.pdf,"2. Extract text as a list of text blocks via Page.get_text(“blocks”). Each item of this list contains position information
for its text, which can be used to establish a convenient reading order.
"
2285,source/pymupdf.pdf,"3. Extract a list of single words via Page.get_text(“words”). Its items are words with position information. Use it
to determine text contained in a given rectangle – see next section.
"
2286,source/pymupdf.pdf,"See the following two sections for examples and further explanations.
"
2287,source/pymupdf.pdf,"8.2 How to Extract Key-Value Pairs from a Page
"
2288,source/pymupdf.pdf,"If the layout of a page is “predictable” in some sense, then there is a simple way to find the values for a given set of
keywords fast and easily – without using regular expressions. Please see this example script.
"
2289,source/pymupdf.pdf,"“Predictable” in this context means:
"
2290,source/pymupdf.pdf,"• Every keyword is followed by its value – no other text is present in between them.
"
2291,source/pymupdf.pdf,"• The bottom of the value’s boundary box is not above the one of the keyword.
"
2292,source/pymupdf.pdf,"• There are no other restrictions: the page layout may or may not be fixed, and the text may also have been stored
as one string. Key and value may have any distance from each other.
"
2293,source/pymupdf.pdf,"37
"
2294,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2295,source/pymupdf.pdf,"For example, the following five key-value pairs will be correctly identified:
"
2296,source/pymupdf.pdf,"key1
value1
key2
value2
key3
value3 blah, blah, blah key4 value4 some other text key5 value5 ...
"
2297,source/pymupdf.pdf,"8.3 How to Extract Text from within a Rectangle
"
2298,source/pymupdf.pdf,"There is now (v1.18.0) more than one way to achieve this. We therefore have created a folder in the PyMuPDF-Utilities
repository specifically dealing with this topic.
"
2299,source/pymupdf.pdf,"8.4 How to Extract Text in Natural Reading Order
"
2300,source/pymupdf.pdf,"One of the common issues with PDF text extraction is, that text may not appear in any particular reading order.
"
2301,source/pymupdf.pdf,"This is the responsibility of the PDF creator (software or a human). For example, page headers may have been inserted
in a separate step – after the document had been produced. In such a case, the header text will appear at the end of a
page text extraction (although it will be correctly shown by PDF viewer software). For example, the following snippet
will add some header and footer lines to an existing PDF:
"
2302,source/pymupdf.pdf,"doc = fitz.open(""some.pdf"")
header = ""Header""
# text in header
"
2303,source/pymupdf.pdf,"footer = ""Page %i of %i""
# text in footer
"
2304,source/pymupdf.pdf,"for page in doc:
page.insert_text((50, 50), header)
# insert header
"
2305,source/pymupdf.pdf,"page.insert_text(
# insert footer 50 points above page bottom
"
2306,source/pymupdf.pdf,"(50, page.rect.height - 50),
footer % (page.number + 1, doc.page_count),
)
"
2307,source/pymupdf.pdf,"The text sequence extracted from a page modified in this way will look like this:
"
2308,source/pymupdf.pdf,"1. original text
"
2309,source/pymupdf.pdf,"2. header line
"
2310,source/pymupdf.pdf,"3. footer line
"
2311,source/pymupdf.pdf,"PyMuPDF has several means to re-establish some reading sequence or even to re-generate a layout close to the original:
"
2312,source/pymupdf.pdf,"1. Use sort parameter of Page.get_text(). It will sort the output from top-left to bottom-right (ignored for
XHTML, HTML and XML output).
"
2313,source/pymupdf.pdf,"2. Use the fitz module in CLI: python -m fitz gettext ..., which produces a text file where text has been
re-arranged in layout-preserving mode. Many options are available to control the output.
"
2314,source/pymupdf.pdf,"You can also use the above mentioned script with your modifications.
"
2315,source/pymupdf.pdf,"38
Chapter 8. Text
"
2316,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2317,source/pymupdf.pdf,"8.5 How to Extract Table Content from Documents
"
2318,source/pymupdf.pdf,"If you see a table in a document, you are normally not looking at something like an embedded Excel or other identifiable
object. It usually is just normal, standard text, formatted to appear as tabular data.
"
2319,source/pymupdf.pdf,"Extracting tabular data from such a page area therefore means that you must find a way to identify the table area
(i.e. its boundary box), then (1) graphically indicate table and column borders, and (2) then extract text based on this
information.
"
2320,source/pymupdf.pdf,"This can be a very complex task, depending on details like the presence or absence of lines, rectangles or other sup-
porting vector graphics.
"
2321,source/pymupdf.pdf,"Method Page.find_tables() does all that for you, with a high table detection precision. Its great advantage is that
there are no external library dependencies, nor the need to employ artificial intelligence or machine learning technolo-
gies. It also provides an integrated interface to the well-known Python package for data analysis pandas.
"
2322,source/pymupdf.pdf,"Please have a look at example Jupyter notebooks, which cover standard situations like multiple tables on one page or
joining table fragments across multiple pages.
"
2323,source/pymupdf.pdf,"8.6 How to Mark Extracted Text
"
2324,source/pymupdf.pdf,"There is a standard search function to search for arbitrary text on a page: Page.search_for(). It returns a list of
Rect objects which surround a found occurrence. These rectangles can for example be used to automatically insert
annotations which visibly mark the found text.
"
2325,source/pymupdf.pdf,"This method has advantages and drawbacks. Pros are:
"
2326,source/pymupdf.pdf,"• The search string can contain blanks and wrap across lines
"
2327,source/pymupdf.pdf,"• Upper or lower case characters are treated equal
"
2328,source/pymupdf.pdf,"• Word hyphenation at line ends is detected and resolved
"
2329,source/pymupdf.pdf,"• Return may also be a list of Quad objects to precisely locate text that is not parallel to either axis – using Quad
"
2330,source/pymupdf.pdf,"output is also recommended, when page rotation is not zero.
"
2331,source/pymupdf.pdf,"But you also have other options:
"
2332,source/pymupdf.pdf,"import sys
import fitz
"
2333,source/pymupdf.pdf,"def mark_word(page, text):
"
2334,source/pymupdf.pdf,"""""""Underline each word that contains 'text'.
""""""
found = 0
wlist = page.get_text(""words"", delimiters=None)
# make the word list
"
2335,source/pymupdf.pdf,"for w in wlist:
# scan through all words on page
"
2336,source/pymupdf.pdf,"if text in w[4]:
# w[4] is the word's string
"
2337,source/pymupdf.pdf,"found += 1
# count
"
2338,source/pymupdf.pdf,"r = fitz.Rect(w[:4])
# make rect from word bbox
"
2339,source/pymupdf.pdf,"page.add_underline_annot(r)
# underline
"
2340,source/pymupdf.pdf,"return found
"
2341,source/pymupdf.pdf,"fname = sys.argv[1]
# filename
"
2342,source/pymupdf.pdf,"(continues on next page)
"
2343,source/pymupdf.pdf,"8.5. How to Extract Table Content from Documents
39
"
2344,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2345,source/pymupdf.pdf,"(continued from previous page)
"
2346,source/pymupdf.pdf,"text = sys.argv[2]
# search string
"
2347,source/pymupdf.pdf,"doc = fitz.open(fname)
"
2348,source/pymupdf.pdf,"print(""underlining words containing '%s' in document '%s'"" % (word, doc.name))
"
2349,source/pymupdf.pdf,"new_doc = False
# indicator if anything found at all
"
2350,source/pymupdf.pdf,"for page in doc:
# scan through the pages
"
2351,source/pymupdf.pdf,"found = mark_word(page, text)
# mark the page's words
"
2352,source/pymupdf.pdf,"if found:
# if anything found ...
"
2353,source/pymupdf.pdf,"new_doc = True
print(""found '%s' %i times on page %i"" % (text, found, page.number + 1))
"
2354,source/pymupdf.pdf,"if new_doc:
doc.save(""marked-"" + doc.name)
"
2355,source/pymupdf.pdf,"This script uses Page.get_text(""words"") to look for a string, handed in via cli parameter. This method separates a
page’s text into “words” using white spaces as delimiters. Further remarks:
"
2356,source/pymupdf.pdf,"• If found, the complete word containing the string is marked (underlined) – not only the search string.
"
2357,source/pymupdf.pdf,"• The search string may not contain word delimiters.
By default, word delimiters are white spaces and
the non-breaking space chr(0xA0). If you use extra delimiting characters like page.get_text(""words"",
delimiters=""./,"") then none of these characters should be included in your search string either.
"
2358,source/pymupdf.pdf,"• As shown here, upper / lower cases are respected. But this can be changed by using the string method lower()
(or even regular expressions) in function mark_word.
"
2359,source/pymupdf.pdf,"• There is no upper limit: all occurrences will be detected.
"
2360,source/pymupdf.pdf,"• You can use anything to mark the word: ‘Underline’, ‘Highlight’, ‘StrikeThrough’ or ‘Square’ annotations, etc.
"
2361,source/pymupdf.pdf,"• Here is an example snippet of a page of this manual, where “MuPDF” has been used as the search string. Note
that all strings containing “MuPDF” have been completely underlined (not just the search string).
"
2362,source/pymupdf.pdf,"40
Chapter 8. Text
"
2363,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2364,source/pymupdf.pdf,"8.7 How to Mark Searched Text
"
2365,source/pymupdf.pdf,"This script searches for text and marks it:
"
2366,source/pymupdf.pdf,"# -*- coding: utf-8 -*-
import fitz
"
2367,source/pymupdf.pdf,"# the document to annotate
doc = fitz.open(""tilted-text.pdf"")
"
2368,source/pymupdf.pdf,"# the text to be marked
needle = ""¡La práctica hace el campeón!""
"
2369,source/pymupdf.pdf,"# work with first page only
page = doc[0]
"
2370,source/pymupdf.pdf,"# get list of text locations
# we use ""quads"", not rectangles because text may be tilted!
rl = page.search_for(needle, quads=True)
"
2371,source/pymupdf.pdf,"# mark all found quads with one annotation
page.add_squiggly_annot(rl)
"
2372,source/pymupdf.pdf,"# save to a new PDF
doc.save(""a-squiggly.pdf"")
"
2373,source/pymupdf.pdf,"The result looks like this:
"
2374,source/pymupdf.pdf,"8.7. How to Mark Searched Text
41
"
2375,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2376,source/pymupdf.pdf,"8.8 How to Mark Non-horizontal Text
"
2377,source/pymupdf.pdf,"The previous section already shows an example for marking non-horizontal text, that was detected by text searching.
"
2378,source/pymupdf.pdf,"But text extraction with the “dict” / “rawdict” options of Page.get_text() may also return text with a non-zero
angle to the x-axis. This is indicated by the value of the line dictionary’s ""dir"" key: it is the tuple (cosine, sine)
for that angle. If line[""dir""] != (1, 0), then the text of all its spans is rotated by (the same) angle != 0.
"
2379,source/pymupdf.pdf,"The “bboxes” returned by the method however are rectangles only – not quads. So, to mark span text correctly, its quad
must be recovered from the data contained in the line and span dictionary. Do this with the following utility function
(new in v1.18.9):
"
2380,source/pymupdf.pdf,"span_quad = fitz.recover_quad(line[""dir""], span)
annot = page.add_highlight_annot(span_quad)
# this will mark the complete span text
"
2381,source/pymupdf.pdf,"If you want to mark the complete line or a subset of its spans in one go, use the following snippet (works for v1.18.10
or later):
"
2382,source/pymupdf.pdf,"line_quad = fitz.recover_line_quad(line, spans=line[""spans""][1:-1])
page.add_highlight_annot(line_quad)
"
2383,source/pymupdf.pdf,"The spans argument above may specify any sub-list of line[""spans""]. In the example above, the second to second-
to-last span are marked. If omitted, the complete line is taken.
"
2384,source/pymupdf.pdf,"8.9 How to Analyze Font Characteristics
"
2385,source/pymupdf.pdf,"To analyze the characteristics of text in a PDF use this elementary script as a starting point:
"
2386,source/pymupdf.pdf,"import sys
"
2387,source/pymupdf.pdf,"import fitz
"
2388,source/pymupdf.pdf,"def flags_decomposer(flags):
"
2389,source/pymupdf.pdf,"""""""Make font flags human readable.""""""
l = []
if flags & 2 ** 0:
l.append(""superscript"")
"
2390,source/pymupdf.pdf,"(continues on next page)
"
2391,source/pymupdf.pdf,"42
Chapter 8. Text
"
2392,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2393,source/pymupdf.pdf,"(continued from previous page)
"
2394,source/pymupdf.pdf,"if flags & 2 ** 1:
l.append(""italic"")
"
2395,source/pymupdf.pdf,"if flags & 2 ** 2:
l.append(""serifed"")
"
2396,source/pymupdf.pdf,"else:
l.append(""sans"")
"
2397,source/pymupdf.pdf,"if flags & 2 ** 3:
l.append(""monospaced"")
"
2398,source/pymupdf.pdf,"else:
l.append(""proportional"")
"
2399,source/pymupdf.pdf,"if flags & 2 ** 4:
l.append(""bold"")
"
2400,source/pymupdf.pdf,"return "", "".join(l)
"
2401,source/pymupdf.pdf,"doc = fitz.open(sys.argv[1])
page = doc[0]
"
2402,source/pymupdf.pdf,"# read page text as a dictionary, suppressing extra spaces in CJK fonts
blocks = page.get_text(""dict"", flags=11)[""blocks""]
for b in blocks:
# iterate through the text blocks
"
2403,source/pymupdf.pdf,"for l in b[""lines""]:
# iterate through the text lines
"
2404,source/pymupdf.pdf,"for s in l[""spans""]:
# iterate through the text spans
"
2405,source/pymupdf.pdf,"print("""")
font_properties = ""Font: '%s' (%s), size %g, color #%06x"" % (
s[""font""],
# font name
"
2406,source/pymupdf.pdf,"flags_decomposer(s[""flags""]),
# readable font flags
"
2407,source/pymupdf.pdf,"s[""size""],
# font size
"
2408,source/pymupdf.pdf,"s[""color""],
# font color
"
2409,source/pymupdf.pdf,")
print(""Text: '%s'"" % s[""text""])
# simple print of text
"
2410,source/pymupdf.pdf,"print(font_properties)
"
2411,source/pymupdf.pdf,"Here is the PDF page and the script output:
"
2412,source/pymupdf.pdf,"8.9. How to Analyze Font Characteristics
43
"
2413,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2414,source/pymupdf.pdf,"8.10 How to Insert Text
"
2415,source/pymupdf.pdf,"PyMuPDF provides ways to insert text on new or existing PDF pages with the following features:
"
2416,source/pymupdf.pdf,"• choose the font, including built-in fonts and fonts that are available as files
"
2417,source/pymupdf.pdf,"• choose text characteristics like bold, italic, font size, font color, etc.
"
2418,source/pymupdf.pdf,"• position the text in multiple ways:
"
2419,source/pymupdf.pdf,"– either as simple line-oriented output starting at a certain point,
"
2420,source/pymupdf.pdf,"– or fitting text in a box provided as a rectangle, in which case text alignment choices are also available,
"
2421,source/pymupdf.pdf,"– choose whether text should be put in foreground (overlay existing content),
"
2422,source/pymupdf.pdf,"– all text can be arbitrarily “morphed”, i.e. its appearance can be changed via a Matrix, to achieve effects like
scaling, shearing or mirroring,
"
2423,source/pymupdf.pdf,"– independently from morphing and in addition to that, text can be rotated by integer multiples of 90 degrees.
"
2424,source/pymupdf.pdf,"All of the above is provided by three basic Page, resp. Shape methods:
"
2425,source/pymupdf.pdf,"• Page.insert_font() – install a font for the page for later reference. The result is reflected in the output of
"
2426,source/pymupdf.pdf,"Document.get_page_fonts(). The font can be:
"
2427,source/pymupdf.pdf,"– provided as a file,
"
2428,source/pymupdf.pdf,"– via Font (then use Font.buffer)
"
2429,source/pymupdf.pdf,"– already present somewhere in this or another PDF, or
"
2430,source/pymupdf.pdf,"– be a built-in font.
"
2431,source/pymupdf.pdf,"44
Chapter 8. Text
"
2432,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2433,source/pymupdf.pdf,"• Page.insert_text() – write some lines of text. Internally, this uses Shape.insert_text().
"
2434,source/pymupdf.pdf,"• Page.insert_textbox() – fit text in a given rectangle. Here you can choose text alignment features (left,
right, centered, justified) and you keep control as to whether text actually fits. Internally, this uses Shape.
insert_textbox().
"
2435,source/pymupdf.pdf,"Note: Both text insertion methods automatically install the font as necessary.
"
2436,source/pymupdf.pdf,"8.10.1 How to Write Text Lines
"
2437,source/pymupdf.pdf,"Output some text lines on a page:
"
2438,source/pymupdf.pdf,"import fitz
doc = fitz.open(...)
# new or existing PDF
"
2439,source/pymupdf.pdf,"page = doc.new_page()
# new or existing page via doc[n]
"
2440,source/pymupdf.pdf,"p = fitz.Point(50, 72)
# start point of 1st line
"
2441,source/pymupdf.pdf,"text = ""Some text,\\nspread across\\nseveral lines.""
# the same result is achievable by
# text = [""Some text"", ""spread across"", ""several lines.""]
"
2442,source/pymupdf.pdf,"rc = page.insert_text(p,
# bottom-left of 1st char
"
2443,source/pymupdf.pdf,"text,
# the text (honors '\\n')
"
2444,source/pymupdf.pdf,"fontname = ""helv"",
# the default font
"
2445,source/pymupdf.pdf,"fontsize = 11,
# the default font size
"
2446,source/pymupdf.pdf,"rotate = 0,
# also available: 90, 180, 270
"
2447,source/pymupdf.pdf,")
"
2448,source/pymupdf.pdf,"print(""%i lines printed on page %i."" % (rc, page.number))
"
2449,source/pymupdf.pdf,"doc.save(""text.pdf"")
"
2450,source/pymupdf.pdf,"With this method, only the number of lines will be controlled to not go beyond page height. Surplus lines will not be
written and the number of actual lines will be returned. The calculation uses a line height calculated from the fontsize
and 36 points (0.5 inches) as bottom margin.
"
2451,source/pymupdf.pdf,"Line width is ignored. The surplus part of a line will simply be invisible.
"
2452,source/pymupdf.pdf,"However, for built-in fonts there are ways to calculate the line width beforehand - see get_text_length().
"
2453,source/pymupdf.pdf,"Here is another example. It inserts 4 text strings using the four different rotation options, and thereby explains, how the
text insertion point must be chosen to achieve the desired result:
"
2454,source/pymupdf.pdf,"import fitz
doc = fitz.open()
page = doc.new_page()
# the text strings, each having 3 lines
text1 = ""rotate=0\\nLine 2\\nLine 3""
text2 = ""rotate=90\\nLine 2\\nLine 3""
text3 = ""rotate=-90\\nLine 2\\nLine 3""
text4 = ""rotate=180\\nLine 2\\nLine 3""
red = (1, 0, 0) # the color for the red dots
# the insertion points, each with a 25 pix distance from the corners
p1 = fitz.Point(25, 25)
"
2455,source/pymupdf.pdf,"(continues on next page)
"
2456,source/pymupdf.pdf,"8.10. How to Insert Text
45
"
2457,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2458,source/pymupdf.pdf,"(continued from previous page)
"
2459,source/pymupdf.pdf,"p2 = fitz.Point(page.rect.width - 25, 25)
p3 = fitz.Point(25, page.rect.height - 25)
p4 = fitz.Point(page.rect.width - 25, page.rect.height - 25)
# create a Shape to draw on
shape = page.new_shape()
"
2460,source/pymupdf.pdf,"# draw the insertion points as red, filled dots
shape.draw_circle(p1,1)
shape.draw_circle(p2,1)
shape.draw_circle(p3,1)
shape.draw_circle(p4,1)
shape.finish(width=0.3, color=red, fill=red)
"
2461,source/pymupdf.pdf,"# insert the text strings
shape.insert_text(p1, text1)
shape.insert_text(p3, text2, rotate=90)
shape.insert_text(p2, text3, rotate=-90)
shape.insert_text(p4, text4, rotate=180)
"
2462,source/pymupdf.pdf,"# store our work to the page
shape.commit()
doc.save(...)
"
2463,source/pymupdf.pdf,"This is the result:
"
2464,source/pymupdf.pdf,"8.10.2 How to Fill a Text Box
"
2465,source/pymupdf.pdf,"This script fills 4 different rectangles with text, each time choosing a different rotation value:
"
2466,source/pymupdf.pdf,"import fitz
"
2467,source/pymupdf.pdf,"doc = fitz.open()
# new or existing PDF
"
2468,source/pymupdf.pdf,"page = doc.new_page()
# new page, or choose doc[n]
"
2469,source/pymupdf.pdf,"(continues on next page)
"
2470,source/pymupdf.pdf,"46
Chapter 8. Text
"
2471,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2472,source/pymupdf.pdf,"(continued from previous page)
"
2473,source/pymupdf.pdf,"# write in this overall area
rect = fitz.Rect(100, 100, 300, 150)
"
2474,source/pymupdf.pdf,"# partition the area in 4 equal sub-rectangles
CELLS = fitz.make_table(rect, cols=4, rows=1)
"
2475,source/pymupdf.pdf,"t1 = ""text with rotate = 0.""
# these texts we will written
"
2476,source/pymupdf.pdf,"t2 = ""text with rotate = 90.""
t3 = ""text with rotate = 180.""
t4 = ""text with rotate = 270.""
text = [t1, t2, t3, t4]
red = fitz.pdfcolor[""red""]
# some colors
"
2477,source/pymupdf.pdf,"gold = fitz.pdfcolor[""gold""]
blue = fitz.pdfcolor[""blue""]
""""""
We use a Shape object (something like a canvas) to output the text and
the rectangles surrounding it for demonstration.
""""""
shape = page.new_shape()
# create Shape
"
2478,source/pymupdf.pdf,"for i in range(len(CELLS[0])):
shape.draw_rect(CELLS[0][i])
# draw rectangle
"
2479,source/pymupdf.pdf,"shape.insert_textbox(
CELLS[0][i], text[i], fontname=""hebo"", color=blue, rotate=90 * i
)
"
2480,source/pymupdf.pdf,"shape.finish(width=0.3, color=red, fill=gold)
"
2481,source/pymupdf.pdf,"shape.commit()
# write all stuff to the page
"
2482,source/pymupdf.pdf,"doc.ez_save(__file__.replace("".py"", "".pdf""))
"
2483,source/pymupdf.pdf,"Some default values were used above: font size 11 and text alignment “left”. The result will look like this:
"
2484,source/pymupdf.pdf,"8.10.3 How to Fill a Box with HTML Text
"
2485,source/pymupdf.pdf,"Method Page.insert_htmlbox() offers a much more powerful way to insert text in a rectangle.
"
2486,source/pymupdf.pdf,"Instead of simple, plain text, this method accepts HTML source, which may not only contain HTML tags but also
styling instructions to influence things like font, font weight (bold) and style (italic), color and much more.
"
2487,source/pymupdf.pdf,"It is also possible to mix multiple fonts and languages, to output HTML tables and to insert images and URI links.
"
2488,source/pymupdf.pdf,"For even more styling flexibility, an additional CSS source may also be given.
"
2489,source/pymupdf.pdf,"The method is based on the Story class. Therefore, complex script systems like Devanagari, Nepali, Tamil and many
are supported and written correctly thanks to using the HarfBuzz library - which provides this so-called “text shaping”
feature.
"
2490,source/pymupdf.pdf,"8.10. How to Insert Text
47
"
2491,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2492,source/pymupdf.pdf,"Any required fonts to output characters are automatically pulled in from the Google NOTO font library - as a fallback
(when the – optionally supplied – user font(s) do not contain some glyphs).
"
2493,source/pymupdf.pdf,"As a small glimpse into the features offered here, we will output the following HTML-enriched text:
"
2494,source/pymupdf.pdf,"import fitz
"
2495,source/pymupdf.pdf,"rect = fitz.Rect(100, 100, 400, 300)
"
2496,source/pymupdf.pdf,"text = """"""Lorem ipsum dolor sit amet, consectetur adipisici elit, sed
"
2497,source/pymupdf.pdf,"eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad
minim veniam, quis nostrud exercitation <b>ullamco <i>laboris</i></b>
nisi ut aliquid ex ea commodi consequat. Quis aute iure
<span style=""color: #f00;"">reprehenderit</span>
in <span style=""color: #0f0;font-weight:bold;"">voluptate</span> velit
esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat
cupiditat non proident, sunt in culpa qui
<a href=""https://www.artifex.com"">officia</a> deserunt mollit anim id
est laborum.""""""
"
2498,source/pymupdf.pdf,"doc = fitz.Document()
"
2499,source/pymupdf.pdf,"page = doc.new_page()
page.insert_htmlbox(rect, text, css=""* {font-family: sans-serif;font-size:14px;}"")
"
2500,source/pymupdf.pdf,"doc.ez_save(__file__.replace("".py"", "".pdf""))
"
2501,source/pymupdf.pdf,"Please note how the “css” parameter is used to globally select the default “sans-serif” font and a font size of 14.
"
2502,source/pymupdf.pdf,"The result will look like this:
"
2503,source/pymupdf.pdf,"48
Chapter 8. Text
"
2504,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2505,source/pymupdf.pdf,"How to output HTML tables and images
"
2506,source/pymupdf.pdf,"Here is another example that outputs a table with this method. This time, we are including all the styling in the HTML
source itself. Please also note, how it works to include an image - even within a table cell:
"
2507,source/pymupdf.pdf,"import fitz_new as fitz
import os
"
2508,source/pymupdf.pdf,"filedir = os.path.dirname(__file__)
"
2509,source/pymupdf.pdf,"text = """"""
<style>
body {
"
2510,source/pymupdf.pdf,"font-family: sans-serif;
"
2511,source/pymupdf.pdf,"}
"
2512,source/pymupdf.pdf,"td,
th {
"
2513,source/pymupdf.pdf,"border: 1px solid blue;
border-right: none;
border-bottom: none;
padding: 5px;
text-align: center;
"
2514,source/pymupdf.pdf,"}
"
2515,source/pymupdf.pdf,"table {
"
2516,source/pymupdf.pdf,"border-right: 1px solid blue;
border-bottom: 1px solid blue;
border-spacing: 0;
"
2517,source/pymupdf.pdf,"}
</style>
"
2518,source/pymupdf.pdf,"<body>
<p><b>Some Colors</b></p>
<table>
"
2519,source/pymupdf.pdf,"<tr>
<th>Lime</th>
<th>Lemon</th>
<th>Image</th>
<th>Mauve</th>
</tr>
<tr>
<td>Green</td>
<td>Yellow</td>
<td><img src=""img-cake.png"" width=50></td>
<td>Between<br>Gray and Purple</td>
</tr>
"
2520,source/pymupdf.pdf,"</table>
</body>
""""""
"
2521,source/pymupdf.pdf,"doc = fitz.Document()
"
2522,source/pymupdf.pdf,"(continues on next page)
"
2523,source/pymupdf.pdf,"8.10. How to Insert Text
49
"
2524,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2525,source/pymupdf.pdf,"(continued from previous page)
"
2526,source/pymupdf.pdf,"page = doc.new_page()
rect = page.rect + (36, 36, -36, -36)
"
2527,source/pymupdf.pdf,"# we must specify an Archive because of the image
page.insert_htmlbox(rect, text, archive=fitz.Archive("".""))
"
2528,source/pymupdf.pdf,"doc.ez_save(__file__.replace("".py"", "".pdf""))
"
2529,source/pymupdf.pdf,"The result will look like this:
"
2530,source/pymupdf.pdf,"How to Output Languages of the World
"
2531,source/pymupdf.pdf,"Our third example will demonstrate the automatic multi-language support. It includes automatic text shaping for
complex scripting systems like Devanagari and right-to-left languages:
"
2532,source/pymupdf.pdf,"import fitz
"
2533,source/pymupdf.pdf,"greetings = (
"
2534,source/pymupdf.pdf,"""Hello, World!"",
# english
"
2535,source/pymupdf.pdf,"""Hallo, Welt!"",
# german
"
2536,source/pymupdf.pdf,""" !"",
# persian
"
2537,source/pymupdf.pdf,""", !"",
# tamil
"
2538,source/pymupdf.pdf,"""!"",
# thai
"
2539,source/pymupdf.pdf,""" !"",
# ucranian
"
2540,source/pymupdf.pdf,""" !"",
# hebrew
"
2541,source/pymupdf.pdf,""" !"",
# bengali
"
2542,source/pymupdf.pdf,""""",
# chinese
"
2543,source/pymupdf.pdf,""""",
# japanese
"
2544,source/pymupdf.pdf,""", !"",
# korean
"
2545,source/pymupdf.pdf,""",
!"",
# sanskrit
"
2546,source/pymupdf.pdf,""" !"",
# hindi
"
2547,source/pymupdf.pdf,"(continues on next page)
"
2548,source/pymupdf.pdf,"50
Chapter 8. Text
"
2549,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2550,source/pymupdf.pdf,"(continued from previous page)
"
2551,source/pymupdf.pdf,")
doc = fitz.open()
page = doc.new_page()
rect = (50, 50, 200, 500)
"
2552,source/pymupdf.pdf,"# join greetings into one text string
text = "" ... "".join([t for t in greetings])
"
2553,source/pymupdf.pdf,"# the output of the above is simple:
page.insert_htmlbox(rect, text)
doc.save(__file__.replace("".py"", "".pdf""))
"
2554,source/pymupdf.pdf,"And this is the output:
"
2555,source/pymupdf.pdf,"How to Specify your Own Fonts
"
2556,source/pymupdf.pdf,"Define your font files in CSS syntax using the @font-face statement. You need a separate @font-face for every
combination of font weight and font style (e.g. bold or italic) you want to be supported. The following example uses
the famous MS Comic Sans font in its four variants regular, bold, italic and bold-italic.
"
2557,source/pymupdf.pdf,"As these four font files are located in the system’s folder C:/Windows/Fonts the method needs an Archive definition
that points to that folder:
"
2558,source/pymupdf.pdf,"""""""
How to use your own fonts with method Page.insert_htmlbox().
""""""
import fitz_new as fitz
"
2559,source/pymupdf.pdf,"# Example text
text = """"""Lorem ipsum dolor sit amet, consectetur adipisici elit, sed
"
2560,source/pymupdf.pdf,"(continues on next page)
"
2561,source/pymupdf.pdf,"8.10. How to Insert Text
51
"
2562,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2563,source/pymupdf.pdf,"(continued from previous page)
"
2564,source/pymupdf.pdf,"eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad
minim veniam, quis nostrud exercitation <b>ullamco <i>laboris</i></b>
nisi ut aliquid ex ea commodi consequat. Quis aute iure
<span style=""color: red;"">reprehenderit</span>
in <span style=""color: green;font-weight:bold;"">voluptate</span> velit
esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat
cupiditat non proident, sunt in culpa qui
<a href=""https://www.artifex.com"">officia</a> deserunt mollit anim id
est laborum.""""""
"
2565,source/pymupdf.pdf,"""""""
We need an Archive object to show where font files are located.
We intend to use the font family ""MS Comic Sans"".
""""""
arch = fitz.Archive(""C:/Windows/Fonts"")
"
2566,source/pymupdf.pdf,"# These statements define which font file to use for regular, bold,
# italic and bold-italic text.
# We assign an arbitary common font-family for all 4 font files.
# The Story algorithm will select the right file as required.
# We request to use ""comic"" throughout the text.
css = """"""
@font-face {font-family: comic; src: url(comic.ttf);}
@font-face {font-family: comic; src: url(comicbd.ttf);font-weight: bold;}
@font-face {font-family: comic; src: url(comicz.ttf);font-weight: bold;font-style:␣
"
2567,source/pymupdf.pdf,"˓→italic;}
@font-face {font-family: comic; src: url(comici.ttf);font-style: italic;}
* {font-family: comic;}
""""""
"
2568,source/pymupdf.pdf,"doc = fitz.Document()
page = doc.new_page(width=150, height=150)
# make small page
"
2569,source/pymupdf.pdf,"page.insert_htmlbox(page.rect, text, css=css, archive=arch)
"
2570,source/pymupdf.pdf,"doc.subset_fonts(verbose=True)
# build subset fonts to reduce file size
"
2571,source/pymupdf.pdf,"doc.ez_save(__file__.replace("".py"", "".pdf""))
"
2572,source/pymupdf.pdf,"52
Chapter 8. Text
"
2573,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2574,source/pymupdf.pdf,"How to Request Text Alignment
"
2575,source/pymupdf.pdf,"This example combines multiple requirements:
"
2576,source/pymupdf.pdf,"• Rotate the text by 90 degrees anti-clockwise.
"
2577,source/pymupdf.pdf,"• Use a font from package pymupdf-fonts. You will see that the respective CSS definitions are a lot easier in this
case.
"
2578,source/pymupdf.pdf,"• Align the text with the “justify” option.
"
2579,source/pymupdf.pdf,"""""""
How to use a pymupdf font with method Page.insert_htmlbox().
""""""
import fitz_new as fitz
"
2580,source/pymupdf.pdf,"# Example text
text = """"""Lorem ipsum dolor sit amet, consectetur adipisici elit, sed
"
2581,source/pymupdf.pdf,"eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad
minim veniam, quis nostrud exercitation <b>ullamco <i>laboris</i></b>
nisi ut aliquid ex ea commodi consequat. Quis aute iure
<span style=""color: red;"">reprehenderit</span>
in <span style=""color: green;font-weight:bold;"">voluptate</span> velit
esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat
cupiditat non proident, sunt in culpa qui
<a href=""https://www.artifex.com"">officia</a> deserunt mollit anim id
est laborum.""""""
"
2582,source/pymupdf.pdf,"""""""
"
2583,source/pymupdf.pdf,"(continues on next page)
"
2584,source/pymupdf.pdf,"8.10. How to Insert Text
53
"
2585,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2586,source/pymupdf.pdf,"(continued from previous page)
"
2587,source/pymupdf.pdf,"This is similar to font file support. However, we can use a convenience
function for creating required CSS definitions.
We still need an Archive for finding the font binaries.
""""""
arch = fitz.Archive()
"
2588,source/pymupdf.pdf,"# We request to use ""myfont"" throughout the text.
css = fitz.css_for_pymupdf_font(""ubuntu"", archive=arch, name=""myfont"")
css += ""* {font-family: myfont;text-align: justify;}""
"
2589,source/pymupdf.pdf,"doc = fitz.Document()
"
2590,source/pymupdf.pdf,"page = doc.new_page(width=150, height=150)
"
2591,source/pymupdf.pdf,"page.insert_htmlbox(page.rect, text, css=css, archive=arch, rotate=90)
"
2592,source/pymupdf.pdf,"doc.subset_fonts(verbose=True)
doc.ez_save(__file__.replace("".py"", "".pdf""))
"
2593,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
2594,source/pymupdf.pdf,"54
Chapter 8. Text
"
2595,source/pymupdf.pdf,"CHAPTER
"
2596,source/pymupdf.pdf,"NINE
"
2597,source/pymupdf.pdf,"IMAGES
"
2598,source/pymupdf.pdf,"9.1 How to Make Images from Document Pages
"
2599,source/pymupdf.pdf,"This little script will take a document filename and generate a PNG file from each of its pages.
"
2600,source/pymupdf.pdf,"The document can be any supported type.
"
2601,source/pymupdf.pdf,"The script works as a command line tool which expects the filename being supplied as a parameter. The generated
image files (1 per page) are stored in the directory of the script:
"
2602,source/pymupdf.pdf,"import sys, fitz
# import the bindings
"
2603,source/pymupdf.pdf,"fname = sys.argv[1]
# get filename from command line
"
2604,source/pymupdf.pdf,"doc = fitz.open(fname)
# open document
"
2605,source/pymupdf.pdf,"for page in doc:
# iterate through the pages
"
2606,source/pymupdf.pdf,"pix = page.get_pixmap()
# render page to an image
"
2607,source/pymupdf.pdf,"pix.save(""page-%i.png"" % page.number)
# store image as a PNG
"
2608,source/pymupdf.pdf,"The script directory will now contain PNG image files named page-0.png, page-1.png, etc. Pictures have the dimension
of their pages with width and height rounded to integers, e.g. 595 x 842 pixels for an A4 portrait sized page. They will
have a resolution of 96 dpi in x and y dimension and have no transparency. You can change all that – for how to do this,
read the next sections.
"
2609,source/pymupdf.pdf,"9.2 How to Increase Image Resolution
"
2610,source/pymupdf.pdf,"The image of a document page is represented by a Pixmap, and the simplest way to create a pixmap is via method
Page.get_pixmap().
"
2611,source/pymupdf.pdf,"This method has many options to influence the result. The most important among them is the Matrix, which lets you
zoom, rotate, distort or mirror the outcome.
"
2612,source/pymupdf.pdf,"Page.get_pixmap() by default will use the Identity matrix, which does nothing.
"
2613,source/pymupdf.pdf,"In the following, we apply a zoom factor of 2 to each dimension, which will generate an image with a four times better
resolution for us (and also about 4 times the size):
"
2614,source/pymupdf.pdf,"zoom_x = 2.0
# horizontal zoom
"
2615,source/pymupdf.pdf,"zoom_y = 2.0
# vertical zoom
"
2616,source/pymupdf.pdf,"mat = fitz.Matrix(zoom_x, zoom_y)
# zoom factor 2 in each dimension
"
2617,source/pymupdf.pdf,"pix = page.get_pixmap(matrix=mat)
# use 'mat' instead of the identity matrix
"
2618,source/pymupdf.pdf,"55
"
2619,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2620,source/pymupdf.pdf,"Since version 1.19.2 there is a more direct way to set the resolution: Parameter ""dpi"" (dots per inch) can be used in
place of ""matrix"". To create a 300 dpi image of a page specify pix = page.get_pixmap(dpi=300). Apart from
notation brevity, this approach has the additional advantage that the dpi value is saved with the image file – which
does not happen automatically when using the Matrix notation.
"
2621,source/pymupdf.pdf,"9.3 How to Create Partial Pixmaps (Clips)
"
2622,source/pymupdf.pdf,"You do not always need or want the full image of a page. This is the case e.g. when you display the image in a GUI
and would like to fill the respective window with a zoomed part of the page.
"
2623,source/pymupdf.pdf,"Let’s assume your GUI window has room to display a full document page, but you now want to fill this room with the
bottom right quarter of your page, thus using a four times better resolution.
"
2624,source/pymupdf.pdf,"To achieve this, define a rectangle equal to the area you want to appear in the GUI and call it “clip”. One way of
constructing rectangles in PyMuPDF is by providing two diagonally opposite corners, which is what we are doing
here.
"
2625,source/pymupdf.pdf,"mat = fitz.Matrix(2, 2)
# zoom factor 2 in each direction
"
2626,source/pymupdf.pdf,"rect = page.rect
# the page rectangle
"
2627,source/pymupdf.pdf,"mp = (rect.tl + rect.br) / 2
# its middle point, becomes top-left of clip
"
2628,source/pymupdf.pdf,"clip = fitz.Rect(mp, rect.br)
# the area we want
"
2629,source/pymupdf.pdf,"pix = page.get_pixmap(matrix=mat, clip=clip)
"
2630,source/pymupdf.pdf,"In the above we construct clip by specifying two diagonally opposite points: the middle point mp of the page rectangle,
and its bottom right, rect.br.
"
2631,source/pymupdf.pdf,"56
Chapter 9. Images
"
2632,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2633,source/pymupdf.pdf,"9.4 How to Zoom a Clip to a GUI Window
"
2634,source/pymupdf.pdf,"Please also read the previous section. This time we want to compute the zoom factor for a clip, such that its image best
fits a given GUI window. This means, that the image’s width or height (or both) will equal the window dimension. For
the following code snippet you need to provide the WIDTH and HEIGHT of your GUI’s window that should receive
the page’s clip rectangle.
"
2635,source/pymupdf.pdf,"# WIDTH: width of the GUI window
# HEIGHT: height of the GUI window
# clip: a subrectangle of the document page
# compare width/height ratios of image and window
"
2636,source/pymupdf.pdf,"if clip.width / clip.height < WIDTH / HEIGHT:
"
2637,source/pymupdf.pdf,"# clip is narrower: zoom to window HEIGHT
zoom = HEIGHT / clip.height
"
2638,source/pymupdf.pdf,"else:
# clip is broader: zoom to window WIDTH
"
2639,source/pymupdf.pdf,"zoom = WIDTH / clip.width
mat = fitz.Matrix(zoom, zoom)
pix = page.get_pixmap(matrix=mat, clip=clip)
"
2640,source/pymupdf.pdf,"For the other way round, now assume you have the zoom factor and need to compute the fitting clip.
"
2641,source/pymupdf.pdf,"In this case we have zoom = HEIGHT/clip.height = WIDTH/clip.width, so we must set clip.height =
HEIGHT/zoom and, clip.width = WIDTH/zoom. Choose the top-left point tl of the clip on the page to compute
the right pixmap:
"
2642,source/pymupdf.pdf,"width = WIDTH / zoom
height = HEIGHT / zoom
clip = fitz.Rect(tl, tl.x + width, tl.y + height)
# ensure we still are inside the page
clip &= page.rect
mat = fitz.Matrix(zoom, zoom)
pix = fitz.Pixmap(matrix=mat, clip=clip)
"
2643,source/pymupdf.pdf,"9.5 How to Create or Suppress Annotation Images
"
2644,source/pymupdf.pdf,"Normally, the pixmap of a page also shows the page’s annotations. Occasionally, this may not be desirable.
"
2645,source/pymupdf.pdf,"To suppress the annotation images on a rendered page, just specify annots=False in Page.get_pixmap().
"
2646,source/pymupdf.pdf,"You can also render annotations separately: they have their own Annot.get_pixmap() method. The resulting pixmap
has the same dimensions as the annotation rectangle.
"
2647,source/pymupdf.pdf,"9.4. How to Zoom a Clip to a GUI Window
57
"
2648,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2649,source/pymupdf.pdf,"9.6 How to Extract Images: Non-PDF Documents
"
2650,source/pymupdf.pdf,"In contrast to the previous sections, this section deals with extracting images contained in documents, so they can be
displayed as part of one or more pages.
"
2651,source/pymupdf.pdf,"If you want to recreate the original image in file form or as a memory area, you have basically two options:
"
2652,source/pymupdf.pdf,"1. Convert your document to a PDF, and then use one of the PDF-only extraction methods. This snippet will convert
a document to PDF:
"
2653,source/pymupdf.pdf,">>> pdfbytes = doc.convert_to_pdf()
# this a bytes object
"
2654,source/pymupdf.pdf,">>> pdf = fitz.open(""pdf"", pdfbytes)
# open it as a PDF document
"
2655,source/pymupdf.pdf,">>> # now use 'pdf' like any PDF document
"
2656,source/pymupdf.pdf,"2. Use Page.get_text() with the “dict” parameter. This works for all document types. It will extract all text
and images shown on the page, formatted as a Python dictionary. Every image will occur in an image block,
containing meta information and the binary image data. For details of the dictionary’s structure, see TextPage.
The method works equally well for PDF files. This creates a list of all images shown on a page:
"
2657,source/pymupdf.pdf,">>> d = page.get_text(""dict"")
>>> blocks = d[""blocks""]
# the list of block dictionaries
"
2658,source/pymupdf.pdf,">>> imgblocks = [b for b in blocks if b[""type""] == 1]
>>> pprint(imgblocks[0])
{'bbox': (100.0, 135.8769989013672, 300.0, 364.1230163574219),
"
2659,source/pymupdf.pdf,"'bpc': 8,
'colorspace': 3,
'ext': 'jpeg',
'height': 501,
'image': b'\\xff\\xd8\\xff\\xe0\\x00\\x10JFIF\\...',
# CAUTION: LARGE!
"
2660,source/pymupdf.pdf,"'size': 80518,
'transform': (200.0, 0.0, -0.0, 228.2460174560547, 100.0, 135.8769989013672),
'type': 1,
'width': 439,
'xres': 96,
'yres': 96}
"
2661,source/pymupdf.pdf,"9.7 How to Extract Images: PDF Documents
"
2662,source/pymupdf.pdf,"Like any other “object” in a PDF, images are identified by a cross reference number (xref, an integer). If you know
this number, you have two ways to access the image’s data:
"
2663,source/pymupdf.pdf,"1. Create a Pixmap of the image with instruction pix = fitz.Pixmap(doc, xref). This method is very fast (single
digit micro-seconds). The pixmap’s properties (width, height, ...) will reflect the ones of the image. In this case
there is no way to tell which image format the embedded original has.
"
2664,source/pymupdf.pdf,"2. Extract the image with img = doc.extract_image(xref). This is a dictionary containing the binary image data as
img[“image”]. A number of meta data are also provided – mostly the same as you would find in the pixmap of the
image. The major difference is string img[“ext”], which specifies the image format: apart from “png”, strings like
“jpeg”, “bmp”, “tiff”, etc. can also occur. Use this string as the file extension if you want to store to disk. The ex-
ecution speed of this method should be compared to the combined speed of the statements pix = fitz.Pixmap(doc,
xref);pix.tobytes(). If the embedded image is in PNG format, the speed of Document.extract_image() is
about the same (and the binary image data are identical). Otherwise, this method is thousands of times faster,
and the image data is much smaller.
"
2665,source/pymupdf.pdf,"58
Chapter 9. Images
"
2666,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2667,source/pymupdf.pdf,"The question remains: “How do I know those ‘xref’ numbers of images?”. There are two answers to this:
"
2668,source/pymupdf.pdf,"a. “Inspect the page objects:” Loop through the items of Page.get_images(). It is a list of list, and its items
look like [xref, smask, ...], containing the xref of an image. This xref can then be used with one of the above
methods. Use this method for valid (undamaged) documents. Be wary however, that the same image may be
referenced multiple times (by different pages), so you might want to provide a mechanism avoiding multiple
extracts.
"
2669,source/pymupdf.pdf,"b. “No need to know:” Loop through the list of all xrefs of the document and perform a Document.
extract_image() for each one. If the returned dictionary is empty, then continue – this xref is no image.
Use this method if the PDF is damaged (unusable pages). Note that a PDF often contains “pseudo-images”
(“stencil masks”) with the special purpose of defining the transparency of some other image. You may want to
provide logic to exclude those from extraction. Also have a look at the next section.
"
2670,source/pymupdf.pdf,"For both extraction approaches, there exist ready-to-use general purpose scripts:
"
2671,source/pymupdf.pdf,"extract-from-pages.py extracts images page by page:
"
2672,source/pymupdf.pdf,"and extract-from-xref.py extracts images by xref table:
"
2673,source/pymupdf.pdf,"9.7. How to Extract Images: PDF Documents
59
"
2674,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2675,source/pymupdf.pdf,"9.8 How to Handle Image Masks
"
2676,source/pymupdf.pdf,"Some images in PDFs are accompanied by image masks. In their simplest form, masks represent alpha (transparency)
bytes stored as separate images. In order to reconstruct the original of an image, which has a mask, it must be “enriched”
with transparency bytes taken from its mask.
"
2677,source/pymupdf.pdf,"Whether an image does have such a mask can be recognized in one of two ways in PyMuPDF:
"
2678,source/pymupdf.pdf,"1. An item of Document.get_page_images() has the general format (xref, smask, ...), where xref is the
image’s xref and smask, if positive, then it is the xref of a mask.
"
2679,source/pymupdf.pdf,"2. The (dictionary) results of Document.extract_image() have a key “smask”, which also contains any mask’s
"
2680,source/pymupdf.pdf,"xref if positive.
"
2681,source/pymupdf.pdf,"If smask == 0 then the image encountered via xref can be processed as it is.
"
2682,source/pymupdf.pdf,"To recover the original image using PyMuPDF, the procedure depicted as follows must be executed:
"
2683,source/pymupdf.pdf,">>> pix1 = fitz.Pixmap(doc.extract_image(xref)[""image""])
# (1) pixmap of image w/o␣
"
2684,source/pymupdf.pdf,"˓→alpha
>>> mask = fitz.Pixmap(doc.extract_image(smask)[""image""])
# (2) mask pixmap
"
2685,source/pymupdf.pdf,">>> pix = fitz.Pixmap(pix1, mask)
# (3) copy of pix1, image␣
"
2686,source/pymupdf.pdf,"˓→mask added
"
2687,source/pymupdf.pdf,"Step (1) creates a pixmap of the basic image. Step (2) does the same with the image mask. Step (3) adds an alpha
channel and fills it with transparency information.
"
2688,source/pymupdf.pdf,"The scripts extract-from-pages.py, and extract-from-xref.py above also contain this logic.
"
2689,source/pymupdf.pdf,"9.9 How to Make one PDF of all your Pictures (or Files)
"
2690,source/pymupdf.pdf,"We show here three scripts that take a list of (image and other) files and put them all in one PDF.
"
2691,source/pymupdf.pdf,"Method 1: Inserting Images as Pages
"
2692,source/pymupdf.pdf,"The first one converts each image to a PDF page with the same dimensions. The result will be a PDF with one page
per image. It will only work for supported image file formats:
"
2693,source/pymupdf.pdf,"60
Chapter 9. Images
"
2694,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2695,source/pymupdf.pdf,"import os, fitz
import PySimpleGUI as psg
# for showing a progress bar
"
2696,source/pymupdf.pdf,"doc = fitz.open()
# PDF with the pictures
"
2697,source/pymupdf.pdf,"imgdir = ""D:/2012_10_05""
# where the pics are
"
2698,source/pymupdf.pdf,"imglist = os.listdir(imgdir)
# list of them
"
2699,source/pymupdf.pdf,"imgcount = len(imglist)
# pic count
"
2700,source/pymupdf.pdf,"for i, f in enumerate(imglist):
img = fitz.open(os.path.join(imgdir, f))
# open pic as document
"
2701,source/pymupdf.pdf,"rect = img[0].rect
# pic dimension
"
2702,source/pymupdf.pdf,"pdfbytes = img.convert_to_pdf()
# make a PDF stream
"
2703,source/pymupdf.pdf,"img.close()
# no longer needed
"
2704,source/pymupdf.pdf,"imgPDF = fitz.open(""pdf"", pdfbytes)
# open stream as PDF
"
2705,source/pymupdf.pdf,"page = doc.new_page(width = rect.width,
# new page with ...
"
2706,source/pymupdf.pdf,"height = rect.height)
# pic dimension
"
2707,source/pymupdf.pdf,"page.show_pdf_page(rect, imgPDF, 0)
# image fills the page
"
2708,source/pymupdf.pdf,"psg.EasyProgressMeter(""Import Images"",
# show our progress
"
2709,source/pymupdf.pdf,"i+1, imgcount)
"
2710,source/pymupdf.pdf,"doc.save(""all-my-pics.pdf"")
"
2711,source/pymupdf.pdf,"This will generate a PDF only marginally larger than the combined pictures’ size. Some numbers on performance:
"
2712,source/pymupdf.pdf,"The above script needed about 1 minute on my machine for 149 pictures with a total size of 514 MB (and about the
same resulting PDF size).
"
2713,source/pymupdf.pdf,"Look here for a more complete source code: it offers a directory selection dialog and skips unsupported files and
non-file entries.
"
2714,source/pymupdf.pdf,"Note: We might have used Page.insert_image() instead of Page.show_pdf_page(), and the result would have
been a similar looking file. However, depending on the image type, it may store images uncompressed. Therefore, the
save option deflate = True must be used to achieve a reasonable file size, which hugely increases the runtime for large
numbers of images. So this alternative cannot be recommended here.
"
2715,source/pymupdf.pdf,"Method 2: Embedding Files
"
2716,source/pymupdf.pdf,"The second script embeds arbitrary files – not only images. The resulting PDF will have just one (empty) page, required
for technical reasons. To later access the embedded files again, you would need a suitable PDF viewer that can display
and / or extract embedded files:
"
2717,source/pymupdf.pdf,"9.9. How to Make one PDF of all your Pictures (or Files)
61
"
2718,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2719,source/pymupdf.pdf,"import os, fitz
import PySimpleGUI as psg
# for showing progress bar
"
2720,source/pymupdf.pdf,"doc = fitz.open()
# PDF with the pictures
"
2721,source/pymupdf.pdf,"imgdir = ""D:/2012_10_05""
# where my files are
"
2722,source/pymupdf.pdf,"imglist = os.listdir(imgdir)
# list of pictures
"
2723,source/pymupdf.pdf,"imgcount = len(imglist)
# pic count
"
2724,source/pymupdf.pdf,"imglist.sort()
# nicely sort them
"
2725,source/pymupdf.pdf,"for i, f in enumerate(imglist):
img = open(os.path.join(imgdir,f), ""rb"").read()
# make pic stream
"
2726,source/pymupdf.pdf,"doc.embfile_add(img, f, filename=f,
# and embed it
"
2727,source/pymupdf.pdf,"ufilename=f, desc=f)
psg.EasyProgressMeter(""Embedding Files"",
# show our progress
"
2728,source/pymupdf.pdf,"i+1, imgcount)
"
2729,source/pymupdf.pdf,"page = doc.new_page()
# at least 1 page is needed
"
2730,source/pymupdf.pdf,"doc.save(""all-my-pics-embedded.pdf"")
"
2731,source/pymupdf.pdf,"This is by far the fastest method, and it also produces the smallest possible output file size. The above pictures needed
20 seconds on my machine and yielded a PDF size of 510 MB. Look here for a more complete source code: it offers a
directory selection dialog and skips non-file entries.
"
2732,source/pymupdf.pdf,"Method 3: Attaching Files
"
2733,source/pymupdf.pdf,"A third way to achieve this task is attaching files via page annotations see here for the complete source code.
"
2734,source/pymupdf.pdf,"This has a similar performance as the previous script and it also produces a similar file size. It will produce PDF pages
which show a ‘FileAttachment’ icon for each attached file.
"
2735,source/pymupdf.pdf,"62
Chapter 9. Images
"
2736,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2737,source/pymupdf.pdf,"Note: Both, the embed and the attach methods can be used for arbitrary files – not just images.
"
2738,source/pymupdf.pdf,"Note:
We strongly recommend using the awesome package PySimpleGUI to display a progress meter for tasks that
may run for an extended time span. It’s pure Python, uses Tkinter (no additional GUI package) and requires just one
more line of code!
"
2739,source/pymupdf.pdf,"9.10 How to Create Vector Images
"
2740,source/pymupdf.pdf,"The usual way to create an image from a document page is Page.get_pixmap(). A pixmap represents a raster image,
so you must decide on its quality (i.e. resolution) at creation time. It cannot be changed later.
"
2741,source/pymupdf.pdf,"PyMuPDF also offers a way to create a vector image of a page in SVG format (scalable vector graphics, defined in
XML syntax). SVG images remain precise across zooming levels (of course with the exception of any raster graphic
elements embedded therein).
"
2742,source/pymupdf.pdf,"Instruction svg = page.get_svg_image(matrix=fitz.Identity) delivers a UTF-8 string svg which can be stored with ex-
tension “.svg”.
"
2743,source/pymupdf.pdf,"9.10. How to Create Vector Images
63
"
2744,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2745,source/pymupdf.pdf,"9.11 How to Convert Images
"
2746,source/pymupdf.pdf,"Just as a feature among others, PyMuPDF’s image conversion is easy. It may avoid using other graphics packages like
PIL/Pillow in many cases.
"
2747,source/pymupdf.pdf,"Notwithstanding that interfacing with Pillow is almost trivial.
"
2748,source/pymupdf.pdf,"Input Formats
Output Formats
Description
"
2749,source/pymupdf.pdf,"BMP
.
Windows Bitmap
"
2750,source/pymupdf.pdf,"JPEG
JPEG
Joint Photographic Experts Group
"
2751,source/pymupdf.pdf,"JXR
.
JPEG Extended Range
"
2752,source/pymupdf.pdf,"JPX/JP2
.
JPEG 2000
"
2753,source/pymupdf.pdf,"GIF
.
Graphics Interchange Format
"
2754,source/pymupdf.pdf,"TIFF
.
Tagged Image File Format
"
2755,source/pymupdf.pdf,"PNG
PNG
Portable Network Graphics
"
2756,source/pymupdf.pdf,"PNM
PNM
Portable Anymap
"
2757,source/pymupdf.pdf,"PGM
PGM
Portable Graymap
"
2758,source/pymupdf.pdf,"PBM
PBM
Portable Bitmap
"
2759,source/pymupdf.pdf,"PPM
PPM
Portable Pixmap
"
2760,source/pymupdf.pdf,"PAM
PAM
Portable Arbitrary Map
"
2761,source/pymupdf.pdf,".
PSD
Adobe Photoshop Document
"
2762,source/pymupdf.pdf,".
PS
Adobe Postscript
"
2763,source/pymupdf.pdf,"The general scheme is just the following two lines:
"
2764,source/pymupdf.pdf,"pix = fitz.Pixmap(""input.xxx"")
# any supported input format
"
2765,source/pymupdf.pdf,"pix.save(""output.yyy"")
# any supported output format
"
2766,source/pymupdf.pdf,"Remarks
"
2767,source/pymupdf.pdf,"1. The input argument of fitz.Pixmap(arg) can be a file or a bytes / io.BytesIO object containing an image.
"
2768,source/pymupdf.pdf,"2. Instead of an output file, you can also create a bytes object via pix.tobytes(“yyy”) and pass this around.
"
2769,source/pymupdf.pdf,"3. As a matter of course, input and output formats must be compatible in terms of colorspace and transparency. The
Pixmap class has batteries included if adjustments are needed.
"
2770,source/pymupdf.pdf,"Note: Convert JPEG to Photoshop:
"
2771,source/pymupdf.pdf,"pix = fitz.Pixmap(""myfamily.jpg"")
pix.save(""myfamily.psd"")
"
2772,source/pymupdf.pdf,"Note:
Convert JPEG to Tkinter PhotoImage. Any RGB / no-alpha image works exactly the same. Conversion
to one of the Portable Anymap formats (PPM, PGM, etc.) does the trick, because they are supported by all Tkinter
versions:
"
2773,source/pymupdf.pdf,"import tkinter as tk
pix = fitz.Pixmap(""input.jpg"")
# or any RGB / no-alpha image
"
2774,source/pymupdf.pdf,"tkimg = tk.PhotoImage(data=pix.tobytes(""ppm""))
"
2775,source/pymupdf.pdf,"64
Chapter 9. Images
"
2776,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2777,source/pymupdf.pdf,"Note: Convert PNG with alpha to Tkinter PhotoImage. This requires removing the alpha bytes, before we can do
the PPM conversion:
"
2778,source/pymupdf.pdf,"import tkinter as tk
pix = fitz.Pixmap(""input.png"")
# may have an alpha channel
"
2779,source/pymupdf.pdf,"if pix.alpha:
# we have an alpha channel!
"
2780,source/pymupdf.pdf,"pix = fitz.Pixmap(pix, 0)
# remove it
"
2781,source/pymupdf.pdf,"tkimg = tk.PhotoImage(data=pix.tobytes(""ppm""))
"
2782,source/pymupdf.pdf,"9.12 How to Use Pixmaps: Gluing Images
"
2783,source/pymupdf.pdf,"This shows how pixmaps can be used for purely graphical, non-document purposes. The script reads an image file and
creates a new image which consist of 3 * 4 tiles of the original:
"
2784,source/pymupdf.pdf,"import fitz
src = fitz.Pixmap(""img-7edges.png"")
# create pixmap from a picture
"
2785,source/pymupdf.pdf,"col = 3
# tiles per row
"
2786,source/pymupdf.pdf,"lin = 4
# tiles per column
"
2787,source/pymupdf.pdf,"tar_w = src.width * col
# width of target
"
2788,source/pymupdf.pdf,"tar_h = src.height * lin
# height of target
"
2789,source/pymupdf.pdf,"# create target pixmap
tar_pix = fitz.Pixmap(src.colorspace, (0, 0, tar_w, tar_h), src.alpha)
"
2790,source/pymupdf.pdf,"# now fill target with the tiles
for i in range(col):
"
2791,source/pymupdf.pdf,"for j in range(lin):
src.set_origin(src.width * i, src.height * j)
tar_pix.copy(src, src.irect) # copy input to new loc
"
2792,source/pymupdf.pdf,"tar_pix.save(""tar.png"")
"
2793,source/pymupdf.pdf,"This is the input picture:
"
2794,source/pymupdf.pdf,"Here is the output:
"
2795,source/pymupdf.pdf,"9.12. How to Use Pixmaps: Gluing Images
65
"
2796,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2797,source/pymupdf.pdf,"9.13 How to Use Pixmaps: Making a Fractal
"
2798,source/pymupdf.pdf,"Here is another Pixmap example that creates Sierpinski’s Carpet – a fractal generalizing the Cantor Set to two
dimensions. Given a square carpet, mark its 9 sub-suqares (3 times 3) and cut out the one in the center. Treat each of
the remaining eight sub-squares in the same way, and continue ad infinitum. The end result is a set with area zero and
fractal dimension 1.8928...
"
2799,source/pymupdf.pdf,"This script creates an approximate image of it as a PNG, by going down to one-pixel granularity. To increase the image
precision, change the value of n (precision):
"
2800,source/pymupdf.pdf,"import fitz, time
if not list(map(int, fitz.VersionBind.split("".""))) >= [1, 14, 8]:
"
2801,source/pymupdf.pdf,"raise SystemExit(""need PyMuPDF v1.14.8 for this script"")
n = 6
# depth (precision)
"
2802,source/pymupdf.pdf,"d = 3**n
# edge length
"
2803,source/pymupdf.pdf,"t0 = time.perf_counter()
ir = (0, 0, d, d)
# the pixmap rectangle
"
2804,source/pymupdf.pdf,"pm = fitz.Pixmap(fitz.csRGB, ir, False)
pm.set_rect(pm.irect, (255,255,0)) # fill it with some background color
"
2805,source/pymupdf.pdf,"color = (0, 0, 255)
# color to fill the punch holes
"
2806,source/pymupdf.pdf,"# alternatively, define a 'fill' pixmap for the punch holes
# this could be anything, e.g. some photo image ...
fill = fitz.Pixmap(fitz.csRGB, ir, False) # same size as 'pm'
fill.set_rect(fill.irect, (0, 255, 255))
# put some color in
"
2807,source/pymupdf.pdf,"def punch(x, y, step):
"
2808,source/pymupdf.pdf,"""""""Recursively ""punch a hole"" in the central square of a pixmap.
"
2809,source/pymupdf.pdf,"Arguments are top-left coords and the step width.
"
2810,source/pymupdf.pdf,"Some alternative punching methods are commented out.
"
2811,source/pymupdf.pdf,"(continues on next page)
"
2812,source/pymupdf.pdf,"66
Chapter 9. Images
"
2813,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2814,source/pymupdf.pdf,"(continued from previous page)
"
2815,source/pymupdf.pdf,"""""""
s = step // 3
# the new step
"
2816,source/pymupdf.pdf,"# iterate through the 9 sub-squares
# the central one will be filled with the color
for i in range(3):
"
2817,source/pymupdf.pdf,"for j in range(3):
"
2818,source/pymupdf.pdf,"if i != j or i != 1:
# this is not the central cube
"
2819,source/pymupdf.pdf,"if s >= 3:
# recursing needed?
"
2820,source/pymupdf.pdf,"punch(x+i*s, y+j*s, s)
# recurse
"
2821,source/pymupdf.pdf,"else:
# punching alternatives are:
"
2822,source/pymupdf.pdf,"pm.set_rect((x+s, y+s, x+2*s, y+2*s), color)
# fill with a color
"
2823,source/pymupdf.pdf,"#pm.copy(fill, (x+s, y+s, x+2*s, y+2*s))
# copy from fill
"
2824,source/pymupdf.pdf,"#pm.invert_irect((x+s, y+s, x+2*s, y+2*s))
# invert colors
"
2825,source/pymupdf.pdf,"return
"
2826,source/pymupdf.pdf,"#==============================================================================
# main program
#==============================================================================
# now start punching holes into the pixmap
punch(0, 0, d)
t1 = time.perf_counter()
pm.save(""sierpinski-punch.png"")
t2 = time.perf_counter()
print (""%g sec to create / fill the pixmap"" % round(t1-t0,3))
print (""%g sec to save the image"" % round(t2-t1,3))
"
2827,source/pymupdf.pdf,"The result should look something like this:
"
2828,source/pymupdf.pdf,"9.13. How to Use Pixmaps: Making a Fractal
67
"
2829,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2830,source/pymupdf.pdf,"9.14 How to Interface with NumPy
"
2831,source/pymupdf.pdf,"This shows how to create a PNG file from a numpy array (several times faster than most other methods):
"
2832,source/pymupdf.pdf,"import numpy as np
import fitz
#==============================================================================
# create a fun-colored width * height PNG with fitz and numpy
#==============================================================================
height = 150
width
= 100
"
2833,source/pymupdf.pdf,"bild = np.ndarray((height, width, 3), dtype=np.uint8)
"
2834,source/pymupdf.pdf,"for i in range(height):
"
2835,source/pymupdf.pdf,"for j in range(width):
"
2836,source/pymupdf.pdf,"# one pixel (some fun coloring)
bild[i, j] = [(i+j)%256, i%256, j%256]
"
2837,source/pymupdf.pdf,"samples = bytearray(bild.tostring())
# get plain pixel data from numpy array
"
2838,source/pymupdf.pdf,"pix = fitz.Pixmap(fitz.csRGB, width, height, samples, alpha=False)
pix.save(""test.png"")
"
2839,source/pymupdf.pdf,"9.15 How to Add Images to a PDF Page
"
2840,source/pymupdf.pdf,"There are two methods to add images to a PDF page: Page.insert_image() and Page.show_pdf_page(). Both
methods have things in common, but there are also differences.
"
2841,source/pymupdf.pdf,"Criterion
Page.
insert_image()
"
2842,source/pymupdf.pdf,"Page.show_pdf_page()
"
2843,source/pymupdf.pdf,"displayable con-
tent
"
2844,source/pymupdf.pdf,"image file, image in
memory, pixmap
"
2845,source/pymupdf.pdf,"PDF page
"
2846,source/pymupdf.pdf,"display
resolu-
tion
"
2847,source/pymupdf.pdf,"image resolution
vectorized (except raster page content)
"
2848,source/pymupdf.pdf,"rotation
0, 90, 180 or 270 de-
grees
"
2849,source/pymupdf.pdf,"any angle
"
2850,source/pymupdf.pdf,"clipping
no (full image only)
yes
"
2851,source/pymupdf.pdf,"keep aspect ra-
tio
"
2852,source/pymupdf.pdf,"yes (default option)
yes (default option)
"
2853,source/pymupdf.pdf,"transparency
(water marking)
"
2854,source/pymupdf.pdf,"depends on the im-
age
"
2855,source/pymupdf.pdf,"depends on the page
"
2856,source/pymupdf.pdf,"location / place-
ment
"
2857,source/pymupdf.pdf,"scaled to fit target
rectangle
"
2858,source/pymupdf.pdf,"scaled to fit target rectangle
"
2859,source/pymupdf.pdf,"performance
automatic
preven-
tion of duplicates;
"
2860,source/pymupdf.pdf,"automatic prevention of duplicates;
"
2861,source/pymupdf.pdf,"multi-page im-
age support
"
2862,source/pymupdf.pdf,"no
yes
"
2863,source/pymupdf.pdf,"ease of use
simple, intuitive;
simple, intuitive; usable for all document types (including images!)
after conversion to PDF via Document.convert_to_pdf()
"
2864,source/pymupdf.pdf,"68
Chapter 9. Images
"
2865,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2866,source/pymupdf.pdf,"Basic code pattern for Page.insert_image(). Exactly one of the parameters filename / stream / pixmap must be
given, if not re-inserting an existing image:
"
2867,source/pymupdf.pdf,"page.insert_image(
rect,
# where to place the image (rect-like)
"
2868,source/pymupdf.pdf,"filename=None,
# image in a file
"
2869,source/pymupdf.pdf,"stream=None,
# image in memory (bytes)
"
2870,source/pymupdf.pdf,"pixmap=None,
# image from pixmap
"
2871,source/pymupdf.pdf,"mask=None,
# specify alpha channel separately
"
2872,source/pymupdf.pdf,"rotate=0,
# rotate (int, multiple of 90)
"
2873,source/pymupdf.pdf,"xref=0,
# re-use existing image
"
2874,source/pymupdf.pdf,"oc=0,
# control visibility via OCG / OCMD
"
2875,source/pymupdf.pdf,"keep_proportion=True,
# keep aspect ratio
"
2876,source/pymupdf.pdf,"overlay=True,
# put in foreground
"
2877,source/pymupdf.pdf,")
"
2878,source/pymupdf.pdf,"Basic code pattern for Page.show_pdf_page(). Source and target PDF must be different Document objects (but may
be opened from the same file):
"
2879,source/pymupdf.pdf,"page.show_pdf_page(
rect,
# where to place the image (rect-like)
"
2880,source/pymupdf.pdf,"src,
# source PDF
"
2881,source/pymupdf.pdf,"pno=0,
# page number in source PDF
"
2882,source/pymupdf.pdf,"clip=None,
# only display this area (rect-like)
"
2883,source/pymupdf.pdf,"rotate=0,
# rotate (float, any value)
"
2884,source/pymupdf.pdf,"oc=0,
# control visibility via OCG / OCMD
"
2885,source/pymupdf.pdf,"keep_proportion=True,
# keep aspect ratio
"
2886,source/pymupdf.pdf,"overlay=True,
# put in foreground
"
2887,source/pymupdf.pdf,")
"
2888,source/pymupdf.pdf,"9.16 How to Use Pixmaps: Checking Text Visibility
"
2889,source/pymupdf.pdf,"Whether or not a given piece of text is actually visible on a page depends on a number of factors:
"
2890,source/pymupdf.pdf,"1. Text is not covered by another object but may have the same color as the background i.e., white-on-white etc.
"
2891,source/pymupdf.pdf,"2. Text may be covered by an image or vector graphics. Detecting this is an important capability, for example to
uncover badly anonymized legal documents.
"
2892,source/pymupdf.pdf,"3. Text is created hidden. This technique is usually used by OCR tools to store the recognized text in an invisible
layer on the page.
"
2893,source/pymupdf.pdf,"The following shows how to detect situation 1. above, or situation 2. if the covering object is unicolor:
"
2894,source/pymupdf.pdf,"pix = page.get_pixmap(dpi=150)
# make page image with a decent resolution
"
2895,source/pymupdf.pdf,"# the following matrix transforms page to pixmap coordinates
mat = page.rect.torect(pix.irect)
"
2896,source/pymupdf.pdf,"# search for some string ""needle""
rlist = page.search_for(""needle"")
# check the visibility for each hit rectangle
for rect in rlist:
"
2897,source/pymupdf.pdf,"(continues on next page)
"
2898,source/pymupdf.pdf,"9.16. How to Use Pixmaps: Checking Text Visibility
69
"
2899,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2900,source/pymupdf.pdf,"(continued from previous page)
"
2901,source/pymupdf.pdf,"if pix.color_topusage(clip=rect * mat)[0] > 0.95:
"
2902,source/pymupdf.pdf,"print(""'needle' is invisible here:"", rect)
"
2903,source/pymupdf.pdf,"Method Pixmap.color_topusage() returns a tuple (ratio, pixel) where 0 < ratio <= 1 and pixel is the pixel
value of the color. Please note that we create a pixmap only once. This can save a lot of processing time if there are
multiple hit rectangles.
"
2904,source/pymupdf.pdf,"The logic of the above code is: If the needle’s rectangle is (“almost”: > 95%) unicolor, then the text cannot be visible.
A typical result for visible text returns the color of the background (mostly white) and a ratio around 0.7 to 0.8, for
example (0.685, b'xffxffxff').
"
2905,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
2906,source/pymupdf.pdf,"70
Chapter 9. Images
"
2907,source/pymupdf.pdf,"CHAPTER
"
2908,source/pymupdf.pdf,"TEN
"
2909,source/pymupdf.pdf,"ANNOTATIONS
"
2910,source/pymupdf.pdf,"10.1 How to Add and Modify Annotations
"
2911,source/pymupdf.pdf,"In PyMuPDF, new annotations can be added via Page methods. Once an annotation exists, it can be modified to a large
extent using methods of the Annot class.
"
2912,source/pymupdf.pdf,"In contrast to many other tools, initial insert of annotations happens with a minimum number of properties. We leave
it to the programmer to e.g. set attributes like author, creation date or subject.
"
2913,source/pymupdf.pdf,"As an overview for these capabilities, look at the following script that fills a PDF page with most of the available
annotations. Look in the next sections for more special situations:
"
2914,source/pymupdf.pdf,"# -*- coding: utf-8 -*-
""""""
-------------------------------------------------------------------------------
Demo script showing how annotations can be added to a PDF using PyMuPDF.
"
2915,source/pymupdf.pdf,"It contains the following annotation types:
Caret, Text, FreeText, text markers (underline, strike-out, highlight,
squiggle), Circle, Square, Line, PolyLine, Polygon, FileAttachment, Stamp
and Redaction.
There is some effort to vary appearances by adding colors, line ends,
opacity, rotation, dashed lines, etc.
"
2916,source/pymupdf.pdf,"Dependencies
------------
PyMuPDF v1.17.0
-------------------------------------------------------------------------------
""""""
from __future__ import print_function
"
2917,source/pymupdf.pdf,"import gc
import sys
"
2918,source/pymupdf.pdf,"import fitz
"
2919,source/pymupdf.pdf,"print(fitz.__doc__)
if fitz.VersionBind.split(""."") < [""1"", ""17"", ""0""]:
sys.exit(""PyMuPDF v1.17.0+ is needed."")
"
2920,source/pymupdf.pdf,"gc.set_debug(gc.DEBUG_UNCOLLECTABLE)
"
2921,source/pymupdf.pdf,"(continues on next page)
"
2922,source/pymupdf.pdf,"71
"
2923,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2924,source/pymupdf.pdf,"(continued from previous page)
"
2925,source/pymupdf.pdf,"highlight = ""this text is highlighted""
underline = ""this text is underlined""
strikeout = ""this text is striked out""
squiggled = ""this text is zigzag-underlined""
red = (1, 0, 0)
blue = (0, 0, 1)
gold = (1, 1, 0)
green = (0, 1, 0)
"
2926,source/pymupdf.pdf,"displ = fitz.Rect(0, 50, 0, 50)
r = fitz.Rect(72, 72, 220, 100)
t1 = u""têxt üsès Lätiñ charß,\\nEUR: €, mu: µ, super scripts: 23!""
"
2927,source/pymupdf.pdf,"def print_descr(annot):
"
2928,source/pymupdf.pdf,"""""""Print a short description to the right of each annot rect.""""""
annot.parent.insert_text(
annot.rect.br + (10, -5), ""%s annotation"" % annot.type[1], color=red
)
"
2929,source/pymupdf.pdf,"doc = fitz.open()
page = doc.new_page()
"
2930,source/pymupdf.pdf,"page.set_rotation(0)
"
2931,source/pymupdf.pdf,"annot = page.add_caret_annot(r.tl)
print_descr(annot)
"
2932,source/pymupdf.pdf,"r = r + displ
annot = page.add_freetext_annot(
r,
t1,
fontsize=10,
rotate=90,
text_color=blue,
fill_color=gold,
align=fitz.TEXT_ALIGN_CENTER,
)
annot.set_border(width=0.3, dashes=[2])
annot.update(text_color=blue, fill_color=gold)
print_descr(annot)
"
2933,source/pymupdf.pdf,"r = annot.rect + displ
annot = page.add_text_annot(r.tl, t1)
print_descr(annot)
"
2934,source/pymupdf.pdf,"# Adding text marker annotations:
# first insert a unique text, then search for it, then mark it
pos = annot.rect.tl + displ.tl
page.insert_text(
"
2935,source/pymupdf.pdf,"(continues on next page)
"
2936,source/pymupdf.pdf,"72
Chapter 10. Annotations
"
2937,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2938,source/pymupdf.pdf,"(continued from previous page)
"
2939,source/pymupdf.pdf,"pos,
# insertion point
"
2940,source/pymupdf.pdf,"highlight,
# inserted text
"
2941,source/pymupdf.pdf,"morph=(pos, fitz.Matrix(-5)),
# rotate around insertion point
"
2942,source/pymupdf.pdf,")
rl = page.search_for(highlight, quads=True)
# need a quad b/o tilted text
"
2943,source/pymupdf.pdf,"annot = page.add_highlight_annot(rl[0])
print_descr(annot)
"
2944,source/pymupdf.pdf,"pos = annot.rect.bl
# next insertion point
"
2945,source/pymupdf.pdf,"page.insert_text(pos, underline, morph=(pos, fitz.Matrix(-10)))
rl = page.search_for(underline, quads=True)
annot = page.add_underline_annot(rl[0])
print_descr(annot)
"
2946,source/pymupdf.pdf,"pos = annot.rect.bl
page.insert_text(pos, strikeout, morph=(pos, fitz.Matrix(-15)))
rl = page.search_for(strikeout, quads=True)
annot = page.add_strikeout_annot(rl[0])
print_descr(annot)
"
2947,source/pymupdf.pdf,"pos = annot.rect.bl
page.insert_text(pos, squiggled, morph=(pos, fitz.Matrix(-20)))
rl = page.search_for(squiggled, quads=True)
annot = page.add_squiggly_annot(rl[0])
print_descr(annot)
"
2948,source/pymupdf.pdf,"pos = annot.rect.bl
r = fitz.Rect(pos, pos.x + 75, pos.y + 35) + (0, 20, 0, 20)
annot = page.add_polyline_annot([r.bl, r.tr, r.br, r.tl])
# 'Polyline'
"
2949,source/pymupdf.pdf,"annot.set_border(width=0.3, dashes=[2])
annot.set_colors(stroke=blue, fill=green)
annot.set_line_ends(fitz.PDF_ANNOT_LE_CLOSED_ARROW, fitz.PDF_ANNOT_LE_R_CLOSED_ARROW)
annot.update(fill_color=(1, 1, 0))
print_descr(annot)
"
2950,source/pymupdf.pdf,"r += displ
annot = page.add_polygon_annot([r.bl, r.tr, r.br, r.tl])
# 'Polygon'
"
2951,source/pymupdf.pdf,"annot.set_border(width=0.3, dashes=[2])
annot.set_colors(stroke=blue, fill=gold)
annot.set_line_ends(fitz.PDF_ANNOT_LE_DIAMOND, fitz.PDF_ANNOT_LE_CIRCLE)
annot.update()
print_descr(annot)
"
2952,source/pymupdf.pdf,"r += displ
annot = page.add_line_annot(r.tr, r.bl)
# 'Line'
"
2953,source/pymupdf.pdf,"annot.set_border(width=0.3, dashes=[2])
annot.set_colors(stroke=blue, fill=gold)
annot.set_line_ends(fitz.PDF_ANNOT_LE_DIAMOND, fitz.PDF_ANNOT_LE_CIRCLE)
annot.update()
print_descr(annot)
"
2954,source/pymupdf.pdf,"r += displ
"
2955,source/pymupdf.pdf,"(continues on next page)
"
2956,source/pymupdf.pdf,"10.1. How to Add and Modify Annotations
73
"
2957,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2958,source/pymupdf.pdf,"(continued from previous page)
"
2959,source/pymupdf.pdf,"annot = page.add_rect_annot(r)
# 'Square'
"
2960,source/pymupdf.pdf,"annot.set_border(width=1, dashes=[1, 2])
annot.set_colors(stroke=blue, fill=gold)
annot.update(opacity=0.5)
print_descr(annot)
"
2961,source/pymupdf.pdf,"r += displ
annot = page.add_circle_annot(r)
# 'Circle'
"
2962,source/pymupdf.pdf,"annot.set_border(width=0.3, dashes=[2])
annot.set_colors(stroke=blue, fill=gold)
annot.update()
print_descr(annot)
"
2963,source/pymupdf.pdf,"r += displ
annot = page.add_file_annot(
r.tl, b""just anything for testing"", ""testdata.txt""
# 'FileAttachment'
"
2964,source/pymupdf.pdf,")
print_descr(annot)
# annot.rect
"
2965,source/pymupdf.pdf,"r += displ
annot = page.add_stamp_annot(r, stamp=10)
# 'Stamp'
"
2966,source/pymupdf.pdf,"annot.set_colors(stroke=green)
annot.update()
print_descr(annot)
"
2967,source/pymupdf.pdf,"r += displ + (0, 0, 50, 10)
rc = page.insert_textbox(
r,
""This content will be removed upon applying the redaction."",
color=blue,
align=fitz.TEXT_ALIGN_CENTER,
)
annot = page.add_redact_annot(r)
print_descr(annot)
"
2968,source/pymupdf.pdf,"doc.save(__file__.replace("".py"", ""-%i.pdf"" % page.rotation), deflate=True)
"
2969,source/pymupdf.pdf,"This script should lead to the following output:
"
2970,source/pymupdf.pdf,"74
Chapter 10. Annotations
"
2971,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2972,source/pymupdf.pdf,"10.1. How to Add and Modify Annotations
75
"
2973,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2974,source/pymupdf.pdf,"10.2 How to Use FreeText
"
2975,source/pymupdf.pdf,"This script shows a couple of ways to deal with ‘FreeText’ annotations:
"
2976,source/pymupdf.pdf,"# -*- coding: utf-8 -*-
import fitz
"
2977,source/pymupdf.pdf,"# some colors
blue
= (0,0,1)
green = (0,1,0)
red
= (1,0,0)
gold
= (1,1,0)
"
2978,source/pymupdf.pdf,"# a new PDF with 1 page
doc = fitz.open()
page = doc.new_page()
"
2979,source/pymupdf.pdf,"# 3 rectangles, same size, above each other
r1 = fitz.Rect(100,100,200,150)
r2 = r1 + (0,75,0,75)
r3 = r2 + (0,75,0,75)
"
2980,source/pymupdf.pdf,"# the text, Latin alphabet
t = ""¡Un pequeño texto para practicar!""
"
2981,source/pymupdf.pdf,"# add 3 annots, modify the last one somewhat
a1 = page.add_freetext_annot(r1, t, color=red)
a2 = page.add_freetext_annot(r2, t, fontname=""Ti"", color=blue)
a3 = page.add_freetext_annot(r3, t, fontname=""Co"", color=blue, rotate=90)
a3.set_border(width=0)
a3.update(fontsize=8, fill_color=gold)
"
2982,source/pymupdf.pdf,"# save the PDF
doc.save(""a-freetext.pdf"")
"
2983,source/pymupdf.pdf,"The result looks like this:
"
2984,source/pymupdf.pdf,"76
Chapter 10. Annotations
"
2985,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2986,source/pymupdf.pdf,"10.3 Using Buttons and JavaScript
"
2987,source/pymupdf.pdf,"Since MuPDF v1.16, ‘FreeText’ annotations no longer support bold or italic versions of the Times-Roman, Helvetica
or Courier fonts.
"
2988,source/pymupdf.pdf,"A big thank you to our user @kurokawaikki, who contributed the following script to circumvent this restriction.
"
2989,source/pymupdf.pdf,"""""""
Problem: Since MuPDF v1.16 a 'Freetext' annotation font is restricted to the
""normal"" versions (no bold, no italics) of Times-Roman, Helvetica, Courier.
It is impossible to use PyMuPDF to modify this.
"
2990,source/pymupdf.pdf,"Solution: Using Adobe's JavaScript API, it is possible to manipulate properties
of Freetext annotations. Check out these references:
https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/js_api_reference.pdf,
or https://www.adobe.com/devnet/acrobat/documentation.html.
"
2991,source/pymupdf.pdf,"Function 'this.getAnnots()'
will return all annotations
as an array. We loop
"
2992,source/pymupdf.pdf,"over this array to set the properties of the text through the 'richContents'
attribute.
There is no explicit property to set text to bold, but it is possible to set
fontWeight=800 (400 is the normal size) of richContents.
Other attributes, like color, italics, etc. can also be set via richContents.
"
2993,source/pymupdf.pdf,"If we have 'FreeText' annotations created with PyMuPDF, we can make use of this
JavaScript feature to modify the font - thus circumventing the above restriction.
"
2994,source/pymupdf.pdf,"Use PyMuPDF v1.16.12 to create a push button that executes a Javascript
containing the desired code. This is what this program does.
Then open the resulting file with Adobe reader (!).
After clicking on the button, all Freetext annotations will be bold, and the
file can be saved.
"
2995,source/pymupdf.pdf,"(continues on next page)
"
2996,source/pymupdf.pdf,"10.3. Using Buttons and JavaScript
77
"
2997,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
2998,source/pymupdf.pdf,"(continued from previous page)
"
2999,source/pymupdf.pdf,"If desired, the button can be removed again, using free tools like PyMuPDF or
PDF XChange editor.
"
3000,source/pymupdf.pdf,"Note / Caution:
---------------
The JavaScript will **only** work if the file is opened with Adobe Acrobat reader!
When using other PDF viewers, the reaction is unforeseeable.
""""""
import sys
"
3001,source/pymupdf.pdf,"import fitz
"
3002,source/pymupdf.pdf,"# this JavaScript will execute when the button is clicked:
jscript = """"""
var annt = this.getAnnots();
annt.forEach(function (item, index) {
"
3003,source/pymupdf.pdf,"try {
"
3004,source/pymupdf.pdf,"var span = item.richContents;
span.forEach(function (it, dx) {
"
3005,source/pymupdf.pdf,"it.fontWeight = 800;
"
3006,source/pymupdf.pdf,"})
item.richContents = span;
"
3007,source/pymupdf.pdf,"} catch (err) {}
"
3008,source/pymupdf.pdf,"});
app.alert('Done');
""""""
i_fn = sys.argv[1]
# input file name
"
3009,source/pymupdf.pdf,"o_fn = ""bold-"" + i_fn
# output filename
"
3010,source/pymupdf.pdf,"doc = fitz.open(i_fn)
# open input
"
3011,source/pymupdf.pdf,"page = doc[0]
# get desired page
"
3012,source/pymupdf.pdf,"# ------------------------------------------------
# make a push button for invoking the JavaScript
# ------------------------------------------------
"
3013,source/pymupdf.pdf,"widget = fitz.Widget()
# create widget
"
3014,source/pymupdf.pdf,"# make it a 'PushButton'
widget.field_type = fitz.PDF_WIDGET_TYPE_BUTTON
widget.field_flags = fitz.PDF_BTN_FIELD_IS_PUSHBUTTON
"
3015,source/pymupdf.pdf,"widget.rect = fitz.Rect(5, 5, 20, 20)
# button position
"
3016,source/pymupdf.pdf,"widget.script = jscript
# fill in JavaScript source text
"
3017,source/pymupdf.pdf,"widget.field_name = ""Make bold""
# arbitrary name
"
3018,source/pymupdf.pdf,"widget.field_value = ""Off""
# arbitrary value
"
3019,source/pymupdf.pdf,"widget.fill_color = (0, 0, 1)
# make button visible
"
3020,source/pymupdf.pdf,"annot = page.add_widget(widget)
# add the widget to the page
"
3021,source/pymupdf.pdf,"doc.save(o_fn)
# output the file
"
3022,source/pymupdf.pdf,"78
Chapter 10. Annotations
"
3023,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3024,source/pymupdf.pdf,"10.4 How to Use Ink Annotations
"
3025,source/pymupdf.pdf,"Ink annotations are used to contain freehand scribbling. A typical example may be an image of your signature consisting
of first name and last name. Technically an ink annotation is implemented as a list of lists of points. Each point list
is regarded as a continuous line connecting the points. Different point lists represent independent line segments of the
annotation.
"
3026,source/pymupdf.pdf,"The following script creates an ink annotation with two mathematical curves (sine and cosine function graphs) as line
segments:
"
3027,source/pymupdf.pdf,"import math
import fitz
"
3028,source/pymupdf.pdf,"#------------------------------------------------------------------------------
# preliminary stuff: create function value lists for sine and cosine
#------------------------------------------------------------------------------
w360 = math.pi * 2
# go through full circle
"
3029,source/pymupdf.pdf,"deg = w360 / 360
# 1 degree as radians
"
3030,source/pymupdf.pdf,"rect = fitz.Rect(100,200, 300, 300)
# use this rectangle
"
3031,source/pymupdf.pdf,"first_x = rect.x0
# x starts from left
"
3032,source/pymupdf.pdf,"first_y = rect.y0 + rect.height / 2.
# rect middle means y = 0
"
3033,source/pymupdf.pdf,"x_step = rect.width / 360
# rect width means 360 degrees
"
3034,source/pymupdf.pdf,"y_scale = rect.height / 2.
# rect height means 2
"
3035,source/pymupdf.pdf,"sin_points = []
# sine values go here
"
3036,source/pymupdf.pdf,"cos_points = []
# cosine values go here
"
3037,source/pymupdf.pdf,"for x in range(362):
# now fill in the values
"
3038,source/pymupdf.pdf,"x_coord = x * x_step + first_x
# current x coordinate
"
3039,source/pymupdf.pdf,"y = -math.sin(x * deg)
# sine
"
3040,source/pymupdf.pdf,"p = (x_coord, y * y_scale + first_y)
# corresponding point
"
3041,source/pymupdf.pdf,"sin_points.append(p)
# append
"
3042,source/pymupdf.pdf,"y = -math.cos(x * deg)
# cosine
"
3043,source/pymupdf.pdf,"p = (x_coord, y * y_scale + first_y)
# corresponding point
"
3044,source/pymupdf.pdf,"cos_points.append(p)
# append
"
3045,source/pymupdf.pdf,"#------------------------------------------------------------------------------
# create the document with one page
#------------------------------------------------------------------------------
doc = fitz.open()
# make new PDF
"
3046,source/pymupdf.pdf,"page = doc.new_page()
# give it a page
"
3047,source/pymupdf.pdf,"#------------------------------------------------------------------------------
# add the Ink annotation, consisting of 2 curve segments
#------------------------------------------------------------------------------
annot = page.addInkAnnot((sin_points, cos_points))
# let it look a little nicer
annot.set_border(width=0.3, dashes=[1,])
# line thickness, some dashing
"
3048,source/pymupdf.pdf,"annot.set_colors(stroke=(0,0,1))
# make the lines blue
"
3049,source/pymupdf.pdf,"annot.update()
# update the appearance
"
3050,source/pymupdf.pdf,"page.draw_rect(rect, width=0.3)
# only to demonstrate we did OK
"
3051,source/pymupdf.pdf,"doc.save(""a-inktest.pdf"")
"
3052,source/pymupdf.pdf,"This is the result:
"
3053,source/pymupdf.pdf,"10.4. How to Use Ink Annotations
79
"
3054,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3055,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
3056,source/pymupdf.pdf,"80
Chapter 10. Annotations
"
3057,source/pymupdf.pdf,"CHAPTER
"
3058,source/pymupdf.pdf,"ELEVEN
"
3059,source/pymupdf.pdf,"DRAWING AND GRAPHICS
"
3060,source/pymupdf.pdf,"PDF files support elementary drawing operations as part of their syntax. This includes basic geometrical objects like
lines, curves, circles, rectangles including specifying colors.
"
3061,source/pymupdf.pdf,"The syntax for such operations is defined in “A Operator Summary” on page 643 of the Adobe PDF References. Spec-
ifying these operators for a PDF page happens in its contents objects.
"
3062,source/pymupdf.pdf,"PyMuPDF implements a large part of the available features via its Shape class, which is comparable to notions like
“canvas” in other packages (e.g. reportlab).
"
3063,source/pymupdf.pdf,"A shape is always created as a child of a page, usually with an instruction like shape = page.new_shape(). The
class defines numerous methods that perform drawing operations on the page’s area. For example, last_point =
shape.draw_rect(rect) draws a rectangle along the borders of a suitably defined rect = fitz.Rect(...).
"
3064,source/pymupdf.pdf,"The returned last_point always is the Point where drawing operation ended (“last point”). Every such elementary
drawing requires a subsequent Shape.finish() to “close” it, but there may be multiple drawings which have one
common finish() method.
"
3065,source/pymupdf.pdf,"In fact, Shape.finish() defines a group of preceding draw operations to form one – potentially rather complex –
graphics object. PyMuPDF provides several predefined graphics in shapes_and_symbols.py which demonstrate how
this works.
"
3066,source/pymupdf.pdf,"If you import this script, you can also directly use its graphics as in the following example:
"
3067,source/pymupdf.pdf,"# -*- coding: utf-8 -*-
""""""
Created on Sun Dec
9 08:34:06 2018
"
3068,source/pymupdf.pdf,"@author: Jorj
@license: GNU AFFERO GPL V3
"
3069,source/pymupdf.pdf,"Create a list of available symbols defined in shapes_and_symbols.py
"
3070,source/pymupdf.pdf,"This also demonstrates an example usage: how these symbols could be used
as bullet-point symbols in some text.
"
3071,source/pymupdf.pdf,"""""""
"
3072,source/pymupdf.pdf,"import fitz
import shapes_and_symbols as sas
"
3073,source/pymupdf.pdf,"# list of available symbol functions and their descriptions
tlist = [
(sas.arrow, ""arrow (easy)""),
"
3074,source/pymupdf.pdf,"(continues on next page)
"
3075,source/pymupdf.pdf,"81
"
3076,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3077,source/pymupdf.pdf,"(continued from previous page)
"
3078,source/pymupdf.pdf,"(sas.caro, ""caro (easy)""),
(sas.clover, ""clover (easy)""),
(sas.diamond, ""diamond (easy)""),
(sas.dontenter, ""do not enter (medium)""),
(sas.frowney, ""frowney (medium)""),
(sas.hand, ""hand (complex)""),
(sas.heart, ""heart (easy)""),
(sas.pencil, ""pencil (very complex)""),
(sas.smiley, ""smiley (easy)""),
]
"
3079,source/pymupdf.pdf,"r = fitz.Rect(50, 50, 100, 100)
# first rect to contain a symbol
"
3080,source/pymupdf.pdf,"d = fitz.Rect(0, r.height + 10, 0, r.height + 10)
# displacement to next rect
"
3081,source/pymupdf.pdf,"p = (15, -r.height * 0.2)
# starting point of explanation text
"
3082,source/pymupdf.pdf,"rlist = [r]
# rectangle list
"
3083,source/pymupdf.pdf,"for i in range(1, len(tlist)):
# fill in all the rectangles
"
3084,source/pymupdf.pdf,"rlist.append(rlist[i-1] + d)
"
3085,source/pymupdf.pdf,"doc = fitz.open()
# create empty PDF
"
3086,source/pymupdf.pdf,"page = doc.new_page()
# create an empty page
"
3087,source/pymupdf.pdf,"shape = page.new_shape()
# start a Shape (canvas)
"
3088,source/pymupdf.pdf,"for i, r in enumerate(rlist):
tlist[i][0](shape, rlist[i])
# execute symbol creation
"
3089,source/pymupdf.pdf,"shape.insert_text(rlist[i].br + p,
# insert description text
"
3090,source/pymupdf.pdf,"tlist[i][1], fontsize=r.height/1.2)
"
3091,source/pymupdf.pdf,"# store everything to the page's /Contents object
shape.commit()
"
3092,source/pymupdf.pdf,"import os
scriptdir = os.path.dirname(__file__)
doc.save(os.path.join(scriptdir, ""symbol-list.pdf""))
# save the PDF
"
3093,source/pymupdf.pdf,"This is the script’s outcome:
"
3094,source/pymupdf.pdf,"82
Chapter 11. Drawing and Graphics
"
3095,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3096,source/pymupdf.pdf,"11.1 How to Extract Drawings
"
3097,source/pymupdf.pdf,"• New in v1.18.0
"
3098,source/pymupdf.pdf,"The drawing commands issued by a page can be extracted. Interestingly, this is possible for all supported document
types – not just PDF: so you can use it for XPS, EPUB and others as well.
"
3099,source/pymupdf.pdf,"Page method, Page.get_drawings() accesses draw commands and converts them into a list of Python dictionaries.
Each dictionary – called a “path” – represents a separate drawing – it may be simple like a single line, or a complex
combination of lines and curves representing one of the shapes of the previous section.
"
3100,source/pymupdf.pdf,"The path dictionary has been designed such that it can easily be used by the Shape class and its methods. Here is an
example for a page with one path, that draws a red-bordered yellow circle inside rectangle Rect(100, 100, 200,
200):
"
3101,source/pymupdf.pdf,">>> pprint(page.get_drawings())
[{'closePath': True,
'color': [1.0, 0.0, 0.0],
'dashes': '[] 0',
'even_odd': False,
'fill': [1.0, 1.0, 0.0],
'items': [('c',
"
3102,source/pymupdf.pdf,"Point(100.0, 150.0),
Point(100.0, 177.614013671875),
Point(122.38600158691406, 200.0),
Point(150.0, 200.0)),
('c',
"
3103,source/pymupdf.pdf,"(continues on next page)
"
3104,source/pymupdf.pdf,"11.1. How to Extract Drawings
83
"
3105,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3106,source/pymupdf.pdf,"(continued from previous page)
"
3107,source/pymupdf.pdf,"Point(150.0, 200.0),
Point(177.61399841308594, 200.0),
Point(200.0, 177.614013671875),
Point(200.0, 150.0)),
('c',
Point(200.0, 150.0),
Point(200.0, 122.385986328125),
Point(177.61399841308594, 100.0),
Point(150.0, 100.0)),
('c',
Point(150.0, 100.0),
Point(122.38600158691406, 100.0),
Point(100.0, 122.385986328125),
Point(100.0, 150.0))],
"
3108,source/pymupdf.pdf,"'lineCap': (0, 0, 0),
'lineJoin': 0,
'opacity': 1.0,
'rect': Rect(100.0, 100.0, 200.0, 200.0),
'width': 1.0}]
>>>
"
3109,source/pymupdf.pdf,"Note: You need (at least) 4 Bézier curves (of 3rd order) to draw a circle with acceptable precision. See this Wikipedia
article for some background.
"
3110,source/pymupdf.pdf,"The following is a code snippet which extracts the drawings of a page and re-draws them on a new page:
"
3111,source/pymupdf.pdf,"import fitz
doc = fitz.open(""some.file"")
page = doc[0]
paths = page.get_drawings()
# extract existing drawings
"
3112,source/pymupdf.pdf,"# this is a list of ""paths"", which can directly be drawn again using Shape
# -------------------------------------------------------------------------
#
# define some output page with the same dimensions
outpdf = fitz.open()
outpage = outpdf.new_page(width=page.rect.width, height=page.rect.height)
shape = outpage.new_shape()
# make a drawing canvas for the output page
"
3113,source/pymupdf.pdf,"# --------------------------------------
# loop through the paths and draw them
# --------------------------------------
for path in paths:
"
3114,source/pymupdf.pdf,"# ------------------------------------
# draw each entry of the 'items' list
# ------------------------------------
for item in path[""items""]:
# these are the draw commands
"
3115,source/pymupdf.pdf,"if item[0] == ""l"":
# line
"
3116,source/pymupdf.pdf,"shape.draw_line(item[1], item[2])
"
3117,source/pymupdf.pdf,"elif item[0] == ""re"":
# rectangle
"
3118,source/pymupdf.pdf,"shape.draw_rect(item[1])
"
3119,source/pymupdf.pdf,"elif item[0] == ""qu"":
# quad
"
3120,source/pymupdf.pdf,"shape.draw_quad(item[1])
"
3121,source/pymupdf.pdf,"(continues on next page)
"
3122,source/pymupdf.pdf,"84
Chapter 11. Drawing and Graphics
"
3123,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3124,source/pymupdf.pdf,"(continued from previous page)
"
3125,source/pymupdf.pdf,"elif item[0] == ""c"":
# curve
"
3126,source/pymupdf.pdf,"shape.draw_bezier(item[1], item[2], item[3], item[4])
"
3127,source/pymupdf.pdf,"else:
"
3128,source/pymupdf.pdf,"raise ValueError(""unhandled drawing"", item)
"
3129,source/pymupdf.pdf,"# ------------------------------------------------------
# all items are drawn, now apply the common properties
# to finish the path
# ------------------------------------------------------
shape.finish(
fill=path[""fill""],
# fill color
"
3130,source/pymupdf.pdf,"color=path[""color""],
# line color
"
3131,source/pymupdf.pdf,"dashes=path[""dashes""],
# line dashing
"
3132,source/pymupdf.pdf,"even_odd=path.get(""even_odd"", True),
# control color of overlaps
"
3133,source/pymupdf.pdf,"closePath=path[""closePath""],
# whether to connect last and first point
"
3134,source/pymupdf.pdf,"lineJoin=path[""lineJoin""],
# how line joins should look like
"
3135,source/pymupdf.pdf,"lineCap=max(path[""lineCap""]),
# how line ends should look like
"
3136,source/pymupdf.pdf,"width=path[""width""],
# line width
"
3137,source/pymupdf.pdf,"stroke_opacity=path.get(""stroke_opacity"", 1),
# same value for both
"
3138,source/pymupdf.pdf,"fill_opacity=path.get(""fill_opacity"", 1),
# opacity parameters
"
3139,source/pymupdf.pdf,")
"
3140,source/pymupdf.pdf,"# all paths processed - commit the shape to its page
shape.commit()
outpdf.save(""drawings-page-0.pdf"")
"
3141,source/pymupdf.pdf,"As can be seen, there is a high congruence level with the Shape class. With one exception: For technical reasons
lineCap is a tuple of 3 numbers here, whereas it is an integer in Shape (and in PDF). So we simply take the maximum
value of that tuple.
"
3142,source/pymupdf.pdf,"Here is a comparison between input and output of an example page, created by the previous script:
"
3143,source/pymupdf.pdf,"Note: The reconstruction of graphics, like shown here, is not perfect. The following aspects will not be reproduced
as of this version:
"
3144,source/pymupdf.pdf,"11.1. How to Extract Drawings
85
"
3145,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3146,source/pymupdf.pdf,"• Page definitions can be complex and include instructions for not showing / hiding certain areas to keep them
invisible. Things like this are ignored by Page.get_drawings() - it will always return all paths.
"
3147,source/pymupdf.pdf,"Note: You can use the path list to make your own lists of e.g. all lines or all rectangles on the page and subselect them
by criteria, like color or position on the page etc.
"
3148,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
3149,source/pymupdf.pdf,"86
Chapter 11. Drawing and Graphics
"
3150,source/pymupdf.pdf,"CHAPTER
"
3151,source/pymupdf.pdf,"TWELVE
"
3152,source/pymupdf.pdf,"STORIES
"
3153,source/pymupdf.pdf,"This document showcases some typical use cases for Stories.
"
3154,source/pymupdf.pdf,"As mentioned in the tutorial, stories may be created using up to three input sources: HTML, CSS and Archives – all
of which are optional and which, respectively, can be provided programmatically.
"
3155,source/pymupdf.pdf,"The following examples will showcase combinations for using these inputs.
"
3156,source/pymupdf.pdf,"Note: Many of these recipe’s source code are included as examples in the docs folder.
"
3157,source/pymupdf.pdf,"12.1 How to Add a Line of Text with Some Formatting
"
3158,source/pymupdf.pdf,"Here is the inevitable “Hello World” example. We will show two variants:
"
3159,source/pymupdf.pdf,"1. Create using existing HTML source1, that may come from anywhere.
"
3160,source/pymupdf.pdf,"2. Create using the Python API.
"
3161,source/pymupdf.pdf,"Variant using an existing HTML source1 – which in this case is defined as a constant in the script:
"
3162,source/pymupdf.pdf,"import fitz
"
3163,source/pymupdf.pdf,"HTML = """"""
<p style=""font-family: sans-serif;color: blue"">Hello World!</p>
""""""
"
3164,source/pymupdf.pdf,"MEDIABOX = fitz.paper_rect(""letter"")
# output page format: Letter
"
3165,source/pymupdf.pdf,"WHERE = MEDIABOX + (36, 36, -36, -36)
# leave borders of 0.5 inches
"
3166,source/pymupdf.pdf,"story = fitz.Story(html=HTML)
# create story from HTML
"
3167,source/pymupdf.pdf,"writer = fitz.DocumentWriter(""output.pdf"")
# create the writer
"
3168,source/pymupdf.pdf,"(continues on next page)
"
3169,source/pymupdf.pdf,"1 HTML & CSS support
"
3170,source/pymupdf.pdf,"Note: At the time of writing the HTML engine for Stories is fairly basic and supports a subset of CSS2 attributes.
"
3171,source/pymupdf.pdf,"Some important CSS support to consider:
"
3172,source/pymupdf.pdf,"• The only available layout is relative layout.
• background is unavailable, use background-color instead.
• float is unavailable.
"
3173,source/pymupdf.pdf,"87
"
3174,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3175,source/pymupdf.pdf,"(continued from previous page)
"
3176,source/pymupdf.pdf,"more = 1
# will indicate end of input once it is set to 0
"
3177,source/pymupdf.pdf,"while more:
# loop outputting the story
"
3178,source/pymupdf.pdf,"device = writer.begin_page(MEDIABOX)
# make new page
"
3179,source/pymupdf.pdf,"more, _ = story.place(WHERE)
# layout into allowed rectangle
"
3180,source/pymupdf.pdf,"story.draw(device)
# write on page
"
3181,source/pymupdf.pdf,"writer.end_page()
# finish page
"
3182,source/pymupdf.pdf,"writer.close()
# close output file
"
3183,source/pymupdf.pdf,"Note: The above effect (sans-serif and blue text) could have been achieved by using a separate CSS source like so:
"
3184,source/pymupdf.pdf,"import fitz
"
3185,source/pymupdf.pdf,"CSS = """"""
body {
"
3186,source/pymupdf.pdf,"font-family: sans-serif;
color: blue;
"
3187,source/pymupdf.pdf,"}
""""""
"
3188,source/pymupdf.pdf,"HTML = """"""
<p>Hello World!</p>
""""""
"
3189,source/pymupdf.pdf,"# the story would then be created like this:
story = fitz.Story(html=HTML, user_css=CSS)
"
3190,source/pymupdf.pdf,"The Python API variant – everything is created programmatically:
"
3191,source/pymupdf.pdf,"import fitz
"
3192,source/pymupdf.pdf,"MEDIABOX = fitz.paper_rect(""letter"")
WHERE = MEDIABOX + (36, 36, -36, -36)
"
3193,source/pymupdf.pdf,"story = fitz.Story()
# create an empty story
"
3194,source/pymupdf.pdf,"body = story.body
# access the body of its DOM
"
3195,source/pymupdf.pdf,"with body.add_paragraph() as para:
# store desired content
"
3196,source/pymupdf.pdf,"para.set_font(""sans-serif"").set_color(""blue"").add_text(""Hello World!"")
"
3197,source/pymupdf.pdf,"writer = fitz.DocumentWriter(""output.pdf"")
"
3198,source/pymupdf.pdf,"more = 1
"
3199,source/pymupdf.pdf,"while more:
device = writer.begin_page(MEDIABOX)
more, _ = story.place(WHERE)
story.draw(device)
"
3200,source/pymupdf.pdf,"(continues on next page)
"
3201,source/pymupdf.pdf,"88
Chapter 12. Stories
"
3202,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3203,source/pymupdf.pdf,"(continued from previous page)
"
3204,source/pymupdf.pdf,"writer.end_page()
"
3205,source/pymupdf.pdf,"writer.close()
"
3206,source/pymupdf.pdf,"Both variants will produce the same output PDF.
"
3207,source/pymupdf.pdf,"12.2 How to use Images
"
3208,source/pymupdf.pdf,"Images can be referenced in the provided HTML source, or the reference to a desired image can also be stored via the
Python API. In any case, this requires using an Archive, which refers to the place where the image can be found.
"
3209,source/pymupdf.pdf,"Note: Images with the binary content embedded in the HTML source are not supported by stories.
"
3210,source/pymupdf.pdf,"We extend our “Hello World” example from above and display an image of our planet right after the text. Assuming
the image has the name “world.jpg” and is present in the script’s folder, then this is the modified version of the above
Python API variant:
"
3211,source/pymupdf.pdf,"import fitz
"
3212,source/pymupdf.pdf,"MEDIABOX = fitz.paper_rect(""letter"")
WHERE = MEDIABOX + (36, 36, -36, -36)
"
3213,source/pymupdf.pdf,"# create story, let it look at script folder for resources
story = fitz.Story(archive=""."")
body = story.body
# access the body of its DOM
"
3214,source/pymupdf.pdf,"with body.add_paragraph() as para:
"
3215,source/pymupdf.pdf,"# store desired content
para.set_font(""sans-serif"").set_color(""blue"").add_text(""Hello World!"")
"
3216,source/pymupdf.pdf,"# another paragraph for our image:
with body.add_paragraph() as para:
"
3217,source/pymupdf.pdf,"# store image in another paragraph
para.add_image(""world.jpg"")
"
3218,source/pymupdf.pdf,"writer = fitz.DocumentWriter(""output.pdf"")
"
3219,source/pymupdf.pdf,"more = 1
"
3220,source/pymupdf.pdf,"while more:
device = writer.begin_page(MEDIABOX)
more, _ = story.place(WHERE)
story.draw(device)
writer.end_page()
"
3221,source/pymupdf.pdf,"writer.close()
"
3222,source/pymupdf.pdf,"12.2. How to use Images
89
"
3223,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3224,source/pymupdf.pdf,"12.3 How to Read External HTML and CSS for a Story
"
3225,source/pymupdf.pdf,"These cases are fairly straightforward.
"
3226,source/pymupdf.pdf,"As a general recommendation, HTML and CSS sources should be read as binary files and decoded before using them
in a story. The Python pathlib.Path provides convenient ways to do this:
"
3227,source/pymupdf.pdf,"import pathlib
import fitz
"
3228,source/pymupdf.pdf,"htmlpath = pathlib.Path(""myhtml.html"")
csspath = pathlib.Path(""mycss.css"")
"
3229,source/pymupdf.pdf,"HTML = htmlpath.read_bytes().decode()
CSS = csspath.read_bytes().decode()
"
3230,source/pymupdf.pdf,"story = fitz.Story(html=HTML, user_css=CSS)
"
3231,source/pymupdf.pdf,"12.4 How to Output Database Content with Story Templates
"
3232,source/pymupdf.pdf,"This script demonstrates how to report SQL database content using an HTML template.
"
3233,source/pymupdf.pdf,"The example SQL database contains two tables:
"
3234,source/pymupdf.pdf,"1. Table “films” contains one row per film with the fields “title”, “director” and (release) “year”.
"
3235,source/pymupdf.pdf,"2. Table “actors” contains one row per actor and film title (fields (actor) “name” and (film) “title”).
"
3236,source/pymupdf.pdf,"The story DOM consists of a template for one film, which reports film data together with a list of casted actors.
"
3237,source/pymupdf.pdf,"Files:
"
3238,source/pymupdf.pdf,"• docs/samples/filmfestival-sql.py
"
3239,source/pymupdf.pdf,"• docs/samples/filmfestival-sql.db
"
3240,source/pymupdf.pdf,"""""""
This is a demo script for using PyMuPDF with its ""Story"" feature.
"
3241,source/pymupdf.pdf,"The following aspects are being covered here:
"
3242,source/pymupdf.pdf,"* The script produces a report of films that are stored in an SQL database
* The report format is provided as a HTML template
"
3243,source/pymupdf.pdf,"The SQL database contains two tables:
1. Table ""films"" which has the columns ""title"" (film title, str), ""director""
"
3244,source/pymupdf.pdf,"(str) and ""year"" (year of release, int).
"
3245,source/pymupdf.pdf,"2. Table ""actors"" which has the columns ""name"" (actor name, str) and ""title""
"
3246,source/pymupdf.pdf,"(the film title where the actor had been casted, str).
"
3247,source/pymupdf.pdf,"The script reads all content of the ""films"" table. For each film title it
reads all rows from table ""actors"" which took part in that film.
"
3248,source/pymupdf.pdf,"(continues on next page)
"
3249,source/pymupdf.pdf,"90
Chapter 12. Stories
"
3250,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3251,source/pymupdf.pdf,"(continued from previous page)
"
3252,source/pymupdf.pdf,"Comment 1
---------
To keep things easy and free from pesky technical detail, the relevant file
names inherit the name of this script:
- the database's filename is the script name with "".py"" extension replaced
"
3253,source/pymupdf.pdf,"by "".db"".
"
3254,source/pymupdf.pdf,"- the output PDF similarly has script file name with extension "".pdf"".
"
3255,source/pymupdf.pdf,"Comment 2
---------
The SQLITE database has been created using https://sqlitebrowser.org/, a free
multi-platform tool to maintain or manipulate SQLITE databases.
""""""
import os
import sqlite3
"
3256,source/pymupdf.pdf,"import fitz
"
3257,source/pymupdf.pdf,"# ----------------------------------------------------------------------
# HTML template for the film report
# There are four placeholders coded as ""id"" attributes.
# One ""id"" allows locating the template part itself, the other three
# indicate where database text should be inserted.
# ----------------------------------------------------------------------
festival_template = (
"
3258,source/pymupdf.pdf,"""<html><head><title>Just some arbitrary text</title></head>""
'<body><h1 style=""text-align:center"">Hook Norton Film Festival</h1>'
""<ol>""
'<li id=""filmtemplate"">'
'<b id=""filmtitle""></b>'
""<dl>""
'<dt>Director<dd id=""director"">'
'<dt>Release Year<dd id=""filmyear"">'
'<dt>Cast<dd id=""cast"">'
""</dl>""
""</li>""
""</ol>""
""</body></html""
"
3259,source/pymupdf.pdf,")
"
3260,source/pymupdf.pdf,"# -------------------------------------------------------------------
# define database access
# -------------------------------------------------------------------
dbfilename = __file__.replace("".py"", "".db"")
# the SQLITE database file name
"
3261,source/pymupdf.pdf,"assert os.path.isfile(dbfilename), f'{dbfilename}'
database = sqlite3.connect(dbfilename)
# open database
"
3262,source/pymupdf.pdf,"cursor_films = database.cursor()
# cursor for selecting the films
"
3263,source/pymupdf.pdf,"cursor_casts = database.cursor()
# cursor for selecting actors per film
"
3264,source/pymupdf.pdf,"# select statement for the films - let SQL also sort it for us
select_films = """"""SELECT title, director, year FROM films ORDER BY title""""""
"
3265,source/pymupdf.pdf,"(continues on next page)
"
3266,source/pymupdf.pdf,"12.4. How to Output Database Content with Story Templates
91
"
3267,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3268,source/pymupdf.pdf,"(continued from previous page)
"
3269,source/pymupdf.pdf,"# select stament for actors, a skeleton: sub-select by film title
select_casts = """"""SELECT name FROM actors WHERE film = ""%s"" ORDER BY name""""""
"
3270,source/pymupdf.pdf,"# -------------------------------------------------------------------
# define the HTML Story and fill it with database data
# -------------------------------------------------------------------
story = fitz.Story(festival_template)
body = story.body
# access the HTML body detail
"
3271,source/pymupdf.pdf,"template = body.find(None, ""id"", ""filmtemplate"")
# find the template part
"
3272,source/pymupdf.pdf,"# read the films from the database and put them all in one Python list
# NOTE: instead we might fetch rows one by one (advisable for large volumes)
cursor_films.execute(select_films)
# execute cursor, and ...
"
3273,source/pymupdf.pdf,"films = cursor_films.fetchall()
# read out what was found
"
3274,source/pymupdf.pdf,"for title, director, year in films:
# iterate through the films
"
3275,source/pymupdf.pdf,"film = template.clone()
# clone template to report each film
"
3276,source/pymupdf.pdf,"film.find(None, ""id"", ""filmtitle"").add_text(title)
# put title in templ
"
3277,source/pymupdf.pdf,"film.find(None, ""id"", ""director"").add_text(director)
# put director
"
3278,source/pymupdf.pdf,"film.find(None, ""id"", ""filmyear"").add_text(str(year))
# put year
"
3279,source/pymupdf.pdf,"# the actors reside in their own table - find the ones for this film title
cursor_casts.execute(select_casts % title)
# execute cursor
"
3280,source/pymupdf.pdf,"casts = cursor_casts.fetchall()
# read actors for the film
"
3281,source/pymupdf.pdf,"# each actor name appears in its own tuple, so extract it from there
film.find(None, ""id"", ""cast"").add_text(""\\n"".join([c[0] for c in casts]))
body.append_child(film)
"
3282,source/pymupdf.pdf,"template.remove()
# remove the template
"
3283,source/pymupdf.pdf,"# -------------------------------------------------------------------
# generate the PDF
# -------------------------------------------------------------------
writer = fitz.DocumentWriter(__file__.replace("".py"", "".pdf""), ""compress"")
mediabox = fitz.paper_rect(""a4"")
# use pages in ISO-A4 format
"
3284,source/pymupdf.pdf,"where = mediabox + (72, 36, -36, -72)
# leave page borders
"
3285,source/pymupdf.pdf,"more = 1
# end of output indicator
"
3286,source/pymupdf.pdf,"while more:
dev = writer.begin_page(mediabox)
# make a new page
"
3287,source/pymupdf.pdf,"more, filled = story.place(where)
# arrange content for this page
"
3288,source/pymupdf.pdf,"story.draw(dev, None)
# write content to page
"
3289,source/pymupdf.pdf,"writer.end_page()
# finish the page
"
3290,source/pymupdf.pdf,"writer.close()
# close the PDF
"
3291,source/pymupdf.pdf,"92
Chapter 12. Stories
"
3292,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3293,source/pymupdf.pdf,"12.5 How to Integrate with Existing PDFs
"
3294,source/pymupdf.pdf,"Because a DocumentWriter can only write to a new file, stories cannot be placed on existing pages. This script demon-
strates a circumvention of this restriction.
"
3295,source/pymupdf.pdf,"The basic idea is letting DocumentWriter output to a PDF in memory. Once the story has finished, we re-open this
memory PDF and put its pages to desired locations on existing pages via method Page.show_pdf_page().
"
3296,source/pymupdf.pdf,"Files:
"
3297,source/pymupdf.pdf,"• docs/samples/showpdf-page.py
"
3298,source/pymupdf.pdf,"""""""
Demo of Story class in PyMuPDF
-------------------------------
"
3299,source/pymupdf.pdf,"This script demonstrates how to the results of a fitz.Story output can be
placed in a rectangle of an existing (!) PDF page.
"
3300,source/pymupdf.pdf,"""""""
import io
import os
"
3301,source/pymupdf.pdf,"import fitz
"
3302,source/pymupdf.pdf,"def make_pdf(fileptr, text, rect, font=""sans-serif"", archive=None):
"
3303,source/pymupdf.pdf,"""""""Make a memory DocumentWriter from HTML text and a rect.
"
3304,source/pymupdf.pdf,"Args:
"
3305,source/pymupdf.pdf,"fileptr: a Python file object. For example an io.BytesIO().
text: the text to output (HTML format)
rect: the target rectangle. Will use its width / height as mediabox
font: (str) font family name, default sans-serif
archive: fitz.Archive parameter. To be used if e.g. images or special
"
3306,source/pymupdf.pdf,"fonts should be used.
"
3307,source/pymupdf.pdf,"Returns:
"
3308,source/pymupdf.pdf,"The matrix to convert page rectangles of the created PDF back
to rectangle coordinates in the parameter ""rect"".
Normal use will expect to fit all the text in the given rect.
However, if an overflow occurs, this function will output multiple
pages, and the caller may decide to either accept or retry with
changed parameters.
"
3309,source/pymupdf.pdf,"""""""
# use input rectangle as the page dimension
mediabox = fitz.Rect(0, 0, rect.width, rect.height)
# this matrix converts mediabox back to input rect
matrix = mediabox.torect(rect)
"
3310,source/pymupdf.pdf,"story = fitz.Story(text, archive=archive)
body = story.body
body.set_properties(font=font)
writer = fitz.DocumentWriter(fileptr)
"
3311,source/pymupdf.pdf,"(continues on next page)
"
3312,source/pymupdf.pdf,"12.5. How to Integrate with Existing PDFs
93
"
3313,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3314,source/pymupdf.pdf,"(continued from previous page)
"
3315,source/pymupdf.pdf,"while True:
device = writer.begin_page(mediabox)
more, _ = story.place(mediabox)
story.draw(device)
writer.end_page()
if not more:
"
3316,source/pymupdf.pdf,"break
"
3317,source/pymupdf.pdf,"writer.close()
return matrix
"
3318,source/pymupdf.pdf,"# -------------------------------------------------------------
# We want to put this in a given rectangle of an existing page
# -------------------------------------------------------------
HTML = """"""
<p>PyMuPDF is a great package! And it still improves significantly from one version to␣
"
3319,source/pymupdf.pdf,"˓→the next one!</p>
<p>It is a Python binding for <b>MuPDF</b>, a lightweight PDF, XPS, and E-book viewer,␣
"
3320,source/pymupdf.pdf,"˓→renderer, and toolkit.<br> Both are maintained and developed by Artifex Software, Inc.
"
3321,source/pymupdf.pdf,"˓→</p>
<p>Via MuPDF it can access files in PDF, XPS, OpenXPS, CBZ, EPUB, MOBI and FB2 (e-books)␣
"
3322,source/pymupdf.pdf,"˓→formats,<br> and it is known for its top
<b><i>performance</i></b> and <b><i>rendering quality.</p>""""""
"
3323,source/pymupdf.pdf,"# Make a PDF page for demo purposes
root = os.path.abspath( f""{__file__}/.."")
doc = fitz.open(f""{root}/mupdf-title.pdf"")
page = doc[0]
"
3324,source/pymupdf.pdf,"WHERE = fitz.Rect(50, 100, 250, 500)
# target rectangle on existing page
"
3325,source/pymupdf.pdf,"fileptr = io.BytesIO()
# let DocumentWriter use this as its file
"
3326,source/pymupdf.pdf,"# -------------------------------------------------------------------
# call DocumentWriter and Story to fill our rectangle
matrix = make_pdf(fileptr, HTML, WHERE)
# -------------------------------------------------------------------
src = fitz.open(""pdf"", fileptr)
# open DocumentWriter output PDF
"
3327,source/pymupdf.pdf,"if src.page_count > 1:
# target rect was too small
"
3328,source/pymupdf.pdf,"raise ValueError(""target WHERE too small"")
"
3329,source/pymupdf.pdf,"# its page 0 contains our result
page.show_pdf_page(WHERE, src, 0)
"
3330,source/pymupdf.pdf,"doc.ez_save(f""{root}/mupdf-title-after.pdf"")
"
3331,source/pymupdf.pdf,"94
Chapter 12. Stories
"
3332,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3333,source/pymupdf.pdf,"12.6 How to Make Multi-Columned Layouts and Access Fonts from
Package pymupdf-fonts
"
3334,source/pymupdf.pdf,"This script outputs an article (taken from Wikipedia) that contains text and multiple images and uses a 2-column page
layout.
"
3335,source/pymupdf.pdf,"In addition, two “Ubuntu” font families from package pymupdf-fonts are used instead of defaulting to Base-14 fonts.
"
3336,source/pymupdf.pdf,"Yet another feature used here is that all data – the images and the article HTML – are jointly stored in a ZIP file.
"
3337,source/pymupdf.pdf,"Files:
"
3338,source/pymupdf.pdf,"• docs/samples/quickfox.py
"
3339,source/pymupdf.pdf,"• docs/samples/quickfox.zip
"
3340,source/pymupdf.pdf,"""""""
This is a demo script using PyMuPDF's Story class to output text as a PDF with
a two-column page layout.
"
3341,source/pymupdf.pdf,"The script demonstrates the following features:
* How to fill columns or table cells of complex page layouts
* How to embed images
* How to modify existing, given HTML sources for output (text indent, font size)
* How to use fonts defined in package ""pymupdf-fonts""
* How to use ZIP files as Archive
"
3342,source/pymupdf.pdf,"--------------
The example is taken from the somewhat modified Wikipedia article
https://en.wikipedia.org/wiki/The_quick_brown_fox_jumps_over_the_lazy_dog.
--------------
""""""
"
3343,source/pymupdf.pdf,"import io
import os
import zipfile
import fitz
"
3344,source/pymupdf.pdf,"thisdir = os.path.dirname(os.path.abspath(__file__))
myzip = zipfile.ZipFile(os.path.join(thisdir, ""quickfox.zip""))
arch = fitz.Archive(myzip)
"
3345,source/pymupdf.pdf,"if fitz.fitz_fontdescriptors:
"
3346,source/pymupdf.pdf,"# we want to use the Ubuntu fonts for sans-serif and for monospace
CSS = fitz.css_for_pymupdf_font(""ubuntu"", archive=arch, name=""sans-serif"")
CSS = fitz.css_for_pymupdf_font(""ubuntm"", CSS=CSS, archive=arch, name=""monospace"")
"
3347,source/pymupdf.pdf,"else:
"
3348,source/pymupdf.pdf,"# No pymupdf-fonts available.
CSS=""""
"
3349,source/pymupdf.pdf,"docname = __file__.replace("".py"", "".pdf"")
# output PDF file name
"
3350,source/pymupdf.pdf,"(continues on next page)
"
3351,source/pymupdf.pdf,"12.6. How to Make Multi-Columned Layouts and Access Fonts from Package pymupdf-fonts
95
"
3352,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3353,source/pymupdf.pdf,"(continued from previous page)
"
3354,source/pymupdf.pdf,"HTML = myzip.read(""quickfox.html"").decode()
"
3355,source/pymupdf.pdf,"# make the Story object
story = fitz.Story(HTML, user_css=CSS, archive=arch)
"
3356,source/pymupdf.pdf,"# --------------------------------------------------------------
# modify the DOM somewhat
# --------------------------------------------------------------
body = story.body
# access HTML body
"
3357,source/pymupdf.pdf,"body.set_properties(font=""sans-serif"")
# and give it our font globally
"
3358,source/pymupdf.pdf,"# modify certain nodes
para = body.find(""p"", None, None)
# find relevant nodes (here: paragraphs)
"
3359,source/pymupdf.pdf,"while para != None:
para.set_properties(
# method MUST be used for existing nodes
"
3360,source/pymupdf.pdf,"indent=15,
fontsize=13,
)
para = para.find_next(""p"", None, None)
"
3361,source/pymupdf.pdf,"# choose PDF page size
MEDIABOX = fitz.paper_rect(""letter"")
# text appears only within this subrectangle
WHERE = MEDIABOX + (36, 36, -36, -36)
"
3362,source/pymupdf.pdf,"# --------------------------------------------------------------
# define page layout within the WHERE rectangle
# --------------------------------------------------------------
COLS = 2
# layout: 2 cols 1 row
"
3363,source/pymupdf.pdf,"ROWS = 1
TABLE = fitz.make_table(WHERE, cols=COLS, rows=ROWS)
# fill the cells of each page in this sequence:
CELLS = [TABLE[i][j] for i in range(ROWS) for j in range(COLS)]
"
3364,source/pymupdf.pdf,"fileobject = io.BytesIO()
# let DocumentWriter write to memory
"
3365,source/pymupdf.pdf,"writer = fitz.DocumentWriter(fileobject)
# define the writer
"
3366,source/pymupdf.pdf,"more = 1
while more:
# loop until all input text has been written out
"
3367,source/pymupdf.pdf,"dev = writer.begin_page(MEDIABOX)
# prepare a new output page
"
3368,source/pymupdf.pdf,"for cell in CELLS:
"
3369,source/pymupdf.pdf,"# content may be complete after any cell, ...
if more:
# so check this status first
"
3370,source/pymupdf.pdf,"more, _ = story.place(cell)
story.draw(dev)
writer.end_page()
# finish the PDF page
"
3371,source/pymupdf.pdf,"writer.close()
# close DocumentWriter output
"
3372,source/pymupdf.pdf,"# for housekeeping work re-open from memory
doc = fitz.open(""pdf"", fileobject)
doc.ez_save(docname)
"
3373,source/pymupdf.pdf,"96
Chapter 12. Stories
"
3374,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3375,source/pymupdf.pdf,"12.7 How to Make a Layout which Wraps Around a Predefined “no go
area” Layout
"
3376,source/pymupdf.pdf,"This is a demo script using PyMuPDF’s Story class to output text as a PDF with a two-column page layout.
"
3377,source/pymupdf.pdf,"The script demonstrates the following features:
"
3378,source/pymupdf.pdf,"• Layout text around images of an existing (“target”) PDF.
"
3379,source/pymupdf.pdf,"• Based on a few global parameters, areas on each page are identified, that can be used to receive text layouted by
a Story.
"
3380,source/pymupdf.pdf,"• These global parameters are not stored anywhere in the target PDF and must therefore be provided in some way:
"
3381,source/pymupdf.pdf,"– The width of the border(s) on each page.
"
3382,source/pymupdf.pdf,"– The fontsize to use for text. This value determines whether the provided text will fit in the empty spaces
of the (fixed) pages of target PDF. It cannot be predicted in any way. The script ends with an exception if
target PDF has not enough pages, and prints a warning message if not all pages receive at least some text.
In both cases, the FONTSIZE value can be changed (a float value).
"
3383,source/pymupdf.pdf,"– Use of a 2-column page layout for the text.
"
3384,source/pymupdf.pdf,"• The layout creates a temporary (memory) PDF. Its produced page content (the text) is used to overlay the corre-
sponding target page. If text requires more pages than are available in target PDF, an exception is raised. If not
all target pages receive at least some text, a warning is printed.
"
3385,source/pymupdf.pdf,"• The script reads “image-no-go.pdf” in its own folder. This is the “target” PDF. It contains 2 pages with each
2 images (from the original article), which are positioned at places that create a broad overall test coverage.
Otherwise the pages are empty.
"
3386,source/pymupdf.pdf,"• The script produces “quickfox-image-no-go.pdf” which contains the original pages and image positions, but with
the original article text laid out around them.
"
3387,source/pymupdf.pdf,"Files:
"
3388,source/pymupdf.pdf,"• docs/samples/quickfox-image-no-go.py
"
3389,source/pymupdf.pdf,"• docs/samples/quickfox-image-no-go.pdf
"
3390,source/pymupdf.pdf,"• docs/samples/quickfox.zip
"
3391,source/pymupdf.pdf,"""""""
This is a demo script using PyMuPDF's Story class to output text as a PDF with
a two-column page layout.
"
3392,source/pymupdf.pdf,"The script demonstrates the following features:
* Layout text around images of an existing (""target"") PDF.
* Based on a few global parameters, areas on each page are identified, that
"
3393,source/pymupdf.pdf,"can be used to receive text layouted by a Story.
"
3394,source/pymupdf.pdf,"* These global parameters are not stored anywhere in the target PDF and
"
3395,source/pymupdf.pdf,"must therefore be provided in some way.
- The width of the border(s) on each page.
"
3396,source/pymupdf.pdf,"(continues on next page)
"
3397,source/pymupdf.pdf,"12.7. How to Make a Layout which Wraps Around a Predefined “no go area” Layout
97
"
3398,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3399,source/pymupdf.pdf,"(continued from previous page)
"
3400,source/pymupdf.pdf,"- The fontsize to use for text. This value determines whether the provided
"
3401,source/pymupdf.pdf,"text will fit in the empty spaces of the (fixed) pages of target PDF. It
cannot be predicted in any way. The script ends with an exception if
target PDF has not enough pages, and prints a warning message if not all
pages receive at least some text. In both cases, the FONTSIZE value
can be changed (a float value).
"
3402,source/pymupdf.pdf,"- Use of a 2-column page layout for the text.
"
3403,source/pymupdf.pdf,"* The layout creates a temporary (memory) PDF. Its produced page content
"
3404,source/pymupdf.pdf,"(the text) is used to overlay the corresponding target page. If text
requires more pages than are available in target PDF, an exception is raised.
If not all target pages receive at least some text, a warning is printed.
"
3405,source/pymupdf.pdf,"* The script reads ""image-no-go.pdf"" in its own folder. This is the ""target"" PDF.
"
3406,source/pymupdf.pdf,"It contains 2 pages with each 2 images (from the original article), which are
positioned at places that create a broad overall test coverage. Otherwise the
pages are empty.
"
3407,source/pymupdf.pdf,"* The script produces ""quickfox-image-no-go.pdf"" which contains the original pages
"
3408,source/pymupdf.pdf,"and image positions, but with the original article text laid out around them.
"
3409,source/pymupdf.pdf,"Note:
--------------
This script version uses just image positions to derive ""No-Go areas"" for
layouting the text. Other PDF objects types are detectable by PyMuPDF and may
be taken instead or in addition, without influencing the layouting.
The following are candidates for other such ""No-Go areas"". Each can be detected
and located by PyMuPDF:
* Annotations
* Drawings
* Existing text
"
3410,source/pymupdf.pdf,"--------------
The text and images are taken from the somewhat modified Wikipedia article
https://en.wikipedia.org/wiki/The_quick_brown_fox_jumps_over_the_lazy_dog.
--------------
""""""
"
3411,source/pymupdf.pdf,"import io
import os
import zipfile
import fitz
"
3412,source/pymupdf.pdf,"thisdir = os.path.dirname(os.path.abspath(__file__))
myzip = zipfile.ZipFile(os.path.join(thisdir, ""quickfox.zip""))
"
3413,source/pymupdf.pdf,"docname = os.path.join(thisdir, ""image-no-go.pdf"")
# ""no go"" input PDF file name
"
3414,source/pymupdf.pdf,"outname = os.path.join(thisdir, ""quickfox-image-no-go.pdf"")
# output PDF file name
"
3415,source/pymupdf.pdf,"BORDER = 36
# global parameter
"
3416,source/pymupdf.pdf,"FONTSIZE = 12.5
# global parameter
"
3417,source/pymupdf.pdf,"COLS = 2
# number of text columns, global parameter
"
3418,source/pymupdf.pdf,"def analyze_page(page):
"
3419,source/pymupdf.pdf,"(continues on next page)
"
3420,source/pymupdf.pdf,"98
Chapter 12. Stories
"
3421,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3422,source/pymupdf.pdf,"(continued from previous page)
"
3423,source/pymupdf.pdf,"""""""Compute MediaBox and rectangles on page that are free to receive text.
"
3424,source/pymupdf.pdf,"Notes:
"
3425,source/pymupdf.pdf,"Assume a BORDER around the page, make 2 columns of the resulting
sub-rectangle and extract the rectangles of all images on page.
For demo purposes, the image rectangles are taken as ""NO-GO areas""
on the page when writing text with the Story.
The function returns free areas for each of the columns.
"
3426,source/pymupdf.pdf,"Returns:
"
3427,source/pymupdf.pdf,"(page.number, mediabox, CELLS), where CELLS is a list of free cells.
"
3428,source/pymupdf.pdf,"""""""
prect = page.rect
# page rectangle - will be our MEDIABOX later
"
3429,source/pymupdf.pdf,"where = prect + (BORDER, BORDER, -BORDER, -BORDER)
TABLE = fitz.make_table(where, rows=1, cols=COLS)
"
3430,source/pymupdf.pdf,"# extract rectangles covered by images on this page
IMG_RECTS = sorted(
# image rects on page (sort top-left to bottom-right)
"
3431,source/pymupdf.pdf,"[fitz.Rect(item[""bbox""]) for item in page.get_image_info()],
key=lambda b: (b.y1, b.x0),
)
"
3432,source/pymupdf.pdf,"def free_cells(column):
"
3433,source/pymupdf.pdf,"""""""Return free areas in this column.""""""
free_stripes = []
# y-value pairs wrapping a free area stripe
"
3434,source/pymupdf.pdf,"# intersecting images: block complete intersecting column stripe
col_imgs = [(b.y0, b.y1) for b in IMG_RECTS if abs(b & column) > 0]
s_y0 = column.y0
# top y-value of column
"
3435,source/pymupdf.pdf,"for y0, y1 in col_imgs:
# an image stripe
"
3436,source/pymupdf.pdf,"if y0 > s_y0 + FONTSIZE:
# image starts below last free btm value
"
3437,source/pymupdf.pdf,"free_stripes.append((s_y0, y0))
# store as free stripe
"
3438,source/pymupdf.pdf,"s_y0 = y1
# start of next free stripe
"
3439,source/pymupdf.pdf,"if s_y0 + FONTSIZE < column.y1:
# enough room to column bottom
"
3440,source/pymupdf.pdf,"free_stripes.append((s_y0, column.y1))
"
3441,source/pymupdf.pdf,"if free_stripes == []:
# covers ""no image in this column""
"
3442,source/pymupdf.pdf,"free_stripes.append((column.y0, column.y1))
"
3443,source/pymupdf.pdf,"# make available cells of this column
CELLS = [fitz.Rect(column.x0, y0, column.x1, y1) for (y0, y1) in free_stripes]
return CELLS
"
3444,source/pymupdf.pdf,"# collection of available Story rectangles on page
CELLS = []
for i in range(COLS):
CELLS.extend(free_cells(TABLE[0][i]))
"
3445,source/pymupdf.pdf,"return page.number, prect, CELLS
"
3446,source/pymupdf.pdf,"HTML = myzip.read(""quickfox.html"").decode()
"
3447,source/pymupdf.pdf,"(continues on next page)
"
3448,source/pymupdf.pdf,"12.7. How to Make a Layout which Wraps Around a Predefined “no go area” Layout
99
"
3449,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3450,source/pymupdf.pdf,"(continued from previous page)
"
3451,source/pymupdf.pdf,"# --------------------------------------------------------------
# Make the Story object
# --------------------------------------------------------------
story = fitz.Story(HTML)
"
3452,source/pymupdf.pdf,"# modify the DOM somewhat
body = story.body
# access HTML body
"
3453,source/pymupdf.pdf,"body.set_properties(font=""sans-serif"")
# and give it our font globally
"
3454,source/pymupdf.pdf,"# modify certain nodes
para = body.find(""p"", None, None)
# find relevant nodes (here: paragraphs)
"
3455,source/pymupdf.pdf,"while para != None:
para.set_properties(
# method MUST be used for existing nodes
"
3456,source/pymupdf.pdf,"indent=15,
fontsize=FONTSIZE,
)
para = para.find_next(""p"", None, None)
"
3457,source/pymupdf.pdf,"# we remove all image references, because the target PDF already has them
img = body.find(""img"", None, None)
while img != None:
next_img = img.find_next(""img"", None, None)
img.remove()
img = next_img
"
3458,source/pymupdf.pdf,"page_info = {}
# contains MEDIABOX and free CELLS per page
"
3459,source/pymupdf.pdf,"doc = fitz.open(docname)
for page in doc:
pno, mediabox, cells = analyze_page(page)
page_info[pno] = (mediabox, cells)
doc.close()
# close target PDF for now - re-open later
"
3460,source/pymupdf.pdf,"fileobject = io.BytesIO()
# let DocumentWriter write to memory
"
3461,source/pymupdf.pdf,"writer = fitz.DocumentWriter(fileobject)
# define output writer
"
3462,source/pymupdf.pdf,"more = 1
# stop if this ever becomes zero
"
3463,source/pymupdf.pdf,"pno = 0
# count output pages
"
3464,source/pymupdf.pdf,"while more:
# loop until all HTML text has been written
"
3465,source/pymupdf.pdf,"try:
MEDIABOX, CELLS = page_info[pno]
"
3466,source/pymupdf.pdf,"except KeyError:
# too much text space required: reduce fontsize?
"
3467,source/pymupdf.pdf,"raise ValueError(""text does not fit on target PDF"")
dev = writer.begin_page(MEDIABOX)
# prepare a new output page
"
3468,source/pymupdf.pdf,"for cell in CELLS:
# iterate over free cells on this page
"
3469,source/pymupdf.pdf,"if not more:
# need to check this for every cell
"
3470,source/pymupdf.pdf,"continue
"
3471,source/pymupdf.pdf,"more, _ = story.place(cell)
story.draw(dev)
writer.end_page()
# finish the PDF page
"
3472,source/pymupdf.pdf,"pno += 1
"
3473,source/pymupdf.pdf,"(continues on next page)
"
3474,source/pymupdf.pdf,"100
Chapter 12. Stories
"
3475,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3476,source/pymupdf.pdf,"(continued from previous page)
"
3477,source/pymupdf.pdf,"writer.close()
# close DocumentWriter output
"
3478,source/pymupdf.pdf,"# Re-open writer output, read its pages and overlay target pages with them.
# The generated pages have same dimension as their targets.
src = fitz.open(""pdf"", fileobject)
doc = fitz.open(doc.name)
for page in doc:
# overlay every target page with the prepared text
"
3479,source/pymupdf.pdf,"if page.number >= src.page_count:
"
3480,source/pymupdf.pdf,"print(f""Text only uses {src.page_count} target pages!"")
continue
# story did not need all target pages?
"
3481,source/pymupdf.pdf,"# overlay target page
page.show_pdf_page(page.rect, src, page.number)
"
3482,source/pymupdf.pdf,"# DEBUG start --- draw the text rectangles
# mb, cells = page_info[page.number]
# for cell in cells:
#
page.draw_rect(cell, color=(1, 0, 0))
"
3483,source/pymupdf.pdf,"# DEBUG stop ---
"
3484,source/pymupdf.pdf,"doc.ez_save(outname)
"
3485,source/pymupdf.pdf,"12.8 How to Output an HTML Table
"
3486,source/pymupdf.pdf,"Outputting HTML tables is supported as follows:
"
3487,source/pymupdf.pdf,"• Flat table layouts are supported (“rows x columns”), no support of the “colspan” / “rowspan” attributes.
"
3488,source/pymupdf.pdf,"• Table header tag th supports attribute “scope” with values “row” or “col”. Applicable text will be bold by default.
"
3489,source/pymupdf.pdf,"• Column widths are computed automatically based on column content. They cannot be directly set.
"
3490,source/pymupdf.pdf,"• Table cells may contain images which will be considered in the column width calculation magic.
"
3491,source/pymupdf.pdf,"• Row heights are computed automatically based on row content - leading to multi-line rows where needed.
"
3492,source/pymupdf.pdf,"• The potentially multiple lines of a table row will always be kept together on one page (respectively “where”
rectangle) and not be splitted.
"
3493,source/pymupdf.pdf,"• Table header rows are only shown on the first page / “where” rectangle.
"
3494,source/pymupdf.pdf,"• The “style” attribute is ignored when given directly in HTML table elements. Styling for a table and its elements
must happen separately, in CSS source or within the style tag.
"
3495,source/pymupdf.pdf,"• Styling for tr elements is not supported and ignored. Therefore, a table-wide grid or alternating row background
colors are not supported. One of the following example scripts however shows an easy way to deal with this
limitation.
"
3496,source/pymupdf.pdf,"Files:
"
3497,source/pymupdf.pdf,"• docs/samples/table01.py This script reflects basic features.
"
3498,source/pymupdf.pdf,"12.8. How to Output an HTML Table
101
"
3499,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3500,source/pymupdf.pdf,"""""""
Demo script for basic HTML table support in Story objects
"
3501,source/pymupdf.pdf,"Outputs a table with three columns that fits on one Letter page.
The content of each row is filled via the Story's template mechanism.
Column widths and row heights are automatically computed by MuPDF.
Some styling via a CSS source is also demonstrated:
"
3502,source/pymupdf.pdf,"- The table header row has a gray background
- Each cell shows a border at its top
- The Story's body uses the sans-serif font family
- The text of one of the columns is set to blue
"
3503,source/pymupdf.pdf,"Dependencies
-------------
PyMuPDF v1.22.0 or later
""""""
import fitz
"
3504,source/pymupdf.pdf,"table_text = (
# the content of each table row
"
3505,source/pymupdf.pdf,"(
"
3506,source/pymupdf.pdf,"""Length"",
""integer"",
""""""(Required) The number of bytes from the beginning of the line following the␣
"
3507,source/pymupdf.pdf,"˓→keyword stream to the last byte just before the keyword endstream. (There may be an␣
"
3508,source/pymupdf.pdf,"˓→additional EOL marker, preceding endstream, that is not included in the count and is␣
"
3509,source/pymupdf.pdf,"˓→not logically part of the stream data.) See “Stream Extent,” above, for further␣
"
3510,source/pymupdf.pdf,"˓→discussion."""""",
),
(
"
3511,source/pymupdf.pdf,"""Filter"",
""name or array"",
""""""(Optional) The name of a filter to be applied in processing the stream data␣
"
3512,source/pymupdf.pdf,"˓→found between the keywords stream and endstream, or an array of such names. Multiple␣
"
3513,source/pymupdf.pdf,"˓→filters should be specified in the order in which they are to be applied."""""",
),
(
"
3514,source/pymupdf.pdf,"""FFilter"",
""name or array"",
""""""(Optional; PDF 1.2) The name of a filter to be applied in processing the data␣
"
3515,source/pymupdf.pdf,"˓→found in the stream's external file, or an array of such names. The same rules apply as␣
"
3516,source/pymupdf.pdf,"˓→for Filter."""""",
),
(
"
3517,source/pymupdf.pdf,"""FDecodeParms"",
""dictionary or array"",
""""""(Optional; PDF 1.2) A parameter dictionary, or an array of such dictionaries,␣
"
3518,source/pymupdf.pdf,"˓→used by the filters specified by FFilter. The same rules apply as for DecodeParms."""""",
),
(
"
3519,source/pymupdf.pdf,"""DecodeParms"",
""dictionary or array"",
""""""(Optional) A parameter dictionary or an array of such dictionaries, used by␣
"
3520,source/pymupdf.pdf,"(continues on next page)
"
3521,source/pymupdf.pdf,"102
Chapter 12. Stories
"
3522,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3523,source/pymupdf.pdf,"(continued from previous page)
"
3524,source/pymupdf.pdf,"˓→the filters specified by Filter. If there is only one filter and that filter has␣
"
3525,source/pymupdf.pdf,"˓→parameters, DecodeParms must be set to the filter's parameter dictionary unless all the␣
"
3526,source/pymupdf.pdf,"˓→filter's parameters have their default values, in which case the DecodeParms entry may␣
"
3527,source/pymupdf.pdf,"˓→be omitted. If there are multiple filters and any of the filters has parameters set to␣
"
3528,source/pymupdf.pdf,"˓→nondefault values, DecodeParms must be an array with one entry for each filter: either␣
"
3529,source/pymupdf.pdf,"˓→the parameter dictionary for that filter, or the null object if that filter has no␣
"
3530,source/pymupdf.pdf,"˓→parameters (or if all of its parameters have their default values). If none of the␣
"
3531,source/pymupdf.pdf,"˓→filters have parameters, or if all their parameters have default values, the␣
"
3532,source/pymupdf.pdf,"˓→DecodeParms entry may be omitted. (See implementation note 7 in Appendix H.)"""""",
),
(
"
3533,source/pymupdf.pdf,"""DL"",
""integer"",
""""""(Optional; PDF 1.5) A non-negative integer representing the number of bytes␣
"
3534,source/pymupdf.pdf,"˓→in the decoded (defiltered) stream. It can be used to determine, for example, whether␣
"
3535,source/pymupdf.pdf,"˓→enough disk space is available to write a stream to a file.\\nThis value should be␣
"
3536,source/pymupdf.pdf,"˓→considered a hint only; for some stream filters, it may not be possible to determine␣
"
3537,source/pymupdf.pdf,"˓→this value precisely."""""",
),
(
"
3538,source/pymupdf.pdf,"""F"",
""file specification"",
""""""(Optional; PDF 1.2) The file containing the stream data. If this entry is␣
"
3539,source/pymupdf.pdf,"˓→present, the bytes between stream and endstream are ignored, the filters are specified␣
"
3540,source/pymupdf.pdf,"˓→by FFilter rather than Filter, and the filter parameters are specified by FDecodeParms␣
"
3541,source/pymupdf.pdf,"˓→rather than DecodeParms. However, the Length entry should still specify the number of␣
"
3542,source/pymupdf.pdf,"˓→those bytes. (Usually, there are no bytes and Length is 0.) (See implementation note␣
"
3543,source/pymupdf.pdf,"˓→46 in Appendix H.)"""""",
),
)
"
3544,source/pymupdf.pdf,"# Only a minimal HTML source is required to provide the Story's working
HTML = """"""
<html>
<body><h2>TABLE 3.4 Entries common to all stream dictionaries</h2>
<table>
"
3545,source/pymupdf.pdf,"<tr>
"
3546,source/pymupdf.pdf,"<th>KEY</th><th>TYPE</th><th>VALUE</th>
"
3547,source/pymupdf.pdf,"</tr>
<tr id=""row"">
"
3548,source/pymupdf.pdf,"<td id=""col0""></td><td id=""col1""></td><td id=""col2""></td>
"
3549,source/pymupdf.pdf,"</tr>
"
3550,source/pymupdf.pdf,"""""""
"
3551,source/pymupdf.pdf,"""""""
---------------------------------------------------------------------
Just for demo purposes, set:
- header cell background to gray
- text color in col1 to blue
- a border line at the top of all table cells
- all text to the sans-serif font
---------------------------------------------------------------------
"
3552,source/pymupdf.pdf,"(continues on next page)
"
3553,source/pymupdf.pdf,"12.8. How to Output an HTML Table
103
"
3554,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3555,source/pymupdf.pdf,"(continued from previous page)
"
3556,source/pymupdf.pdf,"""""""
CSS = """"""th {
"
3557,source/pymupdf.pdf,"background-color: #aaa;
"
3558,source/pymupdf.pdf,"}
"
3559,source/pymupdf.pdf,"td[id=""col1""] {
"
3560,source/pymupdf.pdf,"color: blue;
"
3561,source/pymupdf.pdf,"}
"
3562,source/pymupdf.pdf,"td, tr {
"
3563,source/pymupdf.pdf,"border: 1px solid black;
border-right-width: 0px;
border-left-width: 0px;
border-bottom-width: 0px;
"
3564,source/pymupdf.pdf,"}
body {
"
3565,source/pymupdf.pdf,"font-family: sans-serif;
"
3566,source/pymupdf.pdf,"}
""""""
"
3567,source/pymupdf.pdf,"story = fitz.Story(HTML, user_css=CSS)
# define the Story
"
3568,source/pymupdf.pdf,"body = story.body
# access the HTML <body> of it
"
3569,source/pymupdf.pdf,"template = body.find(None, ""id"", ""row"")
# find the template with name ""row""
"
3570,source/pymupdf.pdf,"parent = template.parent
# access its parent i.e., the <table>
"
3571,source/pymupdf.pdf,"for col0, col1, col2 in table_text:
row = template.clone()
# make a clone of the row template
"
3572,source/pymupdf.pdf,"# add text to each cell in the duplicated row
row.find(None, ""id"", ""col0"").add_text(col0)
row.find(None, ""id"", ""col1"").add_text(col1)
row.find(None, ""id"", ""col2"").add_text(col2)
parent.append_child(row)
# add new row to <table>
"
3573,source/pymupdf.pdf,"template.remove()
# remove the template
"
3574,source/pymupdf.pdf,"# Story is ready - output it via a writer
writer = fitz.DocumentWriter(__file__.replace("".py"", "".pdf""), ""compress"")
mediabox = fitz.paper_rect(""letter"")
# size of one output page
"
3575,source/pymupdf.pdf,"where = mediabox + (36, 36, -36, -36)
# use this sub-area for the content
"
3576,source/pymupdf.pdf,"more = True
# detects end of output
"
3577,source/pymupdf.pdf,"while more:
dev = writer.begin_page(mediabox)
# start a page, returning a device
"
3578,source/pymupdf.pdf,"more, filled = story.place(where)
# compute content fitting into ""where""
"
3579,source/pymupdf.pdf,"story.draw(dev)
# output it to the page
"
3580,source/pymupdf.pdf,"writer.end_page()
# finalize the page
"
3581,source/pymupdf.pdf,"writer.close()
# close the output
"
3582,source/pymupdf.pdf,"• docs/samples/national-capitals.py Advanced script extending table output options using simple addi-
tional code:
"
3583,source/pymupdf.pdf,"– Multi-page output simulating repeating header rows
"
3584,source/pymupdf.pdf,"104
Chapter 12. Stories
"
3585,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3586,source/pymupdf.pdf,"– Alternating table row background colors
"
3587,source/pymupdf.pdf,"– Table rows and columns delimited by gridlines
"
3588,source/pymupdf.pdf,"– Table rows dynamically generated / filled with data from an SQL database
"
3589,source/pymupdf.pdf,"""""""
Demo script using (Py-) MuPDF ""Story"" feature.
"
3590,source/pymupdf.pdf,"The following features are implemented:
"
3591,source/pymupdf.pdf,"* Use of Story ""template"" feature to provide row content
* Use database access (SQLITE) to fetch row content
* Use ElementPosition feature to locate cell positions on page
* Simulate feature ""Table Header Repeat""
* Simulate feature ""Cell Grid Lines""
"
3592,source/pymupdf.pdf,"""""""
import io
import sqlite3
import sys
"
3593,source/pymupdf.pdf,"import fitz
"
3594,source/pymupdf.pdf,"""""""
Table data. Used to populate a temporary SQL database, which will be processed by the␣
"
3595,source/pymupdf.pdf,"˓→script.
Its only purpose is to avoid carrying around a separate database file.
""""""
table_data = """"""China;Beijing;21542000;1.5%;2018
Japan;Tokyo;13921000;11.2%;2019
DR Congo;Kinshasa;12691000;13.2%;2017
Russia;Moscow;12655050;8.7%;2021
Indonesia;Jakarta;10562088;3.9%;2020
Egypt;Cairo;10107125;9.3%;2022
South Korea;Seoul;9508451;18.3%;2022
Mexico;Mexico City;9209944;7.3%;2020
United Kingdom;London;9002488;13.4%;2020
Bangladesh;Dhaka;8906039;5.3%;2011
Peru;Lima;8852000;26.3%;2012
Iran;Tehran;8693706;9.9%;2016
Thailand;Bangkok;8305218;11.6%;2010
Vietnam;Hanoi;8053663;8.3%;2019
Iraq;Baghdad;7682136;17.6%;2021
Saudi Arabia;Riyadh;7676654;21.4%;2018
Hong Kong;Hong Kong;7291600;100%;2022
Colombia;Bogotá;7181469;13.9%;2011
Chile;Santiago;6310000;32.4%;2012
Turkey;Ankara;5747325;6.8%;2021
Singapore;Singapore;5453600;91.8%;2021
Afghanistan;Kabul;4601789;11.5%;2021
Kenya;Nairobi;4397073;8.3%;2019
Jordan;Amman;4061150;36.4%;2021
"
3596,source/pymupdf.pdf,"(continues on next page)
"
3597,source/pymupdf.pdf,"12.8. How to Output an HTML Table
105
"
3598,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3599,source/pymupdf.pdf,"(continued from previous page)
"
3600,source/pymupdf.pdf,"Algeria;Algiers;3915811;8.9%;2011
Germany;Berlin;3677472;4.4%;2021
Spain;Madrid;3305408;7.0%;2021
Ethiopia;Addis Ababa;3040740;2.5%;2012
Kuwait;Kuwait City;2989000;70.3%;2018
Guatemala;Guatemala City;2934841;16.7%;2020
South Africa;Pretoria;2921488;4.9%;2011
Ukraine;Kyiv;2920873;6.7%;2021
Argentina;Buenos Aires;2891082;6.4%;2010
North Korea;Pyongyang;2870000;11.1%;2016
Uzbekistan;Tashkent;2860600;8.4%;2022
Italy;Rome;2761632;4.7%;2022
Ecuador;Quito;2800388;15.7%;2020
Cameroon;Yaoundé;2765568;10.2%;2015
Zambia;Lusaka;2731696;14.0%;2020
Sudan;Khartoum;2682431;5.9%;2012
Brazil;Brasília;2648532;1.2%;2012
Taiwan;Taipei (de facto);2608332;10.9%;2020
Yemen;Sanaa;2575347;7.8%;2012
Angola;Luanda;2571861;7.5%;2020
Burkina Faso;Ouagadougou;2453496;11.1%;2019
Ghana;Accra;2388000;7.3%;2017
Somalia;Mogadishu;2388000;14.0%;2021
Azerbaijan;Baku;2303100;22.3%;2022
Cambodia;Phnom Penh;2281951;13.8%;2019
Venezuela;Caracas;2245744;8.0%;2016
France;Paris;2139907;3.3%;2022
Cuba;Havana;2132183;18.9%;2020
Zimbabwe;Harare;2123132;13.3%;2012
Syria;Damascus;2079000;9.7%;2019
Belarus;Minsk;1996553;20.8%;2022
Austria;Vienna;1962779;22.0%;2022
Poland;Warsaw;1863056;4.9%;2021
Philippines;Manila;1846513;1.6%;2020
Mali;Bamako;1809106;8.3%;2009
Malaysia;Kuala Lumpur;1782500;5.3%;2019
Romania;Bucharest;1716983;8.9%;2021
Hungary;Budapest;1706851;17.6%;2022
Congo;Brazzaville;1696392;29.1%;2015
Serbia;Belgrade;1688667;23.1%;2021
Uganda;Kampala;1680600;3.7%;2019
Guinea;Conakry;1660973;12.3%;2014
Mongolia;Ulaanbaatar;1466125;43.8%;2020
Honduras;Tegucigalpa;1444085;14.0%;2021
Senegal;Dakar;1438725;8.5%;2021
Niger;Niamey;1334984;5.3%;2020
Uruguay;Montevideo;1319108;38.5%;2011
Bulgaria;Sofia;1307439;19.0%;2021
Oman;Muscat;1294101;28.6%;2021
Czech Republic;Prague;1275406;12.1%;2022
Madagascar;Antananarivo;1275207;4.4%;2018
Kazakhstan;Astana;1239900;6.5%;2022
"
3601,source/pymupdf.pdf,"(continues on next page)
"
3602,source/pymupdf.pdf,"106
Chapter 12. Stories
"
3603,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3604,source/pymupdf.pdf,"(continued from previous page)
"
3605,source/pymupdf.pdf,"Nigeria;Abuja;1235880;0.6%;2011
Georgia;Tbilisi;1201769;32.0%;2022
Mauritania;Nouakchott;1195600;25.9%;2019
Qatar;Doha;1186023;44.1%;2020
Libya;Tripoli;1170000;17.4%;2019
Myanmar;Naypyidaw;1160242;2.2%;2014
Rwanda;Kigali;1132686;8.4%;2012
Mozambique;Maputo;1124988;3.5%;2020
Dominican Republic;Santo Domingo;1111838;10.0%;2010
Armenia;Yerevan;1096100;39.3%;2021
Kyrgyzstan;Bishkek;1074075;16.5%;2021
Sierra Leone;Freetown;1055964;12.5%;2015
Nicaragua;Managua;1055247;15.4%;2020
Canada;Ottawa;1017449;2.7%;2021
Pakistan;Islamabad;1014825;0.4%;2017
Liberia;Monrovia;1010970;19.5%;2008
United Arab Emirates;Abu Dhabi;1010092;10.8%;2020
Malawi;Lilongwe;989318;5.0%;2018
Haiti;Port-au-Prince;987310;8.6%;2015
Sweden;Stockholm;978770;9.4%;2021
Eritrea;Asmara;963000;26.6%;2020
Israel;Jerusalem;936425;10.5%;2019
Laos;Vientiane;927724;12.5%;2019
Chad;N'Djamena;916000;5.3%;2009
Netherlands;Amsterdam;905234;5.2%;2022
Central African Republic;Bangui;889231;16.3%;2020
Panama;Panama City;880691;20.2%;2013
Tajikistan;Dushanbe;863400;8.9%;2020
Nepal;Kathmandu;845767;2.8%;2021
Togo;Lomé;837437;9.7%;2010
Turkmenistan;Ashgabat;791000;12.5%;2017
Moldova;Chişinău;779300;25.5%;2019
Croatia;Zagreb;769944;19.0%;2021
Gabon;Libreville;703904;30.1%;2013
Norway;Oslo;697010;12.9%;2021
Macau;Macau;671900;97.9%;2022
United States;Washington D.C.;670050;0.2%;2021
Jamaica;Kingston;662491;23.4%;2019
Finland;Helsinki;658864;11.9%;2021
Tunisia;Tunis;638845;5.2%;2014
Denmark;Copenhagen;638117;10.9%;2021
Greece;Athens;637798;6.1%;2021
Latvia;Riga;605802;32.3%;2021
Djibouti;Djibouti (city);604013;54.6%;2012
Ireland;Dublin;588233;11.8%;2022
Morocco;Rabat;577827;1.6%;2014
Lithuania;Vilnius;576195;20.7%;2022
El Salvador;San Salvador;570459;9.0%;2019
Albania;Tirana;557422;19.5%;2011
North Macedonia;Skopje;544086;25.9%;2015
South Sudan;Juba;525953;4.9%;2017
Paraguay;Asunción;521559;7.8%;2020
"
3606,source/pymupdf.pdf,"(continues on next page)
"
3607,source/pymupdf.pdf,"12.8. How to Output an HTML Table
107
"
3608,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3609,source/pymupdf.pdf,"(continued from previous page)
"
3610,source/pymupdf.pdf,"Portugal;Lisbon;509614;5.0%;2020
Guinea-Bissau;Bissau;492004;23.9%;2015
Slovakia;Bratislava;440948;8.1%;2020
Estonia;Tallinn;438341;33.0%;2021
Australia;Canberra;431380;1.7%;2020
Namibia;Windhoek;431000;17.0%;2020
Tanzania;Dodoma;410956;0.6%;2012
Papua New Guinea;Port Moresby;364145;3.7%;2011
Ivory Coast;Yamoussoukro;361893;1.3%;2020
Lebanon;Beirut;361366;6.5%;2014
Bolivia;Sucre;360544;3.0%;2022
Puerto Rico (US);San Juan;342259;10.5%;2020
Costa Rica;San José;342188;6.6%;2018
Lesotho;Maseru;330760;14.5%;2016
Cyprus;Nicosia;326739;26.3%;2016
Equatorial Guinea;Malabo;297000;18.2%;2018
Slovenia;Ljubljana;285604;13.5%;2021
East Timor;Dili;277279;21.0%;2015
Bosnia and Herzegovina;Sarajevo;275524;8.4%;2013
Bahamas;Nassau;274400;67.3%;2016
Botswana;Gaborone;273602;10.6%;2020
Benin;Porto-Novo;264320;2.0%;2013
Suriname;Paramaribo;240924;39.3%;2012
India;New Delhi;249998;0.0%;2011
Sahrawi Arab Democratic Republic;Laayoune (claimed) - Tifariti (de facto);217732 - 3000;
"
3611,source/pymupdf.pdf,"˓→—;2014
New Zealand;Wellington;217000;4.2%;2021
Bahrain;Manama;200000;13.7%;2020
Kosovo;Pristina;198897;12.0%;2011
Montenegro;Podgorica;190488;30.3%;2020
Belgium;Brussels;187686;1.6%;2022
Cape Verde;Praia;159050;27.1%;2017
Mauritius;Port Louis;147066;11.3%;2018
Curaçao (Netherlands);Willemstad;136660;71.8%;2011
Burundi;Gitega;135467;1.1%;2020
Switzerland;Bern (de facto);134591;1.5%;2020
Transnistria;Tiraspol;133807;38.5%;2015
Maldives;Malé;133412;25.6%;2014
Iceland;Reykjavík;133262;36.0%;2021
Luxembourg;Luxembourg City;124509;19.5%;2021
Guyana;Georgetown;118363;14.7%;2012
Bhutan;Thimphu;114551;14.7%;2017
Comoros;Moroni;111326;13.5%;2016
Barbados;Bridgetown;110000;39.1%;2014
Sri Lanka;Sri Jayawardenepura Kotte;107925;0.5%;2012
Brunei;Bandar Seri Begawan;100700;22.6%;2007
Eswatini;Mbabane;94874;8.0%;2010
New Caledonia (France);Nouméa;94285;32.8%;2019
Fiji;Suva;93970;10.2%;2017
Solomon Islands;Honiara;92344;13.0%;2021
Republic of Artsakh;Stepanakert;75000;62.5%;2021
Gambia;Banjul;73000;2.8%;2013
"
3612,source/pymupdf.pdf,"(continues on next page)
"
3613,source/pymupdf.pdf,"108
Chapter 12. Stories
"
3614,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3615,source/pymupdf.pdf,"(continued from previous page)
"
3616,source/pymupdf.pdf,"São Tomé and Príncipe;São Tomé;71868;32.2%;2015
Kiribati;Tarawa;70480;54.7%;2020
Vanuatu;Port Vila;51437;16.1%;2016
Northern Mariana Islands (USA);Saipan;47565;96.1%;2017
Samoa;Apia;41611;19.0%;2021
Palestine;Ramallah (de facto);38998;0.8%;2017
Monaco;Monaco;38350;104.5%;2020
Jersey (UK);Saint Helier;37540;34.2%;2018
Trinidad and Tobago;Port of Spain;37074;2.4%;2011
Cayman Islands (UK);George Town;34399;50.5%;2021
Gibraltar (UK);Gibraltar;34003;104.1%;2020
Grenada;St. George's;33734;27.1%;2012
Aruba (Netherlands);Oranjestad;28294;26.6%;2010
Isle of Man (UK);Douglas;27938;33.2%;2011
Marshall Islands;Majuro;27797;66.1%;2011
Tonga;Nukualofa;27600;26.0%;2022
Seychelles;Victoria;26450;24.8%;2010
French Polynesia (France);Papeete;26926;8.9%;2017
Andorra;Andorra la Vella;22873;28.9%;2022
Faroe Islands (Denmark);Tórshavn;22738;43.0%;2022
Antigua and Barbuda;St. John's;22219;23.8%;2011
Belize;Belmopan;20621;5.2%;2016
Saint Lucia;Castries;20000;11.1%;2013
Guernsey (UK);Saint Peter Port;18958;30.1%;2019
Greenland (Denmark);Nuuk;18800;33.4%;2021
Dominica;Roseau;14725;20.3%;2011
Saint Kitts and Nevis;Basseterre;14000;29.4%;2018
Saint Vincent and the Grenadines;Kingstown;12909;12.4%;2012
British Virgin Islands (UK);Road Town;12603;40.5%;2012
Åland (Finland);Mariehamn;11736;39.0%;2021
U.S. Virgin Islands (US);Charlotte Amalie;14477;14.5%;2020
Micronesia;Palikir;6647;5.9%;2010
Tuvalu;Funafuti;6320;56.4%;2017
Malta;Valletta;5827;1.1%;2019
Liechtenstein;Vaduz;5774;14.8%;2021
Saint Pierre and Miquelon (France);Saint-Pierre;5394;91.7%;2019
Cook Islands (NZ);Avarua;4906;28.9%;2016
San Marino;City of San Marino;4061;12.0%;2021
Turks and Caicos Islands (UK);Cockburn Town;3720;8.2%;2016
American Samoa (USA);Pago Pago;3656;8.1%;2010
Saint Martin (France);Marigot;3229;10.1%;2017
Saint Barthélemy (France);Gustavia;2615;24.1%;2010
Falkland Islands (UK);Stanley;2460;65.4%;2016
Svalbard (Norway);Longyearbyen;2417;82.2%;2020
Sint Maarten (Netherlands);Philipsburg;1894;4.3%;2011
Christmas Island (Australia);Flying Fish Cove;1599;86.8%;2016
Anguilla (UK);The Valley;1067;6.8%;2011
Guam (US);Hagåtña;1051;0.6%;2010
Wallis and Futuna (France);Mata Utu;1029;8.9%;2018
Bermuda (UK);Hamilton;854;1.3%;2016
Nauru;Yaren (de facto);747;6.0%;2011
Saint Helena (UK);Jamestown;629;11.6%;2016
"
3617,source/pymupdf.pdf,"(continues on next page)
"
3618,source/pymupdf.pdf,"12.8. How to Output an HTML Table
109
"
3619,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3620,source/pymupdf.pdf,"(continued from previous page)
"
3621,source/pymupdf.pdf,"Niue (NZ);Alofi;597;30.8%;2017
Tokelau (NZ);Atafu;541;29.3%;2016
Vatican City;Vatican City (city-state);453;100%;2019
Montserrat (UK);Brades (de facto) - Plymouth (de jure);449 - 0;-;2011
Norfolk Island (Australia);Kingston;341;-;2015
Palau;Ngerulmud;271;1.5%;2010
Cocos (Keeling) Islands (Australia);West Island;134;24.6%;2011
Pitcairn Islands (UK);Adamstown;40;100.0%;2021
South Georgia and the South Sandwich Islands (UK);King Edward Point;22;73.3%;2018""""""
"
3622,source/pymupdf.pdf,"# -------------------------------------------------------------------
# HTML template for the report. We define no table header <th> items
# because this is done in post processing.
# The actual template part is the table row, identified by id ""row"".
# The content of each cell will be filled using the respective id.
# -------------------------------------------------------------------
HTML = """"""
"
3623,source/pymupdf.pdf,"<h1 style=""text-align:center"">World Capital Cities</h1>
<p><i>Percent ""%"" is city population as a percentage of the country, as of ""Year"".</
"
3624,source/pymupdf.pdf,"˓→i>
"
3625,source/pymupdf.pdf,"</p><p></p>
<table>
<tr id=""row"">
"
3626,source/pymupdf.pdf,"<td id=""country""></td>
<td id=""capital""></td>
<td id=""population""></td>
<td id=""percent""></td>
<td id=""year""></td>
"
3627,source/pymupdf.pdf,"</tr>
</table>
"
3628,source/pymupdf.pdf,"""""""
"
3629,source/pymupdf.pdf,"# -------------------------------------------------------------------
# Sets font-family globally to sans-serif, and text-align to right
# for the numerical table columns.
# -------------------------------------------------------------------
CSS = """"""
body {
"
3630,source/pymupdf.pdf,"font-family: sans-serif;
"
3631,source/pymupdf.pdf,"}
td[id=""population""], td[id=""percent""], td[id=""year""] {
"
3632,source/pymupdf.pdf,"text-align: right;
padding-right: 2px;
"
3633,source/pymupdf.pdf,"}""""""
"
3634,source/pymupdf.pdf,"# -------------------------------------------------------------------
# recorder function for cell positions
# -------------------------------------------------------------------
coords = {}
# stores cell gridline coordinates
"
3635,source/pymupdf.pdf,"def recorder(elpos):
"
3636,source/pymupdf.pdf,"(continues on next page)
"
3637,source/pymupdf.pdf,"110
Chapter 12. Stories
"
3638,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3639,source/pymupdf.pdf,"(continued from previous page)
"
3640,source/pymupdf.pdf,"""""""We only record positions of table rows and cells.
"
3641,source/pymupdf.pdf,"Information is stored in ""coords"" with page number as key.
""""""
global coords
# dictionary of row and cell coordinates per page
"
3642,source/pymupdf.pdf,"if elpos.open_close != 2:
# only consider coordinates provided at ""close""
"
3643,source/pymupdf.pdf,"return
"
3644,source/pymupdf.pdf,"if elpos.id not in (""row"", ""country"", ""capital"", ""population"", ""percent"", ""year""):
"
3645,source/pymupdf.pdf,"return
# only look at row / cell content
"
3646,source/pymupdf.pdf,"rect = fitz.Rect(elpos.rect)
# cell rectangle
"
3647,source/pymupdf.pdf,"if rect.y1 > elpos.filled:
# ignore stuff below the filled rectangle
"
3648,source/pymupdf.pdf,"return
"
3649,source/pymupdf.pdf,"# per page, we store the floats top-most y, right-most x, column left
# and row bottom borders.
x, y, x1, y0 = coords.get(elpos.page, (set(), set(), 0, sys.maxsize))
"
3650,source/pymupdf.pdf,"if elpos.id != ""row"":
x.add(rect.x0)
# add cell left border coordinate
"
3651,source/pymupdf.pdf,"if rect.x1 > x1:
# store right-most cell border on page
"
3652,source/pymupdf.pdf,"x1 = rect.x1
"
3653,source/pymupdf.pdf,"else:
y.add(rect.y1)
# add row bottom border coordinate
"
3654,source/pymupdf.pdf,"if rect.y0 < y0:
# store top-most cell border per page
"
3655,source/pymupdf.pdf,"y0 = rect.y0
"
3656,source/pymupdf.pdf,"coords[elpos.page] = (x, y, x1, y0)
# write back info per page
"
3657,source/pymupdf.pdf,"return
"
3658,source/pymupdf.pdf,"# -------------------------------------------------------------------
# define database access: make an intermediate memory database for
# our demo purposes.
# -------------------------------------------------------------------
dbfilename = "":memory:""
# the SQLITE database file name
"
3659,source/pymupdf.pdf,"database = sqlite3.connect(dbfilename)
# open database
"
3660,source/pymupdf.pdf,"cursor = database.cursor()
# multi-purpose database cursor
"
3661,source/pymupdf.pdf,"# Define and fill the SQLITE database
cursor.execute(
"
3662,source/pymupdf.pdf,"""""""CREATE TABLE capitals (Country text, Capital text, Population text, Percent text,␣
"
3663,source/pymupdf.pdf,"˓→Year text)""""""
)
"
3664,source/pymupdf.pdf,"for value in table_data.splitlines():
cursor.execute(""INSERT INTO capitals VALUES (?,?,?,?,?)"", value.split("";""))
"
3665,source/pymupdf.pdf,"# select statement for the rows - let SQL also sort it for us
select = """"""SELECT * FROM capitals ORDER BY ""Country"" """"""
"
3666,source/pymupdf.pdf,"# -------------------------------------------------------------------
"
3667,source/pymupdf.pdf,"(continues on next page)
"
3668,source/pymupdf.pdf,"12.8. How to Output an HTML Table
111
"
3669,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3670,source/pymupdf.pdf,"(continued from previous page)
"
3671,source/pymupdf.pdf,"# define the HTML Story and fill it with database data
# -------------------------------------------------------------------
story = fitz.Story(HTML, user_css=CSS)
body = story.body
# access the HTML body detail
"
3672,source/pymupdf.pdf,"template = body.find(None, ""id"", ""row"")
# find the template part
"
3673,source/pymupdf.pdf,"table = body.find(""table"", None, None)
# find start of table
"
3674,source/pymupdf.pdf,"# read the rows from the database and put them all in one Python list
# NOTE: instead, we might fetch rows one by one (advisable for large volumes)
"
3675,source/pymupdf.pdf,"cursor.execute(select)
# execute cursor, and ...
"
3676,source/pymupdf.pdf,"rows = cursor.fetchall()
# read out what was found
"
3677,source/pymupdf.pdf,"database.close()
# no longer needed
"
3678,source/pymupdf.pdf,"for country, capital, population, percent, year in rows:
# iterate through the row
"
3679,source/pymupdf.pdf,"row = template.clone()
# clone the template to report each row
"
3680,source/pymupdf.pdf,"row.find(None, ""id"", ""country"").add_text(country)
row.find(None, ""id"", ""capital"").add_text(capital)
row.find(None, ""id"", ""population"").add_text(population)
row.find(None, ""id"", ""percent"").add_text(percent)
row.find(None, ""id"", ""year"").add_text(year)
"
3681,source/pymupdf.pdf,"table.append_child(row)
"
3682,source/pymupdf.pdf,"template.remove()
# remove the template
"
3683,source/pymupdf.pdf,"# -------------------------------------------------------------------
# generate the PDF and write it to memory
# -------------------------------------------------------------------
fp = io.BytesIO()
writer = fitz.DocumentWriter(fp)
mediabox = fitz.paper_rect(""letter"")
# use pages in Letter format
"
3684,source/pymupdf.pdf,"where = mediabox + (36, 36, -36, -72)
# leave page borders
"
3685,source/pymupdf.pdf,"more = True
page = 0
while more:
dev = writer.begin_page(mediabox)
# make a new page
"
3686,source/pymupdf.pdf,"if page > 0:
# leave room above the cells for inserting header row
"
3687,source/pymupdf.pdf,"delta = (0, 20, 0, 0)
"
3688,source/pymupdf.pdf,"else:
delta = (0, 0, 0, 0)
more, filled = story.place(where + delta)
# arrange content on this rectangle
"
3689,source/pymupdf.pdf,"story.element_positions(recorder, {""page"": page, ""filled"": where.y1})
story.draw(dev)
# write content to page
"
3690,source/pymupdf.pdf,"writer.end_page()
# finish the page
"
3691,source/pymupdf.pdf,"page += 1
"
3692,source/pymupdf.pdf,"writer.close()
# close the PDF
"
3693,source/pymupdf.pdf,"# -------------------------------------------------------------------
# re-open memory PDF for inserting gridlines and header rows
# -------------------------------------------------------------------
"
3694,source/pymupdf.pdf,"(continues on next page)
"
3695,source/pymupdf.pdf,"112
Chapter 12. Stories
"
3696,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3697,source/pymupdf.pdf,"(continued from previous page)
"
3698,source/pymupdf.pdf,"doc = fitz.open(""pdf"", fp)
for page in doc:
page.wrap_contents()
# ensure all ""cm"" commands are properly wrapped
"
3699,source/pymupdf.pdf,"x, y, x1, y0 = coords[page.number]
# read coordinates of the page
"
3700,source/pymupdf.pdf,"x = sorted(list(x)) + [x1]
# list of cell left-right borders
"
3701,source/pymupdf.pdf,"y = [y0] + sorted(list(y))
# list of cell top-bottom borders
"
3702,source/pymupdf.pdf,"shape = page.new_shape()
# make a canvas to draw upon
"
3703,source/pymupdf.pdf,"for item in y:
# draw horizontal lines (one under each row)
"
3704,source/pymupdf.pdf,"shape.draw_line((x[0] - 2, item), (x[-1] + 2, item))
"
3705,source/pymupdf.pdf,"for i in range(len(y)):
# alternating row coloring
"
3706,source/pymupdf.pdf,"if i % 2:
rect = (x[0] - 2, y[i - 1], x[-1] + 2, y[i])
shape.draw_rect(rect)
"
3707,source/pymupdf.pdf,"for i in range(len(x)):
# draw vertical lines
"
3708,source/pymupdf.pdf,"d = 2 if i == len(x) - 1 else -2
shape.draw_line((x[i] + d, y[0]), (x[i] + d, y[-1]))
"
3709,source/pymupdf.pdf,"# Write header row above table content
y0 -= 5
# bottom coord for header row text
"
3710,source/pymupdf.pdf,"shape.insert_text((x[0], y0), ""Country"", fontname=""hebo"", fontsize=12)
shape.insert_text((x[1], y0), ""Capital"", fontname=""hebo"", fontsize=12)
shape.insert_text((x[2], y0), ""Population"", fontname=""hebo"", fontsize=12)
shape.insert_text((x[3], y0), ""
%"", fontname=""hebo"", fontsize=12)
shape.insert_text((x[4], y0), ""Year"", fontname=""hebo"", fontsize=12)
"
3711,source/pymupdf.pdf,"# Write page footer
y0 = page.rect.height - 50
# top coordinate of footer bbox
"
3712,source/pymupdf.pdf,"bbox = fitz.Rect(0, y0, page.rect.width, y0 + 20)
# footer bbox
"
3713,source/pymupdf.pdf,"page.insert_textbox(
bbox,
f""World Capital Cities, Page {page.number+1} of {doc.page_count}"",
align=fitz.TEXT_ALIGN_CENTER,
)
shape.finish(width=0.3, color=0.5, fill=0.9)
# rectangles and gray lines
"
3714,source/pymupdf.pdf,"shape.commit(overlay=False)
# put the drawings in background
"
3715,source/pymupdf.pdf,"doc.subset_fonts()
doc.save(__file__.replace("".py"", "".pdf""), deflate=True, garbage=4, pretty=True)
doc.close()
"
3716,source/pymupdf.pdf,"12.8. How to Output an HTML Table
113
"
3717,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3718,source/pymupdf.pdf,"12.9 How to Create a Simple Grid Layout
"
3719,source/pymupdf.pdf,"By creating a sequence of Story objects within a grid created via the make_table function a developer can create grid
layouts as required.
"
3720,source/pymupdf.pdf,"Files:
"
3721,source/pymupdf.pdf,"• docs/samples/simple-grid.py
"
3722,source/pymupdf.pdf,"import fitz
"
3723,source/pymupdf.pdf,"MEDIABOX = fitz.paper_rect(""letter"")
# output page format: Letter
"
3724,source/pymupdf.pdf,"GRIDSPACE = fitz.Rect(100, 100, 400, 400)
GRID = fitz.make_table(GRIDSPACE, rows=2, cols=2)
CELLS = [GRID[i][j] for i in range(2) for j in range(2)]
text_table = (""A"", ""B"", ""C"", ""D"")
writer = fitz.DocumentWriter(__file__.replace("".py"", "".pdf""))
# create the writer
"
3725,source/pymupdf.pdf,"device = writer.begin_page(MEDIABOX)
# make new page
"
3726,source/pymupdf.pdf,"for i, text in enumerate(text_table):
story = fitz.Story(em=1)
body = story.body
with body.add_paragraph() as para:
para.set_bgcolor(""#ecc"")
para.set_pagebreak_after()
# fills whole cell with bgcolor
"
3727,source/pymupdf.pdf,"para.set_align(""center"")
para.set_fontsize(16)
para.add_text(f""\\n\\n\\n{text}"")
story.place(CELLS[i])
story.draw(device)
del story
"
3728,source/pymupdf.pdf,"writer.end_page()
# finish page
"
3729,source/pymupdf.pdf,"writer.close()
# close output file
"
3730,source/pymupdf.pdf,"12.10 How to Generate a Table of Contents
"
3731,source/pymupdf.pdf,"This script lists the source code of all Python scripts that live in the script’s directory.
"
3732,source/pymupdf.pdf,"Files:
"
3733,source/pymupdf.pdf,"• docs/samples/code-printer.py
"
3734,source/pymupdf.pdf,"""""""
Demo script PyMuPDF Story class
-------------------------------
"
3735,source/pymupdf.pdf,"(continues on next page)
"
3736,source/pymupdf.pdf,"114
Chapter 12. Stories
"
3737,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3738,source/pymupdf.pdf,"(continued from previous page)
"
3739,source/pymupdf.pdf,"Read the Python sources in the script directory and create a PDF of all their
source codes.
"
3740,source/pymupdf.pdf,"The following features are included as a specialty:
1. HTML source for fitz.Story created via Python API exclusively
2. Separate Story objects for page headers and footers
3. Use of HTML ""id"" elements for identifying source start pages
4. Generate a Table of Contents pointing to source file starts. This
"
3741,source/pymupdf.pdf,"- uses the new Stoy callback feature
- uses Story also for making the TOC page(s)
"
3742,source/pymupdf.pdf,"""""""
import io
import os
import time
"
3743,source/pymupdf.pdf,"import fitz
"
3744,source/pymupdf.pdf,"THISDIR = os.path.dirname(os.path.abspath(__file__))
TOC = []
# this will contain the TOC list items
"
3745,source/pymupdf.pdf,"CURRENT_ID = """"
# currently processed filename - stored by recorder func
"
3746,source/pymupdf.pdf,"MEDIABOX = fitz.paper_rect(""a4-l"")
# chosen page size
"
3747,source/pymupdf.pdf,"WHERE = MEDIABOX + (36, 50, -36, -36)
# sub rectangle for source content
"
3748,source/pymupdf.pdf,"# location of the header rectangle
HDR_WHERE = (36, 5, MEDIABOX.width - 36, 40)
# location of the footer rectangle
FTR_WHERE = (36, MEDIABOX.height - 36, MEDIABOX.width - 36, MEDIABOX.height)
"
3749,source/pymupdf.pdf,"def recorder(elpos):
"
3750,source/pymupdf.pdf,"""""""Callback function invoked during story.place().
This function generates / collects all TOC items and updates the value of
CURRENT_ID - which is used to update the footer line of each page.
""""""
global TOC, CURRENT_ID
if not elpos.open_close & 1:
# only consider ""open"" items
"
3751,source/pymupdf.pdf,"return
"
3752,source/pymupdf.pdf,"level = elpos.heading
y0 = elpos.rect[1]
# top of written rectangle (use for TOC)
"
3753,source/pymupdf.pdf,"if level > 0:
# this is a header (h1 - h6)
"
3754,source/pymupdf.pdf,"pno = elpos.page + 1
# the page number
"
3755,source/pymupdf.pdf,"TOC.append(
(
level,
elpos.text,
elpos.page + 1,
y0,
)
)
return
"
3756,source/pymupdf.pdf,"(continues on next page)
"
3757,source/pymupdf.pdf,"12.10. How to Generate a Table of Contents
115
"
3758,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3759,source/pymupdf.pdf,"(continued from previous page)
"
3760,source/pymupdf.pdf,"CURRENT_ID = elpos.id if elpos.id else """"
# update for footer line
"
3761,source/pymupdf.pdf,"return
"
3762,source/pymupdf.pdf,"def header_story(text):
"
3763,source/pymupdf.pdf,"""""""Make the page header""""""
header = fitz.Story()
hdr_body = header.body
hdr_body.add_paragraph().set_properties(
align=fitz.fitz.TEXT_ALIGN_CENTER,
bgcolor=""#eee"",
font=""sans-serif"",
bold=True,
fontsize=12,
color=""green"",
).add_text(text)
return header
"
3764,source/pymupdf.pdf,"def footer_story(text):
"
3765,source/pymupdf.pdf,"""""""Make the page footer""""""
footer = fitz.Story()
ftr_body = footer.body
ftr_body.add_paragraph().set_properties(
bgcolor=""#eee"",
align=fitz.TEXT_ALIGN_CENTER,
color=""blue"",
fontsize=10,
font=""sans-serif"",
).add_text(text)
return footer
"
3766,source/pymupdf.pdf,"def code_printer(outfile):
"
3767,source/pymupdf.pdf,"""""""Output the generated PDF to outfile.""""""
global MAX_TITLE_LEN
where = +WHERE
writer = fitz.DocumentWriter(outfile, """")
print_time = time.strftime(""%Y-%m-%d %H:%M:%S (%z)"")
thispath = os.path.abspath(os.curdir)
basename = os.path.basename(thispath)
"
3768,source/pymupdf.pdf,"story = fitz.Story()
body = story.body
body.set_properties(font=""sans-serif"")
"
3769,source/pymupdf.pdf,"text = f""Python sources in folder '{THISDIR}'""
"
3770,source/pymupdf.pdf,"body.add_header(1).add_text(text)
# the only h1 item in the story
"
3771,source/pymupdf.pdf,"files = os.listdir(THISDIR)
# list / select Python files in our directory
"
3772,source/pymupdf.pdf,"i = 1
"
3773,source/pymupdf.pdf,"(continues on next page)
"
3774,source/pymupdf.pdf,"116
Chapter 12. Stories
"
3775,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3776,source/pymupdf.pdf,"(continued from previous page)
"
3777,source/pymupdf.pdf,"for code_file in files:
"
3778,source/pymupdf.pdf,"if not code_file.endswith("".py""):
"
3779,source/pymupdf.pdf,"continue
"
3780,source/pymupdf.pdf,"# read Python file source
fileinput = open(os.path.join(THISDIR, code_file), ""rb"")
text = fileinput.read().decode()
fileinput.close()
"
3781,source/pymupdf.pdf,"# make level 2 header
hdr = body.add_header(2)
if i > 1:
hdr.set_pagebreak_before()
hdr.add_text(f""{i}. Listing of file '{code_file}'"")
"
3782,source/pymupdf.pdf,"# Write the file code
body.add_codeblock().set_bgcolor((240, 255, 210)).set_color(""blue"").set_id(
code_file
).set_fontsize(10).add_text(text)
"
3783,source/pymupdf.pdf,"# Indicate end of a source file
body.add_paragraph().set_align(fitz.TEXT_ALIGN_CENTER).add_text(
"
3784,source/pymupdf.pdf,"f""---------- End of File '{code_file}' ----------""
"
3785,source/pymupdf.pdf,")
i += 1
# update file counter
"
3786,source/pymupdf.pdf,"i = 0
while True:
i += 1
device = writer.begin_page(MEDIABOX)
# create Story objects for header, footer and the rest.
header = header_story(f""Python Files in '{THISDIR}'"")
hdr_ok, _ = header.place(HDR_WHERE)
if hdr_ok != 0:
"
3787,source/pymupdf.pdf,"raise ValueError(""header does not fit"")
header.draw(device, None)
"
3788,source/pymupdf.pdf,"# --------------------------------------------------------------
# Write the file content.
# --------------------------------------------------------------
more, filled = story.place(where)
# Inform the callback function
# Args:
#
recorder: the Python function to call
"
3789,source/pymupdf.pdf,"#
{}: dictionary containing anything - we pass the page number
"
3790,source/pymupdf.pdf,"story.element_positions(recorder, {""page"": i - 1})
story.draw(device, None)
"
3791,source/pymupdf.pdf,"# --------------------------------------------------------------
# Make / write page footer.
# We MUST have a paragraph b/o background color / alignment
# --------------------------------------------------------------
"
3792,source/pymupdf.pdf,"(continues on next page)
"
3793,source/pymupdf.pdf,"12.10. How to Generate a Table of Contents
117
"
3794,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3795,source/pymupdf.pdf,"(continued from previous page)
"
3796,source/pymupdf.pdf,"if CURRENT_ID:
text = f""File '{CURRENT_ID}' printed at {print_time}{chr(160)*5}{'-'*10}
"
3797,source/pymupdf.pdf,"˓→{chr(160)*5}Page {i}""
"
3798,source/pymupdf.pdf,"else:
text = f""Printed at {print_time}{chr(160)*5}{'-'*10}{chr(160)*5}Page {i}""
"
3799,source/pymupdf.pdf,"footer = footer_story(text)
# write the page footer
ftr_ok, _ = footer.place(FTR_WHERE)
if ftr_ok != 0:
"
3800,source/pymupdf.pdf,"raise ValueError(""footer does not fit"")
footer.draw(device, None)
"
3801,source/pymupdf.pdf,"writer.end_page()
if more == 0:
"
3802,source/pymupdf.pdf,"break
"
3803,source/pymupdf.pdf,"writer.close()
"
3804,source/pymupdf.pdf,"if __name__ == ""__main__"" or os.environ.get('PYTEST_CURRENT_TEST'):
fileptr1 = io.BytesIO()
t0 = time.perf_counter()
code_printer(fileptr1)
# make the PDF
"
3805,source/pymupdf.pdf,"t1 = time.perf_counter()
doc = fitz.open(""pdf"", fileptr1)
old_count = doc.page_count
# -----------------------------------------------------------------------------
# Post-processing step to make / insert the toc
# This also works using fitz.Story:
# - make a new PDF in memory which contains pages with the TOC text
# - add these TOC pages to the end of the original file
# - search item text on the inserted pages and cover each with a PDF link
# - move the TOC pages to the front of the document
# -----------------------------------------------------------------------------
story = fitz.Story()
body = story.body
body.add_header(1).set_font(""sans-serif"").add_text(""Table of Contents"")
# prefix TOC with an entry pointing to this page
TOC.insert(0, [1, ""Table of Contents"", old_count + 1, 36])
"
3806,source/pymupdf.pdf,"for item in TOC[1:]:
# write the file name headers as TOC lines
"
3807,source/pymupdf.pdf,"body.add_paragraph().set_font(""sans-serif"").add_text(
item[1] + f"" - ({item[2]})""
"
3808,source/pymupdf.pdf,")
fileptr2 = io.BytesIO()
# put TOC pages to a separate PDF initially
"
3809,source/pymupdf.pdf,"writer = fitz.DocumentWriter(fileptr2)
i = 1
more = 1
while more:
device = writer.begin_page(MEDIABOX)
header = header_story(f""Python Files in '{THISDIR}'"")
# write the page header
hdr_ok, _ = header.place(HDR_WHERE)
"
3810,source/pymupdf.pdf,"(continues on next page)
"
3811,source/pymupdf.pdf,"118
Chapter 12. Stories
"
3812,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3813,source/pymupdf.pdf,"(continued from previous page)
"
3814,source/pymupdf.pdf,"header.draw(device, None)
"
3815,source/pymupdf.pdf,"more, filled = story.place(WHERE)
story.draw(device, None)
"
3816,source/pymupdf.pdf,"footer = footer_story(f""TOC-{i}"")
# separate page numbering scheme
"
3817,source/pymupdf.pdf,"# write the page footer
ftr_ok, _ = footer.place(FTR_WHERE)
footer.draw(device, None)
writer.end_page()
i += 1
"
3818,source/pymupdf.pdf,"writer.close()
doc2 = fitz.open(""pdf"", fileptr2)
# open TOC pages as another PDF
"
3819,source/pymupdf.pdf,"doc.insert_pdf(doc2)
# and append to the main PDF
"
3820,source/pymupdf.pdf,"new_range = range(old_count, doc.page_count)
# the TOC page numbers
"
3821,source/pymupdf.pdf,"pages = [doc[i] for i in new_range]
# these are the TOC pages within main PDF
"
3822,source/pymupdf.pdf,"for item in TOC:
# search for TOC item text to get its rectangle
"
3823,source/pymupdf.pdf,"for page in pages:
rl = page.search_for(item[1], flags=~(fitz.TEXT_PRESERVE_LIGATURES | fitz.
"
3824,source/pymupdf.pdf,"˓→TEXT_PRESERVE_SPANS))
"
3825,source/pymupdf.pdf,"if rl != []:
# this text must be on next page
"
3826,source/pymupdf.pdf,"break
"
3827,source/pymupdf.pdf,"rect = rl[0]
# rectangle of TOC item text
"
3828,source/pymupdf.pdf,"link = {
# make a link from it
"
3829,source/pymupdf.pdf,"""kind"": fitz.LINK_GOTO,
""from"": rect,
""to"": fitz.Point(0, item[3]),
""page"": item[2] - 1,
}
page.insert_link(link)
"
3830,source/pymupdf.pdf,"# insert the TOC in the main PDF
doc.set_toc(TOC)
# move all the TOC pages to the desired place (1st page here)
for i in new_range:
doc.move_page(doc.page_count - 1, 0)
doc.ez_save(__file__.replace("".py"", "".pdf""))
"
3831,source/pymupdf.pdf,"It features the following capabilities:
"
3832,source/pymupdf.pdf,"• Automatic generation of a Table of Contents (TOC) on separately numbered pages at the start of the document -
using a specialized Story.
"
3833,source/pymupdf.pdf,"• Use of 3 separate Story objects per page: header story, footer story and the story for printing the Python sources.
"
3834,source/pymupdf.pdf,"– The page footer is automatically changed to show the name of the current Python file.
"
3835,source/pymupdf.pdf,"• Use of Story.element_positions() to collect the data for the TOC and for the dynamic adjustment of page
footers. This is an example of a bidirectional communication between the story output process and the script.
"
3836,source/pymupdf.pdf,"• The main PDF with the Python sources is being written to memory by its DocumentWriter. Another Story /
"
3837,source/pymupdf.pdf,"DocumentWriter pair is then used to create a (memory) PDF for the TOC pages. Finally, both these PDFs are
joined and the result stored to disk.
"
3838,source/pymupdf.pdf,"12.10. How to Generate a Table of Contents
119
"
3839,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3840,source/pymupdf.pdf,"12.11 How to Display a List from JSON Data
"
3841,source/pymupdf.pdf,"This example takes some JSON data input which it uses to populate a Story. It also contains some visual text formatting
and shows how to add links.
"
3842,source/pymupdf.pdf,"Files:
"
3843,source/pymupdf.pdf,"• docs/samples/json-example.py
"
3844,source/pymupdf.pdf,"import fitz
import json
"
3845,source/pymupdf.pdf,"my_json =
""""""
"
3846,source/pymupdf.pdf,"[
"
3847,source/pymupdf.pdf,"{
"
3848,source/pymupdf.pdf,"""name"" :
""Five-storied Pagoda"",
"
3849,source/pymupdf.pdf,"""temple"" :
""Rurik¯o-ji"",
"
3850,source/pymupdf.pdf,"""founded"" :
""middle Muromachi period, 1442"",
"
3851,source/pymupdf.pdf,"""region"" :
""Yamaguchi, Yamaguchi"",
"
3852,source/pymupdf.pdf,"""position"" :
""34.190181,131.472917""
"
3853,source/pymupdf.pdf,"},
{
"
3854,source/pymupdf.pdf,"""name"" :
""Founder's Hall"",
"
3855,source/pymupdf.pdf,"""temple"" :
""Eih¯o-ji"",
"
3856,source/pymupdf.pdf,"""founded"" :
""early Muromachi period"",
"
3857,source/pymupdf.pdf,"""region"" :
""Tajimi, Gifu"",
"
3858,source/pymupdf.pdf,"""position"" :
""35.346144,137.129189""
"
3859,source/pymupdf.pdf,"},
{
"
3860,source/pymupdf.pdf,"""name"" :
""Fud¯od¯o"",
"
3861,source/pymupdf.pdf,"""temple"" :
""Kong¯obu-ji"",
"
3862,source/pymupdf.pdf,"""founded"" :
""early Kamakura period"",
"
3863,source/pymupdf.pdf,"""region"" :
""K¯oya, Wakayama"",
"
3864,source/pymupdf.pdf,"""position"" :
""34.213103,135.580397""
"
3865,source/pymupdf.pdf,"},
{
"
3866,source/pymupdf.pdf,"""name"" :
""Goeid¯o"",
"
3867,source/pymupdf.pdf,"""temple"" :
""Nishi Honganji"",
"
3868,source/pymupdf.pdf,"""founded"" :
""Edo period, 1636"",
"
3869,source/pymupdf.pdf,"""region"" :
""Kyoto"",
"
3870,source/pymupdf.pdf,"""position"" :
""34.991394,135.751689""
"
3871,source/pymupdf.pdf,"},
{
"
3872,source/pymupdf.pdf,"""name"" :
""Golden Hall"",
"
3873,source/pymupdf.pdf,"""temple"" :
""Mur¯o-ji"",
"
3874,source/pymupdf.pdf,"""founded"" :
""early Heian period"",
"
3875,source/pymupdf.pdf,"""region"" :
""Uda, Nara"",
"
3876,source/pymupdf.pdf,"""position"" :
""34.536586819357986,136.0395548452301""
"
3877,source/pymupdf.pdf,"},
"
3878,source/pymupdf.pdf,"(continues on next page)
"
3879,source/pymupdf.pdf,"120
Chapter 12. Stories
"
3880,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3881,source/pymupdf.pdf,"(continued from previous page)
"
3882,source/pymupdf.pdf,"{
"
3883,source/pymupdf.pdf,"""name"" :
""Golden Hall"",
"
3884,source/pymupdf.pdf,"""temple"" :
""Fud¯o-in"",
"
3885,source/pymupdf.pdf,"""founded"" :
""late Muromachi period, 1540"",
"
3886,source/pymupdf.pdf,"""region"" :
""Hiroshima"",
"
3887,source/pymupdf.pdf,"""position"" :
""34.427014,132.471117""
"
3888,source/pymupdf.pdf,"},
{
"
3889,source/pymupdf.pdf,"""name"" :
""Golden Hall"",
"
3890,source/pymupdf.pdf,"""temple"" :
""Ninna-ji"",
"
3891,source/pymupdf.pdf,"""founded"" :
""Momoyama period, 1613"",
"
3892,source/pymupdf.pdf,"""region"" :
""Kyoto"",
"
3893,source/pymupdf.pdf,"""position"" :
""35.031078,135.713811""
"
3894,source/pymupdf.pdf,"},
{
"
3895,source/pymupdf.pdf,"""name"" :
""Golden Hall"",
"
3896,source/pymupdf.pdf,"""temple"" :
""Mii-dera"",
"
3897,source/pymupdf.pdf,"""founded"" :
""Momoyama period, 1599"",
"
3898,source/pymupdf.pdf,"""region"" :
""¯Otsu, Shiga"",
"
3899,source/pymupdf.pdf,"""position"" :
""35.013403,135.852861""
"
3900,source/pymupdf.pdf,"},
{
"
3901,source/pymupdf.pdf,"""name"" :
""Golden Hall"",
"
3902,source/pymupdf.pdf,"""temple"" :
""T¯osh¯odai-ji"",
"
3903,source/pymupdf.pdf,"""founded"" :
""Nara period, 8th century"",
"
3904,source/pymupdf.pdf,"""region"" :
""Nara, Nara"",
"
3905,source/pymupdf.pdf,"""position"" :
""34.675619,135.784842""
"
3906,source/pymupdf.pdf,"},
{
"
3907,source/pymupdf.pdf,"""name"" :
""Golden Hall"",
"
3908,source/pymupdf.pdf,"""temple"" :
""T¯o-ji"",
"
3909,source/pymupdf.pdf,"""founded"" :
""Momoyama period, 1603"",
"
3910,source/pymupdf.pdf,"""region"" :
""Kyoto"",
"
3911,source/pymupdf.pdf,"""position"" :
""34.980367,135.747686""
"
3912,source/pymupdf.pdf,"},
{
"
3913,source/pymupdf.pdf,"""name"" :
""Golden Hall"",
"
3914,source/pymupdf.pdf,"""temple"" :
""T¯odai-ji"",
"
3915,source/pymupdf.pdf,"""founded"" :
""middle Edo period, 1705"",
"
3916,source/pymupdf.pdf,"""region"" :
""Nara, Nara"",
"
3917,source/pymupdf.pdf,"""position"" :
""34.688992,135.839822""
"
3918,source/pymupdf.pdf,"},
{
"
3919,source/pymupdf.pdf,"""name"" :
""Golden Hall"",
"
3920,source/pymupdf.pdf,"""temple"" :
""H¯ory¯u-ji"",
"
3921,source/pymupdf.pdf,"""founded"" :
""Asuka period, by 693"",
"
3922,source/pymupdf.pdf,"""region"" :
""Ikaruga, Nara"",
"
3923,source/pymupdf.pdf,"""position"" :
""34.614317,135.734458""
"
3924,source/pymupdf.pdf,"},
{
"
3925,source/pymupdf.pdf,"""name"" :
""Golden Hall"",
"
3926,source/pymupdf.pdf,"""temple"" :
""Daigo-ji"",
"
3927,source/pymupdf.pdf,"(continues on next page)
"
3928,source/pymupdf.pdf,"12.11. How to Display a List from JSON Data
121
"
3929,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3930,source/pymupdf.pdf,"(continued from previous page)
"
3931,source/pymupdf.pdf,"""founded"" :
""late Heian period"",
"
3932,source/pymupdf.pdf,"""region"" :
""Kyoto"",
"
3933,source/pymupdf.pdf,"""position"" :
""34.951481,135.821747""
"
3934,source/pymupdf.pdf,"},
{
"
3935,source/pymupdf.pdf,"""name"" :
""Keig¯u-in Main Hall"",
"
3936,source/pymupdf.pdf,"""temple"" :
""K¯ory¯u-ji"",
"
3937,source/pymupdf.pdf,"""founded"" :
""early Kamakura period, before 1251"",
"
3938,source/pymupdf.pdf,"""region"" :
""Kyoto"",
"
3939,source/pymupdf.pdf,"""position"" :
""35.015028,135.705425""
"
3940,source/pymupdf.pdf,"},
{
"
3941,source/pymupdf.pdf,"""name"" :
""Konpon-ch¯ud¯o"",
"
3942,source/pymupdf.pdf,"""temple"" :
""Enryaku-ji"",
"
3943,source/pymupdf.pdf,"""founded"" :
""early Edo period, 1640"",
"
3944,source/pymupdf.pdf,"""region"" :
""¯Otsu, Shiga"",
"
3945,source/pymupdf.pdf,"""position"" :
""35.070456,135.840942""
"
3946,source/pymupdf.pdf,"},
{
"
3947,source/pymupdf.pdf,"""name"" :
""Kor¯o"",
"
3948,source/pymupdf.pdf,"""temple"" :
""T¯osh¯odai-ji"",
"
3949,source/pymupdf.pdf,"""founded"" :
""early Kamakura period, 1240"",
"
3950,source/pymupdf.pdf,"""region"" :
""Nara, Nara"",
"
3951,source/pymupdf.pdf,"""position"" :
""34.675847,135.785069""
"
3952,source/pymupdf.pdf,"},
{
"
3953,source/pymupdf.pdf,"""name"" :
""K¯of¯uz¯o"",
"
3954,source/pymupdf.pdf,"""temple"" :
""H¯ory¯u-ji"",
"
3955,source/pymupdf.pdf,"""founded"" :
""early Heian period"",
"
3956,source/pymupdf.pdf,"""region"" :
""Ikaruga, Nara"",
"
3957,source/pymupdf.pdf,"""position"" :
""34.614439,135.735428""
"
3958,source/pymupdf.pdf,"},
{
"
3959,source/pymupdf.pdf,"""name"" :
""Large Lecture Hall"",
"
3960,source/pymupdf.pdf,"""temple"" :
""H¯ory¯u-ji"",
"
3961,source/pymupdf.pdf,"""founded"" :
""middle Heian period, 990"",
"
3962,source/pymupdf.pdf,"""region"" :
""Ikaruga, Nara"",
"
3963,source/pymupdf.pdf,"""position"" :
""34.614783,135.734175""
"
3964,source/pymupdf.pdf,"},
{
"
3965,source/pymupdf.pdf,"""name"" :
""Lecture Hall"",
"
3966,source/pymupdf.pdf,"""temple"" :
""Zuiry¯u-ji"",
"
3967,source/pymupdf.pdf,"""founded"" :
""early Edo period, 1655"",
"
3968,source/pymupdf.pdf,"""region"" :
""Takaoka, Toyama"",
"
3969,source/pymupdf.pdf,"""position"" :
""36.735689,137.010019""
"
3970,source/pymupdf.pdf,"},
{
"
3971,source/pymupdf.pdf,"""name"" :
""Lecture Hall"",
"
3972,source/pymupdf.pdf,"""temple"" :
""T¯osh¯odai-ji"",
"
3973,source/pymupdf.pdf,"""founded"" :
""Nara period, 763"",
"
3974,source/pymupdf.pdf,"""region"" :
""Nara, Nara"",
"
3975,source/pymupdf.pdf,"""position"" :
""34.675933,135.784842""
"
3976,source/pymupdf.pdf,"(continues on next page)
"
3977,source/pymupdf.pdf,"122
Chapter 12. Stories
"
3978,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
3979,source/pymupdf.pdf,"(continued from previous page)
"
3980,source/pymupdf.pdf,"},
{
"
3981,source/pymupdf.pdf,"""name"" :
""Lotus Flower Gate"",
"
3982,source/pymupdf.pdf,"""temple"" :
""T¯o-ji"",
"
3983,source/pymupdf.pdf,"""founded"" :
""early Kamakura period"",
"
3984,source/pymupdf.pdf,"""region"" :
""Kyoto"",
"
3985,source/pymupdf.pdf,"""position"" :
""34.980678,135.746314""
"
3986,source/pymupdf.pdf,"},
{
"
3987,source/pymupdf.pdf,"""name"" :
""Main Hall"",
"
3988,source/pymupdf.pdf,"""temple"" :
""Akishinodera"",
"
3989,source/pymupdf.pdf,"""founded"" :
""early Kamakura period"",
"
3990,source/pymupdf.pdf,"""region"" :
""Nara, Nara"",
"
3991,source/pymupdf.pdf,"""position"" :
""34.703769,135.776189""
"
3992,source/pymupdf.pdf,"}
"
3993,source/pymupdf.pdf,"]
"
3994,source/pymupdf.pdf,"""""""
"
3995,source/pymupdf.pdf,"# the result is a Python dictionary:
my_dict = json.loads(my_json)
"
3996,source/pymupdf.pdf,"MEDIABOX = fitz.paper_rect(""letter"")
# output page format: Letter
"
3997,source/pymupdf.pdf,"WHERE = MEDIABOX + (36, 36, -36, -36)
writer = fitz.DocumentWriter(""json-example.pdf"")
# create the writer
"
3998,source/pymupdf.pdf,"story = fitz.Story()
body = story.body
"
3999,source/pymupdf.pdf,"for i, entry in enumerate(my_dict):
"
4000,source/pymupdf.pdf,"for attribute, value in entry.items():
para = body.add_paragraph()
"
4001,source/pymupdf.pdf,"if attribute == ""position"":
para.set_fontsize(10)
para.add_link(f""www.google.com/maps/@{value},14z"")
"
4002,source/pymupdf.pdf,"else:
para.add_span()
para.set_color(""#990000"")
para.set_fontsize(14)
para.set_bold()
para.add_text(f""{attribute} "")
para.add_span()
para.set_fontsize(18)
para.add_text(f""{value}"")
"
4003,source/pymupdf.pdf,"body.add_horizontal_line()
"
4004,source/pymupdf.pdf,"# This while condition will check a value from the Story `place` method
# for whether all content for the story has been written (0), otherwise
# more content is waiting to be written (1)
"
4005,source/pymupdf.pdf,"(continues on next page)
"
4006,source/pymupdf.pdf,"12.11. How to Display a List from JSON Data
123
"
4007,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4008,source/pymupdf.pdf,"(continued from previous page)
"
4009,source/pymupdf.pdf,"more = 1
while more:
device = writer.begin_page(MEDIABOX)
# make new page
"
4010,source/pymupdf.pdf,"more, _ = story.place(WHERE)
story.draw(device)
writer.end_page()
# finish page
"
4011,source/pymupdf.pdf,"writer.close()
# close output file
"
4012,source/pymupdf.pdf,"del story
"
4013,source/pymupdf.pdf,"12.12 Using the Alternative Story.write*() functions
"
4014,source/pymupdf.pdf,"The Story.write*() functions provide a different way to use the Story functionality, removing the need for calling
code to implement a loop that calls Story.place() and Story.draw() etc, at the expense of having to provide at
least a rectfn() callback.
"
4015,source/pymupdf.pdf,"12.12.1 How to do Basic Layout with Story.write()
"
4016,source/pymupdf.pdf,"This script lays out multiple copies of its own source code, into four rectangles per page.
"
4017,source/pymupdf.pdf,"Files:
"
4018,source/pymupdf.pdf,"• docs/samples/story-write.py
"
4019,source/pymupdf.pdf,"""""""
Demo script for PyMuPDF's `Story.write()` method.
"
4020,source/pymupdf.pdf,"This is a way of laying out a story into a PDF document, that avoids the need
to write a loop that calls `story.place()` and `story.draw()`.
"
4021,source/pymupdf.pdf,"Instead just a single function call is required, albeit with a `rectfn()`
callback that returns the rectangles into which the story is placed.
""""""
"
4022,source/pymupdf.pdf,"import html
"
4023,source/pymupdf.pdf,"import fitz
"
4024,source/pymupdf.pdf,"# Create html containing multiple copies of our own source code.
#
with open(__file__) as f:
text = f.read()
text = html.escape(text)
html = f'''
"
4025,source/pymupdf.pdf,"(continues on next page)
"
4026,source/pymupdf.pdf,"124
Chapter 12. Stories
"
4027,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4028,source/pymupdf.pdf,"(continued from previous page)
"
4029,source/pymupdf.pdf,"<!DOCTYPE html>
<body>
"
4030,source/pymupdf.pdf,"<h1>Contents of {__file__}</h1>
"
4031,source/pymupdf.pdf,"<h2>Normal</h2>
<pre>
{text}
</pre>
"
4032,source/pymupdf.pdf,"<h2>Strong</h2>
<strong>
<pre>
{text}
</pre>
</strong>
"
4033,source/pymupdf.pdf,"<h2>Em</h2>
<em>
<pre>
{text}
</pre>
</em>
"
4034,source/pymupdf.pdf,"</body>
'''
"
4035,source/pymupdf.pdf,"def rectfn(rect_num, filled):
"
4036,source/pymupdf.pdf,"'''
We return four rectangles per page in this order:
"
4037,source/pymupdf.pdf,"1 3
2 4
"
4038,source/pymupdf.pdf,"'''
page_w = 800
page_h = 600
margin = 50
rect_w = (page_w - 3*margin) / 2
rect_h = (page_h - 3*margin) / 2
"
4039,source/pymupdf.pdf,"if rect_num % 4 == 0:
"
4040,source/pymupdf.pdf,"# New page.
mediabox = fitz.Rect(0, 0, page_w, page_h)
"
4041,source/pymupdf.pdf,"else:
mediabox = None
"
4042,source/pymupdf.pdf,"# Return one of four rects in turn.
rect_x = margin + (rect_w+margin) * ((rect_num // 2) % 2)
rect_y = margin + (rect_h+margin) * (rect_num % 2)
rect = fitz.Rect(rect_x, rect_y, rect_x + rect_w, rect_y + rect_h)
#print(f'rectfn(): rect_num={rect_num} filled={filled}. Returning: rect={rect}')
return mediabox, rect, None
"
4043,source/pymupdf.pdf,"(continues on next page)
"
4044,source/pymupdf.pdf,"12.12. Using the Alternative Story.write*() functions
125
"
4045,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4046,source/pymupdf.pdf,"(continued from previous page)
"
4047,source/pymupdf.pdf,"story = fitz.Story(html, em=8)
"
4048,source/pymupdf.pdf,"out_path = __file__.replace('.py', '.pdf')
writer = fitz.DocumentWriter(out_path)
"
4049,source/pymupdf.pdf,"story.write(writer, rectfn)
writer.close()
"
4050,source/pymupdf.pdf,"12.12.2 How
to
do
Iterative
Layout
for
a
Table
of
Contents
with
Story.
write_stabilized()
"
4051,source/pymupdf.pdf,"This script creates html content dynamically, adding a contents section based on ElementPosition items that have non-
zero .heading values.
"
4052,source/pymupdf.pdf,"The contents section is at the start of the document, so modifications to the contents can change page numbers in the
rest of the document, which in turn can cause page numbers in the contents section to be incorrect.
"
4053,source/pymupdf.pdf,"So the script uses Story.write_stabilized() to repeatedly lay things out until things are stable.
"
4054,source/pymupdf.pdf,"Files:
"
4055,source/pymupdf.pdf,"• docs/samples/story-write-stabilized.py
"
4056,source/pymupdf.pdf,"""""""
Demo script for PyMuPDF's `fitz.Story.write_stabilized()`.
"
4057,source/pymupdf.pdf,"`fitz.Story.write_stabilized()` is similar to `fitz.Story.write()`,
except instead of taking a fixed html document, it does iterative layout
of dynamically-generated html content (provided by a callback) to a
`fitz.DocumentWriter`.
"
4058,source/pymupdf.pdf,"For example this allows one to add a dynamically-generated table of contents
section while ensuring that page numbers are patched up until stable.
""""""
"
4059,source/pymupdf.pdf,"import textwrap
"
4060,source/pymupdf.pdf,"import fitz
"
4061,source/pymupdf.pdf,"def rectfn(rect_num, filled):
"
4062,source/pymupdf.pdf,"'''
We return one rect per page.
'''
rect = fitz.Rect(10, 20, 290, 380)
mediabox = fitz.Rect(0, 0, 300, 400)
#print(f'rectfn(): rect_num={rect_num} filled={filled}')
"
4063,source/pymupdf.pdf,"(continues on next page)
"
4064,source/pymupdf.pdf,"126
Chapter 12. Stories
"
4065,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4066,source/pymupdf.pdf,"(continued from previous page)
"
4067,source/pymupdf.pdf,"return mediabox, rect, None
"
4068,source/pymupdf.pdf,"def contentfn(positions):
"
4069,source/pymupdf.pdf,"'''
Returns html content, with a table of contents derived from `positions`.
'''
ret = ''
ret += textwrap.dedent('''
"
4070,source/pymupdf.pdf,"<!DOCTYPE html>
<body>
<h2>Contents</h2>
<ul>
''')
"
4071,source/pymupdf.pdf,"# Create table of contents with links to all <h1..6> sections in the
# document.
for position in positions:
"
4072,source/pymupdf.pdf,"if position.heading and (position.open_close & 1):
text = position.text if position.text else ''
if position.id:
ret += f""
<li><a href=\\""#{position.id}\\"">{text}</a>\\n""
"
4073,source/pymupdf.pdf,"else:
ret += f""
<li>{text}\\n""
"
4074,source/pymupdf.pdf,"ret += f""
<ul>\\n""
"
4075,source/pymupdf.pdf,"ret += f""
<li>page={position.page_num}\\n""
"
4076,source/pymupdf.pdf,"ret += f""
<li>depth={position.depth}\\n""
"
4077,source/pymupdf.pdf,"ret += f""
<li>heading={position.heading}\\n""
"
4078,source/pymupdf.pdf,"ret += f""
<li>id={position.id!r}\\n""
"
4079,source/pymupdf.pdf,"ret += f""
<li>href={position.href!r}\\n""
"
4080,source/pymupdf.pdf,"ret += f""
<li>rect={position.rect}\\n""
"
4081,source/pymupdf.pdf,"ret += f""
<li>text={text!r}\\n""
"
4082,source/pymupdf.pdf,"ret += f""
<li>open_close={position.open_close}\\n""
"
4083,source/pymupdf.pdf,"ret += f""
</ul>\\n""
"
4084,source/pymupdf.pdf,"ret += '</ul>\\n'
"
4085,source/pymupdf.pdf,"# Main content.
ret += textwrap.dedent(f'''
"
4086,source/pymupdf.pdf,"<h1>First section</h1>
<p>Contents of first section.
"
4087,source/pymupdf.pdf,"<h1>Second section</h1>
<p>Contents of second section.
<h2>Second section first subsection</h2>
"
4088,source/pymupdf.pdf,"<p>Contents of second section first subsection.
"
4089,source/pymupdf.pdf,"<h1>Third section</h1>
<p>Contents of third section.
"
4090,source/pymupdf.pdf,"(continues on next page)
"
4091,source/pymupdf.pdf,"12.12. Using the Alternative Story.write*() functions
127
"
4092,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4093,source/pymupdf.pdf,"(continued from previous page)
"
4094,source/pymupdf.pdf,"</body>
''')
ret = ret.strip()
with open(__file__.replace('.py', '.html'), 'w') as f:
f.write(ret)
"
4095,source/pymupdf.pdf,"return ret;
"
4096,source/pymupdf.pdf,"out_path = __file__.replace('.py', '.pdf')
writer = fitz.DocumentWriter(out_path)
fitz.Story.write_stabilized(writer, contentfn, rectfn)
writer.close()
"
4097,source/pymupdf.pdf,"12.12.3 How
to
do
Iterative
Layout
and
Create
PDF
Links
with
Story.
write_stabilized_links()
"
4098,source/pymupdf.pdf,"This script is similar to the one described in “How to use Story.write_stabilized()” above, except that the gen-
erated PDF also contains links that correspond to the internal links in the original html.
"
4099,source/pymupdf.pdf,"This
is
done
by
using
Story.write_stabilized_links();
this
is
slightly
different
from
Story.
write_stabilized():
"
4100,source/pymupdf.pdf,"• It does not take a DocumentWriter writer arg.
"
4101,source/pymupdf.pdf,"• It returns a PDF Document instance.
"
4102,source/pymupdf.pdf,"[The reasons for this are a little involved; for example a DocumentWriter is not necessarily a PDF writer, so doesn’t
really work in a PDF-specific API.]
"
4103,source/pymupdf.pdf,"Files:
"
4104,source/pymupdf.pdf,"• docs/samples/story-write-stabilized-links.py
"
4105,source/pymupdf.pdf,"""""""
Demo script for PyMuPDF's `fitz.Story.write_stabilized_with_links()`.
"
4106,source/pymupdf.pdf,"`fitz.Story.write_stabilized_links()` is similar to
`fitz.Story.write_stabilized()` except that it creates a PDF `fitz.Document`
that contains PDF links generated from all internal links in the original html.
""""""
"
4107,source/pymupdf.pdf,"import textwrap
"
4108,source/pymupdf.pdf,"import fitz
"
4109,source/pymupdf.pdf,"def rectfn(rect_num, filled):
"
4110,source/pymupdf.pdf,"'''
We return one rect per page.
"
4111,source/pymupdf.pdf,"(continues on next page)
"
4112,source/pymupdf.pdf,"128
Chapter 12. Stories
"
4113,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4114,source/pymupdf.pdf,"(continued from previous page)
"
4115,source/pymupdf.pdf,"'''
rect = fitz.Rect(10, 20, 290, 380)
mediabox = fitz.Rect(0, 0, 300, 400)
#print(f'rectfn(): rect_num={rect_num} filled={filled}')
return mediabox, rect, None
"
4116,source/pymupdf.pdf,"def contentfn(positions):
"
4117,source/pymupdf.pdf,"'''
Returns html content, with a table of contents derived from `positions`.
'''
ret = ''
ret += textwrap.dedent('''
"
4118,source/pymupdf.pdf,"<!DOCTYPE html>
<body>
<h2>Contents</h2>
<ul>
''')
"
4119,source/pymupdf.pdf,"# Create table of contents with links to all <h1..6> sections in the
# document.
for position in positions:
"
4120,source/pymupdf.pdf,"if position.heading and (position.open_close & 1):
text = position.text if position.text else ''
if position.id:
ret += f""
<li><a href=\\""#{position.id}\\"">{text}</a>\\n""
"
4121,source/pymupdf.pdf,"else:
ret += f""
<li>{text}\\n""
"
4122,source/pymupdf.pdf,"ret += f""
<ul>\\n""
"
4123,source/pymupdf.pdf,"ret += f""
<li>page={position.page_num}\\n""
"
4124,source/pymupdf.pdf,"ret += f""
<li>depth={position.depth}\\n""
"
4125,source/pymupdf.pdf,"ret += f""
<li>heading={position.heading}\\n""
"
4126,source/pymupdf.pdf,"ret += f""
<li>id={position.id!r}\\n""
"
4127,source/pymupdf.pdf,"ret += f""
<li>href={position.href!r}\\n""
"
4128,source/pymupdf.pdf,"ret += f""
<li>rect={position.rect}\\n""
"
4129,source/pymupdf.pdf,"ret += f""
<li>text={text!r}\\n""
"
4130,source/pymupdf.pdf,"ret += f""
<li>open_close={position.open_close}\\n""
"
4131,source/pymupdf.pdf,"ret += f""
</ul>\\n""
"
4132,source/pymupdf.pdf,"ret += '</ul>\\n'
"
4133,source/pymupdf.pdf,"# Main content.
ret += textwrap.dedent(f'''
"
4134,source/pymupdf.pdf,"<h1>First section</h1>
<p>Contents of first section.
<ul>
<li>External <a href=""https://artifex.com/"">link to https://artifex.com/</a>.
<li><a href=""#idtest"">Link to IDTEST</a>.
<li><a href=""#nametest"">Link to NAMETEST</a>.
</ul>
"
4135,source/pymupdf.pdf,"(continues on next page)
"
4136,source/pymupdf.pdf,"12.12. Using the Alternative Story.write*() functions
129
"
4137,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4138,source/pymupdf.pdf,"(continued from previous page)
"
4139,source/pymupdf.pdf,"<h1>Second section</h1>
<p>Contents of second section.
<h2>Second section first subsection</h2>
"
4140,source/pymupdf.pdf,"<p>Contents of second section first subsection.
<p id=""idtest"">IDTEST
"
4141,source/pymupdf.pdf,"<h1>Third section</h1>
<p>Contents of third section.
<p><a name=""nametest"">NAMETEST</a>.
"
4142,source/pymupdf.pdf,"</body>
''')
ret = ret.strip()
with open(__file__.replace('.py', '.html'), 'w') as f:
f.write(ret)
"
4143,source/pymupdf.pdf,"return ret;
"
4144,source/pymupdf.pdf,"out_path = __file__.replace('.py', '.pdf')
document = fitz.Story.write_stabilized_with_links(contentfn, rectfn)
document.save(out_path)
"
4145,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
4146,source/pymupdf.pdf,"130
Chapter 12. Stories
"
4147,source/pymupdf.pdf,"CHAPTER
"
4148,source/pymupdf.pdf,"THIRTEEN
"
4149,source/pymupdf.pdf,"JOURNALLING
"
4150,source/pymupdf.pdf,"Starting with version 1.19.0, journalling is possible when updating PDF documents.
"
4151,source/pymupdf.pdf,"Journalling is a logging mechanism which permits either reverting or re-applying changes to a PDF. Similar to LUWs
“Logical Units of Work” in modern database systems, one can group a set of updates into an “operation”. In MuPDF
journalling, an operation plays the role of a LUW.
"
4152,source/pymupdf.pdf,"Note: In contrast to LUW implementations found in database systems, MuPDF journalling happens on a per docu-
ment level. There is no support for simultaneous updates across multiple PDFs: one would have to establish one’s own
logic here.
"
4153,source/pymupdf.pdf,"• Journalling must be enabled via a document method. Journalling is possible for existing or new documents.
Journalling can be disabled only by closing the file.
"
4154,source/pymupdf.pdf,"• Once enabled, every change must happen inside an operation – otherwise an exception is raised. An operation is
started and stopped via document methods. Updates happening between these two calls form an LUW and can
thus collectively be rolled back or re-applied, or, in MuPDF terminology “undone” resp. “redone”.
"
4155,source/pymupdf.pdf,"• At any point, the journalling status can be queried: whether journalling is active, how many operations have been
recorded, whether “undo” or “redo” is possible, the current position inside the journal, etc.
"
4156,source/pymupdf.pdf,"• The journal can be saved to or loaded from a file. These are document methods.
"
4157,source/pymupdf.pdf,"• When loading a journal file, compatibility with the document is checked and journalling is automatically enabled
upon success.
"
4158,source/pymupdf.pdf,"• For an existing PDF being journalled, a special new save method is available: Document.save_snapshot().
This performs a special incremental save that includes all journalled updates so far. If its journal is saved at
the same time (immediately after the document snapshot), then document and journal are in sync and can later
on be used together to undo or redo operations or to continue journalled updates – just as if there had been no
interruption.
"
4159,source/pymupdf.pdf,"• The snapshot PDF is a valid PDF in every aspect and fully usable. If the document is however changed in any
way without using its journal file, then a desynchronization will take place and the journal is rendered unusable.
"
4160,source/pymupdf.pdf,"• Snapshot files are structured like incremental updates. Nevertheless, the internal journalling logic requires, that
saving must happen to a new file. So the user should develop a file naming convention to support recognizable
relationships between an original PDF, like original.pdf and its snapshot sets, like original-snap1.pdf /
original-snap1.log, original-snap2.pdf / original-snap2.log, etc.
"
4161,source/pymupdf.pdf,"131
"
4162,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4163,source/pymupdf.pdf,"13.1 Example Session 1
"
4164,source/pymupdf.pdf,"Description:
"
4165,source/pymupdf.pdf,"• Make a new PDF and enable journalling. Then add a page and some text lines – each as a separate operation.
"
4166,source/pymupdf.pdf,"• Navigate within the journal, undoing and redoing these updates and displaying status and file results:
"
4167,source/pymupdf.pdf,">>> import fitz
>>> doc=fitz.open()
>>> doc.journal_enable()
"
4168,source/pymupdf.pdf,">>> # try update without an operation:
>>> page = doc.new_page()
mupdf: No journalling operation started
... omitted lines
RuntimeError: No journalling operation started
"
4169,source/pymupdf.pdf,">>> doc.journal_start_op(""op1"")
>>> page = doc.new_page()
>>> doc.journal_stop_op()
"
4170,source/pymupdf.pdf,">>> doc.journal_start_op(""op2"")
>>> page.insert_text((100,100), ""Line 1"")
>>> doc.journal_stop_op()
"
4171,source/pymupdf.pdf,">>> doc.journal_start_op(""op3"")
>>> page.insert_text((100,120), ""Line 2"")
>>> doc.journal_stop_op()
"
4172,source/pymupdf.pdf,">>> doc.journal_start_op(""op4"")
>>> page.insert_text((100,140), ""Line 3"")
>>> doc.journal_stop_op()
"
4173,source/pymupdf.pdf,">>> # show position in journal
>>> doc.journal_position()
(4, 4)
>>> # 4 operations recorded - positioned at bottom
>>> # what can we do?
>>> doc.journal_can_do()
{'undo': True, 'redo': False}
>>> # currently only undos are possible. Print page content:
>>> print(page.get_text())
Line 1
Line 2
Line 3
"
4174,source/pymupdf.pdf,">>> # undo last insert:
>>> doc.journal_undo()
>>> # show combined status again:
>>> doc.journal_position();doc.journal_can_do()
(3, 4)
{'undo': True, 'redo': True}
>>> print(page.get_text())
"
4175,source/pymupdf.pdf,"(continues on next page)
"
4176,source/pymupdf.pdf,"132
Chapter 13. Journalling
"
4177,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4178,source/pymupdf.pdf,"(continued from previous page)
"
4179,source/pymupdf.pdf,"Line 1
Line 2
"
4180,source/pymupdf.pdf,">>> # our position is now second to last
>>> # last text insertion was reverted
>>> # but we can redo / move forward as well:
>>> doc.journal_redo()
>>> # our combined status:
>>> doc.journal_position();doc.journal_can_do()
(4, 4)
{'undo': True, 'redo': False}
>>> print(page.get_text())
Line 1
Line 2
Line 3
>>> # line 3 has appeared again!
"
4181,source/pymupdf.pdf,"13.2 Example Session 2
"
4182,source/pymupdf.pdf,"Description:
"
4183,source/pymupdf.pdf,"• Similar to previous, but after undoing some operations, we now add a different update. This will cause:
"
4184,source/pymupdf.pdf,"– permanent removal of the undone journal entries
"
4185,source/pymupdf.pdf,"– the new update operation will become the new last entry.
"
4186,source/pymupdf.pdf,">>> doc=fitz.open()
>>> doc.journal_enable()
>>> doc.journal_start_op(""Page insert"")
>>> page=doc.new_page()
>>> doc.journal_stop_op()
>>> for i in range(5):
"
4187,source/pymupdf.pdf,"doc.journal_start_op(""insert-%i"" % i)
page.insert_text((100, 100 + 20*i), ""text line %i"" %i)
doc.journal_stop_op()
"
4188,source/pymupdf.pdf,">>> # combined status info:
>>> doc.journal_position();doc.journal_can_do()
(6, 6)
{'undo': True, 'redo': False}
"
4189,source/pymupdf.pdf,">>> for i in range(3):
# revert last three operations
"
4190,source/pymupdf.pdf,"doc.journal_undo()
"
4191,source/pymupdf.pdf,">>> doc.journal_position();doc.journal_can_do()
(3, 6)
{'undo': True, 'redo': True}
"
4192,source/pymupdf.pdf,">>> # now do a different update:
>>> doc.journal_start_op(""Draw some line"")
>>> page.draw_line((100,150), (300,150))
"
4193,source/pymupdf.pdf,"(continues on next page)
"
4194,source/pymupdf.pdf,"13.2. Example Session 2
133
"
4195,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4196,source/pymupdf.pdf,"(continued from previous page)
"
4197,source/pymupdf.pdf,"Point(300.0, 150.0)
>>> doc.journal_stop_op()
>>> doc.journal_position();doc.journal_can_do()
(4, 4)
{'undo': True, 'redo': False}
"
4198,source/pymupdf.pdf,">>> # this has changed the journal:
>>> # previous last 3 text line operations were removed, and
>>> # we have only 4 operations: drawing the line is the new last one
"
4199,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
4200,source/pymupdf.pdf,"134
Chapter 13. Journalling
"
4201,source/pymupdf.pdf,"CHAPTER
"
4202,source/pymupdf.pdf,"FOURTEEN
"
4203,source/pymupdf.pdf,"MULTIPROCESSING
"
4204,source/pymupdf.pdf,"MuPDF has no integrated support for threading - calling itself “thread-agnostic”. While there do exist tricky possibil-
ities to still use threading with MuPDF, the baseline consequence for PyMuPDF is:
"
4205,source/pymupdf.pdf,"No Python threading support.
"
4206,source/pymupdf.pdf,"Using PyMuPDF in a Python threading environment will lead to blocking effects for the main thread.
"
4207,source/pymupdf.pdf,"However, there is the option to use Python’s multiprocessing module in a variety of ways.
"
4208,source/pymupdf.pdf,"If you are looking to speed up page-oriented processing for a large document, use this script as a starting point. It
should be at least twice as fast as the corresponding sequential processing.
"
4209,source/pymupdf.pdf,"""""""
Demonstrate the use of multiprocessing with PyMuPDF.
"
4210,source/pymupdf.pdf,"Depending on the
number of CPUs, the document is divided in page ranges.
"
4211,source/pymupdf.pdf,"Each range is then worked on by one process.
The type of work would typically be text extraction or page rendering. Each
process must know where to put its results, because this processing pattern
does not include inter-process communication or data sharing.
"
4212,source/pymupdf.pdf,"Compared to sequential processing, speed improvements in range of 100% (ie.
twice as fast) or better can be expected.
""""""
from __future__ import print_function, division
import sys
import os
import time
from multiprocessing import Pool, cpu_count
import fitz
"
4213,source/pymupdf.pdf,"# choose a version specific timer function (bytes == str in Python 2)
mytime = time.clock if str is bytes else time.perf_counter
"
4214,source/pymupdf.pdf,"def render_page(vector):
"
4215,source/pymupdf.pdf,"""""""Render a page range of a document.
"
4216,source/pymupdf.pdf,"Notes:
"
4217,source/pymupdf.pdf,"The PyMuPDF document cannot be part of the argument, because that
cannot be pickled. So we are being passed in just its filename.
"
4218,source/pymupdf.pdf,"(continues on next page)
"
4219,source/pymupdf.pdf,"135
"
4220,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4221,source/pymupdf.pdf,"(continued from previous page)
"
4222,source/pymupdf.pdf,"This is no performance issue, because we are a separate process and
need to open the document anyway.
Any page-specific function can be processed here - rendering is just
an example - text extraction might be another.
The work must however be self-contained: no inter-process communication
or synchronization is possible with this design.
Care must also be taken with which parameters are contained in the
argument, because it will be passed in via pickling by the Pool class.
So any large objects will increase the overall duration.
"
4223,source/pymupdf.pdf,"Args:
"
4224,source/pymupdf.pdf,"vector: a list containing required parameters.
"
4225,source/pymupdf.pdf,"""""""
# recreate the arguments
idx = vector[0]
# this is the segment number we have to process
"
4226,source/pymupdf.pdf,"cpu = vector[1]
# number of CPUs
"
4227,source/pymupdf.pdf,"filename = vector[2]
# document filename
"
4228,source/pymupdf.pdf,"mat = vector[3]
# the matrix for rendering
"
4229,source/pymupdf.pdf,"doc = fitz.open(filename)
# open the document
"
4230,source/pymupdf.pdf,"num_pages = doc.page_count
# get number of pages
"
4231,source/pymupdf.pdf,"# pages per segment: make sure that cpu * seg_size >= num_pages!
seg_size = int(num_pages / cpu + 1)
seg_from = idx * seg_size
# our first page number
"
4232,source/pymupdf.pdf,"seg_to = min(seg_from + seg_size, num_pages)
# last page number
"
4233,source/pymupdf.pdf,"for i in range(seg_from, seg_to):
# work through our page segment
"
4234,source/pymupdf.pdf,"page = doc[i]
# page.get_text(""rawdict"")
# use any page-related type of work here, eg
"
4235,source/pymupdf.pdf,"pix = page.get_pixmap(alpha=False, matrix=mat)
# store away the result somewhere ...
# pix.save(""p-%i.png"" % i)
"
4236,source/pymupdf.pdf,"print(""Processed page numbers %i through %i"" % (seg_from, seg_to - 1))
"
4237,source/pymupdf.pdf,"if __name__ == ""__main__"":
t0 = mytime()
# start a timer
"
4238,source/pymupdf.pdf,"filename = sys.argv[1]
mat = fitz.Matrix(0.2, 0.2)
# the rendering matrix: scale down to 20%
"
4239,source/pymupdf.pdf,"cpu = cpu_count()
"
4240,source/pymupdf.pdf,"# make vectors of arguments for the processes
vectors = [(i, cpu, filename, mat) for i in range(cpu)]
print(""Starting %i processes for '%s'."" % (cpu, filename))
"
4241,source/pymupdf.pdf,"pool = Pool()
# make pool of 'cpu_count()' processes
"
4242,source/pymupdf.pdf,"pool.map(render_page, vectors, 1)
# start processes passing each a vector
"
4243,source/pymupdf.pdf,"t1 = mytime()
# stop the timer
"
4244,source/pymupdf.pdf,"print(""Total time %g seconds"" % round(t1 - t0, 2))
"
4245,source/pymupdf.pdf,"Here is a more complex example involving inter-process communication between a main process (showing a GUI) and
"
4246,source/pymupdf.pdf,"136
Chapter 14. Multiprocessing
"
4247,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4248,source/pymupdf.pdf,"a child process doing PyMuPDF access to a document.
"
4249,source/pymupdf.pdf,"""""""
Created on 2019-05-01
"
4250,source/pymupdf.pdf,"@author: yinkaisheng@live.com
@copyright: 2019 yinkaisheng@live.com
@license: GNU AFFERO GPL 3.0
"
4251,source/pymupdf.pdf,"Demonstrate the use of multiprocessing with PyMuPDF
-----------------------------------------------------
This example shows some more advanced use of multiprocessing.
The main process show a Qt GUI and establishes a 2-way communication with
another process, which accesses a supported document.
""""""
import os
import sys
import time
import multiprocessing as mp
import queue
import fitz
"
4252,source/pymupdf.pdf,"''' PyQt and PySide namespace unifier shim
"
4253,source/pymupdf.pdf,"https://www.pythonguis.com/faq/pyqt6-vs-pyside6/
simple ""if 'PyQt6' in sys.modules:"" test fails for me, so the more complex pkgutil use
overkill for most people who might have one or the other, why both?
"
4254,source/pymupdf.pdf,"'''
"
4255,source/pymupdf.pdf,"from pkgutil import iter_modules
"
4256,source/pymupdf.pdf,"def module_exists(module_name):
"
4257,source/pymupdf.pdf,"return module_name in (name for loader, name, ispkg in iter_modules())
"
4258,source/pymupdf.pdf,"if
module_exists(""PyQt6""):
# PyQt6
from PyQt6 import QtGui, QtWidgets, QtCore
from PyQt6.QtCore import pyqtSignal as Signal, pyqtSlot as Slot
wrapper = ""PyQt6""
"
4259,source/pymupdf.pdf,"elif module_exists(""PySide6""):
"
4260,source/pymupdf.pdf,"# PySide6
from PySide6 import QtGui, QtWidgets, QtCore
from PySide6.QtCore import Signal, Slot
wrapper = ""PySide6""
"
4261,source/pymupdf.pdf,"my_timer = time.clock if str is bytes else time.perf_counter
"
4262,source/pymupdf.pdf,"class DocForm(QtWidgets.QWidget):
"
4263,source/pymupdf.pdf,"def __init__(self):
"
4264,source/pymupdf.pdf,"super().__init__()
"
4265,source/pymupdf.pdf,"(continues on next page)
"
4266,source/pymupdf.pdf,"137
"
4267,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4268,source/pymupdf.pdf,"(continued from previous page)
"
4269,source/pymupdf.pdf,"self.process = None
self.queNum = mp.Queue()
self.queDoc = mp.Queue()
self.page_count = 0
self.curPageNum = 0
self.lastDir = """"
self.timerSend = QtCore.QTimer(self)
self.timerSend.timeout.connect(self.onTimerSendPageNum)
self.timerGet = QtCore.QTimer(self)
self.timerGet.timeout.connect(self.onTimerGetPage)
self.timerWaiting = QtCore.QTimer(self)
self.timerWaiting.timeout.connect(self.onTimerWaiting)
self.initUI()
"
4270,source/pymupdf.pdf,"def initUI(self):
vbox = QtWidgets.QVBoxLayout()
self.setLayout(vbox)
"
4271,source/pymupdf.pdf,"hbox = QtWidgets.QHBoxLayout()
self.btnOpen = QtWidgets.QPushButton(""OpenDocument"", self)
self.btnOpen.clicked.connect(self.openDoc)
hbox.addWidget(self.btnOpen)
"
4272,source/pymupdf.pdf,"self.btnPlay = QtWidgets.QPushButton(""PlayDocument"", self)
self.btnPlay.clicked.connect(self.playDoc)
hbox.addWidget(self.btnPlay)
"
4273,source/pymupdf.pdf,"self.btnStop = QtWidgets.QPushButton(""Stop"", self)
self.btnStop.clicked.connect(self.stopPlay)
hbox.addWidget(self.btnStop)
"
4274,source/pymupdf.pdf,"self.label = QtWidgets.QLabel(""0/0"", self)
self.label.setFont(QtGui.QFont(""Verdana"", 20))
hbox.addWidget(self.label)
"
4275,source/pymupdf.pdf,"vbox.addLayout(hbox)
"
4276,source/pymupdf.pdf,"self.labelImg = QtWidgets.QLabel(""Document"", self)
sizePolicy = QtWidgets.QSizePolicy(
QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.
"
4277,source/pymupdf.pdf,"˓→Expanding
)
self.labelImg.setSizePolicy(sizePolicy)
vbox.addWidget(self.labelImg)
"
4278,source/pymupdf.pdf,"self.setGeometry(100, 100, 400, 600)
self.setWindowTitle(""PyMuPDF Document Player"")
self.show()
"
4279,source/pymupdf.pdf,"def openDoc(self):
path, _ = QtWidgets.QFileDialog.getOpenFileName(
"
4280,source/pymupdf.pdf,"self,
"
4281,source/pymupdf.pdf,"(continues on next page)
"
4282,source/pymupdf.pdf,"138
Chapter 14. Multiprocessing
"
4283,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4284,source/pymupdf.pdf,"(continued from previous page)
"
4285,source/pymupdf.pdf,"""Open Document"",
self.lastDir,
""All Supported Files (*.pdf;*.epub;*.xps;*.oxps;*.cbz;*.fb2);;PDF Files (*.
"
4286,source/pymupdf.pdf,"˓→pdf);;EPUB Files (*.epub);;XPS Files (*.xps);;OpenXPS Files (*.oxps);;CBZ Files (*.
"
4287,source/pymupdf.pdf,"˓→cbz);;FB2 Files (*.fb2)"",
"
4288,source/pymupdf.pdf,"#options=QtWidgets.QFileDialog.Options(),
"
4289,source/pymupdf.pdf,")
if path:
"
4290,source/pymupdf.pdf,"self.lastDir, self.file = os.path.split(path)
if self.process:
"
4291,source/pymupdf.pdf,"self.queNum.put(-1)
# use -1 to notify the process to exit
"
4292,source/pymupdf.pdf,"self.timerSend.stop()
self.curPageNum = 0
self.page_count = 0
self.process = mp.Process(
target=openDocInProcess, args=(path, self.queNum, self.queDoc)
)
self.process.start()
self.timerGet.start(40)
self.label.setText(""0/0"")
self.queNum.put(0)
self.startTime = time.perf_counter()
self.timerWaiting.start(40)
"
4293,source/pymupdf.pdf,"def playDoc(self):
"
4294,source/pymupdf.pdf,"self.timerSend.start(500)
"
4295,source/pymupdf.pdf,"def stopPlay(self):
"
4296,source/pymupdf.pdf,"self.timerSend.stop()
"
4297,source/pymupdf.pdf,"def onTimerSendPageNum(self):
"
4298,source/pymupdf.pdf,"if self.curPageNum < self.page_count - 1:
"
4299,source/pymupdf.pdf,"self.queNum.put(self.curPageNum + 1)
"
4300,source/pymupdf.pdf,"else:
"
4301,source/pymupdf.pdf,"self.timerSend.stop()
"
4302,source/pymupdf.pdf,"def onTimerGetPage(self):
"
4303,source/pymupdf.pdf,"try:
ret = self.queDoc.get(False)
if isinstance(ret, int):
"
4304,source/pymupdf.pdf,"self.timerWaiting.stop()
self.page_count = ret
self.label.setText(""{}/{}"".format(self.curPageNum + 1, self.page_count))
"
4305,source/pymupdf.pdf,"else:
# tuple, pixmap info
"
4306,source/pymupdf.pdf,"num, samples, width, height, stride, alpha = ret
self.curPageNum = num
self.label.setText(""{}/{}"".format(self.curPageNum + 1, self.page_count))
fmt = (
QtGui.QImage.Format.Format_RGBA8888
if alpha
else QtGui.QImage.Format.Format_RGB888
)
"
4307,source/pymupdf.pdf,"(continues on next page)
"
4308,source/pymupdf.pdf,"139
"
4309,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4310,source/pymupdf.pdf,"(continued from previous page)
"
4311,source/pymupdf.pdf,"qimg = QtGui.QImage(samples, width, height, stride, fmt)
self.labelImg.setPixmap(QtGui.QPixmap.fromImage(qimg))
"
4312,source/pymupdf.pdf,"except queue.Empty as ex:
"
4313,source/pymupdf.pdf,"pass
"
4314,source/pymupdf.pdf,"def onTimerWaiting(self):
"
4315,source/pymupdf.pdf,"self.labelImg.setText(
"
4316,source/pymupdf.pdf,"'Loading ""{}"", {:.2f}s'.format(
"
4317,source/pymupdf.pdf,"self.file, time.perf_counter() - self.startTime
)
)
"
4318,source/pymupdf.pdf,"def closeEvent(self, event):
"
4319,source/pymupdf.pdf,"self.queNum.put(-1)
event.accept()
"
4320,source/pymupdf.pdf,"def openDocInProcess(path, queNum, quePageInfo):
start = my_timer()
doc = fitz.open(path)
end = my_timer()
quePageInfo.put(doc.page_count)
while True:
num = queNum.get()
if num < 0:
"
4321,source/pymupdf.pdf,"break
"
4322,source/pymupdf.pdf,"page = doc.load_page(num)
pix = page.get_pixmap()
quePageInfo.put(
(num, pix.samples, pix.width, pix.height, pix.stride, pix.alpha)
)
doc.close()
print(""process exit"")
"
4323,source/pymupdf.pdf,"if __name__ == ""__main__"":
app = QtWidgets.QApplication(sys.argv)
form = DocForm()
sys.exit(app.exec())
"
4324,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
4325,source/pymupdf.pdf,"140
Chapter 14. Multiprocessing
"
4326,source/pymupdf.pdf,"CHAPTER
"
4327,source/pymupdf.pdf,"FIFTEEN
"
4328,source/pymupdf.pdf,"OPTIONAL CONTENT SUPPORT
"
4329,source/pymupdf.pdf,"This document explains PyMuPDF’s support of the PDF concept “Optional Content”.
"
4330,source/pymupdf.pdf,"15.1 Introduction: The Optional Content Concept
"
4331,source/pymupdf.pdf,"Optional Content in PDF is a way to show or hide parts of a document based on certain conditions: Parameters that
can be set to ON or to OFF when using a supporting PDF consumer (viewer), or programmatically.
"
4332,source/pymupdf.pdf,"This capability is useful in items such as CAD drawings, layered artwork, maps, and multi-language documents. Typical
uses include showing or hiding details of complex vector graphics like geographical maps, technical devices, architec-
tural designs and similar, including automatically switching between different zooming levels. Other use cases may be
to automatically show different detail levels when displaying a document on screen as opposed to printing it.
"
4333,source/pymupdf.pdf,"Special PDF objects, so-called Optional Content Groups (OCGs) are used to define these different layers of content.
"
4334,source/pymupdf.pdf,"Assigning an OCG to a “normal” PDF object (like a text or an image) causes that object to be visible or hidden,
depending on the current state of the assigned OCG.
"
4335,source/pymupdf.pdf,"To ease definition of the overall configuration of a PDF’s Optional Content, OCGs can be organized in higher level
groupings, called OC Configurations. Each configuration being a collection of OCGs, together with each OCG’s
desired initial visibility state. Selecting one of these configurations (via the PDF viewer or programmatically) causes
a corresponding visibility change of all affected PDF objects throughout the document.
"
4336,source/pymupdf.pdf,"Except for the default one, OC Configurations are optional.
"
4337,source/pymupdf.pdf,"For more explanations and additional background please refer to PDF specification manuals.
"
4338,source/pymupdf.pdf,"15.2 PyMuPDF Support for PDF Optional Content
"
4339,source/pymupdf.pdf,"PyMuPDF offers full support for viewing, defining, changing and deleting Option Content Groups, Configurations,
maintaining the assignment of OCGs to PDF objects and programmatically switching between OC Configurations and
the visibility states of each single OCG.
"
4340,source/pymupdf.pdf,"141
"
4341,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4342,source/pymupdf.pdf,"15.3 How to Add Optional Content
"
4343,source/pymupdf.pdf,"This is as simple as adding an Optional Content Group, OCG, to a PDF: Document.add_ocg().
"
4344,source/pymupdf.pdf,"If previously the PDF had no OC support at all, the required setup (like defining the default OC Configuration) will be
done at this point automatically.
"
4345,source/pymupdf.pdf,"The method returns an xref of the created OCG. Use this xref to associate (mark) any PDF object with it, that you
want to make dependent on this OCG’s state. For example, you can insert an image on a page and refer to the xref like
this:
"
4346,source/pymupdf.pdf,"img_xref = page.insert_image(rect, filename=""image.file"", oc=xref)
"
4347,source/pymupdf.pdf,"If you want to put an existing image under the control of an OCG, you must first find out the image’s xref number (called
img_xref here) and then do doc.set_oc(img_xref, xref). After this, the image will be (in-) visible everywhere
throughout the document if the OCG’s state is “ON”, respectively “OFF”. You can also assign a different OCG with
this method.
"
4348,source/pymupdf.pdf,"To remove an OCG from an image, do doc.set_oc(img_xref, 0).
"
4349,source/pymupdf.pdf,"One single OCG can be assigned to mutiple PDF objects to control their visibility.
"
4350,source/pymupdf.pdf,"15.4 How to Define Complex Optional Content Conditions
"
4351,source/pymupdf.pdf,"Sophisticated logical conditions can be established to address complex visibility needs.
"
4352,source/pymupdf.pdf,"For example, you might want to create a multi-language document, so the user may switch between languages as
required.
"
4353,source/pymupdf.pdf,"Please have a look at this Jupyter Notebook and execute it as desired.
"
4354,source/pymupdf.pdf,"Certainly, your requirements may even be more complex and involve multiple OCGs with ON/OFF states that are
connected by some kind of logical relationship – but it should give you an impression of what is possible and how to
plan your next steps.
"
4355,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
4356,source/pymupdf.pdf,"142
Chapter 15. Optional Content Support
"
4357,source/pymupdf.pdf,"CHAPTER
"
4358,source/pymupdf.pdf,"SIXTEEN
"
4359,source/pymupdf.pdf,"LOW-LEVEL INTERFACES
"
4360,source/pymupdf.pdf,"Numerous methods are available to access and manipulate PDF files on a fairly low level. Admittedly, a clear distinction
between “low level” and “normal” functionality is not always possible or subject to personal taste.
"
4361,source/pymupdf.pdf,"It also may happen, that functionality previously deemed low-level is later on assessed as being part of the normal
interface. This has happened in v1.14.0 for the class Tools - you now find it as an item in the Classes chapter.
"
4362,source/pymupdf.pdf,"It is a matter of documentation only in which chapter of the documentation you find what you are looking for. Everything
is available and always via the same interface.
"
4363,source/pymupdf.pdf,"16.1 How to Iterate through the xref Table
"
4364,source/pymupdf.pdf,"A PDF’s xref table is a list of all objects defined in the file. This table may easily contain many thousands of entries
– the manual Adobe PDF References for example has 127,000 objects. Table entry “0” is reserved and must not be
touched. The following script loops through the xref table and prints each object’s definition:
"
4365,source/pymupdf.pdf,">>> xreflen = doc.xref_length()
# length of objects table
"
4366,source/pymupdf.pdf,">>> for xref in range(1, xreflen):
# skip item 0!
"
4367,source/pymupdf.pdf,"print("""")
print(""object %i (stream: %s)"" % (xref, doc.xref_is_stream(xref)))
print(doc.xref_object(xref, compressed=False))
"
4368,source/pymupdf.pdf,"This produces the following output:
"
4369,source/pymupdf.pdf,"object 1 (stream: False)
<<
/ModDate (D:20170314122233-04'00')
/PXCViewerInfo (PDF-XChange Viewer;2.5.312.1;Feb
9 2015;12:00:06;D:20170314122233-04
"
4370,source/pymupdf.pdf,"˓→'00')
>>
"
4371,source/pymupdf.pdf,"object 2 (stream: False)
<<
/Type /Catalog
/Pages 3 0 R
>>
"
4372,source/pymupdf.pdf,"object 3 (stream: False)
<<
"
4373,source/pymupdf.pdf,"(continues on next page)
"
4374,source/pymupdf.pdf,"143
"
4375,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4376,source/pymupdf.pdf,"(continued from previous page)
"
4377,source/pymupdf.pdf,"/Kids [ 4 0 R 5 0 R ]
/Type /Pages
/Count 2
>>
"
4378,source/pymupdf.pdf,"object 4 (stream: False)
<<
/Type /Page
/Annots [ 6 0 R ]
/Parent 3 0 R
/Contents 7 0 R
/MediaBox [ 0 0 595 842 ]
/Resources 8 0 R
>>
...
object 7 (stream: True)
<<
/Length 494
/Filter /FlateDecode
>>
...
"
4379,source/pymupdf.pdf,"A PDF object definition is an ordinary ASCII string.
"
4380,source/pymupdf.pdf,"16.2 How to Handle Object Streams
"
4381,source/pymupdf.pdf,"Some object types contain additional data apart from their object definition. Examples are images, fonts, embedded
files or commands describing the appearance of a page.
"
4382,source/pymupdf.pdf,"Objects of these types are called “stream objects”. PyMuPDF allows reading an object’s stream via method Document.
xref_stream() with the object’s xref as an argument. It is also possible to write back a modified version of a stream
using Document.update_stream().
"
4383,source/pymupdf.pdf,"Assume that the following snippet wants to read all streams of a PDF for whatever reason:
"
4384,source/pymupdf.pdf,">>> xreflen = doc.xref_length() # number of objects in file
>>> for xref in range(1, xreflen): # skip item 0!
"
4385,source/pymupdf.pdf,"if stream := doc.xref_stream(xref):
"
4386,source/pymupdf.pdf,"# do something with it (it is a bytes object or None)
# e.g. just write it back:
doc.update_stream(xref, stream)
"
4387,source/pymupdf.pdf,"Document.xref_stream() automatically returns a stream decompressed as a bytes object – and Document.
update_stream() automatically compresses it if beneficial.
"
4388,source/pymupdf.pdf,"144
Chapter 16. Low-Level Interfaces
"
4389,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4390,source/pymupdf.pdf,"16.3 How to Handle Page Contents
"
4391,source/pymupdf.pdf,"A PDF page can have zero or multiple contents objects. These are stream objects describing what appears where
and how on a page (like text and images). They are written in a special mini-language described e.g. in chapter
“APPENDIX A - Operator Summary” on page 643 of the Adobe PDF References.
"
4392,source/pymupdf.pdf,"Every PDF reader application must be able to interpret the contents syntax to reproduce the intended appearance of the
page.
"
4393,source/pymupdf.pdf,"If multiple contents objects are provided, they must be interpreted in the specified sequence in exactly the same way
as if they were provided as a concatenation of the several.
"
4394,source/pymupdf.pdf,"There are good technical arguments for having multiple contents objects:
"
4395,source/pymupdf.pdf,"• It is a lot easier and faster to just add new contents objects than maintaining a single big one (which entails
reading, decompressing, modifying, recompressing, and rewriting it for each change).
"
4396,source/pymupdf.pdf,"• When working with incremental updates, a modified big contents object will bloat the update delta and can
thus easily negate the efficiency of incremental saves.
"
4397,source/pymupdf.pdf,"For example, PyMuPDF adds new, small contents objects in methods Page.insert_image(), Page.
show_pdf_page() and the Shape methods.
"
4398,source/pymupdf.pdf,"However, there are also situations when a single contents object is beneficial: it is easier to interpret and more
compressible than multiple smaller ones.
"
4399,source/pymupdf.pdf,"Here are two ways of combining multiple contents of a page:
"
4400,source/pymupdf.pdf,">>> # method 1: use the MuPDF clean function
>>> page.clean_contents()
# cleans and combines multiple Contents
"
4401,source/pymupdf.pdf,">>> xref = page.get_contents()[0]
# only one /Contents now!
"
4402,source/pymupdf.pdf,">>> cont = doc.xref_stream(xref)
>>> # this has also reformatted the PDF commands
"
4403,source/pymupdf.pdf,">>> # method 2: extract concatenated contents
>>> cont = page.read_contents()
>>> # the /Contents source itself is unmodified
"
4404,source/pymupdf.pdf,"The clean function Page.clean_contents() does a lot more than just glueing contents objects: it also corrects
and optimizes the PDF operator syntax of the page and removes any inconsistencies with the page’s object definition.
"
4405,source/pymupdf.pdf,"16.4 How to Access the PDF Catalog
"
4406,source/pymupdf.pdf,"This is a central (“root”) object of a PDF. It serves as a starting point to reach important other objects and it also contains
some global options for the PDF:
"
4407,source/pymupdf.pdf,">>> import fitz
>>> doc=fitz.open(""PyMuPDF.pdf"")
>>> cat = doc.pdf_catalog()
# get xref of the /Catalog
"
4408,source/pymupdf.pdf,">>> print(doc.xref_object(cat))
# print object definition
"
4409,source/pymupdf.pdf,"<<
"
4410,source/pymupdf.pdf,"/Type/Catalog
% object type
"
4411,source/pymupdf.pdf,"/Pages 3593 0 R
% points to page tree
"
4412,source/pymupdf.pdf,"/OpenAction 225 0 R
% action to perform on open
"
4413,source/pymupdf.pdf,"(continues on next page)
"
4414,source/pymupdf.pdf,"16.3. How to Handle Page Contents
145
"
4415,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4416,source/pymupdf.pdf,"(continued from previous page)
"
4417,source/pymupdf.pdf,"/Names 3832 0 R
% points to global names tree
"
4418,source/pymupdf.pdf,"/PageMode /UseOutlines
% initially show the TOC
"
4419,source/pymupdf.pdf,"/PageLabels<</Nums[0<</S/D>>2<</S/r>>8<</S/D>>]>> % labels given to pages
/Outlines 3835 0 R
% points to outline tree
"
4420,source/pymupdf.pdf,">>
"
4421,source/pymupdf.pdf,"Note: Indentation, line breaks and comments are inserted here for clarification purposes only and will not normally
appear. For more information on the PDF catalog see section 7.7.2 on page 71 of the Adobe PDF References.
"
4422,source/pymupdf.pdf,"16.5 How to Access the PDF File Trailer
"
4423,source/pymupdf.pdf,"The trailer of a PDF file is a dictionary located towards the end of the file. It contains special objects, and pointers
to important other information. See Adobe PDF References p. 42. Here is an overview:
"
4424,source/pymupdf.pdf,"Key
Type
Value
"
4425,source/pymupdf.pdf,"Size
int
Number of entries in the cross-reference table + 1.
"
4426,source/pymupdf.pdf,"Prev
int
Offset to previous xref section (indicates incremental updates).
"
4427,source/pymupdf.pdf,"Root
dictionary
(indirect) Pointer to the catalog. See previous section.
"
4428,source/pymupdf.pdf,"Encrypt
dictionary
Pointer to encryption object (encrypted files only).
"
4429,source/pymupdf.pdf,"Info
dictionary
(indirect) Pointer to information (metadata).
"
4430,source/pymupdf.pdf,"ID
array
File identifier consisting of two byte strings.
"
4431,source/pymupdf.pdf,"XRefStm
int
Offset of a cross-reference stream. See Adobe PDF References p. 49.
"
4432,source/pymupdf.pdf,"Access this information via PyMuPDF with Document.pdf_trailer() or,
equivalently,
via Document.
xref_object() using -1 instead of a valid xref number.
"
4433,source/pymupdf.pdf,">>> import fitz
>>> doc=fitz.open(""PyMuPDF.pdf"")
>>> print(doc.xref_object(-1))
# or: print(doc.pdf_trailer())
"
4434,source/pymupdf.pdf,"<<
/Type /XRef
/Index [ 0 8263 ]
/Size 8263
/W [ 1 3 1 ]
/Root 8260 0 R
/Info 8261 0 R
/ID [ <4339B9CEE46C2CD28A79EBDDD67CC9B3> <4339B9CEE46C2CD28A79EBDDD67CC9B3> ]
/Length 19883
/Filter /FlateDecode
>>
>>>
"
4435,source/pymupdf.pdf,"146
Chapter 16. Low-Level Interfaces
"
4436,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4437,source/pymupdf.pdf,"16.6 How to Access XML Metadata
"
4438,source/pymupdf.pdf,"A PDF may contain XML metadata in addition to the standard metadata format. In fact, most PDF viewer or modifi-
cation software adds this type of information when saving the PDF (Adobe, Nitro PDF, PDF-XChange, etc.).
"
4439,source/pymupdf.pdf,"PyMuPDF has no way to interpret or change this information directly, because it contains no XML features. XML
metadata is however stored as a stream object, so it can be read, modified with appropriate software and written back.
"
4440,source/pymupdf.pdf,">>> xmlmetadata = doc.get_xml_metadata()
>>> print(xmlmetadata)
<?xpacket begin=""\\ufeff"" id=""W5M0MpCehiHzreSzNTczkc9d""?>
<x:xmpmeta xmlns:x=""adobe:ns:meta/"" x:xmptk=""3.1-702"">
<rdf:RDF xmlns:rdf=""http://www.w3.org/1999/02/22-rdf-syntax-ns#"">
...
omitted data
...
<?xpacket end=""w""?>
"
4441,source/pymupdf.pdf,"Using some XML package, the XML data can be interpreted and / or modified and then stored back. The following
also works, if the PDF previously had no XML metadata:
"
4442,source/pymupdf.pdf,">>> # write back modified XML metadata:
>>> doc.set_xml_metadata(xmlmetadata)
>>>
>>> # XML metadata can be deleted like this:
>>> doc.del_xml_metadata()
"
4443,source/pymupdf.pdf,"16.7 How to Extend PDF Metadata
"
4444,source/pymupdf.pdf,"Attribute Document.metadata is designed so it works for all supported document types in the same way: it is a Python
dictionary with a fixed set of key-value pairs. Correspondingly, Document.set_metadata() only accepts standard
keys.
"
4445,source/pymupdf.pdf,"However, PDFs may contain items not accessible like this. Also, there may be reasons to store additional information,
like copyrights. Here is a way to handle arbitrary metadata items by using PyMuPDF low-level functions.
"
4446,source/pymupdf.pdf,"As an example, look at this standard metadata output of some PDF:
"
4447,source/pymupdf.pdf,"# ---------------------
# standard metadata
# ---------------------
pprint(doc.metadata)
{'author': 'PRINCE',
"
4448,source/pymupdf.pdf,"'creationDate': ""D:2010102417034406'-30'"",
'creator': 'PrimoPDF http://www.primopdf.com/',
'encryption': None,
'format': 'PDF 1.4',
'keywords': '',
'modDate': ""D:20200725062431-04'00'"",
'producer': 'macOS Version 10.15.6 (Build 19G71a) Quartz PDFContext, '
"
4449,source/pymupdf.pdf,"'AppendMode 1.1',
"
4450,source/pymupdf.pdf,"(continues on next page)
"
4451,source/pymupdf.pdf,"16.6. How to Access XML Metadata
147
"
4452,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4453,source/pymupdf.pdf,"(continued from previous page)
"
4454,source/pymupdf.pdf,"'subject': '',
'title': 'Full page fax print',
'trapped': ''}
"
4455,source/pymupdf.pdf,"Use the following code to see all items stored in the metadata object:
"
4456,source/pymupdf.pdf,"# ----------------------------------
# metadata including private items
# ----------------------------------
metadata = {}
# make my own metadata dict
"
4457,source/pymupdf.pdf,"what, value = doc.xref_get_key(-1, ""Info"")
# /Info key in the trailer
"
4458,source/pymupdf.pdf,"if what != ""xref"":
"
4459,source/pymupdf.pdf,"pass
# PDF has no metadata
"
4460,source/pymupdf.pdf,"else:
xref = int(value.replace(""0 R"", """"))
# extract the metadata xref
"
4461,source/pymupdf.pdf,"for key in doc.xref_get_keys(xref):
metadata[key] = doc.xref_get_key(xref, key)[1]
pprint(metadata)
{'Author': 'PRINCE',
"
4462,source/pymupdf.pdf,"'CreationDate': ""D:2010102417034406'-30'"",
'Creator': 'PrimoPDF http://www.primopdf.com/',
'ModDate': ""D:20200725062431-04'00'"",
'PXCViewerInfo': 'PDF-XChange Viewer;2.5.312.1;Feb
9 '
"
4463,source/pymupdf.pdf,"""2015;12:00:06;D:20200725062431-04'00'"",
"
4464,source/pymupdf.pdf,"'Producer': 'macOS Version 10.15.6 (Build 19G71a) Quartz PDFContext, '
"
4465,source/pymupdf.pdf,"'AppendMode 1.1',
"
4466,source/pymupdf.pdf,"'Title': 'Full page fax print'}
"
4467,source/pymupdf.pdf,"# ---------------------------------------------------------------
# note the additional 'PXCViewerInfo' key - ignored in standard!
# ---------------------------------------------------------------
"
4468,source/pymupdf.pdf,"Vice versa, you can also store private metadata items in a PDF. It is your responsibility to make sure that these items
conform to PDF specifications - especially they must be (unicode) strings. Consult section 14.3 (p. 548) of the Adobe
PDF References for details and caveats:
"
4469,source/pymupdf.pdf,"what, value = doc.xref_get_key(-1, ""Info"")
# /Info key in the trailer
"
4470,source/pymupdf.pdf,"if what != ""xref"":
"
4471,source/pymupdf.pdf,"raise ValueError(""PDF has no metadata"")
xref = int(value.replace(""0 R"", """"))
# extract the metadata xref
"
4472,source/pymupdf.pdf,"# add some private information
doc.xref_set_key(xref, ""mykey"", fitz.get_pdf_str("" is Beijing""))
#
# after executing the previous code snippet, we will see this:
pprint(metadata)
{'Author': 'PRINCE',
"
4473,source/pymupdf.pdf,"'CreationDate': ""D:2010102417034406'-30'"",
'Creator': 'PrimoPDF http://www.primopdf.com/',
'ModDate': ""D:20200725062431-04'00'"",
'PXCViewerInfo': 'PDF-XChange Viewer;2.5.312.1;Feb
9 '
"
4474,source/pymupdf.pdf,"""2015;12:00:06;D:20200725062431-04'00'"",
"
4475,source/pymupdf.pdf,"'Producer': 'macOS Version 10.15.6 (Build 19G71a) Quartz PDFContext, '
"
4476,source/pymupdf.pdf,"'AppendMode 1.1',
"
4477,source/pymupdf.pdf,"(continues on next page)
"
4478,source/pymupdf.pdf,"148
Chapter 16. Low-Level Interfaces
"
4479,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4480,source/pymupdf.pdf,"(continued from previous page)
"
4481,source/pymupdf.pdf,"'Title': 'Full page fax print',
'mykey': ' is Beijing'}
"
4482,source/pymupdf.pdf,"To delete selected keys, use doc.xref_set_key(xref, ""mykey"", ""null""). As explained in the next section, string
“null” is the PDF equivalent to Python’s None. A key with that value will be treated as not being specified – and
physically removed in garbage collections.
"
4483,source/pymupdf.pdf,"16.8 How to Read and Update PDF Objects
"
4484,source/pymupdf.pdf,"There also exist granular, elegant ways to access and manipulate selected PDF dictionary keys.
"
4485,source/pymupdf.pdf,"• Document.xref_get_keys() returns the PDF keys of the object at xref:
"
4486,source/pymupdf.pdf,"In [1]: import fitz
In [2]: doc = fitz.open(""pymupdf.pdf"")
In [3]: page = doc[0]
In [4]: from pprint import pprint
In [5]: pprint(doc.xref_get_keys(page.xref))
('Type', 'Contents', 'Resources', 'MediaBox', 'Parent')
"
4487,source/pymupdf.pdf,"• Compare with the full object definition:
"
4488,source/pymupdf.pdf,"In [6]: print(doc.xref_object(page.xref))
<<
"
4489,source/pymupdf.pdf,"/Type /Page
/Contents 1297 0 R
/Resources 1296 0 R
/MediaBox [ 0 0 612 792 ]
/Parent 1301 0 R
"
4490,source/pymupdf.pdf,">>
"
4491,source/pymupdf.pdf,"• Single keys can also be accessed directly via Document.xref_get_key(). The value always is a string together
with type information, that helps with interpreting it:
"
4492,source/pymupdf.pdf,"In [7]: doc.xref_get_key(page.xref, ""MediaBox"")
Out[7]: ('array', '[0 0 612 792]')
"
4493,source/pymupdf.pdf,"• Here is a full listing of the above page keys:
"
4494,source/pymupdf.pdf,"In [9]: for key in doc.xref_get_keys(page.xref):
...:
print(""%s = %s"" % (key, doc.xref_get_key(page.xref, key)))
"
4495,source/pymupdf.pdf,"...:
Type = ('name', '/Page')
Contents = ('xref', '1297 0 R')
Resources = ('xref', '1296 0 R')
MediaBox = ('array', '[0 0 612 792]')
Parent = ('xref', '1301 0 R')
"
4496,source/pymupdf.pdf,"• An undefined key inquiry returns ('null', 'null') – PDF object type null corresponds to None in Python.
Similar for the booleans true and false.
"
4497,source/pymupdf.pdf,"16.8. How to Read and Update PDF Objects
149
"
4498,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4499,source/pymupdf.pdf,"• Let us add a new key to the page definition that sets its rotation to 90 degrees (you are aware that there actually
exists Page.set_rotation() for this?):
"
4500,source/pymupdf.pdf,"In [11]: doc.xref_get_key(page.xref, ""Rotate"")
# no rotation set:
"
4501,source/pymupdf.pdf,"Out[11]: ('null', 'null')
In [12]: doc.xref_set_key(page.xref, ""Rotate"", ""90"")
# insert a new key
"
4502,source/pymupdf.pdf,"In [13]: print(doc.xref_object(page.xref))
# confirm success
"
4503,source/pymupdf.pdf,"<<
"
4504,source/pymupdf.pdf,"/Type /Page
/Contents 1297 0 R
/Resources 1296 0 R
/MediaBox [ 0 0 612 792 ]
/Parent 1301 0 R
/Rotate 90
"
4505,source/pymupdf.pdf,">>
"
4506,source/pymupdf.pdf,"• This method can also be used to remove a key from the xref dictionary by setting its value to null: The fol-
lowing will remove the rotation specification from the page: doc.xref_set_key(page.xref, ""Rotate"",
""null""). Similarly, to remove all links, annotations and fields from a page, use doc.xref_set_key(page.
xref, ""Annots"", ""null""). Because Annots by definition is an array, setting en empty array with the state-
ment doc.xref_set_key(page.xref, ""Annots"", ""[]"") would do the same job in this case.
"
4507,source/pymupdf.pdf,"• PDF dictionaries can be hierarchically nested. In the following page object definition both, Font and XObject
are subdictionaries of Resources:
"
4508,source/pymupdf.pdf,"In [15]: print(doc.xref_object(page.xref))
<<
"
4509,source/pymupdf.pdf,"/Type /Page
/Contents 1297 0 R
/Resources <<
"
4510,source/pymupdf.pdf,"/XObject <<
"
4511,source/pymupdf.pdf,"/Im1 1291 0 R
"
4512,source/pymupdf.pdf,">>
/Font <<
"
4513,source/pymupdf.pdf,"/F39 1299 0 R
/F40 1300 0 R
"
4514,source/pymupdf.pdf,">>
"
4515,source/pymupdf.pdf,">>
/MediaBox [ 0 0 612 792 ]
/Parent 1301 0 R
/Rotate 90
"
4516,source/pymupdf.pdf,">>
"
4517,source/pymupdf.pdf,"• The above situation is supported by methods Document.xref_set_key() and Document.xref_get_key():
use a path-like notation to point at the required key. For example, to retrieve the value of key Im1 above, specify
the complete chain of dictionaries “above” it in the key argument: ""Resources/XObject/Im1"":
"
4518,source/pymupdf.pdf,"In [16]: doc.xref_get_key(page.xref, ""Resources/XObject/Im1"")
Out[16]: ('xref', '1291 0 R')
"
4519,source/pymupdf.pdf,"• The path notation can also be used to directly set a value: use the following to let Im1 point to a different object:
"
4520,source/pymupdf.pdf,"In [17]: doc.xref_set_key(page.xref, ""Resources/XObject/Im1"", ""9999 0 R"")
In [18]: print(doc.xref_object(page.xref))
# confirm success:
"
4521,source/pymupdf.pdf,"<<
"
4522,source/pymupdf.pdf,"(continues on next page)
"
4523,source/pymupdf.pdf,"150
Chapter 16. Low-Level Interfaces
"
4524,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4525,source/pymupdf.pdf,"(continued from previous page)
"
4526,source/pymupdf.pdf,"/Type /Page
/Contents 1297 0 R
/Resources <<
"
4527,source/pymupdf.pdf,"/XObject <<
"
4528,source/pymupdf.pdf,"/Im1 9999 0 R
"
4529,source/pymupdf.pdf,">>
/Font <<
"
4530,source/pymupdf.pdf,"/F39 1299 0 R
/F40 1300 0 R
"
4531,source/pymupdf.pdf,">>
"
4532,source/pymupdf.pdf,">>
/MediaBox [ 0 0 612 792 ]
/Parent 1301 0 R
/Rotate 90
"
4533,source/pymupdf.pdf,">>
"
4534,source/pymupdf.pdf,"Be aware, that no semantic checks whatsoever will take place here: if the PDF has no xref 9999, it won’t be
detected at this point.
"
4535,source/pymupdf.pdf,"• If a key does not exist, it will be created by setting its value. Moreover, if any intermediate keys do not exist
either, they will also be created as necessary. The following creates an array D several levels below the existing
dictionary A. Intermediate dictionaries B and C are automatically created:
"
4536,source/pymupdf.pdf,"In [5]: print(doc.xref_object(xref))
# some existing PDF object:
"
4537,source/pymupdf.pdf,"<<
"
4538,source/pymupdf.pdf,"/A <<
>>
"
4539,source/pymupdf.pdf,">>
In [6]: # the following will create 'B', 'C' and 'D'
In [7]: doc.xref_set_key(xref, ""A/B/C/D"", ""[1 2 3 4]"")
In [8]: print(doc.xref_object(xref))
# check out what happened:
"
4540,source/pymupdf.pdf,"<<
"
4541,source/pymupdf.pdf,"/A <<
"
4542,source/pymupdf.pdf,"/B <<
"
4543,source/pymupdf.pdf,"/C <<
"
4544,source/pymupdf.pdf,"/D [ 1 2 3 4 ]
"
4545,source/pymupdf.pdf,">>
"
4546,source/pymupdf.pdf,">>
"
4547,source/pymupdf.pdf,">>
"
4548,source/pymupdf.pdf,">>
"
4549,source/pymupdf.pdf,"• When setting key values, basic PDF syntax checking will be done by MuPDF. For example, new keys can only
be created below a dictionary. The following tries to create some new string item E below the previously created
array D:
"
4550,source/pymupdf.pdf,"In [9]: # 'D' is an array, no dictionary!
In [10]: doc.xref_set_key(xref, ""A/B/C/D/E"", ""(hello)"")
mupdf: not a dict (array)
--- ... ---
RuntimeError: not a dict (array)
"
4551,source/pymupdf.pdf,"• It is also not possible, to create a key if some higher level key is an “indirect” object, i.e. an xref. In other
words, xrefs can only be modified directly and not implicitly via other objects referencing them:
"
4552,source/pymupdf.pdf,"16.8. How to Read and Update PDF Objects
151
"
4553,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4554,source/pymupdf.pdf,"In [13]: # the following object points to an xref
In [14]: print(doc.xref_object(4))
<<
"
4555,source/pymupdf.pdf,"/E 3 0 R
"
4556,source/pymupdf.pdf,">>
In [15]: # 'E' is an indirect object and cannot be modified here!
In [16]: doc.xref_set_key(4, ""E/F"", ""90"")
mupdf: path to 'F' has indirects
--- ... ---
RuntimeError: path to 'F' has indirects
"
4557,source/pymupdf.pdf,"Caution:
These are expert functions! There are no validations as to whether valid PDF objects, xrefs, etc. are
specified. As with other low-level methods there is the risk to render the PDF, or parts of it unusable.
"
4558,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
4559,source/pymupdf.pdf,"152
Chapter 16. Low-Level Interfaces
"
4560,source/pymupdf.pdf,"CHAPTER
"
4561,source/pymupdf.pdf,"SEVENTEEN
"
4562,source/pymupdf.pdf,"COMMON ISSUES AND THEIR SOLUTIONS
"
4563,source/pymupdf.pdf,"17.1 How To Dynamically Clean Up Corrupt PDFs
"
4564,source/pymupdf.pdf,"This shows a potential use of PyMuPDF with another Python PDF library (the excellent pure Python package pdfrw
is used here as an example).
"
4565,source/pymupdf.pdf,"If a clean, non-corrupt / decompressed PDF is needed, one could dynamically invoke PyMuPDF to recover from many
problems like so:
"
4566,source/pymupdf.pdf,"import sys
from io import BytesIO
from pdfrw import PdfReader
import fitz
"
4567,source/pymupdf.pdf,"#---------------------------------------
# 'Tolerant' PDF reader
#---------------------------------------
def reader(fname, password = None):
idata = open(fname, ""rb"").read()
# read the PDF into memory and
"
4568,source/pymupdf.pdf,"ibuffer = BytesIO(idata)
# convert to stream
"
4569,source/pymupdf.pdf,"if password is None:
"
4570,source/pymupdf.pdf,"try:
"
4571,source/pymupdf.pdf,"return PdfReader(ibuffer)
# if this works: fine!
"
4572,source/pymupdf.pdf,"except:
"
4573,source/pymupdf.pdf,"pass
"
4574,source/pymupdf.pdf,"# either we need a password or it is a problem-PDF
# create a repaired / decompressed / decrypted version
doc = fitz.open(""pdf"", ibuffer)
if password is not None:
# decrypt if password provided
"
4575,source/pymupdf.pdf,"rc = doc.authenticate(password)
if not rc > 0:
"
4576,source/pymupdf.pdf,"raise ValueError(""wrong password"")
c = doc.tobytes(garbage=3, deflate=True)
del doc
# close & delete doc
"
4577,source/pymupdf.pdf,"return PdfReader(BytesIO(c))
# let pdfrw retry
"
4578,source/pymupdf.pdf,"#---------------------------------------
# Main program
#---------------------------------------
pdf = reader(""pymupdf.pdf"", password = None) # include a password if necessary
"
4579,source/pymupdf.pdf,"(continues on next page)
"
4580,source/pymupdf.pdf,"153
"
4581,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4582,source/pymupdf.pdf,"(continued from previous page)
"
4583,source/pymupdf.pdf,"print pdf.Info
# do further processing
"
4584,source/pymupdf.pdf,"With the command line utility pdftk (available for Windows only, but reported to also run under Wine) a similar result
can be achieved, see here. However, you must invoke it as a separate process via subprocess.Popen, using stdin and
stdout as communication vehicles.
"
4585,source/pymupdf.pdf,"17.2 How to Convert Any Document to PDF
"
4586,source/pymupdf.pdf,"Here is a script that converts any PyMuPDF supported document to a PDF. These include XPS, EPUB, FB2, CBZ and
image formats, including multi-page TIFF images.
"
4587,source/pymupdf.pdf,"It features maintaining any metadata, table of contents and links contained in the source document:
"
4588,source/pymupdf.pdf,"""""""
Demo script: Convert input file to a PDF
-----------------------------------------
Intended for multi-page input files like XPS, EPUB etc.
"
4589,source/pymupdf.pdf,"Features:
---------
Recovery of table of contents and links of input file.
While this works well for bookmarks (outlines, table of contents),
links will only work if they are not of type ""LINK_NAMED"".
This link type is skipped by the script.
"
4590,source/pymupdf.pdf,"For XPS and EPUB input, internal links however **are** of type ""LINK_NAMED"".
Base library MuPDF does not resolve them to page numbers.
"
4591,source/pymupdf.pdf,"So, for anyone expert enough to know the internal structure of these
document types, can further interpret and resolve these link types.
"
4592,source/pymupdf.pdf,"Dependencies
--------------
PyMuPDF v1.14.0+
""""""
import sys
import fitz
if not (list(map(int, fitz.VersionBind.split("".""))) >= [1,14,0]):
"
4593,source/pymupdf.pdf,"raise SystemExit(""need PyMuPDF v1.14.0+"")
fn = sys.argv[1]
"
4594,source/pymupdf.pdf,"print(""Converting '%s' to '%s.pdf'"" % (fn, fn))
"
4595,source/pymupdf.pdf,"doc = fitz.open(fn)
"
4596,source/pymupdf.pdf,"b = doc.convert_to_pdf()
# convert to pdf
"
4597,source/pymupdf.pdf,"pdf = fitz.open(""pdf"", b)
# open as pdf
"
4598,source/pymupdf.pdf,"toc= doc.het_toc()
# table of contents of input
"
4599,source/pymupdf.pdf,"pdf.set_toc(toc)
# simply set it for output
"
4600,source/pymupdf.pdf,"(continues on next page)
"
4601,source/pymupdf.pdf,"154
Chapter 17. Common Issues and their Solutions
"
4602,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4603,source/pymupdf.pdf,"(continued from previous page)
"
4604,source/pymupdf.pdf,"meta = doc.metadata
# read and set metadata
"
4605,source/pymupdf.pdf,"if not meta[""producer""]:
meta[""producer""] = ""PyMuPDF v"" + fitz.VersionBind
"
4606,source/pymupdf.pdf,"if not meta[""creator""]:
meta[""creator""] = ""PyMuPDF PDF converter""
"
4607,source/pymupdf.pdf,"meta[""modDate""] = fitz.get_pdf_now()
meta[""creationDate""] = meta[""modDate""]
pdf.set_metadata(meta)
"
4608,source/pymupdf.pdf,"# now process the links
link_cnti = 0
link_skip = 0
for pinput in doc:
# iterate through input pages
"
4609,source/pymupdf.pdf,"links = pinput.get_links()
# get list of links
"
4610,source/pymupdf.pdf,"link_cnti += len(links)
# count how many
"
4611,source/pymupdf.pdf,"pout = pdf[pinput.number]
# read corresp. output page
"
4612,source/pymupdf.pdf,"for l in links:
# iterate though the links
"
4613,source/pymupdf.pdf,"if l[""kind""] == fitz.LINK_NAMED:
# we do not handle named links
"
4614,source/pymupdf.pdf,"print(""named link page"", pinput.number, l)
link_skip += 1
# count them
"
4615,source/pymupdf.pdf,"continue
"
4616,source/pymupdf.pdf,"pout.insert_link(l)
# simply output the others
"
4617,source/pymupdf.pdf,"# save the conversion result
pdf.save(fn + "".pdf"", garbage=4, deflate=True)
# say how many named links we skipped
if link_cnti > 0:
"
4618,source/pymupdf.pdf,"print(""Skipped %i named links of a total of %i in input."" % (link_skip, link_cnti))
"
4619,source/pymupdf.pdf,"17.3 How to Deal with Messages Issued by MuPDF
"
4620,source/pymupdf.pdf,"Since PyMuPDF v1.16.0, error messages issued by the underlying MuPDF library are being redirected to the Python
standard device sys.stderr. So you can handle them like any other output going to this devices.
"
4621,source/pymupdf.pdf,"In addition, these messages go to the internal buffer together with any MuPDF warnings – see below.
"
4622,source/pymupdf.pdf,"We always prefix these messages with an identifying string “mupdf:”. If you prefer to not see recoverable MuPDF
errors at all, issue the command fitz.TOOLS.mupdf_display_errors(False).
"
4623,source/pymupdf.pdf,"MuPDF warnings continue to be stored in an internal buffer and can be viewed using Tools.mupdf_warnings().
"
4624,source/pymupdf.pdf,"Please note that MuPDF errors may or may not lead to Python exceptions. In other words, you may see error messages
from which MuPDF can recover and continue processing.
"
4625,source/pymupdf.pdf,"Example output for a recoverable error. We are opening a damaged PDF, but MuPDF is able to repair it and gives
us a little information on what happened. Then we illustrate how to find out whether the document can later be saved
incrementally. Checking the Document.is_dirty attribute at this point also indicates that during fitz.open the
document had to be repaired:
"
4626,source/pymupdf.pdf,">>> import fitz
>>> doc = fitz.open(""damaged-file.pdf"")
# leads to a sys.stderr message:
"
4627,source/pymupdf.pdf,"(continues on next page)
"
4628,source/pymupdf.pdf,"17.3. How to Deal with Messages Issued by MuPDF
155
"
4629,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4630,source/pymupdf.pdf,"(continued from previous page)
"
4631,source/pymupdf.pdf,"mupdf: cannot find startxref
>>> print(fitz.TOOLS.mupdf_warnings())
# check if there is more info:
"
4632,source/pymupdf.pdf,"cannot find startxref
trying to repair broken xref
repairing PDF document
object missing 'endobj' token
>>> doc.can_save_incrementally()
# this is to be expected:
"
4633,source/pymupdf.pdf,"False
>>> # the following indicates whether there are updates so far
>>> # this is the case because of the repair actions:
>>> doc.is_dirty
True
>>> # the document has nevertheless been created:
>>> doc
fitz.Document('damaged-file.pdf')
>>> # we now know that any save must occur to a new file
"
4634,source/pymupdf.pdf,"Example output for an unrecoverable error:
"
4635,source/pymupdf.pdf,">>> import fitz
>>> doc = fitz.open(""does-not-exist.pdf"")
mupdf: cannot open does-not-exist.pdf: No such file or directory
Traceback (most recent call last):
"
4636,source/pymupdf.pdf,"File ""<pyshell#1>"", line 1, in <module>
"
4637,source/pymupdf.pdf,"doc = fitz.open(""does-not-exist.pdf"")
File ""C:\\Users\\Jorj\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\fitz\\fitz.
"
4638,source/pymupdf.pdf,"˓→py"", line 2200, in __init__
"
4639,source/pymupdf.pdf,"_fitz.Document_swiginit(self, _fitz.new_Document(filename, stream, filetype, rect,␣
"
4640,source/pymupdf.pdf,"˓→width, height, fontsize))
RuntimeError: cannot open does-not-exist.pdf: No such file or directory
>>>
"
4641,source/pymupdf.pdf,"17.4 Changing Annotations: Unexpected Behaviour
"
4642,source/pymupdf.pdf,"17.4.1 Problem
"
4643,source/pymupdf.pdf,"There are two scenarios:
"
4644,source/pymupdf.pdf,"1. Updating an annotation with PyMuPDF which was created by some other software.
"
4645,source/pymupdf.pdf,"2. Creating an annotation with PyMuPDF and later changing it with some other software.
"
4646,source/pymupdf.pdf,"In both cases you may experience unintended changes, like a different annotation icon or text font, the fill color or line
dashing have disappeared, line end symbols have changed their size or even have disappeared too, etc.
"
4647,source/pymupdf.pdf,"156
Chapter 17. Common Issues and their Solutions
"
4648,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4649,source/pymupdf.pdf,"17.4.2 Cause
"
4650,source/pymupdf.pdf,"Annotation maintenance is handled differently by each PDF maintenance application. Some annotation types may not
be supported, or not be supported fully or some details may be handled in a different way than in another application.
There is no standard.
"
4651,source/pymupdf.pdf,"Almost always a PDF application also comes with its own icons (file attachments, sticky notes and stamps) and its own
set of supported text fonts. For example:
"
4652,source/pymupdf.pdf,"• (Py-) MuPDF only supports these 5 basic fonts for ‘FreeText’ annotations: Helvetica, Times-Roman, Courier,
ZapfDingbats and Symbol – no italics / no bold variations. When changing a ‘FreeText’ annotation created by
some other app, its font will probably not be recognized nor accepted and be replaced by Helvetica.
"
4653,source/pymupdf.pdf,"• PyMuPDF supports all PDF text markers (highlight, underline, strikeout, squiggly), but these types cannot be
updated with Adobe Acrobat Reader.
"
4654,source/pymupdf.pdf,"In most cases there also exists limited support for line dashing which causes existing dashes to be replaced by straight
lines. For example:
"
4655,source/pymupdf.pdf,"• PyMuPDF fully supports all line dashing forms, while other viewers only accept a limited subset.
"
4656,source/pymupdf.pdf,"17.4.3 Solutions
"
4657,source/pymupdf.pdf,"Unfortunately there is not much you can do in most of these cases.
"
4658,source/pymupdf.pdf,"1. Stay with the same software for creating and changing an annotation.
"
4659,source/pymupdf.pdf,"2. When using PyMuPDF to change an “alien” annotation, try to avoid Annot.update(). The following methods
can be used without it, so that the original appearance should be maintained:
"
4660,source/pymupdf.pdf,"• Annot.set_rect() (location changes)
"
4661,source/pymupdf.pdf,"• Annot.set_flags() (annotation behaviour)
"
4662,source/pymupdf.pdf,"• Annot.set_info() (meta information, except changes to content)
"
4663,source/pymupdf.pdf,"• Annot.set_popup() (create popup or change its rect)
"
4664,source/pymupdf.pdf,"• Annot.set_optional_content() (add / remove reference to optional content information)
"
4665,source/pymupdf.pdf,"• Annot.set_open()
"
4666,source/pymupdf.pdf,"• Annot.update_file() (file attachment changes)
"
4667,source/pymupdf.pdf,"17.5 Misplaced Item Insertions on PDF Pages
"
4668,source/pymupdf.pdf,"17.5.1 Problem
"
4669,source/pymupdf.pdf,"You inserted an item (like an image, an annotation or some text) on an existing PDF page, but later you find it being
placed at a different location than intended. For example an image should be inserted at the top, but it unexpectedly
appears near the bottom of the page.
"
4670,source/pymupdf.pdf,"17.5. Misplaced Item Insertions on PDF Pages
157
"
4671,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4672,source/pymupdf.pdf,"17.5.2 Cause
"
4673,source/pymupdf.pdf,"The creator of the PDF has established a non-standard page geometry without keeping it “local” (as they should!). Most
commonly, the PDF standard point (0,0) at bottom-left has been changed to the top-left point. So top and bottom are
reversed – causing your insertion to be misplaced.
"
4674,source/pymupdf.pdf,"The visible image of a PDF page is controlled by commands coded in a special mini-language. For an overview of
this language consult “Operator Summary” on pp. 643 of the Adobe PDF References. These commands are stored in
contents objects as strings (bytes in PyMuPDF).
"
4675,source/pymupdf.pdf,"There are commands in that language, which change the coordinate system of the page for all the following commands.
In order to limit the scope of such commands to “local”, they must be wrapped by the command pair q (“save graphics
state”, or “stack”) and Q (“restore graphics state”, or “unstack”).
"
4676,source/pymupdf.pdf,"So the PDF creator did this:
"
4677,source/pymupdf.pdf,"stream
1 0 0 -1 0 792 cm
% <=== change of coordinate system:
...
% letter page, top / bottom reversed
...
% remains active beyond these lines
endstream
"
4678,source/pymupdf.pdf,"where they should have done this:
"
4679,source/pymupdf.pdf,"stream
q
% put the following in a stack
1 0 0 -1 0 792 cm
% <=== scope of this is limited by Q command
...
% here, a different geometry exists
Q
% after this line, geometry of outer scope prevails
endstream
"
4680,source/pymupdf.pdf,"Note:
"
4681,source/pymupdf.pdf,"• In the mini-language’s syntax, spaces and line breaks are equally accepted token delimiters.
"
4682,source/pymupdf.pdf,"• Multiple consecutive delimiters are treated as one.
"
4683,source/pymupdf.pdf,"• Keywords “stream” and “endstream” are inserted automatically – not by the programmer.
"
4684,source/pymupdf.pdf,"17.5.3 Solutions
"
4685,source/pymupdf.pdf,"Since v1.16.0, there is the property Page.is_wrapped, which lets you check whether a page’s contents are wrapped
in that string pair.
"
4686,source/pymupdf.pdf,"If it is False or if you want to be on the safe side, pick one of the following:
"
4687,source/pymupdf.pdf,"1. The easiest way: in your script, do a Page.clean_contents() before you do your first item insertion.
"
4688,source/pymupdf.pdf,"2. Pre-process your PDF with the MuPDF command line utility mutool clean -c ... and work with its output file
instead.
"
4689,source/pymupdf.pdf,"3. Directly wrap the page’s contents with the stacking commands before you do your first item insertion.
"
4690,source/pymupdf.pdf,"Solutions 1. and 2. use the same technical basis and do a lot more than what is required in this context: they also
clean up other inconsistencies or redundancies that may exist, multiple /Contents objects will be concatenated into one,
and much more.
"
4691,source/pymupdf.pdf,"158
Chapter 17. Common Issues and their Solutions
"
4692,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4693,source/pymupdf.pdf,"Note:
For incremental saves, solution 1. has an unpleasant implication: it will bloat the update delta, because
it changes so many things and, in addition, stores the cleaned contents uncompressed.
So, if you use Page.
clean_contents() you should consider saving to a new file with (at least) garbage=3 and deflate=True.
"
4694,source/pymupdf.pdf,"Solution 3. is completely under your control and only does the minimum corrective action. There is a handy utility
method Page.wrap_contents() which – as twe name suggests – wraps the page’s contents object(s) by the PDF
commands q and Q.
"
4695,source/pymupdf.pdf,"This solution is extremely fast and the changes to the PDF are minimal. This is useful in situations where incrementally
saving the file is desirable – or even a must when the PDF has been digitally signed and you cannot change this status.
"
4696,source/pymupdf.pdf,"We recommend the following snippet to get the situation under control:
"
4697,source/pymupdf.pdf,">>> if not page.is_wrapped:
"
4698,source/pymupdf.pdf,"page.wrap_contents()
"
4699,source/pymupdf.pdf,">>> # start inserting text, images and other objects here
"
4700,source/pymupdf.pdf,"17.6 Missing or Unreadable Extracted Text
"
4701,source/pymupdf.pdf,"Fairly often, text extraction does not work text as you would expect: text may be missing, or may not appear in the
reading sequence visible on your screen, or contain garbled characters (like a ? or a “TOFU” symbol), etc. This can
be caused by a number of different problems.
"
4702,source/pymupdf.pdf,"17.6.1 Problem: no text is extracted
"
4703,source/pymupdf.pdf,"Your PDF viewer does display text, but you cannot select it with your cursor, and text extraction delivers nothing.
"
4704,source/pymupdf.pdf,"17.6.2 Cause
"
4705,source/pymupdf.pdf,"1. You may be looking at an image embedded in the PDF page (e.g. a scanned PDF).
"
4706,source/pymupdf.pdf,"2. The PDF creator used no font, but simulated text by painting it, using little lines and curves. E.g. a capital “D”
could be painted by a line “|” and a left-open semi-circle, an “o” by an ellipse, and so on.
"
4707,source/pymupdf.pdf,"17.6.3 Solution
"
4708,source/pymupdf.pdf,"Use an OCR software like OCRmyPDF to insert a hidden text layer underneath the visible page. The resulting PDF
should behave as expected.
"
4709,source/pymupdf.pdf,"17.6.4 Problem: unreadable text
"
4710,source/pymupdf.pdf,"Text extraction does not deliver the text in readable order, duplicates some text, or is otherwise garbled.
"
4711,source/pymupdf.pdf,"17.6. Missing or Unreadable Extracted Text
159
"
4712,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4713,source/pymupdf.pdf,"17.6.5 Cause
"
4714,source/pymupdf.pdf,"1. The single characters are readable as such (no “<?>” symbols), but the sequence in which the text is coded in
the file deviates from the reading order. The motivation behind may be technical or protection of data against
unwanted copies.
"
4715,source/pymupdf.pdf,"2. Many “<?>” symbols occur, indicating MuPDF could not interpret these characters. The font may indeed be
unsupported by MuPDF, or the PDF creator may haved used a font that displays readable text, but on purpose
obfuscates the originating corresponding unicode character.
"
4716,source/pymupdf.pdf,"17.6.6 Solution
"
4717,source/pymupdf.pdf,"1. Use layout preserving text extraction: python -m fitz gettext file.pdf.
"
4718,source/pymupdf.pdf,"2. If other text extraction tools also don’t work, then the only solution again is OCRing the page.
"
4719,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
4720,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
4721,source/pymupdf.pdf,"160
Chapter 17. Common Issues and their Solutions
"
4722,source/pymupdf.pdf,"CHAPTER
"
4723,source/pymupdf.pdf,"EIGHTEEN
"
4724,source/pymupdf.pdf,"MODULE FITZ
"
4725,source/pymupdf.pdf,"• New in version 1.16.8
"
4726,source/pymupdf.pdf,"PyMuPDF can also be used in the command line as a module to perform utility functions. This feature should obsolete
writing some of the most basic scripts.
"
4727,source/pymupdf.pdf,"Admittedly, there is some functional overlap with the MuPDF CLI mutool. On the other hand, PDF embedded files
are no longer supported by MuPDF, so PyMuPDF is offering something unique here.
"
4728,source/pymupdf.pdf,"18.1 Invocation
"
4729,source/pymupdf.pdf,"Invoke the module like this:
"
4730,source/pymupdf.pdf,"python -m fitz <command and parameters>
"
4731,source/pymupdf.pdf,"General remarks:
"
4732,source/pymupdf.pdf,"• Request help via ""-h"", resp. command-specific help via ""command -h"".
"
4733,source/pymupdf.pdf,"• Parameters may be abbreviated where this does not introduce ambiguities.
"
4734,source/pymupdf.pdf,"• Several commands support parameters -pages and -xrefs. They are intended for down-selection. Please note
that:
"
4735,source/pymupdf.pdf,"– page numbers for this utility must be given 1-based.
"
4736,source/pymupdf.pdf,"– valid xref numbers start at 1.
"
4737,source/pymupdf.pdf,"– Specify a comma-separated list of either single integers or integer ranges. A range is a pair of integers
separated by one hyphen “-”. Integers must not exceed the maximum page, resp. xref number. To specify
that maximum, the symbolic variable “N” may be used. Integers or ranges may occur several times, in any
sequence and may overlap. If in a range the first number is greater than the second one, the respective items
will be processed in reversed order.
"
4738,source/pymupdf.pdf,"• How to use the module inside your script:
"
4739,source/pymupdf.pdf,">>> from fitz.__main__ import main as fitz_command
>>> cmd = ""clean input.pdf output.pdf -pages 1,N"".split()
# prepare command line
"
4740,source/pymupdf.pdf,">>> saved_parms = sys.argv[1:]
# save original command line
"
4741,source/pymupdf.pdf,">>> sys.argv[1:] = cmd
# store new command line
"
4742,source/pymupdf.pdf,">>> fitz_command()
# execute module
"
4743,source/pymupdf.pdf,">>> sys.argv[1:] = saved_parms
# restore original command line
"
4744,source/pymupdf.pdf,"161
"
4745,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4746,source/pymupdf.pdf,"• Use the following 2-liner and compile it with Nuitka in standalone mode. This will give you a CLI executable
with all the module’s features, that can be used on all compatible platforms without Python, PyMuPDF or MuPDF
being installed.
"
4747,source/pymupdf.pdf,"from fitz.__main__ import main
main()
"
4748,source/pymupdf.pdf,"18.2 Cleaning and Copying
"
4749,source/pymupdf.pdf,"This command will optimize the PDF and store the result in a new file. You can use it also for encryption, decryption
and creating sub documents. It is mostly similar to the MuPDF command line utility “mutool clean”:
"
4750,source/pymupdf.pdf,"python -m fitz clean -h
usage: fitz clean [-h] [-password PASSWORD]
[-encryption {keep,none,rc4-40,rc4-128,aes-128,aes-256}]
[-owner OWNER] [-user USER] [-garbage {0,1,2,3,4}]
[-compress] [-ascii] [-linear] [-permission PERMISSION]
[-sanitize] [-pretty] [-pages PAGES]
input output
"
4751,source/pymupdf.pdf,"-------------- optimize PDF or create sub-PDF if pages given --------------
"
4752,source/pymupdf.pdf,"positional arguments:
input
PDF filename
output
output PDF filename
"
4753,source/pymupdf.pdf,"optional arguments:
-h, --help
show this help message and exit
-password PASSWORD
password
-encryption {keep,none,rc4-40,rc4-128,aes-128,aes-256}
encryption method
-owner OWNER
owner password
-user USER
user password
-garbage {0,1,2,3,4}
garbage collection level
-compress
compress (deflate) output
-ascii
ASCII encode binary data
-linear
format for fast web display
-permission PERMISSION
integer with permission levels
-sanitize
sanitize / clean contents
-pretty
prettify PDF structure
-pages PAGES
output selected pages, format: 1,5-7,50-N
"
4754,source/pymupdf.pdf,"If you specify “-pages”, be aware that only page-related objects are copied, no document-level items like e.g. embedded
files.
"
4755,source/pymupdf.pdf,"Please consult Document.save() for the parameter meanings.
"
4756,source/pymupdf.pdf,"162
Chapter 18. Module fitz
"
4757,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4758,source/pymupdf.pdf,"18.3 Extracting Fonts and Images
"
4759,source/pymupdf.pdf,"Extract fonts or images from selected PDF pages to a desired directory:
"
4760,source/pymupdf.pdf,"python -m fitz extract -h
usage: fitz extract [-h] [-images] [-fonts] [-output OUTPUT] [-password PASSWORD]
[-pages PAGES]
input
"
4761,source/pymupdf.pdf,"--------------------- extract images and fonts to disk --------------------
"
4762,source/pymupdf.pdf,"positional arguments:
input
PDF filename
"
4763,source/pymupdf.pdf,"optional arguments:
-h, --help
show this help message and exit
-images
extract images
-fonts
extract fonts
-output OUTPUT
output directory, defaults to current
-password PASSWORD
password
-pages PAGES
only consider these pages, format: 1,5-7,50-N
"
4764,source/pymupdf.pdf,"Image filenames are built according to the naming scheme: “img-xref.ext”, where “ext” is the extension associated
with the image and “xref” the xref of the image PDF object.
"
4765,source/pymupdf.pdf,"Font filenames consist of the fontname and the associated extension. Any spaces in the fontname are replaced with
hyphens “-“.
"
4766,source/pymupdf.pdf,"The output directory must already exist.
"
4767,source/pymupdf.pdf,"Note: Except for output directory creation, this feature is functionally equivalent to and obsoletes this script.
"
4768,source/pymupdf.pdf,"18.4 Joining PDF Documents
"
4769,source/pymupdf.pdf,"To join several PDF files specify:
"
4770,source/pymupdf.pdf,"python -m fitz join -h
usage: fitz join [-h] -output OUTPUT [input [input ...]]
"
4771,source/pymupdf.pdf,"---------------------------- join PDF documents ---------------------------
"
4772,source/pymupdf.pdf,"positional arguments:
input
input filenames
"
4773,source/pymupdf.pdf,"optional arguments:
-h, --help
show this help message and exit
-output OUTPUT
output filename
"
4774,source/pymupdf.pdf,"specify each input as 'filename[,password[,pages]]'
"
4775,source/pymupdf.pdf,"Note:
"
4776,source/pymupdf.pdf,"18.3. Extracting Fonts and Images
163
"
4777,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4778,source/pymupdf.pdf,"1. Each input must be entered as “filename,password,pages”. Password and pages are optional.
"
4779,source/pymupdf.pdf,"2. The password entry is required if the “pages” entry is used. If the PDF needs no password, specify two commas.
"
4780,source/pymupdf.pdf,"3. The “pages” format is the same as explained at the top of this section.
"
4781,source/pymupdf.pdf,"4. Each input file is immediately closed after use. Therefore you can use one of them as output filename, and thus
overwrite it.
"
4782,source/pymupdf.pdf,"Example: To join the following files
"
4783,source/pymupdf.pdf,"1. file1.pdf: all pages, back to front, no password
"
4784,source/pymupdf.pdf,"2. file2.pdf: last page, first page, password: “secret”
"
4785,source/pymupdf.pdf,"3. file3.pdf: pages 5 to last, no password
"
4786,source/pymupdf.pdf,"and store the result as output.pdf enter this command:
"
4787,source/pymupdf.pdf,"python -m fitz join -o output.pdf file1.pdf„N-1 file2.pdf,secret,N,1 file3.pdf„5-N
"
4788,source/pymupdf.pdf,"18.5 Low Level Information
"
4789,source/pymupdf.pdf,"Display PDF internal information. Again, there are similarities to “mutool show”:
"
4790,source/pymupdf.pdf,"python -m fitz show -h
usage: fitz show [-h] [-password PASSWORD] [-catalog] [-trailer] [-metadata]
[-xrefs XREFS] [-pages PAGES]
input
"
4791,source/pymupdf.pdf,"------------------------- display PDF information -------------------------
"
4792,source/pymupdf.pdf,"positional arguments:
input
PDF filename
"
4793,source/pymupdf.pdf,"optional arguments:
-h, --help
show this help message and exit
-password PASSWORD
password
-catalog
show PDF catalog
-trailer
show PDF trailer
-metadata
show PDF metadata
-xrefs XREFS
show selected objects, format: 1,5-7,N
-pages PAGES
show selected pages, format: 1,5-7,50-N
"
4794,source/pymupdf.pdf,"Examples:
"
4795,source/pymupdf.pdf,"python -m fitz show x.pdf
PDF is password protected
"
4796,source/pymupdf.pdf,"python -m fitz show x.pdf -pass hugo
authentication unsuccessful
"
4797,source/pymupdf.pdf,"python -m fitz show x.pdf -pass jorjmckie
authenticated as owner
file 'x.pdf', pages: 1, objects: 19, 58 MB, PDF 1.4, encryption: Standard V5 R6 256-bit␣
"
4798,source/pymupdf.pdf,"(continues on next page)
"
4799,source/pymupdf.pdf,"164
Chapter 18. Module fitz
"
4800,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4801,source/pymupdf.pdf,"(continued from previous page)
"
4802,source/pymupdf.pdf,"˓→AES
Document contains 15 embedded files.
"
4803,source/pymupdf.pdf,"python -m fitz show FDA-1572_508_R6_FINAL.pdf -tr -m
'FDA-1572_508_R6_FINAL.pdf', pages: 2, objects: 1645, 1.4 MB, PDF 1.6, encryption:␣
"
4804,source/pymupdf.pdf,"˓→Standard V4 R4 128-bit AES
document contains 740 root form fields and is signed
"
4805,source/pymupdf.pdf,"------------------------------- PDF metadata ------------------------------
format: PDF 1.6
title: FORM FDA 1572
author: PSC Publishing Services
subject: Statement of Investigator
keywords: None
creator: PScript5.dll Version 5.2.2
producer: Acrobat Distiller 9.0.0 (Windows)
creationDate: D:20130522104413-04'00'
modDate: D:20190718154905-07'00'
encryption: Standard V4 R4 128-bit AES
"
4806,source/pymupdf.pdf,"------------------------------- PDF trailer -------------------------------
<<
/DecodeParms <<
/Columns 5
/Predictor 12
>>
/Encrypt 1389 0 R
/Filter /FlateDecode
/ID [ <9252E9E39183F2A0B0C51BE557B8A8FC> <85227BE9B84B724E8F678E1529BA8351> ]
/Index [ 1388 258 ]
/Info 1387 0 R
/Length 253
/Prev 1510559
/Root 1390 0 R
/Size 1646
/Type /XRef
/W [ 1 3 1 ]
>>
"
4807,source/pymupdf.pdf,"18.6 Embedded Files Commands
"
4808,source/pymupdf.pdf,"The following commands deal with embedded files – which is a feature completely removed from MuPDF after v1.14,
and hence from all its command line tools.
"
4809,source/pymupdf.pdf,"18.6. Embedded Files Commands
165
"
4810,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4811,source/pymupdf.pdf,"18.6.1 Information
"
4812,source/pymupdf.pdf,"Show the embedded file names (long or short format):
"
4813,source/pymupdf.pdf,"python -m fitz embed-info -h
usage: fitz embed-info [-h] [-name NAME] [-detail] [-password PASSWORD] input
"
4814,source/pymupdf.pdf,"--------------------------- list embedded files ---------------------------
"
4815,source/pymupdf.pdf,"positional arguments:
input
PDF filename
"
4816,source/pymupdf.pdf,"optional arguments:
-h, --help
show this help message and exit
-name NAME
if given, report only this one
-detail
show detail information
-password PASSWORD
password
"
4817,source/pymupdf.pdf,"Example:
"
4818,source/pymupdf.pdf,"python -m fitz embed-info some.pdf
'some.pdf' contains the following 15 embedded files.
"
4819,source/pymupdf.pdf,"20110813_180956_0002.jpg
20110813_181009_0003.jpg
20110813_181012_0004.jpg
20110813_181131_0005.jpg
20110813_181144_0006.jpg
20110813_181306_0007.jpg
20110813_181307_0008.jpg
20110813_181314_0009.jpg
20110813_181315_0010.jpg
20110813_181324_0011.jpg
20110813_181339_0012.jpg
20110813_181913_0013.jpg
insta-20110813_180944_0001.jpg
markiert-20110813_180944_0001.jpg
neue.datei
"
4820,source/pymupdf.pdf,"Detailed output would look like this per entry:
"
4821,source/pymupdf.pdf,"name: neue.datei
filename: text-tester.pdf
ufilename: text-tester.pdf
desc: nur zum Testen!
size: 4639
length: 1566
"
4822,source/pymupdf.pdf,"166
Chapter 18. Module fitz
"
4823,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4824,source/pymupdf.pdf,"18.6.2 Extraction
"
4825,source/pymupdf.pdf,"Extract an embedded file like this:
"
4826,source/pymupdf.pdf,"python -m fitz embed-extract -h
usage: fitz embed-extract [-h] -name NAME [-password PASSWORD] [-output OUTPUT]
input
"
4827,source/pymupdf.pdf,"---------------------- extract embedded file to disk ----------------------
"
4828,source/pymupdf.pdf,"positional arguments:
input
PDF filename
"
4829,source/pymupdf.pdf,"optional arguments:
-h, --help
show this help message and exit
-name NAME
name of entry
-password PASSWORD
password
-output OUTPUT
output filename, default is stored name
"
4830,source/pymupdf.pdf,"For details consult Document.embfile_get(). Example (refer to previous section):
"
4831,source/pymupdf.pdf,"python -m fitz embed-extract some.pdf -name neue.datei
Saved entry 'neue.datei' as 'text-tester.pdf'
"
4832,source/pymupdf.pdf,"18.6.3 Deletion
"
4833,source/pymupdf.pdf,"Delete an embedded file like this:
"
4834,source/pymupdf.pdf,"python -m fitz embed-del -h
usage: fitz embed-del [-h] [-password PASSWORD] [-output OUTPUT] -name NAME input
"
4835,source/pymupdf.pdf,"--------------------------- delete embedded file --------------------------
"
4836,source/pymupdf.pdf,"positional arguments:
input
PDF filename
"
4837,source/pymupdf.pdf,"optional arguments:
-h, --help
show this help message and exit
-password PASSWORD
password
-output OUTPUT
output PDF filename, incremental save if none
-name NAME
name of entry to delete
"
4838,source/pymupdf.pdf,"For details consult Document.embfile_del().
"
4839,source/pymupdf.pdf,"18.6. Embedded Files Commands
167
"
4840,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4841,source/pymupdf.pdf,"18.6.4 Insertion
"
4842,source/pymupdf.pdf,"Add a new embedded file using this command:
"
4843,source/pymupdf.pdf,"python -m fitz embed-add -h
usage: fitz embed-add [-h] [-password PASSWORD] [-output OUTPUT] -name NAME -path
PATH [-desc DESC]
input
"
4844,source/pymupdf.pdf,"---------------------------- add embedded file ----------------------------
"
4845,source/pymupdf.pdf,"positional arguments:
input
PDF filename
"
4846,source/pymupdf.pdf,"optional arguments:
-h, --help
show this help message and exit
-password PASSWORD
password
-output OUTPUT
output PDF filename, incremental save if none
-name NAME
name of new entry
-path PATH
path to data for new entry
-desc DESC
description of new entry
"
4847,source/pymupdf.pdf,"“NAME” must not already exist in the PDF. For details consult Document.embfile_add().
"
4848,source/pymupdf.pdf,"18.6.5 Updates
"
4849,source/pymupdf.pdf,"Update an existing embedded file using this command:
"
4850,source/pymupdf.pdf,"python -m fitz embed-upd -h
usage: fitz embed-upd [-h] -name NAME [-password PASSWORD] [-output OUTPUT]
[-path PATH] [-filename FILENAME] [-ufilename UFILENAME]
[-desc DESC]
input
"
4851,source/pymupdf.pdf,"--------------------------- update embedded file --------------------------
"
4852,source/pymupdf.pdf,"positional arguments:
input
PDF filename
"
4853,source/pymupdf.pdf,"optional arguments:
-h, --help
show this help message and exit
-name NAME
name of entry
-password PASSWORD
password
-output OUTPUT
Output PDF filename, incremental save if none
-path PATH
path to new data for entry
-filename FILENAME
new filename to store in entry
-ufilename UFILENAME
new unicode filename to store in entry
-desc DESC
new description to store in entry
"
4854,source/pymupdf.pdf,"except '-name' all parameters are optional
"
4855,source/pymupdf.pdf,"Use this method to change meta-information of the file – just omit the “PATH”. For details consult Document.
embfile_upd().
"
4856,source/pymupdf.pdf,"168
Chapter 18. Module fitz
"
4857,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4858,source/pymupdf.pdf,"18.6.6 Copying
"
4859,source/pymupdf.pdf,"Copy embedded files between PDFs:
"
4860,source/pymupdf.pdf,"python -m fitz embed-copy -h
usage: fitz embed-copy [-h] [-password PASSWORD] [-output OUTPUT] -source
SOURCE [-pwdsource PWDSOURCE]
[-name [NAME [NAME ...]]]
input
"
4861,source/pymupdf.pdf,"--------------------- copy embedded files between PDFs --------------------
"
4862,source/pymupdf.pdf,"positional arguments:
input
PDF to receive embedded files
"
4863,source/pymupdf.pdf,"optional arguments:
-h, --help
show this help message and exit
-password PASSWORD
password of input
-output OUTPUT
output PDF, incremental save to 'input' if omitted
-source SOURCE
copy embedded files from here
-pwdsource PWDSOURCE
password of 'source' PDF
-name [NAME [NAME ...]]
restrict copy to these entries
"
4864,source/pymupdf.pdf,"18.7 Text Extraction
"
4865,source/pymupdf.pdf,"• New in v1.18.16
"
4866,source/pymupdf.pdf,"Extract text from arbitrary supported documents to a textfile. Currently, there are three output formatting modes avail-
able: simple, block sorting and reproduction of physical layout.
"
4867,source/pymupdf.pdf,"• Simple text extraction reproduces all text as it appears in the document pages – no effort is made to rearrange in
any particular reading order.
"
4868,source/pymupdf.pdf,"• Block sorting sorts text blocks (as identified by MuPDF) by ascending vertical, then horizontal coordinates.
This should be sufficient to establish a “natural” reading order for basic pages of text.
"
4869,source/pymupdf.pdf,"• Layout strives to reproduce the original appearance of the input pages. You can expect results like this (produced
by the command python -m fitz gettext -pages 1 demo1.pdf):
"
4870,source/pymupdf.pdf,"18.7. Text Extraction
169
"
4871,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4872,source/pymupdf.pdf,"Note:
The “gettext” command offers a functionality similar to the CLI tool pdftotext by XPDF software, http:
//www.foolabs.com/xpdf/ – this is especially true for “layout” mode, which combines that tool’s -layout and -table
options.
"
4873,source/pymupdf.pdf,"After each page of the output file, a formfeed character, hex(12) is written – even if the input page has no text at all.
This behavior can be controlled via options.
"
4874,source/pymupdf.pdf,"Note:
For “layout” mode, only horizontal, left-to-right, top-to bottom text is supported, other text is ignored. In
this mode, text is also ignored, if its fontsize is too small.
"
4875,source/pymupdf.pdf,"“Simple” and “blocks” mode in contrast output all text for any text size or orientation.
"
4876,source/pymupdf.pdf,"Command:
"
4877,source/pymupdf.pdf,"python -m fitz gettext -h
usage: fitz gettext [-h] [-password PASSWORD] [-mode {simple,blocks,layout}] [-pages␣
"
4878,source/pymupdf.pdf,"˓→PAGES] [-noligatures]
[-convert-white] [-extra-spaces] [-noformfeed] [-skip-empty] [-
"
4879,source/pymupdf.pdf,"˓→output OUTPUT] [-grid GRID]
[-fontsize FONTSIZE]
input
"
4880,source/pymupdf.pdf,"----------------- extract text in various formatting modes ----------------
"
4881,source/pymupdf.pdf,"positional arguments:
input
input document filename
"
4882,source/pymupdf.pdf,"optional arguments:
"
4883,source/pymupdf.pdf,"(continues on next page)
"
4884,source/pymupdf.pdf,"170
Chapter 18. Module fitz
"
4885,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4886,source/pymupdf.pdf,"(continued from previous page)
"
4887,source/pymupdf.pdf,"-h, --help
show this help message and exit
-password PASSWORD
password for input document
-mode {simple,blocks,layout}
mode: simple, block sort, or layout (default)
-pages PAGES
select pages, format: 1,5-7,50-N
-noligatures
expand ligature characters (default False)
-convert-white
convert whitespace characters to space (default False)
-extra-spaces
fill gaps with spaces (default False)
-noformfeed
write linefeeds, no formfeeds (default False)
-skip-empty
suppress pages with no text (default False)
-output OUTPUT
store text in this file (default inputfilename.txt)
-grid GRID
merge lines if closer than this (default 2)
-fontsize FONTSIZE
only include text with a larger :data:�fontsize� (default 3)
"
4888,source/pymupdf.pdf,"Note: Command options may be abbreviated as long as no ambiguities are introduced. So the following do the same:
"
4889,source/pymupdf.pdf,"• ... -output text.txt -noligatures -noformfeed -convert-white -grid 3 -extra-spaces
...
"
4890,source/pymupdf.pdf,"• ... -o text.txt -nol -nof -c -g 3 -e ...
"
4891,source/pymupdf.pdf,"The output filename defaults to the input with its extension replaced by .txt. As with other commands, you can select
page ranges (caution: 1-based!) in mutool format, as indicated above.
"
4892,source/pymupdf.pdf,"• mode: (str) select a formatting mode – default is “layout”.
"
4893,source/pymupdf.pdf,"• noligatures: (bool) corresponds to not TEXT_PRESERVE_LIGATURES. If specified, ligatures (present in ad-
vanced fonts: glyphs combining multiple characters like “fi”) are split up into their components (i.e. “f”, “i”).
Default is passing them through.
"
4894,source/pymupdf.pdf,"• convert-white: corresponds to not TEXT_PRESERVE_WHITESPACE. If specified, all white space characters (like
tabs) are replaced with one or more spaces. Default is passing them through.
"
4895,source/pymupdf.pdf,"• extra-spaces: (bool) corresponds to not TEXT_INHIBIT_SPACES. If specified, large gaps between adjacent
characters will be filled with one or more spaces. Default is off.
"
4896,source/pymupdf.pdf,"• noformfeed: (bool) instead of hex(12) (formfeed), write linebreaks n at end of output pages.
"
4897,source/pymupdf.pdf,"• skip-empty: (bool) skip pages with no text.
"
4898,source/pymupdf.pdf,"• grid: lines with a vertical coordinate difference of no more than this value (in points) will be merged into the
same output line. Only relevant for “layout” mode. Use with care: 3 or the default 2 should be adequate in most
cases. If too large, lines that are intended to be different in the original may be merged and will result in garbled
and / or incomplete output. If too low, artifact separate output lines may be generated for some spans in the input
line, just because they are coded in a different font with slightly deviating properties.
"
4899,source/pymupdf.pdf,"• fontsize: include text with fontsize larger than this value only (default 3). Only relevant for “layout” option.
"
4900,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
4901,source/pymupdf.pdf,"18.7. Text Extraction
171
"
4902,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4903,source/pymupdf.pdf,"172
Chapter 18. Module fitz
"
4904,source/pymupdf.pdf,"CHAPTER
"
4905,source/pymupdf.pdf,"NINETEEN
"
4906,source/pymupdf.pdf,"CLASSES
"
4907,source/pymupdf.pdf,"19.1 Annot
"
4908,source/pymupdf.pdf,"This class is supported for PDF documents only.
"
4909,source/pymupdf.pdf,"Quote from the Adobe PDF References: “An annotation associates an object such as a note, sound, or movie with a
location on a page of a PDF document, or provides a way to interact with the user by means of the mouse and keyboard.”
"
4910,source/pymupdf.pdf,"There is a parent-child relationship between an annotation and its page. If the page object becomes unusable (closed
document, any document structure change, etc.), then so does every of its existing annotation objects – an exception is
raised saying that the object is “orphaned”, whenever an annotation property or method is accessed.
"
4911,source/pymupdf.pdf,"Attribute
Short Description
"
4912,source/pymupdf.pdf,"Annot.delete_responses()
delete all responding annotions
"
4913,source/pymupdf.pdf,"Annot.get_file()
get attached file content
"
4914,source/pymupdf.pdf,"Annot.get_oc()
get xref of an OCG / OCMD
"
4915,source/pymupdf.pdf,"Annot.get_pixmap()
image of the annotation as a pixmap
"
4916,source/pymupdf.pdf,"Annot.get_sound()
get the sound of an audio annotation
"
4917,source/pymupdf.pdf,"Annot.get_text()
extract annotation text
"
4918,source/pymupdf.pdf,"Annot.get_textbox()
extract annotation text
"
4919,source/pymupdf.pdf,"Annot.set_border()
set annotation’s border properties
"
4920,source/pymupdf.pdf,"Annot.set_blendmode()
set annotation’s blend mode
"
4921,source/pymupdf.pdf,"Annot.set_colors()
set annotation’s colors
"
4922,source/pymupdf.pdf,"Annot.set_flags()
set annotation’s flags field
"
4923,source/pymupdf.pdf,"Annot.set_irt_xref()
define the annotation to being “In Response To”
"
4924,source/pymupdf.pdf,"Annot.set_name()
set annotation’s name field
"
4925,source/pymupdf.pdf,"Annot.set_oc()
set xref to an OCG / OCMD
"
4926,source/pymupdf.pdf,"Annot.set_opacity()
change transparency
"
4927,source/pymupdf.pdf,"Annot.set_open()
open / close annotation or its Popup
"
4928,source/pymupdf.pdf,"Annot.set_popup()
create a Popup for the annotation
"
4929,source/pymupdf.pdf,"Annot.set_rect()
change annotation rectangle
"
4930,source/pymupdf.pdf,"Annot.set_rotation()
change rotation
"
4931,source/pymupdf.pdf,"Annot.update_file()
update attached file content
"
4932,source/pymupdf.pdf,"Annot.update()
apply accumulated annot changes
"
4933,source/pymupdf.pdf,"Annot.blendmode
annotation BlendMode
"
4934,source/pymupdf.pdf,"Annot.border
border details
"
4935,source/pymupdf.pdf,"Annot.colors
border / background and fill colors
"
4936,source/pymupdf.pdf,"Annot.file_info
get attached file information
"
4937,source/pymupdf.pdf,"Annot.flags
annotation flags
"
4938,source/pymupdf.pdf,"Annot.has_popup
whether annotation has a Popup
"
4939,source/pymupdf.pdf,"continues on next page
"
4940,source/pymupdf.pdf,"173
"
4941,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4942,source/pymupdf.pdf,"Table 1 – continued from previous page
"
4943,source/pymupdf.pdf,"Attribute
Short Description
"
4944,source/pymupdf.pdf,"Annot.irt_xref
annotation to which this one responds
"
4945,source/pymupdf.pdf,"Annot.info
various information
"
4946,source/pymupdf.pdf,"Annot.is_open
whether annotation or its Popup is open
"
4947,source/pymupdf.pdf,"Annot.line_ends
start / end appearance of line-type annotations
"
4948,source/pymupdf.pdf,"Annot.next
link to the next annotation
"
4949,source/pymupdf.pdf,"Annot.opacity
the annot’s transparency
"
4950,source/pymupdf.pdf,"Annot.parent
page object of the annotation
"
4951,source/pymupdf.pdf,"Annot.popup_rect
rectangle of the annotation’s Popup
"
4952,source/pymupdf.pdf,"Annot.popup_xref
the PDF xref number of the annotation’s Popup
"
4953,source/pymupdf.pdf,"Annot.rect
rectangle containing the annotation
"
4954,source/pymupdf.pdf,"Annot.type
type of the annotation
"
4955,source/pymupdf.pdf,"Annot.vertices
point coordinates of Polygons, PolyLines, etc.
"
4956,source/pymupdf.pdf,"Annot.xref
the PDF xref number
"
4957,source/pymupdf.pdf,"Class API
"
4958,source/pymupdf.pdf,"class Annot
"
4959,source/pymupdf.pdf,"get_pixmap(matrix=fitz.Identity, dpi=None, colorspace=fitz.csRGB, alpha=False)
"
4960,source/pymupdf.pdf,"• Changed in v1.19.2: added support of dpi parameter.
"
4961,source/pymupdf.pdf,"Creates a pixmap from the annotation as it appears on the page in untransformed coordinates. The pixmap’s
IRect equals Annot.rect.irect (see below). All parameters are keyword only.
"
4962,source/pymupdf.pdf,"Parameters
"
4963,source/pymupdf.pdf,"• matrix (matrix_like) – a matrix to be used for image creation. Default is Identity.
"
4964,source/pymupdf.pdf,"• dpi (int) – (new in v1.19.2) desired resolution in dots per inch. If not None, the matrix
parameter is ignored.
"
4965,source/pymupdf.pdf,"• colorspace (Colorspace) – a colorspace to be used for image creation.
Default is
fitz.csRGB.
"
4966,source/pymupdf.pdf,"• alpha (bool) – whether to include transparency information. Default is False.
"
4967,source/pymupdf.pdf,"Return type
"
4968,source/pymupdf.pdf,"Pixmap
"
4969,source/pymupdf.pdf,"Note:
"
4970,source/pymupdf.pdf,"• If the annotation has just been created or modified, you should Document.reload_page() the page
first via page = doc.reload_page(page).
"
4971,source/pymupdf.pdf,"• The pixmap will have “premultiplied” pixels if alpha=True. To learn about some background, e.g.
look for “Premultiplied alpha” here.
"
4972,source/pymupdf.pdf,"get_text(opt, clip=None, flags=None)
"
4973,source/pymupdf.pdf,"• New in 1.18.0
"
4974,source/pymupdf.pdf,"Retrieves the content of the annotation in a variety of formats – much like the same method for Page.. This
currently only delivers relevant data for annotation types ‘FreeText’ and ‘Stamp’. Other types return an
empty string (or equivalent objects).
"
4975,source/pymupdf.pdf,"Parameters
"
4976,source/pymupdf.pdf,"174
Chapter 19. Classes
"
4977,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
4978,source/pymupdf.pdf,"• opt (str) – (positional only) the desired format - one of the following values. Please note
that this method works exactly like the same-named method of Page.
"
4979,source/pymupdf.pdf,"– ”text” – TextPage.extractTEXT(), default
"
4980,source/pymupdf.pdf,"– ”blocks” – TextPage.extractBLOCKS()
"
4981,source/pymupdf.pdf,"– ”words” – TextPage.extractWORDS()
"
4982,source/pymupdf.pdf,"– ”html” – TextPage.extractHTML()
"
4983,source/pymupdf.pdf,"– ”xhtml” – TextPage.extractXHTML()
"
4984,source/pymupdf.pdf,"– ”xml” – TextPage.extractXML()
"
4985,source/pymupdf.pdf,"– ”dict” – TextPage.extractDICT()
"
4986,source/pymupdf.pdf,"– ”json” – TextPage.extractJSON()
"
4987,source/pymupdf.pdf,"– ”rawdict” – TextPage.extractRAWDICT()
"
4988,source/pymupdf.pdf,"• clip (rect-like) – (keyword only) restrict the extraction to this area. Should hardly ever
be required, defaults to Annot.rect.
"
4989,source/pymupdf.pdf,"• flags (int) – (keyword only) control the amount of data returned. Defaults to simple text
extraction.
"
4990,source/pymupdf.pdf,"get_textbox(rect)
"
4991,source/pymupdf.pdf,"• New in 1.18.0
"
4992,source/pymupdf.pdf,"Return the annotation text. Mostly (except line breaks) equal to Annot.get_text() with the “text” option.
"
4993,source/pymupdf.pdf,"Parameters
"
4994,source/pymupdf.pdf,"rect (rect-like) – the area to consider, defaults to Annot.rect.
"
4995,source/pymupdf.pdf,"set_info(info=None, content=None, title=None, creationDate=None, modDate=None, subject=None)
"
4996,source/pymupdf.pdf,"• Changed in version 1.16.10
"
4997,source/pymupdf.pdf,"Changes annotation properties. These include dates, contents, subject and author (title). Changes for name
and id will be ignored. The update happens selectively: To leave a property unchanged, set it to None. To
delete existing data, use an empty string.
"
4998,source/pymupdf.pdf,"Parameters
"
4999,source/pymupdf.pdf,"• info (dict) – a dictionary compatible with the info property (see below). All entries must
be strings. If this argument is not a dictionary, the other arguments are used instead – else
they are ignored.
"
5000,source/pymupdf.pdf,"• content (str) – (new in v1.16.10) see description in info.
"
5001,source/pymupdf.pdf,"• title (str) – (new in v1.16.10) see description in info.
"
5002,source/pymupdf.pdf,"• creationDate (str) – (new in v1.16.10) date of annot creation. If given, should be in
PDF datetime format.
"
5003,source/pymupdf.pdf,"• modDate (str) – (new in v1.16.10) date of last modification. If given, should be in PDF
datetime format.
"
5004,source/pymupdf.pdf,"• subject (str) – (new in v1.16.10) see description in info.
"
5005,source/pymupdf.pdf,"set_line_ends(start, end)
"
5006,source/pymupdf.pdf,"Sets an annotation’s line ending styles. Each of these annotation types is defined by a list of points which
are connected by lines. The symbol identified by start is attached to the first point, and end to the last point
of this list. For unsupported annotation types, a no-operation with a warning message results.
"
5007,source/pymupdf.pdf,"19.1. Annot
175
"
5008,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5009,source/pymupdf.pdf,"Note:
"
5010,source/pymupdf.pdf,"• While ‘FreeText’, ‘Line’, ‘PolyLine’, and ‘Polygon’ annotations can have these properties, (Py-)
MuPDF does not support line ends for ‘FreeText’, because the call-out variant of it is not supported.
"
5011,source/pymupdf.pdf,"• (Changed in v1.16.16) Some symbols have an interior area (diamonds, circles, squares, etc.). By de-
fault, these areas are filled with the fill color of the annotation. If this is None, then white is chosen. The
fill_color argument of Annot.update() can now be used to override this and give line end symbols
their own fill color.
"
5012,source/pymupdf.pdf,"Parameters
"
5013,source/pymupdf.pdf,"• start (int) – The symbol number for the first point.
"
5014,source/pymupdf.pdf,"• end (int) – The symbol number for the last point.
"
5015,source/pymupdf.pdf,"set_oc(xref )
"
5016,source/pymupdf.pdf,"Set the annotation’s visibility using PDF optional content mechanisms. This visibility is controlled by the
user interface of supporting PDF viewers. It is independent from other attributes like Annot.flags.
"
5017,source/pymupdf.pdf,"Parameters
"
5018,source/pymupdf.pdf,"xref (int) – the xref of an optional contents group (OCG or OCMD). Any previous xref
will be overwritten. If zero, a previous entry will be removed. An exception occurs if the xref
is not zero and does not point to a valid PDF object.
"
5019,source/pymupdf.pdf,"Note: This does not require executing Annot.update() to take effect.
"
5020,source/pymupdf.pdf,"get_oc()
"
5021,source/pymupdf.pdf,"Return the xref of an optional content object, or zero if there is none.
"
5022,source/pymupdf.pdf,"Returns
"
5023,source/pymupdf.pdf,"zero or the xref of an OCG (or OCMD).
"
5024,source/pymupdf.pdf,"set_irt_xref(xref )
"
5025,source/pymupdf.pdf,"• New in v1.19.3
"
5026,source/pymupdf.pdf,"Set annotation to be “In Response To” another one.
"
5027,source/pymupdf.pdf,"Parameters
"
5028,source/pymupdf.pdf,"xref (int) – The xref of another annotation.
"
5029,source/pymupdf.pdf,"Note:
Must refer to an existing annotation on this page. Setting this property requires no
subsequent update().
"
5030,source/pymupdf.pdf,"set_open(value)
"
5031,source/pymupdf.pdf,"• New in v1.18.4
"
5032,source/pymupdf.pdf,"Set the annotation’s Popup annotation to open or closed – or the annotation itself, if its type is ‘Text’ (“sticky
note”).
"
5033,source/pymupdf.pdf,"Parameters
"
5034,source/pymupdf.pdf,"value (bool) – the desired open state.
"
5035,source/pymupdf.pdf,"176
Chapter 19. Classes
"
5036,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5037,source/pymupdf.pdf,"set_popup(rect)
"
5038,source/pymupdf.pdf,"• New in v1.18.4
"
5039,source/pymupdf.pdf,"Create a Popup annotation for the annotation and specify its rectangle. If the Popup already exists, only its
rectangle is updated.
"
5040,source/pymupdf.pdf,"Parameters
"
5041,source/pymupdf.pdf,"rect (rect_like) – the desired rectangle.
"
5042,source/pymupdf.pdf,"set_opacity(value)
"
5043,source/pymupdf.pdf,"Set the annotation’s transparency. Opacity can also be set in Annot.update().
"
5044,source/pymupdf.pdf,"Parameters
"
5045,source/pymupdf.pdf,"value (float) – a float in range [0, 1]. Any value outside is assumed to be 1. E.g. a value
of 0.5 sets the transparency to 50%.
"
5046,source/pymupdf.pdf,"Three overlapping ‘Circle’ annotations with each opacity set to 0.5:
"
5047,source/pymupdf.pdf,"blendmode
"
5048,source/pymupdf.pdf,"• New in v1.18.4
"
5049,source/pymupdf.pdf,"The annotation’s blend mode. See Adobe PDF References, page 324 for explanations.
"
5050,source/pymupdf.pdf,"Return type
"
5051,source/pymupdf.pdf,"str
"
5052,source/pymupdf.pdf,"Returns
"
5053,source/pymupdf.pdf,"the blend mode or None.
"
5054,source/pymupdf.pdf,"set_blendmode(blendmode)
"
5055,source/pymupdf.pdf,"• New in v1.16.14
"
5056,source/pymupdf.pdf,"Set the annotation’s blend mode. See Adobe PDF References, page 324 for explanations. The blend mode
can also be set in Annot.update().
"
5057,source/pymupdf.pdf,"Parameters
"
5058,source/pymupdf.pdf,"blendmode (str) – set the blend mode. Use Annot.update() to reflect this in the visual
appearance. For predefined values see PDF Standard Blend Modes. Use PDF_BM_Normal to
remove a blend mode.
"
5059,source/pymupdf.pdf,"set_name(name)
"
5060,source/pymupdf.pdf,"• New in version 1.16.0
"
5061,source/pymupdf.pdf,"19.1. Annot
177
"
5062,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5063,source/pymupdf.pdf,"Change the name field of any annotation type. For ‘FileAttachment’ and ‘Text’ annotations, this is the icon
name, for ‘Stamp’ annotations the text in the stamp. The visual result (if any) depends on your PDF viewer.
See also Annotation Icons in MuPDF.
"
5064,source/pymupdf.pdf,"Parameters
"
5065,source/pymupdf.pdf,"name (str) – the new name.
"
5066,source/pymupdf.pdf,"Caution:
If you set the name of a ‘Stamp’ annotation, then this will not change the rectangle, nor
will the text be layouted in any way. If you choose a standard text from Stamp Annotation Icons (the
exact name piece after ""STAMP_""), you should receive the original layout. An arbitrary text will not
be changed to upper case, but be written in font “Times-Bold” as is, horizontally centered in one line
and be shortened to fit. To get your text fully displayed, its length using fontsize 20 must not exceed
190 points. So please make sure that the following inequality is true: fitz.get_text_length(text,
fontname=""tibo"", fontsize=20) <= 190.
"
5067,source/pymupdf.pdf,"set_rect(rect)
"
5068,source/pymupdf.pdf,"Change the rectangle of an annotation. The annotation can be moved around and both sides of the rectangle
can be independently scaled. However, the annotation appearance will never get rotated, flipped or sheared.
This method only affects certain annotation types2 and will lead to a message on Python’s sys.stderr in
other cases. No exception will be raised, but False will be returned.
"
5069,source/pymupdf.pdf,"Parameters
"
5070,source/pymupdf.pdf,"rect (rect_like) – the new rectangle of the annotation (finite and not empty). E.g. using
a value of annot.rect + (5, 5, 5, 5) will shift the annot position 5 pixels to the right and
downwards.
"
5071,source/pymupdf.pdf,"Note: You need not invoke Annot.update() for activation of the effect.
"
5072,source/pymupdf.pdf,"set_rotation(angle)
"
5073,source/pymupdf.pdf,"Set the rotation of an annotation. This rotates the annotation rectangle around its center point. Then a new
annotation rectangle is calculated from the resulting quad.
"
5074,source/pymupdf.pdf,"Parameters
"
5075,source/pymupdf.pdf,"angle (int) – rotation angle in degrees. Arbitrary values are possible, but will be clamped
to the interval [0, 360).
"
5076,source/pymupdf.pdf,"Note:
"
5077,source/pymupdf.pdf,"• You must invoke Annot.update() to activate the effect.
"
5078,source/pymupdf.pdf,"• For PDF_ANNOT_FREE_TEXT, only one of the values 0, 90, 180 and 270 is possible and will rotate
the text inside the current rectangle (which remains unchanged). Other values are silently ignored and
replaced by 0.
"
5079,source/pymupdf.pdf,"• Otherwise, only the following Annotation Types can be rotated: ‘Square’, ‘Circle’, ‘Caret’, ‘Text’,
‘FileAttachment’, ‘Ink’, ‘Line’, ‘Polyline’, ‘Polygon’, and ‘Stamp’. For all others the method is a no-
op.
"
5080,source/pymupdf.pdf,"set_border(border=None, width=None, style=None, dashes=None, clouds=None)
"
5081,source/pymupdf.pdf,"2 Only the following annotation types support method Annot.set_rect(): Text, FreeText, Square, Circle, Redact, Stamp, Caret, FileAttach-
ment, Sound, and Movie.
"
5082,source/pymupdf.pdf,"178
Chapter 19. Classes
"
5083,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5084,source/pymupdf.pdf,"• Changed in version 1.16.9: Allow specification without using a dictionary. The direct parameters are
used if border is not a dictionary.
"
5085,source/pymupdf.pdf,"• Changed in version 1.22.5: Support of the “cloudy” border effect.
"
5086,source/pymupdf.pdf,"PDF only: Change border width, dashing, style and cloud effect. See the Annot.border attribute for more
details.
"
5087,source/pymupdf.pdf,"Parameters
"
5088,source/pymupdf.pdf,"• border (dict) – a dictionary as returned by the border property, with keys “width”
(float), “style” (str), “dashes” (sequence) and clouds (int). Omitted keys will leave the
resp. property unchanged. Set the border argument to None (the default) to use the other
arguments.
"
5089,source/pymupdf.pdf,"• width (float) – A non-negative value will change the border line width.
"
5090,source/pymupdf.pdf,"• style (str) – A value other than None will change this border property.
"
5091,source/pymupdf.pdf,"• dashes (sequence) – All items of the sequence must be integers, otherwise the parameter
is ignored. To remove dashing use: dashes=[]. If dashes is a non-empty sequence, “style”
will automatically be set to “D” (dashed).
"
5092,source/pymupdf.pdf,"• clouds (int) – A value >= 0 will change this property. Use clouds=0 to remove the
cloudy appearance completely. Only annotation types ‘Square’, ‘Circle’, and ‘Polygon’ are
supported with this property.
"
5093,source/pymupdf.pdf,"set_flags(flags)
"
5094,source/pymupdf.pdf,"Changes the annotation flags. Use the | operator to combine several.
"
5095,source/pymupdf.pdf,"Parameters
"
5096,source/pymupdf.pdf,"flags (int) – an integer specifying the required flags.
"
5097,source/pymupdf.pdf,"set_colors(colors=None, stroke=None, fill=None)
"
5098,source/pymupdf.pdf,"• Changed in version 1.16.9: Allow colors to be directly set. These parameters are used if colors is not
a dictionary.
"
5099,source/pymupdf.pdf,"Changes the “stroke” and “fill” colors for supported annotation types – not all annotations accept both.
"
5100,source/pymupdf.pdf,"Parameters
"
5101,source/pymupdf.pdf,"• colors (dict) – a dictionary containing color specifications. For accepted dictionary keys
and values see below. The most practical way should be to first make a copy of the colors
property and then modify this dictionary as required.
"
5102,source/pymupdf.pdf,"• stroke (sequence) – see above.
"
5103,source/pymupdf.pdf,"• fill (sequence) – see above.
"
5104,source/pymupdf.pdf,"Changed in v1.18.5: To completely remove a color specification, use an empty sequence like []. If you
specify None, an existing specification will not be changed.
"
5105,source/pymupdf.pdf,"delete_responses()
"
5106,source/pymupdf.pdf,"• New in version 1.16.12
"
5107,source/pymupdf.pdf,"Delete annotations referring to this one. This includes any ‘Popup’ annotations and all annotations respond-
ing to it.
"
5108,source/pymupdf.pdf,"update(opacity=None, blend_mode=None, fontsize=0, text_color=None, border_color=None,
fill_color=None, cross_out=True, rotate=-1)
"
5109,source/pymupdf.pdf,"Synchronize the appearance of an annotation with its properties after relevant changes.
"
5110,source/pymupdf.pdf,"You can safely omit this method only for the following changes:
"
5111,source/pymupdf.pdf,"19.1. Annot
179
"
5112,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5113,source/pymupdf.pdf,"• Annot.set_rect()
"
5114,source/pymupdf.pdf,"• Annot.set_flags()
"
5115,source/pymupdf.pdf,"• Annot.set_oc()
"
5116,source/pymupdf.pdf,"• Annot.update_file()
"
5117,source/pymupdf.pdf,"• Annot.set_info() (except any changes to “content”)
"
5118,source/pymupdf.pdf,"All arguments are optional. (Changed in v1.16.14) Blend mode and opacity are applicable to all annotation
types. The other arguments are mostly special use, as described below.
"
5119,source/pymupdf.pdf,"Color specifications may be made in the usual format used in PuMuPDF as sequences of floats ranging from
0.0 to 1.0 (including both). The sequence length must be 1, 3 or 4 (supporting GRAY, RGB and CMYK
colorspaces respectively). For GRAY, just a float is also acceptable.
"
5120,source/pymupdf.pdf,"Parameters
"
5121,source/pymupdf.pdf,"• opacity (float) – (new in v1.16.14) valid for all annotation types: change or set the
annotation’s transparency. Valid values are 0 <= opacity < 1.
"
5122,source/pymupdf.pdf,"• blend_mode (str) – (new in v1.16.14) valid for all annotation types: change or set the
annotation’s blend mode. For valid values see PDF Standard Blend Modes.
"
5123,source/pymupdf.pdf,"• fontsize (float) – change fontsize of the text. ‘FreeText’ annotations only.
"
5124,source/pymupdf.pdf,"• text_color (sequence,float) – change the text color. ‘FreeText’ annotations only.
"
5125,source/pymupdf.pdf,"• border_color (sequence,float) – change the border color. ‘FreeText’ annotations
only.
"
5126,source/pymupdf.pdf,"• fill_color (sequence,float) – the fill color.
"
5127,source/pymupdf.pdf,"– ’Line’, ‘Polyline’, ‘Polygon’ annotations: use it to give applicable line end symbols a fill
color other than that of the annotation (changed in v1.16.16).
"
5128,source/pymupdf.pdf,"• cross_out (bool) – (new in v1.17.2) add two diagonal lines to the annotation rectangle.
‘Redact’ annotations only. If not desired, False must be specified even if the annotation
was created with False.
"
5129,source/pymupdf.pdf,"• rotate (int) – new rotation value. Default (-1) means no change. Supports ‘FreeText’
and several other annotation types (see Annot.set_rotation()),1. Only choose 0, 90,
180, or 270 degrees for ‘FreeText’. Otherwise any integer is acceptable.
"
5130,source/pymupdf.pdf,"Return type
"
5131,source/pymupdf.pdf,"bool
"
5132,source/pymupdf.pdf,"Note:
Using this method inside a Page.annots() loop is not recommended! This is because most
annotation updates require the owning page to be reloaded – which cannot be done inside this loop. Please
use the example coding pattern given in the documentation of this generator.
"
5133,source/pymupdf.pdf,"file_info
"
5134,source/pymupdf.pdf,"Basic information of the annot’s attached file.
"
5135,source/pymupdf.pdf,"Return type
"
5136,source/pymupdf.pdf,"dict
"
5137,source/pymupdf.pdf,"1 Rotating an annotation also changes its rectangle. Depending on how the annotation was defined, the original rectangle is cannot be recon-
structed by setting the rotation value to zero again and will be lost.
"
5138,source/pymupdf.pdf,"180
Chapter 19. Classes
"
5139,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5140,source/pymupdf.pdf,"Returns
"
5141,source/pymupdf.pdf,"a dictionary with keys filename, ufilename, desc (description), size (uncompressed file size),
length (compressed length) for FileAttachment annot types, else None.
"
5142,source/pymupdf.pdf,"get_file()
"
5143,source/pymupdf.pdf,"Returns attached file content.
"
5144,source/pymupdf.pdf,"Return type
"
5145,source/pymupdf.pdf,"bytes
"
5146,source/pymupdf.pdf,"Returns
"
5147,source/pymupdf.pdf,"the content of the attached file.
"
5148,source/pymupdf.pdf,"update_file(buffer=None, filename=None, ufilename=None, desc=None)
"
5149,source/pymupdf.pdf,"Updates the content of an attached file. All arguments are optional. No arguments lead to a no-op.
"
5150,source/pymupdf.pdf,"Parameters
"
5151,source/pymupdf.pdf,"• buffer (bytes|bytearray|BytesIO) – the new file content. Omit to only change meta-
information.
"
5152,source/pymupdf.pdf,"(Changed in version 1.14.13) io.BytesIO is now also supported.
"
5153,source/pymupdf.pdf,"• filename (str) – new filename to associate with the file.
"
5154,source/pymupdf.pdf,"• ufilename (str) – new unicode filename to associate with the file.
"
5155,source/pymupdf.pdf,"• desc (str) – new description of the file content.
"
5156,source/pymupdf.pdf,"get_sound()
"
5157,source/pymupdf.pdf,"Return the embedded sound of an audio annotation.
"
5158,source/pymupdf.pdf,"Return type
"
5159,source/pymupdf.pdf,"dict
"
5160,source/pymupdf.pdf,"Returns
"
5161,source/pymupdf.pdf,"the sound audio file and accompanying properties. These are the possible dictionary keys, of
which only “rate” and “stream” are always present.
"
5162,source/pymupdf.pdf,"Key
Description
"
5163,source/pymupdf.pdf,"rate
(float, requ.) samples per second
"
5164,source/pymupdf.pdf,"channels
(int, opt.) number of sound channels
"
5165,source/pymupdf.pdf,"bps
(int, opt.) bits per sample value per channel
"
5166,source/pymupdf.pdf,"encoding
(str, opt.) encoding format: Raw, Signed, muLaw, ALaw
"
5167,source/pymupdf.pdf,"compression
(str, opt.) name of compression filter
"
5168,source/pymupdf.pdf,"stream
(bytes, requ.) the sound file content
"
5169,source/pymupdf.pdf,"opacity
"
5170,source/pymupdf.pdf,"The annotation’s transparency. If set, it is a value in range [0, 1]. The PDF default is 1. However, in an
effort to tell the difference, we return -1.0 if not set.
"
5171,source/pymupdf.pdf,"Return type
"
5172,source/pymupdf.pdf,"float
"
5173,source/pymupdf.pdf,"parent
"
5174,source/pymupdf.pdf,"The owning page object of the annotation.
"
5175,source/pymupdf.pdf,"Return type
"
5176,source/pymupdf.pdf,"Page
"
5177,source/pymupdf.pdf,"19.1. Annot
181
"
5178,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5179,source/pymupdf.pdf,"rotation
"
5180,source/pymupdf.pdf,"The annot rotation.
"
5181,source/pymupdf.pdf,"Return type
"
5182,source/pymupdf.pdf,"int
"
5183,source/pymupdf.pdf,"Returns
"
5184,source/pymupdf.pdf,"a value [-1, 359]. If rotation is not at all, -1 is returned (and implies a rotation angle of 0).
Other possible values are normalized to some value value 0 <= angle < 360.
"
5185,source/pymupdf.pdf,"rect
"
5186,source/pymupdf.pdf,"The rectangle containing the annotation.
"
5187,source/pymupdf.pdf,"Return type
"
5188,source/pymupdf.pdf,"Rect
"
5189,source/pymupdf.pdf,"next
"
5190,source/pymupdf.pdf,"The next annotation on this page or None.
"
5191,source/pymupdf.pdf,"Return type
"
5192,source/pymupdf.pdf,"Annot
"
5193,source/pymupdf.pdf,"type
"
5194,source/pymupdf.pdf,"A number and one or two strings describing the annotation type, like [2, ‘FreeText’, ‘FreeTextCallout’].
The second string entry is optional and may be empty. See the appendix Annotation Types for a list of
possible values and their meanings.
"
5195,source/pymupdf.pdf,"Return type
"
5196,source/pymupdf.pdf,"list
"
5197,source/pymupdf.pdf,"info
"
5198,source/pymupdf.pdf,"A dictionary containing various information. All fields are optional strings. For information items not
provided, an empty string is returned.
"
5199,source/pymupdf.pdf,"• name – e.g. for ‘Stamp’ annotations it will contain the stamp text like “Sold” or “Experimental”, for
other annot types you will see the name of the annot’s icon here (“PushPin” for FileAttachment).
"
5200,source/pymupdf.pdf,"• content – a string containing the text for type Text and FreeText annotations. Commonly used for filling
the text field of annotation pop-up windows.
"
5201,source/pymupdf.pdf,"• title – a string containing the title of the annotation pop-up window. By convention, this is used for the
annotation author.
"
5202,source/pymupdf.pdf,"• creationDate – creation timestamp.
"
5203,source/pymupdf.pdf,"• modDate – last modified timestamp.
"
5204,source/pymupdf.pdf,"• subject – subject.
"
5205,source/pymupdf.pdf,"• id – (new in version 1.16.10) a unique identification of the annotation. This is taken from PDF key
/NM. Annotations added by PyMuPDF will have a unique name, which appears here.
"
5206,source/pymupdf.pdf,"Return type
"
5207,source/pymupdf.pdf,"dict
"
5208,source/pymupdf.pdf,"flags
"
5209,source/pymupdf.pdf,"An integer whose low order bits contain flags for how the annotation should be presented.
"
5210,source/pymupdf.pdf,"Return type
"
5211,source/pymupdf.pdf,"int
"
5212,source/pymupdf.pdf,"182
Chapter 19. Classes
"
5213,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5214,source/pymupdf.pdf,"line_ends
"
5215,source/pymupdf.pdf,"A pair of integers specifying start and end symbol of annotations types ‘FreeText’, ‘Line’, ‘PolyLine’, and
‘Polygon’. None if not applicable. For possible values and descriptions in this list, see the Adobe PDF
References, table 1.76 on page 400.
"
5216,source/pymupdf.pdf,"Return type
"
5217,source/pymupdf.pdf,"tuple
"
5218,source/pymupdf.pdf,"vertices
"
5219,source/pymupdf.pdf,"A list containing a variable number of point (“vertices”) coordinates (each given by a pair of floats) for
various types of annotations:
"
5220,source/pymupdf.pdf,"• ‘Line’ – the starting and ending coordinates (2 float pairs).
"
5221,source/pymupdf.pdf,"• ‘FreeText’ – 2 or 3 float pairs designating the starting, the (optional) knee point, and the ending coor-
dinates.
"
5222,source/pymupdf.pdf,"• ‘PolyLine’ / ‘Polygon’ – the coordinates of the edges connected by line pieces (n float pairs for n
points).
"
5223,source/pymupdf.pdf,"• text markup annotations – 4 float pairs specifying the QuadPoints of the marked text span (see Adobe
PDF References, page 403).
"
5224,source/pymupdf.pdf,"• ‘Ink’ – list of one to many sublists of vertex coordinates. Each such sublist represents a separate line
in the drawing.
"
5225,source/pymupdf.pdf,"Return type
"
5226,source/pymupdf.pdf,"list
"
5227,source/pymupdf.pdf,"colors
"
5228,source/pymupdf.pdf,"dictionary of two lists of floats in range 0 <= float <= 1 specifying the “stroke” and the interior (“fill”)
colors. The stroke color is used for borders and everything that is actively painted or written (“stroked”).
The fill color is used for the interior of objects like line ends, circles and squares. The lengths of these lists
implicitly determine the colorspaces used: 1 = GRAY, 3 = RGB, 4 = CMYK. So “[1.0, 0.0, 0.0]” stands for
RGB color red. Both lists can be empty if no color is specified.
"
5229,source/pymupdf.pdf,"Return type
"
5230,source/pymupdf.pdf,"dict
"
5231,source/pymupdf.pdf,"xref
"
5232,source/pymupdf.pdf,"The PDF xref.
"
5233,source/pymupdf.pdf,"Return type
"
5234,source/pymupdf.pdf,"int
"
5235,source/pymupdf.pdf,"irt_xref
"
5236,source/pymupdf.pdf,"The PDF xref of an annotation to which this one responds. Return zero if this is no response annotation.
"
5237,source/pymupdf.pdf,"Return type
"
5238,source/pymupdf.pdf,"int
"
5239,source/pymupdf.pdf,"popup_xref
"
5240,source/pymupdf.pdf,"The PDF xref of the associated Popup annotation. Zero if non-existent.
"
5241,source/pymupdf.pdf,"Return type
"
5242,source/pymupdf.pdf,"int
"
5243,source/pymupdf.pdf,"has_popup
"
5244,source/pymupdf.pdf,"Whether the annotation has a Popup annotation.
"
5245,source/pymupdf.pdf,"19.1. Annot
183
"
5246,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5247,source/pymupdf.pdf,"Return type
"
5248,source/pymupdf.pdf,"bool
"
5249,source/pymupdf.pdf,"is_open
"
5250,source/pymupdf.pdf,"Whether the annotation’s Popup is open – or the annotation itself (‘Text’ annotations only).
"
5251,source/pymupdf.pdf,"Return type
"
5252,source/pymupdf.pdf,"bool
"
5253,source/pymupdf.pdf,"popup_rect
"
5254,source/pymupdf.pdf,"The rectangle of the associated Popup annotation. Infinite rectangle if non-existent.
"
5255,source/pymupdf.pdf,"Return type
"
5256,source/pymupdf.pdf,"Rect
"
5257,source/pymupdf.pdf,"rect_delta
"
5258,source/pymupdf.pdf,"A tuple of four floats representing the /RD entry of the annotation. The four numbers describe the numerical
differences (left, top, -right, -bottom) between two rectangles: the rect of the annotation and a rectangle
contained within that rectangle. If the entry is missing, this property is (0, 0, 0, 0). If the annotation
border is a normal, straight line, these numbers are typically border width divided by 2. If the annotation
has a “cloudy” border, you will see the breadth of the cloud semi-circles here. In general, the numbers need
not be identical. To compute the inner rectangle do a.rect + a.rect_delta.
"
5259,source/pymupdf.pdf,"border
"
5260,source/pymupdf.pdf,"A dictionary containing border characteristics. Empty if no border information exists. The following keys
may be present:
"
5261,source/pymupdf.pdf,"• width – a float indicating the border thickness in points. The value is -1.0 if no width is specified.
"
5262,source/pymupdf.pdf,"• dashes – a sequence of integers specifying a line dashing pattern. [] means no dashes, [n] means equal
on-off lengths of n points, longer lists will be interpreted as specifying alternating on-off length values.
See the Adobe PDF References page 126 for more details.
"
5263,source/pymupdf.pdf,"• style – 1-byte border style: “S” (Solid) = solid line surrounding the annotation, “D” (Dashed) = dashed
line surrounding the annotation, the dash pattern is specified by the dashes entry, “B” (Beveled) = a
simulated embossed rectangle that appears to be raised above the surface of the page, “I” (Inset) = a
simulated engraved rectangle that appears to be recessed below the surface of the page, “U” (Underline)
= a single line along the bottom of the annotation rectangle.
"
5264,source/pymupdf.pdf,"• clouds – an integer indicating a “cloudy” border, where n is an integer -1 <= n <= 2. A value n =
0 indicates a straight line (no clouds), 1 means small and 2 means large semi-circles, mimicking the
cloudy appearance. If -1, then no specification is present.
"
5265,source/pymupdf.pdf,"Return type
"
5266,source/pymupdf.pdf,"dict
"
5267,source/pymupdf.pdf,"19.1.1 Annotation Icons in MuPDF
"
5268,source/pymupdf.pdf,"This is a list of icons referenceable by name for annotation types ‘Text’ and ‘FileAttachment’. You can use them via the
icon parameter when adding an annotation, or use the as argument in Annot.set_name(). It is left to your discretion
which item to choose when – no mechanism will keep you from using e.g. the “Speaker” icon for a ‘FileAttachment’.
"
5269,source/pymupdf.pdf,"184
Chapter 19. Classes
"
5270,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5271,source/pymupdf.pdf,"19.1.2 Example
"
5272,source/pymupdf.pdf,"Change the graphical image of an annotation. Also update the “author” and the text to be shown in the popup window:
"
5273,source/pymupdf.pdf,"doc = fitz.open(""circle-in.pdf"")
page = doc[0]
# page 0
"
5274,source/pymupdf.pdf,"annot = page.first_annot
# get the annotation
"
5275,source/pymupdf.pdf,"annot.set_border(dashes=[3])
# set dashes to ""3 on, 3 off ...""
"
5276,source/pymupdf.pdf,"# set stroke and fill color to some blue
annot.set_colors({""stroke"":(0, 0, 1), ""fill"":(0.75, 0.8, 0.95)})
info = annot.info
# get info dict
"
5277,source/pymupdf.pdf,"info[""title""] = ""Jorj X. McKie""
# set author
"
5278,source/pymupdf.pdf,"# text in popup window ...
info[""content""] = ""I changed border and colors and enlarged the image by 20%.""
info[""subject""] = ""Demonstration of PyMuPDF""
# some PDF viewers also show this
"
5279,source/pymupdf.pdf,"annot.set_info(info)
# update info dict
"
5280,source/pymupdf.pdf,"r = annot.rect
# take annot rect
"
5281,source/pymupdf.pdf,"r.x1 = r.x0 + r.width
* 1.2
# new location has same top-left
"
5282,source/pymupdf.pdf,"r.y1 = r.y0 + r.height * 1.2
# but 20% longer sides
"
5283,source/pymupdf.pdf,"annot.set_rect(r)
# update rectangle
"
5284,source/pymupdf.pdf,"(continues on next page)
"
5285,source/pymupdf.pdf,"19.1. Annot
185
"
5286,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5287,source/pymupdf.pdf,"(continued from previous page)
"
5288,source/pymupdf.pdf,"annot.update()
# update the annot's appearance
"
5289,source/pymupdf.pdf,"doc.save(""circle-out.pdf"")
# save
"
5290,source/pymupdf.pdf,"This is how the circle annotation looks like before and after the change (pop-up windows displayed using Nitro PDF
viewer):
"
5291,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
5292,source/pymupdf.pdf,"19.2 Archive
"
5293,source/pymupdf.pdf,"• New in v1.21.0
"
5294,source/pymupdf.pdf,"This class represents a generalization of file folders and container files like ZIP and TAR archives. Archives allow
accessing arbitrary collections of file folders, ZIP / TAR files and single binary data elements as if they all were part
of one hierarchical tree of folders.
"
5295,source/pymupdf.pdf,"In PyMuPDF, archives are currently only used by Story objects to specify where to look for fonts, images and other
resources.
"
5296,source/pymupdf.pdf,"Method / Attribute
Short Description
"
5297,source/pymupdf.pdf,"Archive.add()
add new data to the archive
"
5298,source/pymupdf.pdf,"Archive.has_entry()
check if given name is a member
"
5299,source/pymupdf.pdf,"Archive.read_entry()
read the data given by the name
"
5300,source/pymupdf.pdf,"Archive.entry_list
list[dict] of archive items
"
5301,source/pymupdf.pdf,"Class API
"
5302,source/pymupdf.pdf,"class Archive
"
5303,source/pymupdf.pdf,"186
Chapter 19. Classes
"
5304,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5305,source/pymupdf.pdf,"__init__(self[, content[, path]])
"
5306,source/pymupdf.pdf,"Creates a new archive. Without parameters, an empty archive is created.
"
5307,source/pymupdf.pdf,"If provided, content may be one of the following:
"
5308,source/pymupdf.pdf,"• another Archive: the archive is being made a sub-archive of the new one.
"
5309,source/pymupdf.pdf,"• a string: this must be the name of a local folder or file. pathlib.Path objects are also supported.
"
5310,source/pymupdf.pdf,"– A folder will be converted to a sub-archive, so its files (and any sub-folders) can be accessed by
their names.
"
5311,source/pymupdf.pdf,"– A file will be read with mode ""rb"" and these binary data (a bytes object) be treated as a single-
member sub-archive. In this case, the path parameter is mandatory and should be the member
name under which this item can be found / retrieved.
"
5312,source/pymupdf.pdf,"• a zipfile.ZipFile or tarfile.TarFile object: Will be added as a sub-archive.
"
5313,source/pymupdf.pdf,"• a Python binary object (bytes, bytearray, io.BytesIO): this will add a single-member sub-archive.
In this case, the path parameter is mandatory and should be the member name under which this item
can be found / retrieved.
"
5314,source/pymupdf.pdf,"• a tuple (data, name): This will add a single-member sub-archive with the member name name.
data may be a Python binary object or a local file name (in which case its binary file content is used).
Use this format if you need to specify path.
"
5315,source/pymupdf.pdf,"• a Python sequence: This is a convenience format to specify any combination of the above.
"
5316,source/pymupdf.pdf,"If provided, path must be a string.
"
5317,source/pymupdf.pdf,"• If content is either binary data or a file name, this parameter is mandatory and must be the name
under which the data can be found.
"
5318,source/pymupdf.pdf,"• Otherwise this parameter is optional. It can be used to simulate a folder name or a mount point, under
which this sub-archive’s elements can be found. For example this specification Archive((data,
""name""), ""path"") means that data will be found using the element name ""path/name"". Similar
is true for other sub-archives: to retrieve members of a ZIP sub-archive, their names must be prefixed
with ""path/"". The main purpose of this parameter probably is to differentiate between duplicate
names.
"
5319,source/pymupdf.pdf,"Note:
If duplicate entry names exist in the archive, always the last entry with that name will be found /
retrieved. During archive creation, or appending more data to an archive (see Archive.add()) no check
for duplicates will be made. Use the path parameter to prevent this from happening.
"
5320,source/pymupdf.pdf,"add(content[, path])
"
5321,source/pymupdf.pdf,"Append a sub-archive. The meaning of the parameters are exactly the same as explained above. Of course,
parameter content is not optional here.
"
5322,source/pymupdf.pdf,"has_entry(name)
"
5323,source/pymupdf.pdf,"Checks whether an entry exists in any of the sub-archives.
"
5324,source/pymupdf.pdf,"Parameters
"
5325,source/pymupdf.pdf,"name (str) – The fully qualified name of the entry. So must include any path prefix under
which the entry’s sub-archive has been added.
"
5326,source/pymupdf.pdf,"Returns
"
5327,source/pymupdf.pdf,"True or False.
"
5328,source/pymupdf.pdf,"read_entry(name)
"
5329,source/pymupdf.pdf,"Retrieve the data of an entry.
"
5330,source/pymupdf.pdf,"19.2. Archive
187
"
5331,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5332,source/pymupdf.pdf,"Parameters
"
5333,source/pymupdf.pdf,"name (str) – The fully qualified name of the entry. So must include any path prefix under
which the entry’s sub-archive has been added.
"
5334,source/pymupdf.pdf,"Returns
"
5335,source/pymupdf.pdf,"The binary data (bytes) of the entry. If not found, an exception is raised.
"
5336,source/pymupdf.pdf,"entry_list
"
5337,source/pymupdf.pdf,"A list of the archive’s sub-archives. Each list item is a dictionary with the following keys:
"
5338,source/pymupdf.pdf,"• entries – a list of (top-level) entry names in this sub-archive.
"
5339,source/pymupdf.pdf,"• fmt – the format of the sub-archive. This is one of the strings “dir” (file folder), “zip” (ZIP archive),
“tar” (TAR archive), or “tree” for single binary entries or file content.
"
5340,source/pymupdf.pdf,"• path – the value of the path parameter under which this sub-archive was added.
"
5341,source/pymupdf.pdf,"Example:
"
5342,source/pymupdf.pdf,">>> from pprint import pprint
>>> import fitz
>>> dir1 = ""fitz-32""
# a folder name
"
5343,source/pymupdf.pdf,">>> dir2 = ""fitz-64""
# a folder name
"
5344,source/pymupdf.pdf,">>> img = (""nur-ruhig.jpg"", ""img"")
# an image file
"
5345,source/pymupdf.pdf,">>> members = (dir1, img, dir2)
# we want to append these in one go
"
5346,source/pymupdf.pdf,">>> arch = fitz.Archive()
>>> arch.add(members, path=""mypath"")
>>> pprint(arch.entry_list)
[{'entries': ['310', '37', '38', '39'], 'fmt': 'dir', 'path': 'mypath'},
{'entries': ['img'], 'fmt': 'tree', 'path': 'mypath'},
{'entries': ['310', '311', '37', '38', '39', 'pypy'],
'fmt': 'dir',
'path': 'mypath'}]
>>>
"
5347,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
5348,source/pymupdf.pdf,"19.3 Colorspace
"
5349,source/pymupdf.pdf,"Represents the color space of a Pixmap.
"
5350,source/pymupdf.pdf,"Class API
"
5351,source/pymupdf.pdf,"class Colorspace
"
5352,source/pymupdf.pdf,"__init__(self, n)
"
5353,source/pymupdf.pdf,"Constructor
"
5354,source/pymupdf.pdf,"Parameters
"
5355,source/pymupdf.pdf,"n (int) – A number identifying the colorspace. Possible values are CS_RGB, CS_GRAY and
CS_CMYK.
"
5356,source/pymupdf.pdf,"188
Chapter 19. Classes
"
5357,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5358,source/pymupdf.pdf,"name
"
5359,source/pymupdf.pdf,"The name identifying the colorspace. Example: fitz.csCMYK.name = ‘DeviceCMYK’.
"
5360,source/pymupdf.pdf,"Type
"
5361,source/pymupdf.pdf,"str
"
5362,source/pymupdf.pdf,"n
"
5363,source/pymupdf.pdf,"The number of bytes required to define the color of one pixel. Example: fitz.csCMYK.n == 4.
"
5364,source/pymupdf.pdf,"type
"
5365,source/pymupdf.pdf,"int
"
5366,source/pymupdf.pdf,"Predefined Colorspaces
"
5367,source/pymupdf.pdf,"For saving some typing effort, there exist predefined colorspace objects for the three available cases.
"
5368,source/pymupdf.pdf,"• csRGB = fitz.Colorspace(fitz.CS_RGB)
"
5369,source/pymupdf.pdf,"• csGRAY = fitz.Colorspace(fitz.CS_GRAY)
"
5370,source/pymupdf.pdf,"• csCMYK = fitz.Colorspace(fitz.CS_CMYK)
"
5371,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
5372,source/pymupdf.pdf,"19.4 DisplayList
"
5373,source/pymupdf.pdf,"DisplayList is a list containing drawing commands (text, images, etc.). The intent is two-fold:
"
5374,source/pymupdf.pdf,"1. as a caching-mechanism to reduce parsing of a page
"
5375,source/pymupdf.pdf,"2. as a data structure in multi-threading setups, where one thread parses the page and another one renders pages.
This aspect is currently not supported by PyMuPDF.
"
5376,source/pymupdf.pdf,"A display list is populated with objects from a page, usually by executing Page.get_displaylist(). There also
exists an independent constructor.
"
5377,source/pymupdf.pdf,"“Replay” the list (once or many times) by invoking one of its methods run(), get_pixmap() or get_textpage().
"
5378,source/pymupdf.pdf,"Method
Short Description
"
5379,source/pymupdf.pdf,"run()
Run a display list through a device.
"
5380,source/pymupdf.pdf,"get_pixmap()
generate a pixmap
"
5381,source/pymupdf.pdf,"get_textpage()
generate a text page
"
5382,source/pymupdf.pdf,"rect
mediabox of the display list
"
5383,source/pymupdf.pdf,"Class API
"
5384,source/pymupdf.pdf,"class DisplayList
"
5385,source/pymupdf.pdf,"__init__(self, mediabox)
"
5386,source/pymupdf.pdf,"Create a new display list.
"
5387,source/pymupdf.pdf,"Parameters
"
5388,source/pymupdf.pdf,"mediabox (Rect) – The page’s rectangle.
"
5389,source/pymupdf.pdf,"Return type
"
5390,source/pymupdf.pdf,"DisplayList
"
5391,source/pymupdf.pdf,"19.4. DisplayList
189
"
5392,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5393,source/pymupdf.pdf,"run(device, matrix, area)
"
5394,source/pymupdf.pdf,"Run the display list through a device. The device will populate the display list with its “commands” (i.e.
text extraction or image creation). The display list can later be used to “read” a page many times without
having to re-interpret it from the document file.
"
5395,source/pymupdf.pdf,"You will most probably instead use one of the specialized run methods below – get_pixmap() or
get_textpage().
"
5396,source/pymupdf.pdf,"Parameters
"
5397,source/pymupdf.pdf,"• device (Device) – Device
"
5398,source/pymupdf.pdf,"• matrix (Matrix) – Transformation matrix to apply to the display list contents.
"
5399,source/pymupdf.pdf,"• area (Rect) – Only the part visible within this area will be considered when the list is run
through the device.
"
5400,source/pymupdf.pdf,"get_pixmap(matrix=fitz.Identity, colorspace=fitz.csRGB, alpha=0, clip=None)
"
5401,source/pymupdf.pdf,"Run the display list through a draw device and return a pixmap.
"
5402,source/pymupdf.pdf,"Parameters
"
5403,source/pymupdf.pdf,"• matrix (Matrix) – matrix to use. Default is the identity matrix.
"
5404,source/pymupdf.pdf,"• colorspace (Colorspace) – the desired colorspace. Default is RGB.
"
5405,source/pymupdf.pdf,"• alpha (int) – determine whether or not (0, default) to include a transparency channel.
"
5406,source/pymupdf.pdf,"• clip (irect_like) – restrict rendering to the intersection of this area with
"
5407,source/pymupdf.pdf,"DisplayList.rect.
"
5408,source/pymupdf.pdf,"Return type
"
5409,source/pymupdf.pdf,"Pixmap
"
5410,source/pymupdf.pdf,"Returns
"
5411,source/pymupdf.pdf,"pixmap of the display list.
"
5412,source/pymupdf.pdf,"get_textpage(flags)
"
5413,source/pymupdf.pdf,"Run the display list through a text device and return a text page.
"
5414,source/pymupdf.pdf,"Parameters
"
5415,source/pymupdf.pdf,"flags (int) – control which information is parsed into a text page.
Default value
in PyMuPDF is 3 = TEXT_PRESERVE_LIGATURES | TEXT_PRESERVE_WHITESPACE, i.e.
ligatures are passed through, white spaces are passed through (not translated to spaces),
and images are not included. See Text Extraction Flags.
"
5416,source/pymupdf.pdf,"Return type
"
5417,source/pymupdf.pdf,"TextPage
"
5418,source/pymupdf.pdf,"Returns
"
5419,source/pymupdf.pdf,"text page of the display list.
"
5420,source/pymupdf.pdf,"rect
"
5421,source/pymupdf.pdf,"Contains the display list’s mediabox. This will equal the page’s rectangle if it was created via Page.
get_displaylist().
"
5422,source/pymupdf.pdf,"Type
"
5423,source/pymupdf.pdf,"Rect
"
5424,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
5425,source/pymupdf.pdf,"190
Chapter 19. Classes
"
5426,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5427,source/pymupdf.pdf,"19.5 Document
"
5428,source/pymupdf.pdf,"This class represents a document. It can be constructed from a file or from memory.
"
5429,source/pymupdf.pdf,"There exists the alias open for this class, i.e. fitz.Document(...) and fitz.open(...) do exactly the same thing.
"
5430,source/pymupdf.pdf,"For details on embedded files refer to Appendix 3.
"
5431,source/pymupdf.pdf,"Note:
Starting with v1.17.0, a new page addressing mechanism for EPUB files only is supported. This document
type is internally organized in chapters such that pages can most efficiently be found by their so-called “location”. The
location is a tuple (chapter, pno) consisting of the chapter number and the page number in that chapter. Both numbers
are zero-based.
"
5432,source/pymupdf.pdf,"While it is still possible to locate a page via its (absolute) number, doing so may mean that the complete EPUB document
must be laid out before the page can be addressed. This may have a significant performance impact if the document is
very large. Using the page’s (chapter, pno) prevents this from happening.
"
5433,source/pymupdf.pdf,"To maintain a consistent API, PyMuPDF supports the page location syntax for all file types – documents without this
feature simply have just one chapter. Document.load_page() and the equivalent index access now also support a
location argument.
"
5434,source/pymupdf.pdf,"There are a number of methods for converting between page numbers and locations, for determining the chapter count,
the page count per chapter, for computing the next and the previous locations, and the last page location of a document.
"
5435,source/pymupdf.pdf,"Method / Attribute
Short Description
"
5436,source/pymupdf.pdf,"Document.add_layer()
PDF only: make new optional content configuration
"
5437,source/pymupdf.pdf,"Document.add_ocg()
PDF only: add new optional content group
"
5438,source/pymupdf.pdf,"Document.authenticate()
gain access to an encrypted document
"
5439,source/pymupdf.pdf,"Document.can_save_incrementally()
check if incremental save is possible
"
5440,source/pymupdf.pdf,"Document.chapter_page_count()
number of pages in chapter
"
5441,source/pymupdf.pdf,"Document.close()
close the document
"
5442,source/pymupdf.pdf,"Document.convert_to_pdf()
write a PDF version to memory
"
5443,source/pymupdf.pdf,"Document.copy_page()
PDF only: copy a page reference
"
5444,source/pymupdf.pdf,"Document.del_toc_item()
PDF only: remove a single TOC item
"
5445,source/pymupdf.pdf,"Document.delete_page()
PDF only: delete a page
"
5446,source/pymupdf.pdf,"Document.delete_pages()
PDF only: delete multiple pages
"
5447,source/pymupdf.pdf,"Document.embfile_add()
PDF only: add a new embedded file from buffer
"
5448,source/pymupdf.pdf,"Document.embfile_count()
PDF only: number of embedded files
"
5449,source/pymupdf.pdf,"Document.embfile_del()
PDF only: delete an embedded file entry
"
5450,source/pymupdf.pdf,"Document.embfile_get()
PDF only: extract an embedded file buffer
"
5451,source/pymupdf.pdf,"Document.embfile_info()
PDF only: metadata of an embedded file
"
5452,source/pymupdf.pdf,"Document.embfile_names()
PDF only: list of embedded files
"
5453,source/pymupdf.pdf,"Document.embfile_upd()
PDF only: change an embedded file
"
5454,source/pymupdf.pdf,"Document.extract_font()
PDF only: extract a font by xref
"
5455,source/pymupdf.pdf,"Document.extract_image()
PDF only: extract an embedded image by xref
"
5456,source/pymupdf.pdf,"Document.ez_save()
PDF only: Document.save() with different defaults
"
5457,source/pymupdf.pdf,"Document.find_bookmark()
retrieve page location after laid out document
"
5458,source/pymupdf.pdf,"Document.fullcopy_page()
PDF only: duplicate a page
"
5459,source/pymupdf.pdf,"Document.get_layer()
PDF only: lists of OCGs in ON, OFF, RBGroups
"
5460,source/pymupdf.pdf,"Document.get_layers()
PDF only: list of optional content configurations
"
5461,source/pymupdf.pdf,"Document.get_oc()
PDF only: get OCG /OCMD xref of image / form xobject
"
5462,source/pymupdf.pdf,"Document.get_ocgs()
PDF only: info on all optional content groups
"
5463,source/pymupdf.pdf,"continues on next page
"
5464,source/pymupdf.pdf,"19.5. Document
191
"
5465,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5466,source/pymupdf.pdf,"Table 2 – continued from previous page
"
5467,source/pymupdf.pdf,"Method / Attribute
Short Description
"
5468,source/pymupdf.pdf,"Document.get_ocmd()
PDF only: retrieve definition of an OCMD
"
5469,source/pymupdf.pdf,"Document.get_page_fonts()
PDF only: list of fonts referenced by a page
"
5470,source/pymupdf.pdf,"Document.get_page_images()
PDF only: list of images referenced by a page
"
5471,source/pymupdf.pdf,"Document.get_page_labels()
PDF only: list of page label definitions
"
5472,source/pymupdf.pdf,"Document.get_page_numbers()
PDF only: get page numbers having a given label
"
5473,source/pymupdf.pdf,"Document.get_page_pixmap()
create a pixmap of a page by page number
"
5474,source/pymupdf.pdf,"Document.get_page_text()
extract the text of a page by page number
"
5475,source/pymupdf.pdf,"Document.get_page_xobjects()
PDF only: list of XObjects referenced by a page
"
5476,source/pymupdf.pdf,"Document.get_sigflags()
PDF only: determine signature state
"
5477,source/pymupdf.pdf,"Document.get_toc()
extract the table of contents
"
5478,source/pymupdf.pdf,"Document.get_xml_metadata()
PDF only: read the XML metadata
"
5479,source/pymupdf.pdf,"Document.has_annots()
PDF only: check if PDF contains any annots
"
5480,source/pymupdf.pdf,"Document.has_links()
PDF only: check if PDF contains any links
"
5481,source/pymupdf.pdf,"Document.insert_page()
PDF only: insert a new page
"
5482,source/pymupdf.pdf,"Document.insert_pdf()
PDF only: insert pages from another PDF
"
5483,source/pymupdf.pdf,"Document.insert_file()
PDF only: insert pages from arbitrary document
"
5484,source/pymupdf.pdf,"Document.journal_can_do()
PDF only: which journal actions are possible
"
5485,source/pymupdf.pdf,"Document.journal_enable()
PDF only: enables journalling for the document
"
5486,source/pymupdf.pdf,"Document.journal_load()
PDF only: load journal from a file
"
5487,source/pymupdf.pdf,"Document.journal_op_name()
PDF only: return name of a journalling step
"
5488,source/pymupdf.pdf,"Document.journal_position()
PDF only: return journalling status
"
5489,source/pymupdf.pdf,"Document.journal_redo()
PDF only: redo current operation
"
5490,source/pymupdf.pdf,"Document.journal_save()
PDF only: save journal to a file
"
5491,source/pymupdf.pdf,"Document.journal_start_op()
PDF only: start an “operation” giving it a name
"
5492,source/pymupdf.pdf,"Document.journal_stop_op()
PDF only: end current operation
"
5493,source/pymupdf.pdf,"Document.journal_undo()
PDF only: undo current operation
"
5494,source/pymupdf.pdf,"Document.layer_ui_configs()
PDF only: list of optional content intents
"
5495,source/pymupdf.pdf,"Document.layout()
re-paginate the document (if supported)
"
5496,source/pymupdf.pdf,"Document.load_page()
read a page
"
5497,source/pymupdf.pdf,"Document.make_bookmark()
create a page pointer in reflowable documents
"
5498,source/pymupdf.pdf,"Document.move_page()
PDF only: move a page to different location in doc
"
5499,source/pymupdf.pdf,"Document.need_appearances()
PDF only: get/set /NeedAppearances property
"
5500,source/pymupdf.pdf,"Document.new_page()
PDF only: insert a new empty page
"
5501,source/pymupdf.pdf,"Document.next_location()
return (chapter, pno) of following page
"
5502,source/pymupdf.pdf,"Document.outline_xref()
PDF only: xref a TOC item
"
5503,source/pymupdf.pdf,"Document.page_cropbox()
PDF only: the unrotated page rectangle
"
5504,source/pymupdf.pdf,"Document.page_xref()
PDF only: xref of a page number
"
5505,source/pymupdf.pdf,"Document.pages()
iterator over a page range
"
5506,source/pymupdf.pdf,"Document.pdf_catalog()
PDF only: xref of catalog (root)
"
5507,source/pymupdf.pdf,"Document.pdf_trailer()
PDF only: trailer source
"
5508,source/pymupdf.pdf,"Document.prev_location()
return (chapter, pno) of preceding page
"
5509,source/pymupdf.pdf,"Document.reload_page()
PDF only: provide a new copy of a page
"
5510,source/pymupdf.pdf,"Document.resolve_names()
PDF only: Convert destination names into a Python dict
"
5511,source/pymupdf.pdf,"Document.save()
PDF only: save the document
"
5512,source/pymupdf.pdf,"Document.saveIncr()
PDF only: save the document incrementally
"
5513,source/pymupdf.pdf,"Document.scrub()
PDF only: remove sensitive data
"
5514,source/pymupdf.pdf,"Document.search_page_for()
search for a string on a page
"
5515,source/pymupdf.pdf,"Document.select()
PDF only: select a subset of pages
"
5516,source/pymupdf.pdf,"Document.set_layer_ui_config()
PDF only: set OCG visibility temporarily
"
5517,source/pymupdf.pdf,"continues on next page
"
5518,source/pymupdf.pdf,"192
Chapter 19. Classes
"
5519,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5520,source/pymupdf.pdf,"Table 2 – continued from previous page
"
5521,source/pymupdf.pdf,"Method / Attribute
Short Description
"
5522,source/pymupdf.pdf,"Document.set_layer()
PDF only: mass changing OCG states
"
5523,source/pymupdf.pdf,"Document.set_markinfo()
PDF only: set the MarkInfo values
"
5524,source/pymupdf.pdf,"Document.set_metadata()
PDF only: set the metadata
"
5525,source/pymupdf.pdf,"Document.set_oc()
PDF only: attach OCG/OCMD to image / form xobject
"
5526,source/pymupdf.pdf,"Document.set_ocmd()
PDF only: create or update an OCMD
"
5527,source/pymupdf.pdf,"Document.set_page_labels()
PDF only: add/update page label definitions
"
5528,source/pymupdf.pdf,"Document.set_pagemode()
PDF only: set the PageMode
"
5529,source/pymupdf.pdf,"Document.set_pagelayout()
PDF only: set the PageLayout
"
5530,source/pymupdf.pdf,"Document.set_toc_item()
PDF only: change a single TOC item
"
5531,source/pymupdf.pdf,"Document.set_toc()
PDF only: set the table of contents (TOC)
"
5532,source/pymupdf.pdf,"Document.set_xml_metadata()
PDF only: create or update document XML metadata
"
5533,source/pymupdf.pdf,"Document.subset_fonts()
PDF only: create font subsets
"
5534,source/pymupdf.pdf,"Document.switch_layer()
PDF only: activate OC configuration
"
5535,source/pymupdf.pdf,"Document.tobytes()
PDF only: writes document to memory
"
5536,source/pymupdf.pdf,"Document.xref_copy()
PDF only: copy a PDF dictionary to another xref
"
5537,source/pymupdf.pdf,"Document.xref_get_key()
PDF only: get the value of a dictionary key
"
5538,source/pymupdf.pdf,"Document.xref_get_keys()
PDF only: list the keys of object at xref
"
5539,source/pymupdf.pdf,"Document.xref_object()
PDF only: get the definition source of xref
"
5540,source/pymupdf.pdf,"Document.xref_set_key()
PDF only: set the value of a dictionary key
"
5541,source/pymupdf.pdf,"Document.xref_stream_raw()
PDF only: raw stream source at xref
"
5542,source/pymupdf.pdf,"Document.xref_xml_metadata()
PDF only: xref of XML metadata
"
5543,source/pymupdf.pdf,"Document.chapter_count
number of chapters
"
5544,source/pymupdf.pdf,"Document.FormFonts
PDF only: list of global widget fonts
"
5545,source/pymupdf.pdf,"Document.is_closed
has document been closed?
"
5546,source/pymupdf.pdf,"Document.is_dirty
PDF only: has document been changed yet?
"
5547,source/pymupdf.pdf,"Document.is_encrypted
document (still) encrypted?
"
5548,source/pymupdf.pdf,"Document.is_fast_webaccess
is PDF linearized?
"
5549,source/pymupdf.pdf,"Document.is_form_pdf
is this a Form PDF?
"
5550,source/pymupdf.pdf,"Document.is_pdf
is this a PDF?
"
5551,source/pymupdf.pdf,"Document.is_reflowable
is this a reflowable document?
"
5552,source/pymupdf.pdf,"Document.is_repaired
PDF only: has this PDF been repaired during open?
"
5553,source/pymupdf.pdf,"Document.last_location
(chapter, pno) of last page
"
5554,source/pymupdf.pdf,"Document.metadata
metadata
"
5555,source/pymupdf.pdf,"Document.markinfo
PDF MarkInfo value
"
5556,source/pymupdf.pdf,"Document.name
filename of document
"
5557,source/pymupdf.pdf,"Document.needs_pass
require password to access data?
"
5558,source/pymupdf.pdf,"Document.outline
first Outline item
"
5559,source/pymupdf.pdf,"Document.page_count
number of pages
"
5560,source/pymupdf.pdf,"Document.permissions
permissions to access the document
"
5561,source/pymupdf.pdf,"Document.pagemode
PDF PageMode value
"
5562,source/pymupdf.pdf,"Document.pagelayout
PDF PageLayout value
"
5563,source/pymupdf.pdf,"Document.version_count
PDF count of versions
"
5564,source/pymupdf.pdf,"Class API
"
5565,source/pymupdf.pdf,"class Document
"
5566,source/pymupdf.pdf,"__init__(self, filename=None, stream=None, *, filetype=None, rect=None, width=0, height=0,
fontsize=11)
"
5567,source/pymupdf.pdf,"• Changed in v1.14.13: support io.BytesIO for memory documents.
• Changed in v1.19.6: Clearer, shorter and more consistent exception messages. File type
"
5568,source/pymupdf.pdf,"19.5. Document
193
"
5569,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5570,source/pymupdf.pdf,"“pdf” is always assumed if not specified. Empty files and memory areas will always lead to
exceptions.
Creates a Document object.
"
5571,source/pymupdf.pdf,"• With default parameters, a new empty PDF document will be created.
• If stream is given, then the document is created from memory and, if not a PDF, either
filename or filetype must indicate its type.
"
5572,source/pymupdf.pdf,"• If stream is None, then a document is created from the file given by filename. Its type is
inferred from the extension. This can be overruled by filetype.
"
5573,source/pymupdf.pdf,"Parameters
"
5574,source/pymupdf.pdf,"• filename (str,pathlib) – A UTF-8 string or pathlib object containing a file
path. The document type is inferred from the filename extension. If not present or
not matching a supported type, a PDF document is assumed. For memory docu-
ments, this argument may be used instead of filetype, see below.
"
5575,source/pymupdf.pdf,"• stream (bytes,bytearray,BytesIO) – A memory area containing a supported
document.
If not a PDF, its type must be specified by either filename or
filetype.
"
5576,source/pymupdf.pdf,"• filetype (str) – A string specifying the type of document. This may be anything
looking like a filename (e.g. “x.pdf”), in which case MuPDF uses the extension to
determine the type, or a mime type like application/pdf. Just using strings like
“pdf” or “.pdf” will also work. May be omitted for PDF documents, otherwise
must match a supported document type.
"
5577,source/pymupdf.pdf,"• rect (rect_like) – a rectangle specifying the desired page size. This parameter
is only meaningful for documents with a variable page layout (“reflowable” docu-
ments), like e-books or HTML, and ignored otherwise. If specified, it must be a
non-empty, finite rectangle with top-left coordinates (0, 0). Together with param-
eter fontsize, each page will be accordingly laid out and hence also determine the
number of pages.
"
5578,source/pymupdf.pdf,"• width (float) – may used together with height as an alternative to rect to specify
layout information.
"
5579,source/pymupdf.pdf,"• height (float) – may used together with width as an alternative to rect to specify
layout information.
"
5580,source/pymupdf.pdf,"• fontsize (float) – the default fontsize for reflowable document types. This
parameter is ignored if none of the parameters rect or width and height are specified.
Will be used to calculate the page layout.
"
5581,source/pymupdf.pdf,"Raises
"
5582,source/pymupdf.pdf,"• TypeError – if the type of any parameter does not conform.
• FileNotFoundError – if the file / path cannot be found. Re-implemented as sub-
class of RuntimeError.
"
5583,source/pymupdf.pdf,"• EmptyFileError – if the file / path is empty or the bytes object in memory has
zero length. A subclass of FileDataError and RuntimeError.
"
5584,source/pymupdf.pdf,"• ValueError – if an unknown file type is explicitly specified.
• FileDataError – if the document has an invalid structure for the given type – or
is no file at all (but e.g. a folder). A subclass of RuntimeError.
"
5585,source/pymupdf.pdf,"Returns
"
5586,source/pymupdf.pdf,"A document object.
If the document cannot be created,
an exception
is raised in the above sequence.
Note that PyMuPDF-specific exceptions,
FileNotFoundError, EmptyFileError and FileDataError are intercepted if you
check for RuntimeError.
"
5587,source/pymupdf.pdf,"In case of problems you can see more detail in the internal messages store:
print(fitz.TOOLS.mupdf_warnings()) (which will be emptied by this call, but
you can also prevent this – consult Tools.mupdf_warnings()).
"
5588,source/pymupdf.pdf,"194
Chapter 19. Classes
"
5589,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5590,source/pymupdf.pdf,"Note:
Not all document types are checked for valid formats already at open time. Raster im-
ages for example will raise exceptions only later, when trying to access the content. Other types
(notably with non-binary content) may also be opened (and sometimes accessed) successfully –
sometimes even when having invalid content for the format:
"
5591,source/pymupdf.pdf,"• HTM, HTML, XHTML: always opened, metadata[""format""] is “HTML5”, resp.
“XHTML”.
"
5592,source/pymupdf.pdf,"• XML, FB2: always opened, metadata[""format""] is “FictionBook2”.
"
5593,source/pymupdf.pdf,"Overview of possible forms, note: open is a synonym of Document:
"
5594,source/pymupdf.pdf,">>> # from a file
>>> doc = fitz.open(""some.xps"")
>>> # handle wrong extension
>>> doc = fitz.open(""some.file"", filetype=""xps"")
>>>
>>> # from memory, filetype is required if not a PDF
>>> doc = fitz.open(""xps"", mem_area)
>>> doc = fitz.open(None, mem_area, ""xps"")
>>> doc = fitz.open(stream=mem_area, filetype=""xps"")
>>>
>>> # new empty PDF
>>> doc = fitz.open()
>>> doc = fitz.open(None)
>>> doc = fitz.open("""")
"
5595,source/pymupdf.pdf,"Note:
Raster images with a wrong (but supported) file extension are no problem. MuPDF
will determine the correct image type when file content is actually accessed and will process it
without complaint. So fitz.open(""file.jpg"") will work even for a PNG image.
"
5596,source/pymupdf.pdf,"The Document class can be also be used as a context manager. On exit, the document will
automatically be closed.
"
5597,source/pymupdf.pdf,">>> import fitz
>>> with fitz.open(...) as doc:
"
5598,source/pymupdf.pdf,"for page in doc: print(""page %i"" % page.number)
"
5599,source/pymupdf.pdf,"page 0
page 1
page 2
page 3
>>> doc.is_closed
True
>>>
"
5600,source/pymupdf.pdf,"get_oc(xref )
"
5601,source/pymupdf.pdf,"• New in v1.18.4
Return the cross reference number of an OCG or OCMD attached to an image or form xobject.
"
5602,source/pymupdf.pdf,"Parameters
"
5603,source/pymupdf.pdf,"xref (int) – the xref of an image or form xobject.
Valid such cross refer-
ence numbers are returned by Document.get_page_images(), resp. Document.
get_page_xobjects(). For invalid numbers, an exception is raised.
"
5604,source/pymupdf.pdf,"Return type
"
5605,source/pymupdf.pdf,"19.5. Document
195
"
5606,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5607,source/pymupdf.pdf,"int
"
5608,source/pymupdf.pdf,"Returns
"
5609,source/pymupdf.pdf,"the cross reference number of an optional contents object or zero if there is none.
"
5610,source/pymupdf.pdf,"set_oc(xref, ocxref )
"
5611,source/pymupdf.pdf,"• New in v1.18.4
If xref represents an image or form xobject, set or remove the cross reference number ocxref of
an optional contents object.
"
5612,source/pymupdf.pdf,"Parameters
"
5613,source/pymupdf.pdf,"• xref (int) – the xref of an image or form xobject5. Valid such cross refer-
ence numbers are returned by Document.get_page_images(), resp. Document.
get_page_xobjects(). For invalid numbers, an exception is raised.
"
5614,source/pymupdf.pdf,"• ocxref (int) – the xref number of an OCG / OCMD. If not zero, an invalid reference
raises an exception. If zero, any OC reference is removed.
"
5615,source/pymupdf.pdf,"get_layers()
"
5616,source/pymupdf.pdf,"• New in v1.18.3
Show optional layer configurations. There always is a standard one, which is not included in the
response.
"
5617,source/pymupdf.pdf,">>> for item in doc.get_layers(): print(item)
{'number': 0, 'name': 'my-config', 'creator': ''}
>>> # use 'number' as config identifier in add_ocg
"
5618,source/pymupdf.pdf,"add_layer(name, creator=None, on=None)
"
5619,source/pymupdf.pdf,"• New in v1.18.3
Add an optional content configuration. Layers serve as a collection of ON / OFF states for op-
tional content groups and allow fast visibility switches between different views on the same doc-
ument.
"
5620,source/pymupdf.pdf,"Parameters
"
5621,source/pymupdf.pdf,"• name (str) – arbitrary name.
• creator (str) – (optional) creating software.
• on (sequ) – a sequence of OCG xref numbers which should be set to ON when
this layer gets activated. All OCGs not listed here will be set to OFF.
"
5622,source/pymupdf.pdf,"switch_layer(number, as_default=False)
"
5623,source/pymupdf.pdf,"• New in v1.18.3
Switch to a document view as defined by the optional layer’s configuration number. This is
temporary, except if established as default.
"
5624,source/pymupdf.pdf,"Parameters
"
5625,source/pymupdf.pdf,"• number (int) – config number as returned by Document.layer_configs().
• as_default (bool) – make this the default configuration.
Activates the ON / OFF states of OCGs as defined in the identified layer. If as_default=True,
then additionally all layers, including the standard one, are merged and the result is written back
to the standard layer, and all optional layers are deleted.
"
5626,source/pymupdf.pdf,"add_ocg(name, config=-1, on=True, intent='View', usage='Artwork')
"
5627,source/pymupdf.pdf,"• New in v1.18.3
Add an optional content group. An OCG is the most important unit of information to determine
object visibility. For a PDF, in order to be regarded as having optional content, at least one OCG
must exist.
"
5628,source/pymupdf.pdf,"Parameters
"
5629,source/pymupdf.pdf,"• name (str) – arbitrary name. Will show up in supporting PDF viewers.
"
5630,source/pymupdf.pdf,"5 Examples for “Form XObjects” are created by Page.show_pdf_page().
"
5631,source/pymupdf.pdf,"196
Chapter 19. Classes
"
5632,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5633,source/pymupdf.pdf,"• config (int) – layer configuration number. Default -1 is the standard configura-
tion.
"
5634,source/pymupdf.pdf,"• on (bool) – standard visibility status for objects pointing to this OCG.
• intent (str,list) – a string or list of strings declaring the visibility intents.
There are two PDF standard values to choose from: “View” and “Design”. Default
is “View”. Correct spelling is important.
"
5635,source/pymupdf.pdf,"• usage (str) – another influencer for OCG visibility. This will become part of the
OCG’s /Usage key. There are two PDF standard values to choose from: “Artwork”
and “Technical”. Default is “Artwork”. Please only change when required.
"
5636,source/pymupdf.pdf,"Returns
"
5637,source/pymupdf.pdf,"xref of the created OCG. Use as entry for oc parameter in supporting objects.
"
5638,source/pymupdf.pdf,"Note: Multiple OCGs with identical parameters may be created. This will not cause problems.
Garbage option 3 of Document.save() will get rid of any duplicates.
"
5639,source/pymupdf.pdf,"set_ocmd(xref=0, ocgs=None, policy='AnyOn', ve=None)
"
5640,source/pymupdf.pdf,"• New in v1.18.4
Create or update an OCMD, Optional Content Membership Dictionary.
"
5641,source/pymupdf.pdf,"Parameters
"
5642,source/pymupdf.pdf,"• xref (int) – xref of the OCMD to be updated, or 0 for a new OCMD.
• ocgs (list) – a sequence of xref numbers of existing OCG PDF objects.
• policy (str) – one of “AnyOn” (default), “AnyOff”, “AllOn”, “AllOff” (mixed or
lower case).
"
5643,source/pymupdf.pdf,"• ve (list) – a “visibility expression”. This is a list of arbitrarily nested other lists
– see explanation below. Use as an alternative to the combination ocgs / policy if
you need to formulate more complex conditions.
"
5644,source/pymupdf.pdf,"Return type
"
5645,source/pymupdf.pdf,"int
"
5646,source/pymupdf.pdf,"Returns
"
5647,source/pymupdf.pdf,"xref of the OCMD. Use as oc=xref parameter in supporting objects, and respec-
tively in Document.set_oc() or Annot.set_oc().
"
5648,source/pymupdf.pdf,"Note:
Like an OCG, an OCMD has a visibility state ON or OFF, and it can be used like an
OCG. In contrast to an OCG, the OCMD state is determined by evaluating the state of one or
more OCGs via special forms of boolean expressions. If the expression evaluates to true, the
OCMD state is ON and OFF for false.
"
5649,source/pymupdf.pdf,"There are two ways to formulate OCMD visibility:
1. Use the combination of ocgs and policy: The policy value is interpreted as follows:
"
5650,source/pymupdf.pdf,"• AnyOn – (default) true if at least one OCG is ON.
• AnyOff – true if at least one OCG is OFF.
• AllOn – true if all OCGs are ON.
• AllOff – true if all OCGs are OFF.
"
5651,source/pymupdf.pdf,"Suppose you want two PDF objects be displayed exactly one at a time (if one is ON, then
the other one must be OFF):
"
5652,source/pymupdf.pdf,"Solution: use an OCG for object 1 and an OCMD for object 2. Create the OCMD via
set_ocmd(ocgs=[xref], policy=""AllOff""), with the xref of the OCG.
"
5653,source/pymupdf.pdf,"2. Use the visibility expression ve: This is a list of two or more items. The first item is a
logical keyword: one of the strings “and”, “or”, or “not”. The second and all subsequent
items must either be an integer or another list. An integer must be the xref number of an
OCG. A list must again have at least two items starting with one of the boolean keywords.
This syntax is a bit awkward, but quite powerful:
"
5654,source/pymupdf.pdf,"19.5. Document
197
"
5655,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5656,source/pymupdf.pdf,"• Each list must start with a logical keyword.
• If the keyword is a “not”, then the list must have exactly two items. If it is “and” or
“or”, any number of other items may follow.
"
5657,source/pymupdf.pdf,"• Items following the logical keyword may be either integers or again a list. An integer
must be the xref of an OCG. A list must conform to the previous rules.
"
5658,source/pymupdf.pdf,"Examples:
• set_ocmd(ve=[""or"", 4, [""not"", 5], [""and"", 6, 7]]). This delivers ON if
the following is true: “4 is ON, or 5 is OFF, or 6 and 7 are both ON”.
"
5659,source/pymupdf.pdf,"• set_ocmd(ve=[""not"", xref]). This has the same effect as the OCMD example
created under 1.
For more details and examples see page 224 of Adobe PDF References. Also do have a
look at example scripts here.
"
5660,source/pymupdf.pdf,"Visibility expressions, /VE, are part of PDF specification version 1.6. So not all PDF
viewers / readers may already support this feature and hence will react in some standard
way for those cases.
"
5661,source/pymupdf.pdf,"get_ocmd(xref )
"
5662,source/pymupdf.pdf,"• New in v1.18.4
Retrieve the definition of an OCMD.
"
5663,source/pymupdf.pdf,"Parameters
"
5664,source/pymupdf.pdf,"xref (int) – the xref of the OCMD.
"
5665,source/pymupdf.pdf,"Return type
"
5666,source/pymupdf.pdf,"dict
"
5667,source/pymupdf.pdf,"Returns
"
5668,source/pymupdf.pdf,"a dictionary with the keys xref, ocgs, policy and ve.
"
5669,source/pymupdf.pdf,"get_layer(config=-1)
"
5670,source/pymupdf.pdf,"• New in v1.18.3
List of optional content groups by status in the specified configuration. This is a dictionary with
lists of cross reference numbers for OCGs that occur in the arrays /ON, /OFF or in some radio
button group (/RBGroups).
"
5671,source/pymupdf.pdf,"Parameters
"
5672,source/pymupdf.pdf,"config (int) – the configuration layer (default is the standard config layer).
"
5673,source/pymupdf.pdf,">>> pprint(doc.get_layer())
{'off': [8, 9, 10], 'on': [5, 6, 7], 'rbgroups': [[7, 10]]}
>>>
"
5674,source/pymupdf.pdf,"set_layer(config, *, on=None, off=None, basestate=None, rbgroups=None, locked=None)
"
5675,source/pymupdf.pdf,"• New in v1.18.3
• Changed in v1.22.5: Support list of locked OCGs.
Mass status changes of optional content groups. Permanently sets the status of OCGs.
"
5676,source/pymupdf.pdf,"Parameters
"
5677,source/pymupdf.pdf,"• config (int) – desired configuration layer, choose -1 for the default one.
• on (list) – list of xref of OCGs to set ON. Replaces previous values.
An
empty list will cause no OCG being set to ON anymore. Should be specified if
basestate=""ON"" is used.
"
5678,source/pymupdf.pdf,"• off (list) – list of xref of OCGs to set OFF. Replaces previous values. An
empty list will cause no OCG being set to OFF anymore. Should be specified if
basestate=""OFF"" is used.
"
5679,source/pymupdf.pdf,"• basestate (str) – state of OCGs that are not mentioned in on or off. Possible
values are “ON”, “OFF” or “Unchanged”. Upper / lower case possible.
"
5680,source/pymupdf.pdf,"198
Chapter 19. Classes
"
5681,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5682,source/pymupdf.pdf,"• rbgroups (list) – a list of lists. Replaces previous values. Each sublist should
contain two or more OCG xrefs. OCGs in the same sublist are handled like but-
tons in a radio button group: setting one to ON automatically sets all other group
members to OFF.
"
5683,source/pymupdf.pdf,"• locked (list) – a list of OCG xref number that cannot be changed by the user
interface.
Values None will not change the corresponding PDF array.
"
5684,source/pymupdf.pdf,">>> doc.set_layer(-1, basestate=""OFF"")
# only changes the base state
"
5685,source/pymupdf.pdf,">>> pprint(doc.get_layer())
{'basestate': 'OFF', 'off': [8, 9, 10], 'on': [5, 6, 7], 'rbgroups':␣
"
5686,source/pymupdf.pdf,"˓→[[7, 10]]}
"
5687,source/pymupdf.pdf,"get_ocgs()
"
5688,source/pymupdf.pdf,"• New in v1.18.3
Details of all optional content groups. This is a dictionary of dictionaries like this (key is the
OCG’s xref):
"
5689,source/pymupdf.pdf,">>> pprint(doc.get_ocgs())
{13: {'on': True,
"
5690,source/pymupdf.pdf,"'intent': ['View', 'Design'],
'name': 'Circle',
'usage': 'Artwork'},
"
5691,source/pymupdf.pdf,"14: {'on': True,
"
5692,source/pymupdf.pdf,"'intent': ['View', 'Design'],
'name': 'Square',
'usage': 'Artwork'},
"
5693,source/pymupdf.pdf,"15: {'on': False, 'intent': ['View'], 'name': 'Square', 'usage':
"
5694,source/pymupdf.pdf,"˓→'Artwork'}}
>>>
"
5695,source/pymupdf.pdf,"layer_ui_configs()
"
5696,source/pymupdf.pdf,"• New in v1.18.3
Show the visibility status of optional content that is modifiable by the user interface of supporting
PDF viewers.
"
5697,source/pymupdf.pdf,"• Only reports items contained in the currently selected layer configuration.
• The meaning of the dictionary keys is as follows:
"
5698,source/pymupdf.pdf,"– depth: item’s nesting level in the /Order array
– locked: true if cannot be changed via user interfaces
– number: running sequence number
– on: item state
– text: text string or name field of the originating OCG
– type: one of “label” (set by a text string), “checkbox” (set by a single OCG) or “ra-
diobox” (set by a set of connected OCGs)
"
5699,source/pymupdf.pdf,"set_layer_ui_config(number, action=0)
"
5700,source/pymupdf.pdf,"• New in v1.18.3
Modify OC visibility status of content groups. This is analog to what supporting PDF viewers
would offer.
"
5701,source/pymupdf.pdf,"Please note that visibility is not a property stored with the OCG. It is not even infor-
mation necessarily present in the PDF document at all. Instead, the current visibility is
temporarily set using the user interface of some supporting PDF consumer software.
The same type of functionality is offered by this method.
"
5702,source/pymupdf.pdf,"To make permanent changes, use Document.set_layer().
"
5703,source/pymupdf.pdf,"19.5. Document
199
"
5704,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5705,source/pymupdf.pdf,"Parameters
"
5706,source/pymupdf.pdf,"• number (int,str) – either the sequence number of the item in list Document.
layer_configs() or the “text” of one of these items.
"
5707,source/pymupdf.pdf,"• action (int) – PDF_OC_ON = set on (default), PDF_OC_TOGGLE = toggle on/off,
PDF_OC_OFF = set off.
"
5708,source/pymupdf.pdf,"authenticate(password)
"
5709,source/pymupdf.pdf,"Decrypts the document with the string password. If successful, document data can be accessed.
For PDF documents, the “owner” and the “user” have different privileges, and hence different
passwords may exist for these authorization levels. The method will automatically establish the
appropriate (owner or user) access rights for the provided password.
"
5710,source/pymupdf.pdf,"Parameters
"
5711,source/pymupdf.pdf,"password (str) – owner or user password.
"
5712,source/pymupdf.pdf,"Return type
"
5713,source/pymupdf.pdf,"int
"
5714,source/pymupdf.pdf,"Returns
"
5715,source/pymupdf.pdf,"a positive value if successful, zero otherwise (the string does not match either pass-
word). If positive, the indicator Document.is_encrypted is set to False. Positive
return codes carry the following information detail:
• 1 => authenticated, but the PDF has neither owner nor user passwords.
• 2 => authenticated with the user password.
• 4 => authenticated with the owner password.
• 6 => authenticated and both passwords are equal – probably a rare situation.
"
5716,source/pymupdf.pdf,"Note:
The document may be protected by an owner, but not by a user password.
Detect this situation via doc.authenticate("""") == 2. This allows opening and
reading the document without authentication, but, depending on the Document.
permissions value, other actions may be prohibited. PyMuPDF (like MuPDF) in
this case ignores those restrictions. So, – in contrast to any PDF viewers – you can
for example extract text and add or modify content, even if the respective permission
flags PDF_PERM_COPY, PDF_PERM_MODIFY, PDF_PERM_ANNOTATE, etc. are set off!
It is your responsibility building a legally compliant application where applicable.
"
5717,source/pymupdf.pdf,"get_page_numbers(label, only_one=False)
"
5718,source/pymupdf.pdf,"• New in v 1.18.6
PDF only: Return a list of page numbers that have the specified label – note that labels may not
be unique in a PDF. This implies a sequential search through all page numbers to compare their
labels.
"
5719,source/pymupdf.pdf,"Note: Implementation detail – pages are not loaded for this purpose.
"
5720,source/pymupdf.pdf,"Parameters
"
5721,source/pymupdf.pdf,"• label (str) – the label to look for, e.g. “vii” (Roman number 7).
• only_one (bool) – stop after first hit. Useful e.g. if labelling is known to be
unique, or there are many pages, etc. The default will check every page number.
"
5722,source/pymupdf.pdf,"Return type
"
5723,source/pymupdf.pdf,"list
"
5724,source/pymupdf.pdf,"Returns
"
5725,source/pymupdf.pdf,"list of page numbers that have this label. Empty if none found, no labels defined, etc.
"
5726,source/pymupdf.pdf,"get_page_labels()
"
5727,source/pymupdf.pdf,"• New in v1.18.7
"
5728,source/pymupdf.pdf,"200
Chapter 19. Classes
"
5729,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5730,source/pymupdf.pdf,"PDF only: Extract the list of page label definitions. Typically used for modifications before
feeding it into Document.set_page_labels().
"
5731,source/pymupdf.pdf,"Returns
"
5732,source/pymupdf.pdf,"a list of dictionaries as defined in Document.set_page_labels().
"
5733,source/pymupdf.pdf,"set_page_labels(labels)
"
5734,source/pymupdf.pdf,"• New in v1.18.6
PDF only: Add or update the page label definitions of the PDF.
"
5735,source/pymupdf.pdf,"Parameters
"
5736,source/pymupdf.pdf,"labels (list) – a list of dictionaries. Each dictionary defines a label building rule
and a 0-based “start” page number. That start page is the first for which the label defini-
tion is valid. Each dictionary has up to 4 items and looks like {'startpage':
int,
'prefix':
str, 'style':
str, 'firstpagenum':
int} and has the fol-
lowing items.
• startpage: (int) the first page number (0-based) to apply the label rule. This key
must be present. The rule is applied to all subsequent pages until either end of
document or superseded by the rule with the next larger page number.
"
5737,source/pymupdf.pdf,"• prefix: (str) an arbitrary string to start the label with, e.g. “A-”. Default is “”.
• style: (str) the numbering style. Available are “D” (decimal), “r”/”R” (Roman
numbers, lower / upper case), and “a”/”A” (lower / upper case alphabetical num-
bering: “a” through “z”, then “aa” through “zz”, etc.). Default is “”. If “”, no
numbering will take place and the pages in that range will receive the same label
consisting of the prefix value. If prefix is also omitted, then the label will be “”.
"
5738,source/pymupdf.pdf,"• firstpagenum: (int) start numbering with this value. Default is 1, smaller values
are ignored.
For example:
"
5739,source/pymupdf.pdf,"[{'startpage': 6, 'prefix': 'A-', 'style': 'D', 'firstpagenum': 10},
{'startpage': 10, 'prefix': '', 'style': 'D', 'firstpagenum': 1}]
"
5740,source/pymupdf.pdf,"will generate the labels “A-10”, “A-11”, “A-12”, “A-13”, “1”, “2”, “3”, ... for pages 6, 7 and so
on until end of document. Pages 0 through 5 will have the label “”.
"
5741,source/pymupdf.pdf,"make_bookmark(loc)
"
5742,source/pymupdf.pdf,"• New in v.1.17.3
Return a page pointer in a reflowable document. After re-layouting the document, the result of
this method can be used to find the new location of the page.
"
5743,source/pymupdf.pdf,"Note: Do not confuse with items of a table of contents, TOC.
"
5744,source/pymupdf.pdf,"Parameters
"
5745,source/pymupdf.pdf,"loc (list,tuple) – page location. Must be a valid (chapter, pno).
"
5746,source/pymupdf.pdf,"Return type
"
5747,source/pymupdf.pdf,"pointer
"
5748,source/pymupdf.pdf,"Returns
"
5749,source/pymupdf.pdf,"a long integer in pointer format. To be used for finding the new location of the page
after re-layouting the document. Do not touch or re-assign.
"
5750,source/pymupdf.pdf,"find_bookmark(bookmark)
"
5751,source/pymupdf.pdf,"• New in v.1.17.3
Return the new page location after re-layouting the document.
"
5752,source/pymupdf.pdf,"Parameters
"
5753,source/pymupdf.pdf,"bookmark (pointer) – created by Document.make_bookmark().
"
5754,source/pymupdf.pdf,"19.5. Document
201
"
5755,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5756,source/pymupdf.pdf,"Return type
"
5757,source/pymupdf.pdf,"tuple
"
5758,source/pymupdf.pdf,"Returns
"
5759,source/pymupdf.pdf,"the new (chapter, pno) of the page.
"
5760,source/pymupdf.pdf,"chapter_page_count(chapter)
"
5761,source/pymupdf.pdf,"• New in v.1.17.0
Return the number of pages of a chapter.
"
5762,source/pymupdf.pdf,"Parameters
"
5763,source/pymupdf.pdf,"chapter (int) – the 0-based chapter number.
"
5764,source/pymupdf.pdf,"Return type
"
5765,source/pymupdf.pdf,"int
"
5766,source/pymupdf.pdf,"Returns
"
5767,source/pymupdf.pdf,"number of pages in chapter. Relevant only for document types with chapter support
(EPUB currently).
"
5768,source/pymupdf.pdf,"next_location(page_id)
"
5769,source/pymupdf.pdf,"• New in v.1.17.0
Return the location of the following page.
"
5770,source/pymupdf.pdf,"Parameters
"
5771,source/pymupdf.pdf,"page_id (tuple) – the current page id. This must be a tuple (chapter, pno) identifying
an existing page.
"
5772,source/pymupdf.pdf,"Returns
"
5773,source/pymupdf.pdf,"The tuple of the following page, i.e. either (chapter, pno + 1) or (chapter + 1, 0), or
the empty tuple () if the argument was the last page. Relevant only for document types
with chapter support (EPUB currently).
"
5774,source/pymupdf.pdf,"prev_location(page_id)
"
5775,source/pymupdf.pdf,"• New in v.1.17.0
Return the locator of the preceding page.
"
5776,source/pymupdf.pdf,"Parameters
"
5777,source/pymupdf.pdf,"page_id (tuple) – the current page id. This must be a tuple (chapter, pno) identifying
an existing page.
"
5778,source/pymupdf.pdf,"Returns
"
5779,source/pymupdf.pdf,"The tuple of the preceding page, i.e. either (chapter, pno - 1) or the last page of the
preceding chapter, or the empty tuple () if the argument was the first page. Relevant
only for document types with chapter support (EPUB currently).
"
5780,source/pymupdf.pdf,"load_page(page_id=0)
"
5781,source/pymupdf.pdf,"• Changed in v1.17.0: For document types supporting a so-called “chapter structure” (like
EPUB), pages can also be loaded via the combination of chapter number and relative page
number, instead of the absolute page number. This should significantly speed up access for
large documents.
Create a Page object for further processing (like rendering, text searching, etc.).
"
5782,source/pymupdf.pdf,"Parameters
"
5783,source/pymupdf.pdf,"page_id (int,tuple) – (Changed in v1.17.0)
"
5784,source/pymupdf.pdf,"Either a 0-based page number, or a tuple (chapter, pno). For an integer, any -∞
< page_id < page_count is acceptable. While page_id is negative, page_count
will be added to it. For example: to load the last page, you can use doc.load_page(-1).
After this you have page.number = doc.page_count - 1.
"
5785,source/pymupdf.pdf,"For a tuple, chapter must be in range Document.chapter_count, and pno must be
in range Document.chapter_page_count() of that chapter. Both values are 0-
based. Using this notation, Page.number will equal the given tuple. Relevant only
for document types with chapter support (EPUB currently).
"
5786,source/pymupdf.pdf,"202
Chapter 19. Classes
"
5787,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5788,source/pymupdf.pdf,"Return type
"
5789,source/pymupdf.pdf,"Page
"
5790,source/pymupdf.pdf,"Note:
Documents also follow the Python sequence protocol with page numbers as indices:
doc.load_page(n) == doc[n].
"
5791,source/pymupdf.pdf,"For absolute page numbers only, expressions like “for page in doc: ...” and “for page in re-
versed(doc): ...” will successively yield the document’s pages. Refer to Document.pages() which
allows processing pages as with slicing.
"
5792,source/pymupdf.pdf,"You can also use index notation with the new chapter-based page identification: use page = doc[(5,
2)] to load the third page of the sixth chapter.
"
5793,source/pymupdf.pdf,"To maintain a consistent API, for document types not supporting a chapter structure (like PDFs),
Document.chapter_count is 1, and pages can also be loaded via tuples (0, pno). See this3 footnote
for comments on performance improvements.
"
5794,source/pymupdf.pdf,"reload_page(page)
"
5795,source/pymupdf.pdf,"• New in v1.16.10
PDF only: Provide a new copy of a page after finishing and updating all pending changes.
"
5796,source/pymupdf.pdf,"Parameters
"
5797,source/pymupdf.pdf,"page (Page) – page object.
"
5798,source/pymupdf.pdf,"Return type
"
5799,source/pymupdf.pdf,"Page
"
5800,source/pymupdf.pdf,"Returns
"
5801,source/pymupdf.pdf,"a new copy of the same page. All pending updates (e.g. to annotations or widgets)
will be finalized and a fresh copy of the page will be loaded.
"
5802,source/pymupdf.pdf,"Note: In a typical use case, a page Pixmap should be taken after annotations / wid-
gets have been added or changed. To force all those changes being reflected in the
page structure, this method re-instates a fresh copy while keeping the object hierarchy
“document -> page -> annotations/widgets” intact.
"
5803,source/pymupdf.pdf,"resolve_names()
"
5804,source/pymupdf.pdf,"PDF only: Convert destination names into a Python dict.
"
5805,source/pymupdf.pdf,"Only available in PyMuPDF’s “rebased” implementation.
"
5806,source/pymupdf.pdf,"Returns
"
5807,source/pymupdf.pdf,"A dictionary with the following layout:
• key: (str) the name.
• value: (dict) with the following layout:
"
5808,source/pymupdf.pdf,"– ”page”: target page number (0-based). If no page number found -1.
– ”to”: (x, y) target point on page. Currently in PDF coordinates, i.e. point (0,0)
is the bottom-left of the page.
"
5809,source/pymupdf.pdf,"– ”zoom”: (float) the zoom factor.
– ”dest”: (str) only present if the target location on the page has not been pro-
vided as “/XYZ” or if no page number was found.
Examples:
"
5810,source/pymupdf.pdf,"3 For applicable (EPUB) document types, loading a page via its absolute number may result in layouting a large part of the document, before
the page can be accessed. To avoid this performance impact, prefer chapter-based access. Use convenience methods and attributes Document.
next_location(), Document.prev_location() and Document.last_location for maintaining a high level of coding efficiency.
"
5811,source/pymupdf.pdf,"19.5. Document
203
"
5812,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5813,source/pymupdf.pdf,"{
"
5814,source/pymupdf.pdf,"'__bookmark_1': {'page': 0, 'to': (0.0, 541.0), 'zoom': 0.0}
"
5815,source/pymupdf.pdf,"˓→,
"
5816,source/pymupdf.pdf,"'__bookmark_2': {'page': 0, 'to': (0.0, 481.45), 'zoom': 0.
"
5817,source/pymupdf.pdf,"˓→0},
}
"
5818,source/pymupdf.pdf,"or:
"
5819,source/pymupdf.pdf,"{
"
5820,source/pymupdf.pdf,"'21154a7c20684ceb91f9c9adc3b677c40': {'page': -1, 'dest': '/
"
5821,source/pymupdf.pdf,"˓→XYZ 15.75 1486 0'},
"
5822,source/pymupdf.pdf,"...
"
5823,source/pymupdf.pdf,"}
"
5824,source/pymupdf.pdf,"All names found in the catalog under keys “/Dests” and “/Names/Dests” are included.
"
5825,source/pymupdf.pdf,"• New in v1.23.6
"
5826,source/pymupdf.pdf,"page_cropbox(pno)
"
5827,source/pymupdf.pdf,"• New in v1.17.7
"
5828,source/pymupdf.pdf,"PDF only: Return the unrotated page rectangle – without loading the page (via Document.
load_page()). This is meant for internal purpose requiring best possible performance.
"
5829,source/pymupdf.pdf,"Parameters
"
5830,source/pymupdf.pdf,"pno (int) – 0-based page number.
"
5831,source/pymupdf.pdf,"Returns
"
5832,source/pymupdf.pdf,"Rect of the page like Page.rect(), but ignoring any rotation.
"
5833,source/pymupdf.pdf,"page_xref(pno)
"
5834,source/pymupdf.pdf,"• New in v1.17.7
"
5835,source/pymupdf.pdf,"PDF only: Return the xref of the page – without loading the page (via Document.
load_page()). This is meant for internal purpose requiring best possible performance.
"
5836,source/pymupdf.pdf,"Parameters
"
5837,source/pymupdf.pdf,"pno (int) – 0-based page number.
"
5838,source/pymupdf.pdf,"Returns
"
5839,source/pymupdf.pdf,"xref of the page like Page.xref.
"
5840,source/pymupdf.pdf,"pages(start=None[, stop=None[, step=None]])
"
5841,source/pymupdf.pdf,"• New in v1.16.4
"
5842,source/pymupdf.pdf,"A generator for a range of pages. Parameters have the same meaning as in the built-in function
range(). Intended for expressions of the form “for page in doc.pages(start, stop, step): ...”.
"
5843,source/pymupdf.pdf,"Parameters
"
5844,source/pymupdf.pdf,"• start (int) – start iteration with this page number. Default is zero, al-
lowed values are -∞ < start < page_count. While this is negative,
page_count is added before starting the iteration.
"
5845,source/pymupdf.pdf,"• stop (int) – stop iteration at this page number. Default is page_count,
possible are -∞ < stop <= page_count. Larger values are silently re-
placed by the default. Negative values will cyclically emit the pages in
"
5846,source/pymupdf.pdf,"204
Chapter 19. Classes
"
5847,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5848,source/pymupdf.pdf,"reversed order. As with the built-in range(), this is the first page not re-
turned.
"
5849,source/pymupdf.pdf,"• step (int) – stepping value. Defaults are 1 if start < stop and -1 if start >
stop. Zero is not allowed.
"
5850,source/pymupdf.pdf,"Returns
"
5851,source/pymupdf.pdf,"a generator iterator over the document’s pages. Some examples:
"
5852,source/pymupdf.pdf,"• ”doc.pages()” emits all pages.
"
5853,source/pymupdf.pdf,"• ”doc.pages(4, 9, 2)” emits pages 4, 6, 8.
"
5854,source/pymupdf.pdf,"• ”doc.pages(0, None, 2)” emits all pages with even numbers.
"
5855,source/pymupdf.pdf,"• ”doc.pages(-2)” emits the last two pages.
"
5856,source/pymupdf.pdf,"• ”doc.pages(-1, -1)” emits all pages in reversed order.
"
5857,source/pymupdf.pdf,"• ”doc.pages(-1, -10)” always emits 10 pages in reversed order, starting with
the last page – repeatedly if the document has less than 10 pages. So for a
4-page document the following page numbers are emitted: 3, 2, 1, 0, 3, 2,
1, 0, 3, 2, 1, 0, 3.
"
5858,source/pymupdf.pdf,"convert_to_pdf(from_page=-1, to_page=-1, rotate=0)
"
5859,source/pymupdf.pdf,"Create a PDF version of the current document and write it to memory. All document types are
supported. The parameters have the same meaning as in insert_pdf(). In essence, you can
restrict the conversion to a page subset, specify page rotation, and revert page sequence.
"
5860,source/pymupdf.pdf,"Parameters
"
5861,source/pymupdf.pdf,"• from_page (int) – first page to copy (0-based). Default is first page.
"
5862,source/pymupdf.pdf,"• to_page (int) – last page to copy (0-based). Default is last page.
"
5863,source/pymupdf.pdf,"• rotate (int) – rotation angle. Default is 0 (no rotation). Should be n *
90 with an integer n (not checked).
"
5864,source/pymupdf.pdf,"Return type
"
5865,source/pymupdf.pdf,"bytes
"
5866,source/pymupdf.pdf,"Returns
"
5867,source/pymupdf.pdf,"a Python bytes object containing a PDF file image. It is created by internally us-
ing tobytes(garbage=4, deflate=True). See tobytes(). You can out-
put it directly to disk or open it as a PDF. Here are some examples:
"
5868,source/pymupdf.pdf,">>> # convert an XPS file to PDF
>>> xps = fitz.open(""some.xps"")
>>> pdfbytes = xps.convert_to_pdf()
>>>
>>> # either do this -->
>>> pdf = fitz.open(""pdf"", pdfbytes)
>>> pdf.save(""some.pdf"")
>>>
>>> # or this -->
>>> pdfout = open(""some.pdf"", ""wb"")
>>> pdfout.tobytes(pdfbytes)
>>> pdfout.close()
"
5869,source/pymupdf.pdf,"19.5. Document
205
"
5870,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5871,source/pymupdf.pdf,">>> # copy image files to PDF pages
>>> # each page will have image dimensions
>>> doc = fitz.open()
# new PDF
"
5872,source/pymupdf.pdf,">>> imglist = [ ... image file names ...] # e.g. a␣
"
5873,source/pymupdf.pdf,"˓→directory listing
>>> for img in imglist:
"
5874,source/pymupdf.pdf,"imgdoc=fitz.open(img)
# open image as a␣
"
5875,source/pymupdf.pdf,"˓→document
"
5876,source/pymupdf.pdf,"pdfbytes=imgdoc.convert_to_pdf()
# make a 1-page␣
"
5877,source/pymupdf.pdf,"˓→PDF of it
"
5878,source/pymupdf.pdf,"imgpdf=fitz.open(""pdf"", pdfbytes)
doc.insert_pdf(imgpdf)
# insert the␣
"
5879,source/pymupdf.pdf,"˓→image PDF
>>> doc.save(""allmyimages.pdf"")
"
5880,source/pymupdf.pdf,"Note:
The method uses the same logic as the mutool convert CLI. This works very well in
most cases – however, beware of the following limitations.
"
5881,source/pymupdf.pdf,"• Image files: perfect, no issues detected. However, image transparency is ignored. If you
need that (like for a watermark), use Page.insert_image() instead. Otherwise, this
method is recommended for its much better performance.
"
5882,source/pymupdf.pdf,"• XPS: appearance very good. Links work fine, outlines (bookmarks) are lost, but can easily
be recovered2.
"
5883,source/pymupdf.pdf,"• EPUB, CBZ, FB2: similar to XPS.
"
5884,source/pymupdf.pdf,"• SVG: medium. Roughly comparable to svglib.
"
5885,source/pymupdf.pdf,"get_toc(simple=True)
"
5886,source/pymupdf.pdf,"Creates a table of contents (TOC) out of the document’s outline chain.
"
5887,source/pymupdf.pdf,"Parameters
"
5888,source/pymupdf.pdf,"simple (bool) – Indicates whether a simple or a detailed TOC is required. If
False, each item of the list also contains a dictionary with linkDest details for
each outline entry.
"
5889,source/pymupdf.pdf,"Return type
"
5890,source/pymupdf.pdf,"list
"
5891,source/pymupdf.pdf,"Returns
"
5892,source/pymupdf.pdf,"a list of lists. Each entry has the form [lvl, title, page, dest]. Its entries have the
following meanings:
"
5893,source/pymupdf.pdf,"• lvl – hierarchy level (positive int). The first entry is always 1. Entries in a
row are either equal, increase by 1, or decrease by any number.
"
5894,source/pymupdf.pdf,"• title – title (str)
"
5895,source/pymupdf.pdf,"• page – 1-based source page number (int). -1 if no destination or outside
document.
"
5896,source/pymupdf.pdf,"• dest – (dict) included only if simple=False. Contains details of the TOC
item as follows:
"
5897,source/pymupdf.pdf,"2 However, you can use Document.get_toc() and Page.get_links() (which are available for all document types) and copy this information
over to the output PDF. See demo convert.py.
"
5898,source/pymupdf.pdf,"206
Chapter 19. Classes
"
5899,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5900,source/pymupdf.pdf,"– kind: destination kind, see Link Destination Kinds.
"
5901,source/pymupdf.pdf,"– file: filename if kind is LINK_GOTOR or LINK_LAUNCH.
"
5902,source/pymupdf.pdf,"– page: target page, 0-based, LINK_GOTOR or LINK_GOTO only.
"
5903,source/pymupdf.pdf,"– to: position on target page (Point).
"
5904,source/pymupdf.pdf,"– zoom: (float) zoom factor on target page.
"
5905,source/pymupdf.pdf,"– xref: xref of the item (0 if no PDF).
"
5906,source/pymupdf.pdf,"– color: item color in PDF RGB format (red, green, blue), or omit-
ted (always omitted if no PDF).
"
5907,source/pymupdf.pdf,"– bold: true if bold item text or omitted. PDF only.
"
5908,source/pymupdf.pdf,"– italic: true if italic item text, or omitted. PDF only.
"
5909,source/pymupdf.pdf,"– collapse: true if sub-items are folded, or omitted. PDF only.
"
5910,source/pymupdf.pdf,"– nameddest: target name if kind=4. PDF only. (New in 1.23.7.)
"
5911,source/pymupdf.pdf,"xref_get_keys(xref )
"
5912,source/pymupdf.pdf,"• New in v1.18.7
"
5913,source/pymupdf.pdf,"PDF only: Return the PDF dictionary keys of the dictionary object provided by its xref
number.
"
5914,source/pymupdf.pdf,"Parameters
"
5915,source/pymupdf.pdf,"xref (int) – the xref. (Changed in v1.18.10) Use -1 to access the special
dictionary “PDF trailer”.
"
5916,source/pymupdf.pdf,"Returns
"
5917,source/pymupdf.pdf,"a tuple of dictionary keys present in object xref. Examples:
"
5918,source/pymupdf.pdf,">>> from pprint import pprint
>>> import fitz
>>> doc=fitz.open(""pymupdf.pdf"")
>>> xref = doc.page_xref(0)
# xref of page 0
"
5919,source/pymupdf.pdf,">>> pprint(doc.xref_get_keys(xref))
# primary level keys␣
"
5920,source/pymupdf.pdf,"˓→of a page
('Type', 'Contents', 'Resources', 'MediaBox', 'Parent')
>>> pprint(doc.xref_get_keys(-1))
# primary level keys of␣
"
5921,source/pymupdf.pdf,"˓→the trailer
('Type', 'Index', 'Size', 'W', 'Root', 'Info', 'ID',
"
5922,source/pymupdf.pdf,"˓→'Length', 'Filter')
>>>
"
5923,source/pymupdf.pdf,"xref_get_key(xref, key)
"
5924,source/pymupdf.pdf,"• New in v1.18.7
"
5925,source/pymupdf.pdf,"PDF only: Return type and value of a PDF dictionary key of a dictionary object given by its
xref.
"
5926,source/pymupdf.pdf,"Parameters
"
5927,source/pymupdf.pdf,"• xref (int) – the xref. Changed in v1.18.10: Use -1 to access the special
dictionary “PDF trailer”.
"
5928,source/pymupdf.pdf,"19.5. Document
207
"
5929,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5930,source/pymupdf.pdf,"• key (str) – the desired PDF key. Must exactly match (case-sensitive) one
of the keys contained in Document.xref_get_keys().
"
5931,source/pymupdf.pdf,"Return type
"
5932,source/pymupdf.pdf,"tuple
"
5933,source/pymupdf.pdf,"Returns
"
5934,source/pymupdf.pdf,"A tuple (type, value) of strings, where type is one of “xref”, “array”, “dict”,
“int”, “float”, “null”, “bool”, “name”, “string” or “unknown” (should not oc-
cur). Independent of “type”, the value of the key is always formatted as a string
– see the following example – and (almost always) a faithful reflection of what
is stored in the PDF. In most cases, the format of the value string also gives a
clue about the key type:
"
5935,source/pymupdf.pdf,"• A “name” always starts with a “/” slash.
"
5936,source/pymupdf.pdf,"• An “xref” always ends with “ 0 R”.
"
5937,source/pymupdf.pdf,"• An “array” is always enclosed in “[...]” brackets.
"
5938,source/pymupdf.pdf,"• A “dict” is always enclosed in “<<...>>” brackets.
"
5939,source/pymupdf.pdf,"• A “bool”, resp. “null” always equal either “true”, “false”, resp. “null”.
"
5940,source/pymupdf.pdf,"• “float” and “int” are represented by their string format – and are thus not always distin-
guishable.
"
5941,source/pymupdf.pdf,"• A “string” is converted to UTF-8 and may therefore deviate from what is
stored in the PDF. For example, the PDF key “Author” may have a value of
“<FEFF004A006F0072006A00200058002E0020004D0063004B00690065>” in the file,
but the method will return ('string', 'Jorj X. McKie').
"
5942,source/pymupdf.pdf,">>> for key in doc.xref_get_keys(xref):
"
5943,source/pymupdf.pdf,"print(key, ""="" , doc.xref_get_key(xref, key))
"
5944,source/pymupdf.pdf,"Type = ('name', '/Page')
Contents = ('xref', '1297 0 R')
Resources = ('xref', '1296 0 R')
MediaBox = ('array', '[0 0 612 792]')
Parent = ('xref', '1301 0 R')
>>> #
>>> # Now same thing for the PDF trailer.
>>> # It has no xref, so -1 must be used instead.
>>> #
>>> for key in doc.xref_get_keys(-1):
"
5945,source/pymupdf.pdf,"print(key, ""="", doc.xref_get_key(-1, key))
"
5946,source/pymupdf.pdf,"Type = ('name', '/XRef')
Index = ('array', '[0 8802]')
Size = ('int', '8802')
W = ('array', '[1 3 1]')
Root = ('xref', '8799 0 R')
Info = ('xref', '8800 0 R')
ID = ('array', '[<DC9D56A6277EFFD82084E64F9441E18C>
"
5947,source/pymupdf.pdf,"˓→<DC9D56A6277EFFD82084E64F9441E18C>]')
Length = ('int', '21111')
Filter = ('name', '/FlateDecode')
>>>
"
5948,source/pymupdf.pdf,"208
Chapter 19. Classes
"
5949,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5950,source/pymupdf.pdf,"xref_set_key(xref, key, value)
"
5951,source/pymupdf.pdf,"• New in v1.18.7, changed in v 1.18.13
"
5952,source/pymupdf.pdf,"• Changed in v1.19.4: remove a key “physically” if set to “null”.
"
5953,source/pymupdf.pdf,"PDF only: Set (add, update, delete) the value of a PDF key for the dictionary object given
by its xref.
"
5954,source/pymupdf.pdf,"Caution: This is an expert function: if you do not know what you are doing, there is a high
risk to render (parts of) the PDF unusable. Please do consult Adobe PDF References about
object specification formats (page 18) and the structure of special dictionary types like page
objects.
"
5955,source/pymupdf.pdf,"Parameters
"
5956,source/pymupdf.pdf,"• xref (int) – the xref. Changed in v1.18.13: To update the PDF trailer,
specify -1.
"
5957,source/pymupdf.pdf,"• key (str) – the desired PDF key (without leading “/”). Must not be empty.
Any valid PDF key – whether already present in the object (which will
be overwritten) – or new. It is possible to use PDF path notation like
""Resources/ExtGState"" – which sets the value for key ""/ExtGState""
as a sub-object of ""/Resources"".
"
5958,source/pymupdf.pdf,"• value (str) – the value for the key. It must be a non-empty string and,
depending on the desired PDF object type, the following rules must be
observed. There is some syntax checking, but no type checking and no
checking if it makes sense PDF-wise, i.e. no semantics checking. Upper /
lower case is important!
"
5959,source/pymupdf.pdf,"• xref – must be provided as ""nnn 0 R"" with a valid xref number nnn of the PDF. The
suffix “0 R” is required to be recognizable as an xref by PDF applications.
"
5960,source/pymupdf.pdf,"• array – a string like ""[a b c d e f]"". The brackets are required. Array items must
be separated by at least one space (not commas like in Python). An empty array ""[]"" is
possible and equivalent to removing the key. Array items may be any PDF objects, like
dictionaries, xrefs, other arrays, etc. Like in Python, array items may be of different types.
"
5961,source/pymupdf.pdf,"• dict – a string like ""<< ... >>"". The brackets are required and must enclose a valid
PDF dictionary definition. The empty dictionary ""<<>>"" is possible and equivalent to
removing the key.
"
5962,source/pymupdf.pdf,"• int – an integer formatted as a string.
"
5963,source/pymupdf.pdf,"• float – a float formatted as a string. Scientific notation (with exponents) is not allowed
by PDF.
"
5964,source/pymupdf.pdf,"• null – the string ""null"". This is the PDF equivalent to Python’s None and causes the key
to be ignored – however not necessarily removed, resp. removed on saves with garbage
collection. Changed in v1.19.4: If the key is no path hierarchy (i.e. contains no slash “/”),
then it will be completely removed.
"
5965,source/pymupdf.pdf,"• bool – one of the strings ""true"" or ""false"".
"
5966,source/pymupdf.pdf,"• name – a valid PDF name with a leading slash like this: ""/PageLayout"". See page 16
of the Adobe PDF References.
"
5967,source/pymupdf.pdf,"19.5. Document
209
"
5968,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5969,source/pymupdf.pdf,"• string – a valid PDF string. All PDF strings must be enclosed by brackets. Denote the
empty string as ""()"". Depending on its content, the possible brackets are
"
5970,source/pymupdf.pdf,"– “(...)” for ASCII-only text. Reserved PDF characters must be backslash-escaped
and non-ASCII characters must be provided as 3-digit backslash-escaped octals –
including leading zeros. Example: 12 = 0x0C must be encoded as 014.
"
5971,source/pymupdf.pdf,"– “<...>” for hex-encoded text. Every character must be represented by two hex-digits
(lower or upper case).
"
5972,source/pymupdf.pdf,"– If in doubt, we strongly recommend to use get_pdf_str()! This function auto-
matically generates the right brackets, escapes, and overall format. It will for example
do conversions like these:
"
5973,source/pymupdf.pdf,">>> # because of the € symbol, the following yields UTF-16BE␣
"
5974,source/pymupdf.pdf,"˓→BOM
>>> fitz.get_pdf_str(""Pay in $ or €."")
'<feff00500061007900200069006e002000240020006f0072002020ac002e>
"
5975,source/pymupdf.pdf,"˓→'
>>> # escapes for brackets and non-ASCII
>>> fitz.get_pdf_str(""Prices in EUR (USD also accepted). Areas␣
"
5976,source/pymupdf.pdf,"˓→are in m2."")
'(Prices in EUR \\\\(USD also accepted\\\\). Areas are in m\\\\262.)'
"
5977,source/pymupdf.pdf,"get_page_pixmap(pno: int, *, matrix: matrix_like = Identity, dpi=None, colorspace: Colorspace
"
5978,source/pymupdf.pdf,"= csRGB, clip: rect_like = None, alpha: bool = False, annots: bool = True)
"
5979,source/pymupdf.pdf,"Creates a pixmap from page pno (zero-based). Invokes Page.get_pixmap().
"
5980,source/pymupdf.pdf,"All parameters except pno are keyword-only.
"
5981,source/pymupdf.pdf,"Parameters
"
5982,source/pymupdf.pdf,"pno (int) – page number, 0-based in -∞ < pno < page_count.
"
5983,source/pymupdf.pdf,"Return type
"
5984,source/pymupdf.pdf,"Pixmap
"
5985,source/pymupdf.pdf,"get_page_xobjects(pno)
"
5986,source/pymupdf.pdf,"• New in v1.16.13
"
5987,source/pymupdf.pdf,"• Changed in v1.18.11
"
5988,source/pymupdf.pdf,"PDF only: Return a list of all XObjects referenced by a page.
"
5989,source/pymupdf.pdf,"Parameters
"
5990,source/pymupdf.pdf,"pno (int) – page number, 0-based, -∞ < pno < page_count.
"
5991,source/pymupdf.pdf,"Return type
"
5992,source/pymupdf.pdf,"list
"
5993,source/pymupdf.pdf,"Returns
"
5994,source/pymupdf.pdf,"a list of (non-image) XObjects. These objects typically represent pages em-
bedded (not copied) from other PDFs. For example, Page.show_pdf_page()
will create this type of object. An item of this list has the following layout:
(xref, name, invoker, bbox), where
"
5995,source/pymupdf.pdf,"• xref (int) is the XObject’s xref.
"
5996,source/pymupdf.pdf,"• name (str) is the symbolic name to reference the XObject.
"
5997,source/pymupdf.pdf,"210
Chapter 19. Classes
"
5998,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
5999,source/pymupdf.pdf,"• invoker (int) the xref of the invoking XObject or zero if the page directly
invokes it.
"
6000,source/pymupdf.pdf,"• bbox (Rect) the boundary box of the XObject’s location on the page
in untransformed coordinates.
To get actual, non-rotated page
coordinates, multiply with the page’s transformation matrix Page.
transformation_matrix. Changed in v.18.11: the bbox is now format-
ted as Rect.
"
6001,source/pymupdf.pdf,"get_page_images(pno, full=False)
"
6002,source/pymupdf.pdf,"PDF only: Return a list of all images (directly or indirectly) referenced by the page.
"
6003,source/pymupdf.pdf,"Parameters
"
6004,source/pymupdf.pdf,"• pno (int) – page number, 0-based, -∞ < pno < page_count.
"
6005,source/pymupdf.pdf,"• full (bool) – whether to also include the referencer’s xref (which is zero
if this is the page).
"
6006,source/pymupdf.pdf,"Return type
"
6007,source/pymupdf.pdf,"list
"
6008,source/pymupdf.pdf,"Returns
"
6009,source/pymupdf.pdf,"a list of images referenced by this page. Each item looks like
"
6010,source/pymupdf.pdf,"(xref, smask, width, height, bpc, colorspace, alt.
colorspace, name, filter, referencer)
"
6011,source/pymupdf.pdf,"Where
"
6012,source/pymupdf.pdf,"• xref (int) is the image object number
"
6013,source/pymupdf.pdf,"• smask (int) is the object number of its soft-mask image
"
6014,source/pymupdf.pdf,"• width and height (ints) are the image dimensions
"
6015,source/pymupdf.pdf,"• bpc (int) denotes the number of bits per component (normally 8)
"
6016,source/pymupdf.pdf,"• colorspace (str) a string naming the colorspace (like DeviceRGB)
"
6017,source/pymupdf.pdf,"• alt. colorspace (str) is any alternate colorspace depending on the value of
colorspace
"
6018,source/pymupdf.pdf,"• name (str) is the symbolic name by which the image is referenced
"
6019,source/pymupdf.pdf,"• filter (str) is the decode filter of the image (Adobe PDF References, pp.
22).
"
6020,source/pymupdf.pdf,"• referencer (int) the xref of the referencer. Zero if directly referenced by
the page. Only present if full=True.
"
6021,source/pymupdf.pdf,"Note: In general, this is not the list of images that are actually displayed. This method only
parses several PDF objects to collect references to embedded images. It does not analyse the
page’s contents, where all the actual image display commands are defined. To get this infor-
mation, please use Page.get_image_info(). Also have a look at the discussion in section
Structure of Dictionary Outputs.
"
6022,source/pymupdf.pdf,"get_page_fonts(pno, full=False)
"
6023,source/pymupdf.pdf,"PDF only: Return a list of all fonts (directly or indirectly) referenced by the page.
"
6024,source/pymupdf.pdf,"Parameters
"
6025,source/pymupdf.pdf,"19.5. Document
211
"
6026,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6027,source/pymupdf.pdf,"• pno (int) – page number, 0-based, -∞ < pno < page_count.
"
6028,source/pymupdf.pdf,"• full (bool) – whether to also include the referencer’s xref. If True, the
returned items are one entry longer. Use this option if you need to know,
whether the page directly references the font. In this case the last entry is
0. If the font is referenced by an /XObject of the page, you will find its
xref here.
"
6029,source/pymupdf.pdf,"Return type
"
6030,source/pymupdf.pdf,"list
"
6031,source/pymupdf.pdf,"Returns
"
6032,source/pymupdf.pdf,"a list of fonts referenced by this page. Each entry looks like
"
6033,source/pymupdf.pdf,"(xref, ext, type, basefont, name, encoding, referencer),
"
6034,source/pymupdf.pdf,"where
"
6035,source/pymupdf.pdf,"• xref (int) is the font object number (may be zero if the PDF uses one of the builtin fonts
directly)
"
6036,source/pymupdf.pdf,"• ext (str) font file extension (e.g. “ttf”, see Font File Extensions)
"
6037,source/pymupdf.pdf,"• type (str) is the font type (like “Type1” or “TrueType” etc.)
"
6038,source/pymupdf.pdf,"• basefont (str) is the base font name,
"
6039,source/pymupdf.pdf,"• name (str) is the symbolic name, by which the font is referenced
"
6040,source/pymupdf.pdf,"• encoding (str) the font’s character encoding if different from its built-in encoding (Adobe
PDF References, p. 254):
"
6041,source/pymupdf.pdf,"• referencer (int optional) the xref of the referencer. Zero if directly referenced by the
page, otherwise the xref of an XObject. Only present if full=True.
"
6042,source/pymupdf.pdf,"Example:
"
6043,source/pymupdf.pdf,">>> pprint(doc.get_page_fonts(0, full=False))
[(12, 'ttf', 'TrueType', 'FNUUTH+Calibri-Bold', 'R8', ''),
"
6044,source/pymupdf.pdf,"(13, 'ttf', 'TrueType', 'DOKBTG+Calibri', 'R10', ''),
(14, 'ttf', 'TrueType', 'NOHSJV+Calibri-Light', 'R12', ''),
(15, 'ttf', 'TrueType', 'NZNDCL+CourierNewPSMT', 'R14', ''),
(16, 'ttf', 'Type0', 'MNCSJY+SymbolMT', 'R17', 'Identity-H'),
(17, 'cff', 'Type1', 'UAEUYH+Helvetica', 'R20', 'WinAnsiEncoding'),
(18, 'ttf', 'Type0', 'ECPLRU+Calibri', 'R23', 'Identity-H'),
(19, 'ttf', 'Type0', 'TONAYT+CourierNewPSMT', 'R27', 'Identity-H')]
"
6045,source/pymupdf.pdf,"Note:
"
6046,source/pymupdf.pdf,"• This list has no duplicate entries: the combination of xref, name and referencer is unique.
"
6047,source/pymupdf.pdf,"• In general, this is a superset of the fonts actually in use by this page. The PDF creator may
e.g. have specified some global list, of which each page only makes partial use.
"
6048,source/pymupdf.pdf,"get_page_text(pno, output='text', flags=3, textpage=None, sort=False)
"
6049,source/pymupdf.pdf,"Extracts the text of a page given its page number pno (zero-based). Invokes Page.get_text().
"
6050,source/pymupdf.pdf,"Parameters
"
6051,source/pymupdf.pdf,"pno (int) – page number, 0-based, any value -∞ < pno < page_count.
"
6052,source/pymupdf.pdf,"For other parameter refer to the page method.
"
6053,source/pymupdf.pdf,"212
Chapter 19. Classes
"
6054,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6055,source/pymupdf.pdf,"Return type
"
6056,source/pymupdf.pdf,"str
"
6057,source/pymupdf.pdf,"layout(rect=None, width=0, height=0, fontsize=11)
"
6058,source/pymupdf.pdf,"Re-paginate (“reflow”) the document based on the given page dimension and fontsize. This
only affects some document types like e-books and HTML. Ignored if not supported. Supported
documents have True in property is_reflowable.
"
6059,source/pymupdf.pdf,"Parameters
"
6060,source/pymupdf.pdf,"• rect (rect_like) – desired page size. Must be finite, not empty and start
at point (0, 0).
"
6061,source/pymupdf.pdf,"• width (float) – use it together with height as alternative to rect.
"
6062,source/pymupdf.pdf,"• height (float) – use it together with width as alternative to rect.
"
6063,source/pymupdf.pdf,"• fontsize (float) – the desired default fontsize.
"
6064,source/pymupdf.pdf,"select(s)
"
6065,source/pymupdf.pdf,"PDF only: Keeps only those pages of the document whose numbers occur in the list. Empty
sequences or elements outside range(doc.page_count) will cause a ValueError. For more
details see remarks at the bottom or this chapter.
"
6066,source/pymupdf.pdf,"Parameters
"
6067,source/pymupdf.pdf,"s (sequence) – The sequence (see Using Python Sequences as Arguments in
PyMuPDF) of page numbers (zero-based) to be included. Pages not in the se-
quence will be deleted (from memory) and become unavailable until the docu-
ment is reopened. Page numbers can occur multiple times and in any order:
the resulting document will reflect the sequence exactly as specified.
"
6068,source/pymupdf.pdf,"Note:
"
6069,source/pymupdf.pdf,"• Page numbers in the sequence need not be unique nor be in any particular order. This
makes the method a versatile utility to e.g. select only the even or the odd pages or meeting
some other criteria and so forth.
"
6070,source/pymupdf.pdf,"• On a technical level, the method will always create a new pagetree.
"
6071,source/pymupdf.pdf,"• When dealing with only a few pages,
methods copy_page(),
move_page(),
"
6072,source/pymupdf.pdf,"delete_page() are easier to use. In fact, they are also much faster – by at least one
order of magnitude when the document has many pages.
"
6073,source/pymupdf.pdf,"set_metadata(m)
"
6074,source/pymupdf.pdf,"PDF only: Sets or updates the metadata of the document as specified in m, a Python dictionary.
"
6075,source/pymupdf.pdf,"Parameters
"
6076,source/pymupdf.pdf,"m (dict) – A dictionary with the same keys as metadata (see below). All keys
are optional. A PDF’s format and encryption method cannot be set or changed
and will be ignored. If any value should not contain data, do not specify its key
or set the value to None. If you use {} all metadata information will be cleared to
the string “none”. If you want to selectively change only some values, modify
a copy of doc.metadata and use it as the argument. Arbitrary unicode values
are possible if specified as UTF-8-encoded.
"
6077,source/pymupdf.pdf,"(Changed in v1.18.4) Empty values or “none” are no longer written, but completely omitted.
"
6078,source/pymupdf.pdf,"get_xml_metadata()
"
6079,source/pymupdf.pdf,"PDF only: Get the document XML metadata.
"
6080,source/pymupdf.pdf,"19.5. Document
213
"
6081,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6082,source/pymupdf.pdf,"Return type
"
6083,source/pymupdf.pdf,"str
"
6084,source/pymupdf.pdf,"Returns
"
6085,source/pymupdf.pdf,"XML metadata of the document. Empty string if not present or not a PDF.
"
6086,source/pymupdf.pdf,"set_xml_metadata(xml)
"
6087,source/pymupdf.pdf,"PDF only: Sets or updates XML metadata of the document.
"
6088,source/pymupdf.pdf,"Parameters
"
6089,source/pymupdf.pdf,"xml (str) – the new XML metadata. Should be XML syntax, however no
checking is done by this method and any string is accepted.
"
6090,source/pymupdf.pdf,"set_pagelayout(value)
"
6091,source/pymupdf.pdf,"• New in v1.22.2
"
6092,source/pymupdf.pdf,"PDF only: Set the /PageLayout.
"
6093,source/pymupdf.pdf,"Parameters
"
6094,source/pymupdf.pdf,"value (str) – one of the strings “SinglePage”, “OneColumn”, “TwoColumn-
Left”, “TwoColumnRight”, “TwoPageLeft”, “TwoPageRight”. Lower case is
supported.
"
6095,source/pymupdf.pdf,"set_pagemode(value)
"
6096,source/pymupdf.pdf,"• New in v1.22.2
"
6097,source/pymupdf.pdf,"PDF only: Set the /PageMode.
"
6098,source/pymupdf.pdf,"Parameters
"
6099,source/pymupdf.pdf,"value (str) – one of the strings “UseNone”, “UseOutlines”, “UseThumbs”,
“FullScreen”, “UseOC”, “UseAttachments”. Lower case is supported.
"
6100,source/pymupdf.pdf,"set_markinfo(value)
"
6101,source/pymupdf.pdf,"• New in v1.22.2
"
6102,source/pymupdf.pdf,"PDF only: Set the /MarkInfo values.
"
6103,source/pymupdf.pdf,"Parameters
"
6104,source/pymupdf.pdf,"value (dict) – a dictionary like this one:
{""Marked"":
False,
""UserProperties"":
False, ""Suspects"":
False}.
This dictionary
contains information about the usage of Tagged PDF conventions. For details
please see the PDF specifications.
"
6105,source/pymupdf.pdf,"set_toc(toc, collapse=1)
"
6106,source/pymupdf.pdf,"PDF only: Replaces the complete current outline tree (table of contents) with the one provided
as the argument. After successful execution, the new outline tree can be accessed as usual via
Document.get_toc() or via Document.outline. Like with other output-oriented methods,
changes become permanent only via save() (incremental save supported). Internally, this
method consists of the following two steps. For a demonstration see example below.
"
6107,source/pymupdf.pdf,"• Step 1 deletes all existing bookmarks.
"
6108,source/pymupdf.pdf,"• Step 2 creates a new TOC from the entries contained in toc.
"
6109,source/pymupdf.pdf,"Parameters
"
6110,source/pymupdf.pdf,"• toc (sequence) – A list / tuple with all bookmark entries that should form
the new table of contents. Output variants of get_toc() are acceptable.
"
6111,source/pymupdf.pdf,"214
Chapter 19. Classes
"
6112,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6113,source/pymupdf.pdf,"To completely remove the table of contents specify an empty sequence or
None. Each item must be a list with the following format.
"
6114,source/pymupdf.pdf,"– [lvl, title, page [, dest]] where
"
6115,source/pymupdf.pdf,"∗ lvl is the hierarchy level (int > 0) of the item, which must be 1 for the
first item and at most 1 larger than the previous one.
"
6116,source/pymupdf.pdf,"∗ title (str) is the title to be displayed. It is assumed to be UTF-8-
encoded (relevant for multibyte code points only).
"
6117,source/pymupdf.pdf,"∗ page (int) is the target page number (attention: 1-based). Must be in
valid range if positive. Set it to -1 if there is no target, or the target is
external.
"
6118,source/pymupdf.pdf,"∗ dest (optional) is a dictionary or a number. If a number, it will be
interpreted as the desired height (in points) this entry should point
to on the page. Use a dictionary (like the one given as output by
get_toc(False)) for a detailed control of the bookmark’s proper-
ties, see Document.get_toc() for a description.
"
6119,source/pymupdf.pdf,"• collapse (int) – (new in v1.16.9) controls the hierarchy level beyond
which outline entries should initially show up collapsed. The default 1 will
hence only display level 1, higher levels must be unfolded using the PDF
viewer. To unfold everything, specify either a large integer, 0 or None.
"
6120,source/pymupdf.pdf,"Return type
"
6121,source/pymupdf.pdf,"int
"
6122,source/pymupdf.pdf,"Returns
"
6123,source/pymupdf.pdf,"the number of inserted, resp. deleted items.
"
6124,source/pymupdf.pdf,"Changed in v1.23.8: Destination ‘to’ coordinates should now be in the same coordinate system
as those returned by get_toc() (internally they are now transformed with page.cropbox
and page.rotation_matrix). So for example set_toc(get_toc()) now gives unchanged
destination ‘to’ coordinates.
"
6125,source/pymupdf.pdf,"outline_xref(idx)
"
6126,source/pymupdf.pdf,"• New in v1.17.7
"
6127,source/pymupdf.pdf,"PDF only: Return the xref of the outline item. This is mainly used for internal purposes.
"
6128,source/pymupdf.pdf,"arg int idx: index of the item in list Document.get_toc().
"
6129,source/pymupdf.pdf,"Returns
"
6130,source/pymupdf.pdf,"xref.
"
6131,source/pymupdf.pdf,"del_toc_item(idx)
"
6132,source/pymupdf.pdf,"• New in v1.17.7
"
6133,source/pymupdf.pdf,"• Changed in v1.18.14: no longer remove the item’s text, but show it grayed-out.
"
6134,source/pymupdf.pdf,"PDF only: Remove this TOC item. This is a high-speed method, which disables the respective
item, but leaves the overall TOC structure intact. Physically, the item still exists in the TOC
tree, but is shown grayed-out and will no longer point to any destination.
"
6135,source/pymupdf.pdf,"This also implies that you can reassign the item to a new destination using Document.
set_toc_item(), when required.
"
6136,source/pymupdf.pdf,"Parameters
"
6137,source/pymupdf.pdf,"idx (int) – the index of the item in list Document.get_toc().
"
6138,source/pymupdf.pdf,"19.5. Document
215
"
6139,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6140,source/pymupdf.pdf,"set_toc_item(idx, dest_dict=None, kind=None, pno=None, uri=None, title=None, to=None,
filename=None, zoom=0)
"
6141,source/pymupdf.pdf,"• New in v1.17.7
"
6142,source/pymupdf.pdf,"• Changed in v1.18.6
"
6143,source/pymupdf.pdf,"PDF only: Changes the TOC item identified by its index. Change the item title, destination,
appearance (color, bold, italic) or collapsing sub-items – or to remove the item altogether.
"
6144,source/pymupdf.pdf,"Use this method if you need specific changes for selected entries only and want to avoid replac-
ing the complete TOC. This is beneficial especially when dealing with large table of contents.
"
6145,source/pymupdf.pdf,"Parameters
"
6146,source/pymupdf.pdf,"• idx (int) – the index of the entry in the list created by Document.
get_toc().
"
6147,source/pymupdf.pdf,"• dest_dict (dict) – the new destination. A dictionary like the last entry
of an item in doc.get_toc(False). Using this as a template is recom-
mended. When given, all other parameters are ignored – except title.
"
6148,source/pymupdf.pdf,"• kind (int) – the link kind, see Link Destination Kinds. If LINK_NONE,
then all remaining parameter will be ignored, and the TOC item will be
removed – same as Document.del_toc_item(). If None, then only the
title is modified and the remaining parameters are ignored. All other val-
ues will lead to making a new destination dictionary using the subsequent
arguments.
"
6149,source/pymupdf.pdf,"• pno (int) – the 1-based page number, i.e.
a value 1 <= pno <=
doc.page_count. Required for LINK_GOTO.
"
6150,source/pymupdf.pdf,"• uri (str) – the URL text. Required for LINK_URI.
"
6151,source/pymupdf.pdf,"• title (str) – the desired new title. None if no change.
"
6152,source/pymupdf.pdf,"• to (point_like) – (optional) points to a coordinate on the target page.
Relevant for LINK_GOTO. If omitted, a point near the page’s top is chosen.
"
6153,source/pymupdf.pdf,"• filename (str) – required for LINK_GOTOR and LINK_LAUNCH.
"
6154,source/pymupdf.pdf,"• zoom (float) – use this zoom factor when showing the target page.
"
6155,source/pymupdf.pdf,"Example use: Change the TOC of the SWIG manual to achieve this:
"
6156,source/pymupdf.pdf,"Collapse everything below top level and show the chapter on Python support in red, bold and
italic:
"
6157,source/pymupdf.pdf,">>> import fitz
>>> doc=fitz.open(""SWIGDocumentation.pdf"")
>>> toc = doc.get_toc(False)
# we need the detailed TOC
"
6158,source/pymupdf.pdf,">>> # list of level 1 indices and their titles
>>> lvl1 = [(i, item[1]) for i, item in enumerate(toc) if item[0] == 1]
>>> for i, title in lvl1:
"
6159,source/pymupdf.pdf,"d = toc[i][3]
# get the destination dict
"
6160,source/pymupdf.pdf,"d[""collapse""] = True
# collapse items underneath
"
6161,source/pymupdf.pdf,"if ""Python"" in title:
# show the 'Python' chapter
"
6162,source/pymupdf.pdf,"d[""color""] = (1, 0, 0)
# in red,
"
6163,source/pymupdf.pdf,"d[""bold""] = True
# bold and
"
6164,source/pymupdf.pdf,"d[""italic""] = True
# italic
"
6165,source/pymupdf.pdf,"(continues on next page)
"
6166,source/pymupdf.pdf,"216
Chapter 19. Classes
"
6167,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6168,source/pymupdf.pdf,"(continued from previous page)
"
6169,source/pymupdf.pdf,"doc.set_toc_item(i, dest_dict=d)
# update this toc item
"
6170,source/pymupdf.pdf,">>> doc.save(""NEWSWIG.pdf"",garbage=3,deflate=True)
"
6171,source/pymupdf.pdf,"In the previous example, we have changed only 42 of the 1240 TOC items of the file.
"
6172,source/pymupdf.pdf,"can_save_incrementally()
"
6173,source/pymupdf.pdf,"• New in v1.16.0
"
6174,source/pymupdf.pdf,"Check whether the document can be saved incrementally. Use it to choose the right option
without encountering exceptions.
"
6175,source/pymupdf.pdf,"scrub(attached_files=True, clean_pages=True, embedded_files=True, hidden_text=True,
javascript=True, metadata=True, redactions=True, redact_images=0, remove_links=True,
reset_fields=True, reset_responses=True, thumbnails=True, xml_metadata=True)
"
6176,source/pymupdf.pdf,"• New in v1.16.14
"
6177,source/pymupdf.pdf,"PDF only: Remove potentially sensitive data from the PDF. This function is inspired by the
similar “Sanitize” function in Adobe Acrobat products. The process is configurable by a number
of options.
"
6178,source/pymupdf.pdf,"Parameters
"
6179,source/pymupdf.pdf,"• attached_files (bool) – Search for ‘FileAttachment’ annotations and
remove the file content.
"
6180,source/pymupdf.pdf,"• clean_pages (bool) – Remove any comments from page painting
sources. If this option is set to False, then this is also done for hidden_text
and redactions.
"
6181,source/pymupdf.pdf,"• embedded_files (bool) – Remove embedded files.
"
6182,source/pymupdf.pdf,"• hidden_text (bool) – Remove OCRed text and invisible text7.
"
6183,source/pymupdf.pdf,"• javascript (bool) – Remove JavaScript sources.
"
6184,source/pymupdf.pdf,"• metadata (bool) – Remove PDF standard metadata.
"
6185,source/pymupdf.pdf,"• redactions (bool) – Apply redaction annotations.
"
6186,source/pymupdf.pdf,"• redact_images (int) – how to handle images if applying redactions. One
of 0 (ignore), 1 (blank out overlaps) or 2 (remove).
"
6187,source/pymupdf.pdf,"• remove_links (bool) – Remove all links.
"
6188,source/pymupdf.pdf,"• reset_fields (bool) – Reset all form fields to their defaults.
"
6189,source/pymupdf.pdf,"• reset_responses (bool) – Remove all responses from all annotations.
"
6190,source/pymupdf.pdf,"• thumbnails (bool) – Remove thumbnail images from pages.
"
6191,source/pymupdf.pdf,"• xml_metadata (bool) – Remove XML metadata.
"
6192,source/pymupdf.pdf,"save(outfile, garbage=0, clean=False, deflate=False, deflate_images=False, deflate_fonts=False,
incremental=False, ascii=False, expand=0, linear=False, pretty=False, no_new_id=False,
encryption=PDF_ENCRYPT_NONE, permissions=-1, owner_pw=None, user_pw=None)
"
6193,source/pymupdf.pdf,"• Changed in v1.18.7
"
6194,source/pymupdf.pdf,"• Changed in v1.19.0
"
6195,source/pymupdf.pdf,"7 This only works under certain conditions. For example, if there is normal text covered by some image on top of it, then this is undetectable and
the respective text is not removed. Similar is true for white text on white background, and so on.
"
6196,source/pymupdf.pdf,"19.5. Document
217
"
6197,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6198,source/pymupdf.pdf,"PDF only: Saves the document in its current state.
"
6199,source/pymupdf.pdf,"Parameters
"
6200,source/pymupdf.pdf,"• outfile (str,Path,fp) – The file path, pathlib.Path or file object
to save to. A file object must have been created before via open(...)
or io.BytesIO(). Choosing io.BytesIO() is similar to Document.
tobytes() below, which equals the getvalue() output of an internally
created io.BytesIO().
"
6201,source/pymupdf.pdf,"• garbage (int) – Do garbage collection. Positive values exclude “incre-
mental”.
"
6202,source/pymupdf.pdf,"– 0 = none
"
6203,source/pymupdf.pdf,"– 1 = remove unused (unreferenced) objects.
"
6204,source/pymupdf.pdf,"– 2 = in addition to 1, compact the xref table.
"
6205,source/pymupdf.pdf,"– 3 = in addition to 2, merge duplicate objects.
"
6206,source/pymupdf.pdf,"– 4 = in addition to 3, check stream objects for duplication. This may be
slow because such data are typically large.
"
6207,source/pymupdf.pdf,"• clean (bool) – Clean and sanitize content streams1. Corresponds to “mu-
tool clean -sc”.
"
6208,source/pymupdf.pdf,"• deflate (bool) – Deflate (compress) uncompressed streams.
"
6209,source/pymupdf.pdf,"• deflate_images (bool) – (new in v1.18.3) Deflate (compress) uncom-
pressed image streams4.
"
6210,source/pymupdf.pdf,"• deflate_fonts (bool) – (new in v1.18.3) Deflate (compress) uncom-
pressed fontfile streamsPage 218, 4.
"
6211,source/pymupdf.pdf,"• incremental (bool) – Only save changes to the PDF. Excludes “garbage”
and “linear”. Can only be used if outfile is a string or a pathlib.Path
and equal to Document.name. Cannot be used for files that are decrypted
or repaired and also in some other cases. To be sure, check Document.
can_save_incrementally(). If this is false, saving to a new file is re-
quired.
"
6212,source/pymupdf.pdf,"• ascii (bool) – convert binary data to ASCII.
"
6213,source/pymupdf.pdf,"• expand (int) – Decompress objects. Generates versions that can be better
read by some other programs and will lead to larger files.
"
6214,source/pymupdf.pdf,"– 0 = none
"
6215,source/pymupdf.pdf,"– 1 = images
"
6216,source/pymupdf.pdf,"– 2 = fonts
"
6217,source/pymupdf.pdf,"– 255 = all
"
6218,source/pymupdf.pdf,"• linear (bool) – Save a linearised version of the document. This option
creates a file format for improved performance for Internet access. Excludes
“incremental”.
"
6219,source/pymupdf.pdf,"1 Content streams describe what (e.g. text or images) appears where and how on a page. PDF uses a specialized mini language similar to
PostScript to do this (pp. 643 in Adobe PDF References), which gets interpreted when a page is loaded.
4 These parameters cause separate handling of stream categories: use it together with expand to restrict decompression to streams other than
images / fontfiles.
"
6220,source/pymupdf.pdf,"218
Chapter 19. Classes
"
6221,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6222,source/pymupdf.pdf,"• pretty (bool) – Prettify the document source for better readability. PDF
objects will be reformatted to look like the default output of Document.
xref_object().
"
6223,source/pymupdf.pdf,"• no_new_id (bool) – Suppress the update of the file’s /ID field. If the file
happens to have no such field at all, also suppress creation of a new one.
Default is False, so every save will lead to an updated file identification.
"
6224,source/pymupdf.pdf,"• permissions (int) – (new in v1.16.0) Set the desired permission levels.
See Document Permissions for possible values. Default is granting all.
"
6225,source/pymupdf.pdf,"• encryption (int) – (new in v1.16.0) set the desired encryption method.
See PDF encryption method codes for possible values.
"
6226,source/pymupdf.pdf,"• owner_pw (str) – (new in v1.16.0) set the document’s owner password.
(Changed in v1.18.3) If not provided, the user password is taken if provided.
The string length must not exceed 40 characters.
"
6227,source/pymupdf.pdf,"• user_pw (str) – (new in v1.16.0) set the document’s user password. The
string length must not exceed 40 characters.
"
6228,source/pymupdf.pdf,"Note: The method does not check, whether a file of that name already exists, will hence not
ask for confirmation, and overwrite the file. It is your responsibility as a programmer to handle
this.
"
6229,source/pymupdf.pdf,"ez_save(*args, **kwargs)
"
6230,source/pymupdf.pdf,"• New in v1.18.11
"
6231,source/pymupdf.pdf,"PDF only: The same as Document.save() but with the changed defaults deflate=True,
garbage=3.
"
6232,source/pymupdf.pdf,"saveIncr()
"
6233,source/pymupdf.pdf,"PDF only:
saves the document incrementally.
This is a convenience abbreviation for
doc.save(doc.name, incremental=True, encryption=PDF_ENCRYPT_KEEP).
"
6234,source/pymupdf.pdf,"Note:
Saving incrementally may be required if the document contains verified signatures which
would be invalidated by saving to a new file.
"
6235,source/pymupdf.pdf,"tobytes(garbage=0, clean=False, deflate=False, deflate_images=False, deflate_fonts=False,
ascii=False, expand=0, linear=False, pretty=False, no_new_id=False,
encryption=PDF_ENCRYPT_NONE, permissions=-1, owner_pw=None,
user_pw=None)
"
6236,source/pymupdf.pdf,"• Changed in v1.18.7
"
6237,source/pymupdf.pdf,"• Changed in v1.19.0
"
6238,source/pymupdf.pdf,"PDF only: Writes the current content of the document to a bytes object instead of to a file.
Obviously, you should be wary about memory requirements. The meanings of the parameters
exactly equal those in save(). Chapter FAQ contains an example for using this method as a
pre-processor to pdfrw.
"
6239,source/pymupdf.pdf,"(Changed in v1.16.0) for extended encryption support.
"
6240,source/pymupdf.pdf,"Return type
"
6241,source/pymupdf.pdf,"bytes
"
6242,source/pymupdf.pdf,"19.5. Document
219
"
6243,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6244,source/pymupdf.pdf,"Returns
"
6245,source/pymupdf.pdf,"a bytes object containing the complete document.
"
6246,source/pymupdf.pdf,"search_page_for(pno, text, quads=False)
"
6247,source/pymupdf.pdf,"Search for “text” on page number “pno”.
Works exactly like the corresponding Page.
search_for(). Any integer -∞ < pno < page_count is acceptable.
"
6248,source/pymupdf.pdf,"insert_pdf(docsrc, from_page=-1, to_page=-1, start_at=-1, rotate=-1, links=True, annots=True,
show_progress=0, final=1)
"
6249,source/pymupdf.pdf,"• Changed in v1.19.3 - as a fix to issue #537, form fields are always excluded.
"
6250,source/pymupdf.pdf,"PDF only: Copy the page range [from_page, to_page] (including both) of PDF document
docsrc into the current one. Inserts will start with page number start_at. Value -1 indicates
default values. All pages thus copied will be rotated as specified. Links and annotations can be
excluded in the target, see below. All page numbers are 0-based.
"
6251,source/pymupdf.pdf,"Parameters
"
6252,source/pymupdf.pdf,"• docsrc (Document) – An opened PDF Document which must not be the
current document. However, it may refer to the same underlying file.
"
6253,source/pymupdf.pdf,"• from_page (int) – First page number in docsrc. Default is zero.
"
6254,source/pymupdf.pdf,"• to_page (int) – Last page number in docsrc to copy. Defaults to last page.
"
6255,source/pymupdf.pdf,"• start_at (int) – First copied page, will become page number start_at in
the target. Default -1 appends the page range to the end. If zero, the page
range will be inserted before current first page.
"
6256,source/pymupdf.pdf,"• rotate (int) – All copied pages will be rotated by the provided value
(degrees, integer multiple of 90).
"
6257,source/pymupdf.pdf,"• links (bool) – Choose whether (internal and external) links should be
included in the copy. Default is True. Internal links to outside the copied
page range are always excluded.
"
6258,source/pymupdf.pdf,"• annots (bool) – (new in v1.16.1) choose whether annotations should be
included in the copy. (Fixed in v1.19.3) Form fields can never be copied.
"
6259,source/pymupdf.pdf,"• show_progress (int) – (new in v1.17.7) specify an interval size greater
zero to see progress messages on sys.stdout. After each interval, a mes-
sage like Inserted 30 of 47 pages. will be printed.
"
6260,source/pymupdf.pdf,"• final (int) – (new in v1.18.0) controls whether the list of already copied
objects should be dropped after this method, default True. Set it to 0 except
for the last one of multiple insertions from the same source PDF. This saves
target file size and speeds up execution considerably.
"
6261,source/pymupdf.pdf,"Note:
"
6262,source/pymupdf.pdf,"1. If from_page > to_page, pages will be copied in reverse order. If 0 <= from_page == to_page,
then one page will be copied.
"
6263,source/pymupdf.pdf,"2. docsrc TOC entries will not be copied. It is easy however, to recover a table of contents for
the resulting document. Look at the examples below and at program join.py in the examples
directory: it can join PDF documents and at the same time piece together respective parts of
the tables of contents.
"
6264,source/pymupdf.pdf,"220
Chapter 19. Classes
"
6265,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6266,source/pymupdf.pdf,"insert_file(infile, from_page=-1, to_page=-1, start_at=-1, rotate=-1, links=True, annots=True,
show_progress=0, final=1)
"
6267,source/pymupdf.pdf,"• New in v1.22.0
"
6268,source/pymupdf.pdf,"PDF only: Add an arbitrary supported document to the current PDF. Opens “infile” as a doc-
ument, converts it to a PDF and then invokes Document.insert_pdf(). Parameters are the
same as for that method. Among other things, this features an easy way to append images as
full pages to an output PDF.
"
6269,source/pymupdf.pdf,"Parameters
"
6270,source/pymupdf.pdf,"infile (multiple) – the input document to insert. May be a filename speci-
fication as is valid for creating a Document or a Pixmap.
"
6271,source/pymupdf.pdf,"new_page(pno=-1, width=595, height=842)
"
6272,source/pymupdf.pdf,"PDF only: Insert an empty page.
"
6273,source/pymupdf.pdf,"Parameters
"
6274,source/pymupdf.pdf,"• pno (int) – page number in front of which the new page should be inserted.
Must be in 1 < pno <= page_count. Special values -1 and doc.page_count
insert after the last page.
"
6275,source/pymupdf.pdf,"• width (float) – page width.
"
6276,source/pymupdf.pdf,"• height (float) – page height.
"
6277,source/pymupdf.pdf,"Return type
"
6278,source/pymupdf.pdf,"Page
"
6279,source/pymupdf.pdf,"Returns
"
6280,source/pymupdf.pdf,"the created page object.
"
6281,source/pymupdf.pdf,"insert_page(pno, text=None, fontsize=11, width=595, height=842, fontname='helv',
fontfile=None, color=None)
"
6282,source/pymupdf.pdf,"PDF only: Insert a new page and insert some text. Convenience function which combines
Document.new_page() and (parts of) Page.insert_text().
"
6283,source/pymupdf.pdf,"Parameters
"
6284,source/pymupdf.pdf,"pno (int) – page number (0-based) in front of which to insert.
Must
be in range(-1, doc.page_count + 1).
Special values -1 and doc.
page_count insert after the last page.
"
6285,source/pymupdf.pdf,"Changed in v1.14.12
"
6286,source/pymupdf.pdf,"This is now a positional parameter
"
6287,source/pymupdf.pdf,"For the other parameters, please consult the aforementioned methods.
"
6288,source/pymupdf.pdf,"Return type
"
6289,source/pymupdf.pdf,"int
"
6290,source/pymupdf.pdf,"Returns
"
6291,source/pymupdf.pdf,"the result of Page.insert_text() (number of successfully inserted lines).
"
6292,source/pymupdf.pdf,"delete_page(pno=-1)
"
6293,source/pymupdf.pdf,"PDF only: Delete a page given by its 0-based number in -∞ < pno < page_count - 1.
"
6294,source/pymupdf.pdf,"• Changed in v1.18.14: support Python’s del statement.
"
6295,source/pymupdf.pdf,"Parameters
"
6296,source/pymupdf.pdf,"pno (int) – the page to be deleted. Negative number count backwards from the
end of the document (like with indices). Default is the last page.
"
6297,source/pymupdf.pdf,"19.5. Document
221
"
6298,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6299,source/pymupdf.pdf,"delete_pages(*args, **kwds)
"
6300,source/pymupdf.pdf,"• Changed in v1.18.13: more flexibility specifying pages to delete.
"
6301,source/pymupdf.pdf,"• Changed in v1.18.14: support Python’s del statement.
"
6302,source/pymupdf.pdf,"PDF only: Delete multiple pages given as 0-based numbers.
"
6303,source/pymupdf.pdf,"Format 1: Use keywords. Represents the old format. A contiguous range of pages is
removed.
"
6304,source/pymupdf.pdf,"• “from_page”: first page to delete. Zero if omitted.
"
6305,source/pymupdf.pdf,"• “to_page”: last page to delete. Last page in document if omitted. Must not be less
then “from_page”.
"
6306,source/pymupdf.pdf,"Format 2: Two page numbers as positional parameters. Handled like Format 1.
"
6307,source/pymupdf.pdf,"Format 3: One positional integer parameter. Equivalent to Page.delete_page().
"
6308,source/pymupdf.pdf,"Format 4: One positional parameter of type list, tuple or range() of page numbers. The items
of this sequence may be in any order and may contain duplicates.
"
6309,source/pymupdf.pdf,"Format 5: (New in v1.18.14) Using the Python del statement and index / slice notation is now
possible.
"
6310,source/pymupdf.pdf,"Note: (Changed in v1.14.17, optimized in v1.17.7) In an effort to maintain a valid PDF struc-
ture, this method and delete_page() will also deactivate items in the table of contents which
point to deleted pages. “Deactivation” here means, that the bookmark will point to nowhere
and the title will be shown grayed-out by supporting PDF viewers. The overall TOC structure
is left intact.
"
6311,source/pymupdf.pdf,"It will also remove any links on remaining pages which point to a deleted one. This action
may have an extended response time for documents with many pages.
"
6312,source/pymupdf.pdf,"Following examples will all delete pages 500 through 519:
"
6313,source/pymupdf.pdf,"• doc.delete_pages(500, 519)
"
6314,source/pymupdf.pdf,"• doc.delete_pages(from_page=500, to_page=519)
"
6315,source/pymupdf.pdf,"• doc.delete_pages((500, 501, 502, ... , 519))
"
6316,source/pymupdf.pdf,"• doc.delete_pages(range(500, 520))
"
6317,source/pymupdf.pdf,"• del doc[500:520]
"
6318,source/pymupdf.pdf,"• del doc[(500, 501, 502, ... , 519)]
"
6319,source/pymupdf.pdf,"• del doc[range(500, 520)]
"
6320,source/pymupdf.pdf,"For the Adobe PDF References the above takes about 0.6 seconds, because the remaining 1290
pages must be cleaned from invalid links.
"
6321,source/pymupdf.pdf,"In general, the performance of this method is dependent on the number of remaining pages –
not on the number of deleted pages: in the above example, deleting all pages except those 20,
will need much less time.
"
6322,source/pymupdf.pdf,"copy_page(pno, to=-1)
"
6323,source/pymupdf.pdf,"PDF only: Copy a page reference within the document.
"
6324,source/pymupdf.pdf,"Parameters
"
6325,source/pymupdf.pdf,"222
Chapter 19. Classes
"
6326,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6327,source/pymupdf.pdf,"• pno (int) – the page to be copied.
Must be in range 0 <= pno <
page_count.
"
6328,source/pymupdf.pdf,"• to (int) – the page number in front of which to copy. The default inserts
after the last page.
"
6329,source/pymupdf.pdf,"Note:
Only a new reference to the page object will be created – not a new page object, all
copied pages will have identical attribute values, including the Page.xref. This implies that
any changes to one of these copies will appear on all of them.
"
6330,source/pymupdf.pdf,"fullcopy_page(pno, to=-1)
"
6331,source/pymupdf.pdf,"• New in v1.14.17
"
6332,source/pymupdf.pdf,"PDF only: Make a full copy (duplicate) of a page.
"
6333,source/pymupdf.pdf,"Parameters
"
6334,source/pymupdf.pdf,"• pno (int) – the page to be duplicated. Must be in range 0 <= pno <
page_count.
"
6335,source/pymupdf.pdf,"• to (int) – the page number in front of which to copy. The default inserts
after the last page.
"
6336,source/pymupdf.pdf,"Note:
"
6337,source/pymupdf.pdf,"• In contrast to copy_page(), this method creates a new page object (with a new xref),
which can be changed independently from the original.
"
6338,source/pymupdf.pdf,"• Any Popup and “IRT” (“in response to”) annotations are not copied to avoid potentially
incorrect situations.
"
6339,source/pymupdf.pdf,"move_page(pno, to=-1)
"
6340,source/pymupdf.pdf,"PDF only: Move (copy and then delete original) a page within the document.
"
6341,source/pymupdf.pdf,"Parameters
"
6342,source/pymupdf.pdf,"• pno (int) – the page to be moved.
Must be in range 0 <= pno <
page_count.
"
6343,source/pymupdf.pdf,"• to (int) – the page number in front of which to insert the moved page. The
default moves after the last page.
"
6344,source/pymupdf.pdf,"need_appearances(value=None)
"
6345,source/pymupdf.pdf,"• New in v1.17.4
"
6346,source/pymupdf.pdf,"PDF only: Get or set the /NeedAppearances property of Form PDFs. Quote: “(Optional) A
flag specifying whether to construct appearance streams and appearance dictionaries for all
widget annotations in the document ... Default value: false.” This may help controlling the
behavior of some readers / viewers.
"
6347,source/pymupdf.pdf,"Parameters
"
6348,source/pymupdf.pdf,"value (bool) – set the property to this value. If omitted or None, inquire the
current value.
"
6349,source/pymupdf.pdf,"Return type
"
6350,source/pymupdf.pdf,"bool
"
6351,source/pymupdf.pdf,"Returns
"
6352,source/pymupdf.pdf,"19.5. Document
223
"
6353,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6354,source/pymupdf.pdf,"• None: not a Form PDF, or property not defined.
"
6355,source/pymupdf.pdf,"• True / False: the value of the property (either just set or existing for in-
quiries). Has no effect if no Form PDF.
"
6356,source/pymupdf.pdf,"get_sigflags()
"
6357,source/pymupdf.pdf,"PDF only: Return whether the document contains signature fields. This is an optional PDF
property: if not present (return value -1), no conclusions can be drawn – the PDF creator may
just not have bothered using it.
"
6358,source/pymupdf.pdf,"Return type
"
6359,source/pymupdf.pdf,"int
"
6360,source/pymupdf.pdf,"Returns
"
6361,source/pymupdf.pdf,"• -1: not a Form PDF / no signature fields recorded / no SigFlags found.
"
6362,source/pymupdf.pdf,"• 1: at least one signature field exists.
"
6363,source/pymupdf.pdf,"• 3: contains signatures that may be invalidated if the file is saved (written) in
a way that alters its previous contents, as opposed to an incremental update.
"
6364,source/pymupdf.pdf,"embfile_add(name, buffer, filename=None, ufilename=None, desc=None)
"
6365,source/pymupdf.pdf,"• Changed in v1.14.16: The sequence of positional parameters “name” and “buffer” has
been changed to comply with the call pattern of other functions.
"
6366,source/pymupdf.pdf,"PDF only: Embed a new file. All string parameters except the name may be unicode (in previous
versions, only ASCII worked correctly). File contents will be compressed (where beneficial).
"
6367,source/pymupdf.pdf,"Parameters
"
6368,source/pymupdf.pdf,"• name (str) – entry identifier, must not already exist.
"
6369,source/pymupdf.pdf,"• buffer (bytes,bytearray,BytesIO) – file contents.
"
6370,source/pymupdf.pdf,"(Changed in v1.14.13) io.BytesIO is now also supported.
"
6371,source/pymupdf.pdf,"• filename (str) – optional filename. Documentation only, will be set to
name if None.
"
6372,source/pymupdf.pdf,"• ufilename (str) – optional unicode filename. Documentation only, will
be set to filename if None.
"
6373,source/pymupdf.pdf,"• desc (str) – optional description. Documentation only, will be set to name
if None.
"
6374,source/pymupdf.pdf,"Return type
"
6375,source/pymupdf.pdf,"int
"
6376,source/pymupdf.pdf,"Returns
"
6377,source/pymupdf.pdf,"(Changed in v1.18.13) The method now returns the xref of the inserted file.
In addition, the file object now will be automatically given the PDF keys /
CreationDate and /ModDate based on the current date-time.
"
6378,source/pymupdf.pdf,"embfile_count()
"
6379,source/pymupdf.pdf,"• Changed in v1.14.16: This is now a method. In previous versions, this was a property.
"
6380,source/pymupdf.pdf,"PDF only: Return the number of embedded files.
"
6381,source/pymupdf.pdf,"embfile_get(item)
"
6382,source/pymupdf.pdf,"PDF only: Retrieve the content of embedded file by its entry number or name. If the document
is not a PDF, or entry cannot be found, an exception is raised.
"
6383,source/pymupdf.pdf,"224
Chapter 19. Classes
"
6384,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6385,source/pymupdf.pdf,"Parameters
"
6386,source/pymupdf.pdf,"item (int,str) – index or name of entry.
An integer must be in
range(embfile_count()).
"
6387,source/pymupdf.pdf,"Return type
"
6388,source/pymupdf.pdf,"bytes
"
6389,source/pymupdf.pdf,"embfile_del(item)
"
6390,source/pymupdf.pdf,"• Changed in v1.14.16: Items can now be deleted by index, too.
"
6391,source/pymupdf.pdf,"PDF only: Remove an entry from /EmbeddedFiles. As always, physical deletion of the em-
bedded file content (and file space regain) will occur only when the document is saved to a new
file with a suitable garbage option.
"
6392,source/pymupdf.pdf,"Parameters
"
6393,source/pymupdf.pdf,"item (int/str) – index or name of entry.
"
6394,source/pymupdf.pdf,"Warning:
When specifying an entry name, this function will only delete the first item
with that name. Be aware that PDFs not created with PyMuPDF may contain duplicate
names. So you may want to take appropriate precautions.
"
6395,source/pymupdf.pdf,"embfile_info(item)
"
6396,source/pymupdf.pdf,"• Changed in v1.18.13
"
6397,source/pymupdf.pdf,"PDF only: Retrieve information of an embedded file given by its number or by its name.
"
6398,source/pymupdf.pdf,"Parameters
"
6399,source/pymupdf.pdf,"item (int/str) – index or name of entry.
An integer must be in
range(embfile_count()).
"
6400,source/pymupdf.pdf,"Return type
"
6401,source/pymupdf.pdf,"dict
"
6402,source/pymupdf.pdf,"Returns
"
6403,source/pymupdf.pdf,"a dictionary with the following keys:
"
6404,source/pymupdf.pdf,"• name – (str) name under which this entry is stored
"
6405,source/pymupdf.pdf,"• filename – (str) filename
"
6406,source/pymupdf.pdf,"• ufilename – (unicode) filename
"
6407,source/pymupdf.pdf,"• desc – (str) description
"
6408,source/pymupdf.pdf,"• size – (int) original file size
"
6409,source/pymupdf.pdf,"• length – (int) compressed file length
"
6410,source/pymupdf.pdf,"• creationDate – (New in v1.18.13) (str) date-time of item creation in PDF
format
"
6411,source/pymupdf.pdf,"• modDate – (New in v1.18.13) (str) date-time of last change in PDF format
"
6412,source/pymupdf.pdf,"• collection – (New in v1.18.13) (int) xref of the associated PDF portfolio
item if any, else zero.
"
6413,source/pymupdf.pdf,"• checksum – (New in v1.18.13) (str) a hashcode of the stored file content as
a hexadecimal string. Should be MD5 according to PDF specifications, but
be prepared to see other hashing algorithms.
"
6414,source/pymupdf.pdf,"19.5. Document
225
"
6415,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6416,source/pymupdf.pdf,"embfile_names()
"
6417,source/pymupdf.pdf,"• New in v1.14.16
"
6418,source/pymupdf.pdf,"PDF only: Return a list of embedded file names. The sequence of the names equals the physical
sequence in the document.
"
6419,source/pymupdf.pdf,"Return type
"
6420,source/pymupdf.pdf,"list
"
6421,source/pymupdf.pdf,"embfile_upd(item, buffer=None, filename=None, ufilename=None, desc=None)
"
6422,source/pymupdf.pdf,"PDF only: Change an embedded file given its entry number or name. All parameters are op-
tional. Letting them default leads to a no-operation.
"
6423,source/pymupdf.pdf,"Parameters
"
6424,source/pymupdf.pdf,"• item (int/str) – index or name of entry.
An integer must be in
range(embfile_count()).
"
6425,source/pymupdf.pdf,"• buffer (bytes,bytearray,BytesIO) – the new file content.
"
6426,source/pymupdf.pdf,"(Changed in v1.14.13) io.BytesIO is now also supported.
"
6427,source/pymupdf.pdf,"• filename (str) – the new filename.
"
6428,source/pymupdf.pdf,"• ufilename (str) – the new unicode filename.
"
6429,source/pymupdf.pdf,"• desc (str) – the new description.
"
6430,source/pymupdf.pdf,"(Changed in v1.18.13) The method now returns the xref of the file object.
"
6431,source/pymupdf.pdf,"Return type
"
6432,source/pymupdf.pdf,"int
"
6433,source/pymupdf.pdf,"Returns
"
6434,source/pymupdf.pdf,"xref of the file object. Automatically, its /ModDate PDF key will be updated
with the current date-time.
"
6435,source/pymupdf.pdf,"close()
"
6436,source/pymupdf.pdf,"Release objects and space allocations associated with the document. If created from a file, also
closes filename (releasing control to the OS). Explicitly closing a document is equivalent to
deleting it, del doc, or assigning it to something else like doc = None.
"
6437,source/pymupdf.pdf,"xref_object(xref, compressed=False, ascii=False)
"
6438,source/pymupdf.pdf,"• New in v1.16.8
"
6439,source/pymupdf.pdf,"• Changed in v1.18.10
"
6440,source/pymupdf.pdf,"PDF only: Return the definition source of a PDF object.
"
6441,source/pymupdf.pdf,"Parameters
"
6442,source/pymupdf.pdf,"• xref (int) – the object’s xref. Changed in v1.18.10: A value of -1
returns the PDF trailer source.
"
6443,source/pymupdf.pdf,"• compressed (bool) – whether to generate a compact output with no line
breaks or spaces.
"
6444,source/pymupdf.pdf,"• ascii (bool) – whether to ASCII-encode binary data.
"
6445,source/pymupdf.pdf,"Return type
"
6446,source/pymupdf.pdf,"str
"
6447,source/pymupdf.pdf,"Returns
"
6448,source/pymupdf.pdf,"The object definition source.
"
6449,source/pymupdf.pdf,"226
Chapter 19. Classes
"
6450,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6451,source/pymupdf.pdf,"pdf_catalog()
"
6452,source/pymupdf.pdf,"• New in v1.16.8
"
6453,source/pymupdf.pdf,"PDF only: Return the xref number of the PDF catalog (or root) object. Use that number with
Document.xref_object() to see its source.
"
6454,source/pymupdf.pdf,"pdf_trailer(compressed=False)
"
6455,source/pymupdf.pdf,"• New in v1.16.8
"
6456,source/pymupdf.pdf,"PDF only: Return the trailer source of the PDF, which is usually located at the PDF file’s end.
This is Document.xref_object() with an xref argument of -1.
"
6457,source/pymupdf.pdf,"xref_stream(xref )
"
6458,source/pymupdf.pdf,"• New in v1.16.8
"
6459,source/pymupdf.pdf,"PDF only: Return the decompressed contents of the xref stream object.
"
6460,source/pymupdf.pdf,"Parameters
"
6461,source/pymupdf.pdf,"xref (int) – xref number.
"
6462,source/pymupdf.pdf,"Return type
"
6463,source/pymupdf.pdf,"bytes
"
6464,source/pymupdf.pdf,"Returns
"
6465,source/pymupdf.pdf,"the (decompressed) stream of the object.
"
6466,source/pymupdf.pdf,"xref_stream_raw(xref )
"
6467,source/pymupdf.pdf,"• New in v1.16.8
"
6468,source/pymupdf.pdf,"PDF only: Return the unmodified (esp. not decompressed) contents of the xref stream ob-
ject. Otherwise equal to Document.xref_stream().
"
6469,source/pymupdf.pdf,"Return type
"
6470,source/pymupdf.pdf,"bytes
"
6471,source/pymupdf.pdf,"Returns
"
6472,source/pymupdf.pdf,"the (original, unmodified) stream of the object.
"
6473,source/pymupdf.pdf,"update_object(xref, obj_str, page=None)
"
6474,source/pymupdf.pdf,"• New in v1.16.8
"
6475,source/pymupdf.pdf,"PDF only: Replace object definition of xref with the provided string. The xref may also be
new, in which case this instruction completes the object definition. If a page object is also given,
its links and annotations will be reloaded afterwards.
"
6476,source/pymupdf.pdf,"Parameters
"
6477,source/pymupdf.pdf,"• xref (int) – xref number.
"
6478,source/pymupdf.pdf,"• obj_str (str) – a string containing a valid PDF object definition.
"
6479,source/pymupdf.pdf,"• page (Page) – a page object. If provided, indicates, that annotations of this
page should be refreshed (reloaded) to reflect changes incurred with links
and / or annotations.
"
6480,source/pymupdf.pdf,"Return type
"
6481,source/pymupdf.pdf,"int
"
6482,source/pymupdf.pdf,"Returns
"
6483,source/pymupdf.pdf,"zero if successful, otherwise an exception will be raised.
"
6484,source/pymupdf.pdf,"19.5. Document
227
"
6485,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6486,source/pymupdf.pdf,"update_stream(xref, data, new=False, compress=True)
"
6487,source/pymupdf.pdf,"• New in v.1.16.8
"
6488,source/pymupdf.pdf,"• Changed in v1.19.2: added parameter “compress”
"
6489,source/pymupdf.pdf,"• Changed in v1.19.6: deprecated parameter “new”. Now confirms that the object is a PDF
dictionary object.
"
6490,source/pymupdf.pdf,"Replace the stream of an object identified by xref, which must be a PDF dictionary. If the object
is no stream, it will be turned into one. The function automatically performs a compress
operation (“deflate”) where beneficial.
"
6491,source/pymupdf.pdf,"Parameters
"
6492,source/pymupdf.pdf,"• xref (int) – xref number.
"
6493,source/pymupdf.pdf,"• stream (bytes|bytearray|BytesIO) – the new content of the stream.
"
6494,source/pymupdf.pdf,"(Changed in v1.14.13:) io.BytesIO objects are now also supported.
"
6495,source/pymupdf.pdf,"• new (bool) – deprecated and ignored. Will be removed some time after
v1.20.0.
"
6496,source/pymupdf.pdf,"• compress (bool) – whether to compress the inserted stream. If True (de-
fault), the stream will be inserted using /FlateDecode compression (if
beneficial), otherwise the stream will inserted as is.
"
6497,source/pymupdf.pdf,"Raises
"
6498,source/pymupdf.pdf,"ValueError – if xref does not represent a PDF dict. An empty dictionary
<<>> is accepted. So if you just created the xref and want to give it a stream, first
execute doc.update_object(xref, ""<<>>""), and then insert the stream
data with this method.
"
6499,source/pymupdf.pdf,"The method is primarily (but not exclusively) intended to manipulate streams containing PDF
operator syntax (see pp. 643 of the Adobe PDF References) as it is the case for e.g. page content
streams.
"
6500,source/pymupdf.pdf,"If you update a contents stream, consider using save parameter clean=True to ensure consis-
tency between PDF operator source and the object structure.
"
6501,source/pymupdf.pdf,"Example: Let us assume that you no longer want a certain image appear on a page. This can be
achieved by deleting the respective reference in its contents source(s) – and indeed: the image
will be gone after reloading the page. But the page’s resources object would still show the
image as being referenced by the page. This save option will clean up any such mismatches.
"
6502,source/pymupdf.pdf,"xref_copy(source, target, *, keep=None)
"
6503,source/pymupdf.pdf,"• New in v1.19.5
"
6504,source/pymupdf.pdf,"PDF Only: Make target xref an exact copy of source. If source is a stream, then these data are also
copied.
"
6505,source/pymupdf.pdf,"Parameters
"
6506,source/pymupdf.pdf,"• source (int) – the source xref. It must be an existing dictionary object.
"
6507,source/pymupdf.pdf,"• target (int) – the target xref. Must be an existing dictionary object. If the xref
has just been created, make sure to initialize it as a PDF dictionary with the mini-
mum specification <<>>.
"
6508,source/pymupdf.pdf,"• keep (list) – an optional list of top-level keys in target, that should not be removed
in preparation of the copy process.
"
6509,source/pymupdf.pdf,"228
Chapter 19. Classes
"
6510,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6511,source/pymupdf.pdf,"Note:
"
6512,source/pymupdf.pdf,"• This method has much in common with Python’s dict method copy().
"
6513,source/pymupdf.pdf,"• Both xref numbers must represent existing dictionaries.
"
6514,source/pymupdf.pdf,"• Before data is copied from source, all target dictionary keys are deleted. You can specify exceptions
from this in the keep list. If source however has a same-named key, its value will still replace the
target.
"
6515,source/pymupdf.pdf,"• If source is a stream object, then these data will also be copied over, and target will be converted
to a stream object.
"
6516,source/pymupdf.pdf,"• A typical use case is to replace or remove an existing image without using redaction annotations.
Example scripts can be seen here.
"
6517,source/pymupdf.pdf,"extract_image(xref )
"
6518,source/pymupdf.pdf,"PDF Only: Extract data and meta information of an image stored in the document. The output can directly
be used to be stored as an image file, as input for PIL, Pixmap creation, etc. This method avoids using
pixmaps wherever possible to present the image in its original format (e.g. as JPEG).
"
6519,source/pymupdf.pdf,"Parameters
"
6520,source/pymupdf.pdf,"xref (int) – xref of an image object.
If this is not in range(1, doc.
xref_length()), or the object is no image or other errors occur, None is returned
and no exception is raised.
"
6521,source/pymupdf.pdf,"Return type
"
6522,source/pymupdf.pdf,"dict
"
6523,source/pymupdf.pdf,"Returns
"
6524,source/pymupdf.pdf,"a dictionary with the following keys
"
6525,source/pymupdf.pdf,"• ext (str) image type (e.g. ‘jpeg’), usable as image file extension
"
6526,source/pymupdf.pdf,"• smask (int) xref number of a stencil (/SMask) image or zero
"
6527,source/pymupdf.pdf,"• width (int) image width
"
6528,source/pymupdf.pdf,"• height (int) image height
"
6529,source/pymupdf.pdf,"• colorspace (int) the image’s colorspace.n number.
"
6530,source/pymupdf.pdf,"• cs-name (str) the image’s colorspace.name.
"
6531,source/pymupdf.pdf,"• xres (int) resolution in x direction. Please also see resolution.
"
6532,source/pymupdf.pdf,"• yres (int) resolution in y direction. Please also see resolution.
"
6533,source/pymupdf.pdf,"• image (bytes) image data, usable as image file content
"
6534,source/pymupdf.pdf,">>> d = doc.extract_image(1373)
>>> d
{'ext': 'png', 'smask': 2934, 'width': 5, 'height': 629, 'colorspace': 3, 'xres
"
6535,source/pymupdf.pdf,"˓→': 96,
'yres': 96, 'cs-name': 'DeviceRGB',
'image': b'\\x89PNG\\r\\n\\x1a\\n\\x00\\x00\\x00\\rIHDR\\x00\\x00\\x00\\x05\\ ...'}
>>> imgout = open(f""image.{d['ext']}"", ""wb"")
>>> imgout.write(d[""image""])
102
>>> imgout.close()
"
6536,source/pymupdf.pdf,"19.5. Document
229
"
6537,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6538,source/pymupdf.pdf,"Note: There is a functional overlap with pix = fitz.Pixmap(doc, xref), followed by a pix.tobytes(). Main
differences are that extract_image, (1) does not always deliver PNG image formats, (2) is very much faster
with non-PNG images, (3) usually results in much less disk storage for extracted images, (4) returns None
in error cases (generates no exception). Look at the following example images within the same PDF.
"
6539,source/pymupdf.pdf,"• xref 1268 is a PNG – Comparable execution time and identical output:
"
6540,source/pymupdf.pdf,"In [23]: %timeit pix = fitz.Pixmap(doc, 1268);pix.tobytes()
10.8 ms ± 52.4 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)
In [24]: len(pix.tobytes())
Out[24]: 21462
"
6541,source/pymupdf.pdf,"In [25]: %timeit img = doc.extract_image(1268)
10.8 ms ± 86 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)
In [26]: len(img[""image""])
Out[26]: 21462
"
6542,source/pymupdf.pdf,"• xref 1186 is a JPEG – Document.extract_image() is many times faster and produces a much
smaller output (2.48 MB vs. 0.35 MB):
"
6543,source/pymupdf.pdf,"In [27]: %timeit pix = fitz.Pixmap(doc, 1186);pix.tobytes()
341 ms ± 2.86 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
In [28]: len(pix.tobytes())
Out[28]: 2599433
"
6544,source/pymupdf.pdf,"In [29]: %timeit img = doc.extract_image(1186)
15.7 µs ± 116 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)
In [30]: len(img[""image""])
Out[30]: 371177
"
6545,source/pymupdf.pdf,"extract_font(xref, info_only=False, named=None)
"
6546,source/pymupdf.pdf,"• Changed in v1.19.4: return a dictionary if named == True.
"
6547,source/pymupdf.pdf,"PDF Only: Return an embedded font file’s data and appropriate file extension. This can be
used to store the font as an external file. The method does not throw exceptions (other than
via checking for PDF and valid xref).
"
6548,source/pymupdf.pdf,"arg int xref
"
6549,source/pymupdf.pdf,"PDF object number of the font to extract.
"
6550,source/pymupdf.pdf,"arg bool info_only
"
6551,source/pymupdf.pdf,"only return font information, not the buffer. To be used for information-only
purposes, avoids allocation of large buffer areas.
"
6552,source/pymupdf.pdf,"arg bool named
"
6553,source/pymupdf.pdf,"If true, a dictionary with the following keys is returned: ‘name’ (font base
name), ‘ext’ (font file extension), ‘type’ (font type), ‘content’ (font file con-
tent).
"
6554,source/pymupdf.pdf,"rtype
"
6555,source/pymupdf.pdf,"tuple,dict
"
6556,source/pymupdf.pdf,"returns
"
6557,source/pymupdf.pdf,"a tuple (basename, ext, type, content), where ext is a 3-byte sug-
gested file extension (str), basename is the font’s name (str), type is the font’s
"
6558,source/pymupdf.pdf,"230
Chapter 19. Classes
"
6559,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6560,source/pymupdf.pdf,"type (e.g. “Type1”) and content is a bytes object containing the font file’s con-
tent (or b””). For possible extension values and their meaning see Font File
Extensions. Return details on error:
"
6561,source/pymupdf.pdf,"• ("""", """", """", b"""") – invalid xref or xref is not a (valid) font object.
"
6562,source/pymupdf.pdf,"• (basename, ""n/a"", ""Type1"", b"""") – basename is not embedded
and thus cannot be extracted. This is the case for e.g. the PDF Base
14 Fonts and Type 3 fonts.
"
6563,source/pymupdf.pdf,"Example:
"
6564,source/pymupdf.pdf,">>> # store font as an external file
>>> name, ext, _, content = doc.extract_font(4711)
>>> # assuming content is not None:
>>> ofile = open(name + ""."" + ext, ""wb"")
>>> ofile.write(content)
>>> ofile.close()
"
6565,source/pymupdf.pdf,"Warning: The basename is returned unchanged from the PDF. So it may contain char-
acters (such as blanks) which may disqualify it as a filename for your operating system.
Take appropriate action.
"
6566,source/pymupdf.pdf,"Note:
"
6567,source/pymupdf.pdf,"• The returned basename in general is not the original file name, but it probably has some
similarity.
"
6568,source/pymupdf.pdf,"• If parameter named == True, a dictionary with the following keys is returned:
{'name':
'T1', 'ext':
'n/a', 'type':
'Type3', 'content':
b''}.
"
6569,source/pymupdf.pdf,"xref_xml_metadata()
"
6570,source/pymupdf.pdf,"• New in v1.16.8
"
6571,source/pymupdf.pdf,"PDF only: Return the xref of the document’s XML metadata.
"
6572,source/pymupdf.pdf,"has_links()
"
6573,source/pymupdf.pdf,"has_annots()
"
6574,source/pymupdf.pdf,"• New in v1.18.7
"
6575,source/pymupdf.pdf,"PDF only: Check whether there are links, resp. annotations anywhere in the document.
"
6576,source/pymupdf.pdf,"Returns
"
6577,source/pymupdf.pdf,"True / False. As opposed to fields, which are also stored in a central place of a PDF
document, the existence of links / annotations can only be detected by parsing each
page. These methods are tuned to do this efficiently and will immediately return,
if the answer is True for a page. For PDFs with many thousand pages however, an
answer may take some time6 if no link, resp. no annotation is found.
"
6578,source/pymupdf.pdf,"6 For a False the complete document must be scanned. Both methods do not load pages, but only scan object definitions. This makes them
at least 10 times faster than application-level loops (where total response time roughly equals the time for loading all pages). For the Adobe PDF
References (756 pages) and the Pandas documentation (over 3070 pages) – both have no annotations – the method needs about 11 ms for the answer
False. So response times will probably become significant only well beyond this order of magnitude.
"
6579,source/pymupdf.pdf,"19.5. Document
231
"
6580,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6581,source/pymupdf.pdf,"subset_fonts()
"
6582,source/pymupdf.pdf,"• New in v1.18.7, changed in v1.18.9
"
6583,source/pymupdf.pdf,"PDF only: Investigate eligible fonts for their use by text in the document. If a font is supported and
a size reduction is possible, that font is replaced by a version with a character subset.
"
6584,source/pymupdf.pdf,"Use this method immediately before saving the document. The following features and restrictions
apply for the time being:
"
6585,source/pymupdf.pdf,"• Package fontTools must be installed. It is required for creating the font subsets. If not installed,
the method raises an ImportError exception.
"
6586,source/pymupdf.pdf,"• Supported font types only include embedded OTF, TTF and WOFF that are not already sub-
sets.
"
6587,source/pymupdf.pdf,"• Changed in v1.18.9: A subset font directly replaces its original – text remains untouched and
is not rewritten. It thus should retain all its properties, like spacing, hiddenness, control by
Optional Content, etc.
"
6588,source/pymupdf.pdf,"The greatest benefit can be achieved when creating new PDFs using large fonts like is typical for
Asian scripts. In these cases, the set of actually used unicodes mostly is small compared to the
number of glyphs in the font. Using this feature can easily reduce the embedded font binary by two
orders of magnitude – from several megabytes to a low two-digit kilobyte amount.
"
6589,source/pymupdf.pdf,"journal_enable()
"
6590,source/pymupdf.pdf,"• New in v1.19.0
"
6591,source/pymupdf.pdf,"PDF only: Enable journalling. Use this before you start logging operations.
"
6592,source/pymupdf.pdf,"journal_start_op(name)
"
6593,source/pymupdf.pdf,"• New in v1.19.0
"
6594,source/pymupdf.pdf,"PDF only: Start journalling an “operation” identified by a string “name”. Updates will fail for a
journal-enabled PDF, if no operation has been started.
"
6595,source/pymupdf.pdf,"journal_stop_op()
"
6596,source/pymupdf.pdf,"• New in v1.19.0
"
6597,source/pymupdf.pdf,"PDF only: Stop the current operation. The updates between start and stop of an operation belong to
the same unit of work and will be undone / redone together.
"
6598,source/pymupdf.pdf,"journal_position()
"
6599,source/pymupdf.pdf,"• New in v1.19.0
"
6600,source/pymupdf.pdf,"PDF only: Return the numbers of the current operation and the total operation count.
"
6601,source/pymupdf.pdf,"Returns
"
6602,source/pymupdf.pdf,"a tuple (step, steps) containing the current operation number and the total num-
ber of operations in the journal. If step is 0, we are at the top of the journal. If step
equals steps, we are at the bottom. Updating the PDF with anything other than undo
or redo will automatically remove all journal entries after the current one and the new
update will become the new last entry in the journal. The updates corresponding to
the removed journal entries will be permanently lost.
"
6603,source/pymupdf.pdf,"journal_op_name(step)
"
6604,source/pymupdf.pdf,"• New in v1.19.0
"
6605,source/pymupdf.pdf,"PDF only: Return the name of operation number step.
"
6606,source/pymupdf.pdf,"232
Chapter 19. Classes
"
6607,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6608,source/pymupdf.pdf,"journal_can_do()
"
6609,source/pymupdf.pdf,"• New in v1.19.0
"
6610,source/pymupdf.pdf,"PDF only: Show whether forward (“redo”) and / or backward (“undo”) executions are possible from
the current journal position.
"
6611,source/pymupdf.pdf,"Returns
"
6612,source/pymupdf.pdf,"a dictionary {""undo"":
bool, ""redo"":
bool}.
The respective method is
available if its value is True.
"
6613,source/pymupdf.pdf,"journal_undo()
"
6614,source/pymupdf.pdf,"• New in v1.19.0
"
6615,source/pymupdf.pdf,"PDF only: Revert (undo) the current step in the journal. This moves towards the journal’s top.
"
6616,source/pymupdf.pdf,"journal_redo()
"
6617,source/pymupdf.pdf,"• New in v1.19.0
"
6618,source/pymupdf.pdf,"PDF only: Re-apply (redo) the current step in the journal. This moves towards the journal’s bottom.
"
6619,source/pymupdf.pdf,"journal_save(filename)
"
6620,source/pymupdf.pdf,"• New in v1.19.0
"
6621,source/pymupdf.pdf,"PDF only: Save the journal to a file.
"
6622,source/pymupdf.pdf,"Parameters
"
6623,source/pymupdf.pdf,"filename (str,fp) – either a filename as string or a file object opened as “wb” (or
an io.BytesIO() object).
"
6624,source/pymupdf.pdf,"journal_load(filename)
"
6625,source/pymupdf.pdf,"• New in v1.19.0
"
6626,source/pymupdf.pdf,"PDF only: Load journal from a file. Enables journalling for the document. If journalling is already
enabled, an exception is raised.
"
6627,source/pymupdf.pdf,"Parameters
"
6628,source/pymupdf.pdf,"filename (str,fp) – the filename (str) of the journal or a file object opened as “rb”
(or an io.BytesIO() object).
"
6629,source/pymupdf.pdf,"save_snapshot()
"
6630,source/pymupdf.pdf,"• New in v1.19.0
"
6631,source/pymupdf.pdf,"PDF only: Saves a “snapshot” of the document. This is a PDF document with a special, incremental-
save format compatible with journalling – therefore no save options are available. Saving a snapshot
is not possible for new documents.
"
6632,source/pymupdf.pdf,"This is a normal PDF document with no usage restrictions whatsoever. If it is not being changed in
any way, it can be used together with its journal to undo / redo operations or continue updating.
"
6633,source/pymupdf.pdf,"outline
"
6634,source/pymupdf.pdf,"Contains the first Outline entry of the document (or None). Can be used as a starting point to walk
through all outline items. Accessing this property for encrypted, not authenticated documents will
raise an AttributeError.
"
6635,source/pymupdf.pdf,"Type
"
6636,source/pymupdf.pdf,"Outline
"
6637,source/pymupdf.pdf,"19.5. Document
233
"
6638,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6639,source/pymupdf.pdf,"is_closed
"
6640,source/pymupdf.pdf,"False if document is still open. If closed, most other attributes and methods will have been deleted
/ disabled. In addition, Page objects referring to this document (i.e. created with Document.
load_page()) and their dependent objects will no longer be usable.
For reference purposes,
"
6641,source/pymupdf.pdf,"Document.name still exists and will contain the filename of the original document (if applicable).
"
6642,source/pymupdf.pdf,"Type
"
6643,source/pymupdf.pdf,"bool
"
6644,source/pymupdf.pdf,"is_dirty
"
6645,source/pymupdf.pdf,"True if this is a PDF document and contains unsaved changes, else False.
"
6646,source/pymupdf.pdf,"Type
"
6647,source/pymupdf.pdf,"bool
"
6648,source/pymupdf.pdf,"is_pdf
"
6649,source/pymupdf.pdf,"True if this is a PDF document, else False.
"
6650,source/pymupdf.pdf,"Type
"
6651,source/pymupdf.pdf,"bool
"
6652,source/pymupdf.pdf,"is_form_pdf
"
6653,source/pymupdf.pdf,"False if this is not a PDF or has no form fields, otherwise the number of root form fields (fields with
no ancestors).
"
6654,source/pymupdf.pdf,"(Changed in v1.16.4) Returns the total number of (root) form fields.
"
6655,source/pymupdf.pdf,"Type
"
6656,source/pymupdf.pdf,"bool,int
"
6657,source/pymupdf.pdf,"is_reflowable
"
6658,source/pymupdf.pdf,"True if document has a variable page layout (like e-books or HTML). In this case you can set the
desired page dimensions during document creation (open) or via method layout().
"
6659,source/pymupdf.pdf,"Type
"
6660,source/pymupdf.pdf,"bool
"
6661,source/pymupdf.pdf,"is_repaired
"
6662,source/pymupdf.pdf,"• New in v1.18.2
"
6663,source/pymupdf.pdf,"True if PDF has been repaired during open (because of major structure issues). Always False for
non-PDF documents. If true, more details have been stored in TOOLS.mupdf_warnings(), and
Document.can_save_incrementally() will return False.
"
6664,source/pymupdf.pdf,"Type
"
6665,source/pymupdf.pdf,"bool
"
6666,source/pymupdf.pdf,"is_fast_webaccess
"
6667,source/pymupdf.pdf,"• New in v1.22.2
"
6668,source/pymupdf.pdf,"True if PDF is in linearized format. False for non-PDF documents.
"
6669,source/pymupdf.pdf,"Type
"
6670,source/pymupdf.pdf,"bool
"
6671,source/pymupdf.pdf,"markinfo
"
6672,source/pymupdf.pdf,"• New in v1.22.2
"
6673,source/pymupdf.pdf,"A dictionary indicating the /MarkInfo value. If not specified, the empty dictionary is returned. If
not a PDF, None is returned.
"
6674,source/pymupdf.pdf,"234
Chapter 19. Classes
"
6675,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6676,source/pymupdf.pdf,"Type
"
6677,source/pymupdf.pdf,"dict
"
6678,source/pymupdf.pdf,"pagemode
"
6679,source/pymupdf.pdf,"• New in v1.22.2
"
6680,source/pymupdf.pdf,"A string containing the /PageMode value. If not specified, the default “UseNone” is returned. If
not a PDF, None is returned.
"
6681,source/pymupdf.pdf,"Type
"
6682,source/pymupdf.pdf,"str
"
6683,source/pymupdf.pdf,"pagelayout
"
6684,source/pymupdf.pdf,"• New in v1.22.2
"
6685,source/pymupdf.pdf,"A string containing the /PageLayout value. If not specified, the default “SinglePage” is returned.
If not a PDF, None is returned.
"
6686,source/pymupdf.pdf,"Type
"
6687,source/pymupdf.pdf,"str
"
6688,source/pymupdf.pdf,"version_count
"
6689,source/pymupdf.pdf,"• New in v1.22.2
"
6690,source/pymupdf.pdf,"An integer counting the number of versions present in the document. Zero if not a PDF, otherwise
the number of incremental saves plus one.
"
6691,source/pymupdf.pdf,"Type
"
6692,source/pymupdf.pdf,"int
"
6693,source/pymupdf.pdf,"needs_pass
"
6694,source/pymupdf.pdf,"Indicates whether the document is password-protected against access. This indicator remains un-
changed – even after the document has been authenticated. Precludes incremental saves if true.
"
6695,source/pymupdf.pdf,"Type
"
6696,source/pymupdf.pdf,"bool
"
6697,source/pymupdf.pdf,"is_encrypted
"
6698,source/pymupdf.pdf,"This indicator initially equals Document.needs_pass. After successful authentication, it is set to
False to reflect the situation.
"
6699,source/pymupdf.pdf,"Type
"
6700,source/pymupdf.pdf,"bool
"
6701,source/pymupdf.pdf,"permissions
"
6702,source/pymupdf.pdf,"• Changed in v1.16.0: This is now an integer comprised of bit indicators. Was a dictionary
previously.
"
6703,source/pymupdf.pdf,"Contains the permissions to access the document. This is an integer containing bool values in re-
spective bit positions. For example, if doc.permissions & fitz.PDF_PERM_MODIFY > 0, you may
change the document. See Document Permissions for details.
"
6704,source/pymupdf.pdf,"Type
"
6705,source/pymupdf.pdf,"int
"
6706,source/pymupdf.pdf,"metadata
"
6707,source/pymupdf.pdf,"Contains the document’s meta data as a Python dictionary or None (if is_encrypted=True and need-
Pass=True). Keys are format, encryption, title, author, subject, keywords, creator, producer, cre-
ationDate, modDate, trapped. All item values are strings or None.
"
6708,source/pymupdf.pdf,"19.5. Document
235
"
6709,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6710,source/pymupdf.pdf,"Except format and encryption, for PDF documents, the key names correspond in an obvious way
to the PDF keys /Creator, /Producer, /CreationDate, /ModDate, /Title, /Author, /Subject, /Trapped
and /Keywords respectively.
"
6711,source/pymupdf.pdf,"• format contains the document format (e.g. ‘PDF-1.6’, ‘XPS’, ‘EPUB’).
"
6712,source/pymupdf.pdf,"• encryption either contains None (no encryption), or a string naming an encryption method
(e.g. ‘Standard V4 R4 128-bit RC4’). Note that an encryption method may be specified even if
needs_pass=False. In such cases not all permissions will probably have been granted. Check
Document.permissions for details.
"
6713,source/pymupdf.pdf,"• If the date fields contain valid data (which need not be the case at all!), they are strings in the
PDF-specific timestamp format “D:<TS><TZ>”, where
"
6714,source/pymupdf.pdf,"– <TS> is the 12 character ISO timestamp YYYYMMDDhhmmss (YYYY - year, MM - month,
DD - day, hh - hour, mm - minute, ss - second), and
"
6715,source/pymupdf.pdf,"– <TZ> is a time zone value (time interval relative to GMT) containing a sign (‘+’ or ‘-‘),
the hour (hh), and the minute (‘mm’, note the apostrophes!).
"
6716,source/pymupdf.pdf,"• A Paraguayan value might hence look like D:20150415131602-04’00’, which corresponds to
the timestamp April 15, 2015, at 1:16:02 pm local time Asuncion.
"
6717,source/pymupdf.pdf,"Type
"
6718,source/pymupdf.pdf,"dict
"
6719,source/pymupdf.pdf,"name
"
6720,source/pymupdf.pdf,"Contains the filename or filetype value with which Document was created.
"
6721,source/pymupdf.pdf,"Type
"
6722,source/pymupdf.pdf,"str
"
6723,source/pymupdf.pdf,"page_count
"
6724,source/pymupdf.pdf,"Contains the number of pages of the document. May return 0 for documents with no pages. Function
len(doc) will also deliver this result.
"
6725,source/pymupdf.pdf,"Type
"
6726,source/pymupdf.pdf,"int
"
6727,source/pymupdf.pdf,"chapter_count
"
6728,source/pymupdf.pdf,"• New in v1.17.0
"
6729,source/pymupdf.pdf,"Contains the number of chapters in the document. Always at least 1. Relevant only for document
types with chapter support (EPUB currently). Other documents will return 1.
"
6730,source/pymupdf.pdf,"Type
"
6731,source/pymupdf.pdf,"int
"
6732,source/pymupdf.pdf,"last_location
"
6733,source/pymupdf.pdf,"• New in v1.17.0
"
6734,source/pymupdf.pdf,"Contains (chapter, pno) of the document’s last page. Relevant only for document types with chapter
support (EPUB currently). Other documents will return (0, page_count - 1) and (0, -1) if
it has no pages.
"
6735,source/pymupdf.pdf,"Type
"
6736,source/pymupdf.pdf,"int
"
6737,source/pymupdf.pdf,"236
Chapter 19. Classes
"
6738,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6739,source/pymupdf.pdf,"FormFonts
"
6740,source/pymupdf.pdf,"A list of form field font names defined in the /AcroForm object. None if not a PDF.
"
6741,source/pymupdf.pdf,"Type
"
6742,source/pymupdf.pdf,"list
"
6743,source/pymupdf.pdf,"Note: For methods that change the structure of a PDF (insert_pdf(), select(), copy_page(), delete_page()
and others), be aware that objects or properties in your program may have been invalidated or orphaned. Examples are
Page objects and their children (links, annotations, widgets), variables holding old page counts, tables of content and
the like. Remember to keep such variables up to date or delete orphaned objects. Also refer to Ensuring Consistency
of Important Objects in PyMuPDF.
"
6744,source/pymupdf.pdf,"19.5.1 set_metadata() Example
"
6745,source/pymupdf.pdf,"Clear metadata information. If you do this out of privacy / data protection concerns, make sure you save the document
as a new file with garbage > 0. Only then the old /Info object will also be physically removed from the file. In this
case, you may also want to clear any XML metadata inserted by several PDF editors:
"
6746,source/pymupdf.pdf,">>> import fitz
>>> doc=fitz.open(""pymupdf.pdf"")
>>> doc.metadata
# look at what we currently have
"
6747,source/pymupdf.pdf,"{'producer': 'rst2pdf, reportlab', 'format': 'PDF 1.4', 'encryption': None, 'author':
'Jorj X. McKie', 'modDate': ""D:20160611145816-04'00'"", 'keywords': 'PDF, XPS, EPUB, CBZ',
'title': 'The PyMuPDF Documentation', 'creationDate': ""D:20160611145816-04'00'"",
'creator': 'sphinx', 'subject': 'PyMuPDF 1.9.1'}
>>> doc.set_metadata({})
# clear all fields
"
6748,source/pymupdf.pdf,">>> doc.metadata
# look again to show what happened
"
6749,source/pymupdf.pdf,"{'producer': 'none', 'format': 'PDF 1.4', 'encryption': None, 'author': 'none',
'modDate': 'none', 'keywords': 'none', 'title': 'none', 'creationDate': 'none',
'creator': 'none', 'subject': 'none'}
>>> doc._delXmlMetadata()
# clear any XML metadata
"
6750,source/pymupdf.pdf,">>> doc.save(""anonymous.pdf"", garbage = 4)
# save anonymized doc
"
6751,source/pymupdf.pdf,"19.5.2 set_toc() Demonstration
"
6752,source/pymupdf.pdf,"This shows how to modify or add a table of contents. Also have a look at import.py and export.py in the examples
directory.
"
6753,source/pymupdf.pdf,">>> import fitz
>>> doc = fitz.open(""test.pdf"")
>>> toc = doc.get_toc()
>>> for t in toc: print(t)
# show what we have
"
6754,source/pymupdf.pdf,"[1, 'The PyMuPDF Documentation', 1]
[2, 'Introduction', 1]
[3, 'Note on the Name fitz', 1]
[3, 'License', 1]
>>> toc[1][1] += "" modified by set_toc""
# modify something
"
6755,source/pymupdf.pdf,">>> doc.set_toc(toc)
# replace outline tree
"
6756,source/pymupdf.pdf,"3
# number of bookmarks inserted
"
6757,source/pymupdf.pdf,">>> for t in doc.get_toc(): print(t)
# demonstrate it worked
"
6758,source/pymupdf.pdf,"(continues on next page)
"
6759,source/pymupdf.pdf,"19.5. Document
237
"
6760,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6761,source/pymupdf.pdf,"(continued from previous page)
"
6762,source/pymupdf.pdf,"[1, 'The PyMuPDF Documentation', 1]
[2, 'Introduction modified by set_toc', 1]
# <<< this has changed
"
6763,source/pymupdf.pdf,"[3, 'Note on the Name fitz', 1]
[3, 'License', 1]
"
6764,source/pymupdf.pdf,"19.5.3 insert_pdf() Examples
"
6765,source/pymupdf.pdf,"(1) Concatenate two documents including their TOCs:
"
6766,source/pymupdf.pdf,">>> doc1 = fitz.open(""file1.pdf"")
# must be a PDF
"
6767,source/pymupdf.pdf,">>> doc2 = fitz.open(""file2.pdf"")
# must be a PDF
"
6768,source/pymupdf.pdf,">>> pages1 = len(doc1)
# save doc1's page count
"
6769,source/pymupdf.pdf,">>> toc1 = doc1.get_toc(False)
# save TOC 1
"
6770,source/pymupdf.pdf,">>> toc2 = doc2.get_toc(False)
# save TOC 2
"
6771,source/pymupdf.pdf,">>> doc1.insert_pdf(doc2)
# doc2 at end of doc1
"
6772,source/pymupdf.pdf,">>> for t in toc2:
# increase toc2 page numbers
"
6773,source/pymupdf.pdf,"t[2] += pages1
# by old len(doc1)
"
6774,source/pymupdf.pdf,">>> doc1.set_toc(toc1 + toc2)
# now result has total TOC
"
6775,source/pymupdf.pdf,"Obviously, similar ways can be found in more general situations. Just make sure that hierarchy levels in a row do not
increase by more than one. Inserting dummy bookmarks before and after toc2 segments would heal such cases. A
ready-to-use GUI (wxPython) solution can be found in script join.py of the examples directory.
"
6776,source/pymupdf.pdf,"(2) More examples:
"
6777,source/pymupdf.pdf,">>> # insert 5 pages of doc2, where its page 21 becomes page 15 in doc1
>>> doc1.insert_pdf(doc2, from_page=21, to_page=25, start_at=15)
"
6778,source/pymupdf.pdf,">>> # same example, but pages are rotated and copied in reverse order
>>> doc1.insert_pdf(doc2, from_page=25, to_page=21, start_at=15, rotate=90)
"
6779,source/pymupdf.pdf,">>> # put copied pages in front of doc1
>>> doc1.insert_pdf(doc2, from_page=21, to_page=25, start_at=0)
"
6780,source/pymupdf.pdf,"19.5.4 Other Examples
"
6781,source/pymupdf.pdf,"Extract all page-referenced images of a PDF into separate PNG files:
"
6782,source/pymupdf.pdf,"for i in range(doc.page_count):
imglist = doc.get_page_images(i)
for img in imglist:
xref = img[0]
# xref number
"
6783,source/pymupdf.pdf,"pix = fitz.Pixmap(doc, xref)
# make pixmap from image
"
6784,source/pymupdf.pdf,"if pix.n - pix.alpha < 4:
# can be saved as PNG
"
6785,source/pymupdf.pdf,"pix.save(""p%s-%s.png"" % (i, xref))
"
6786,source/pymupdf.pdf,"else:
# CMYK: must convert first
"
6787,source/pymupdf.pdf,"pix0 = fitz.Pixmap(fitz.csRGB, pix)
pix0.save(""p%s-%s.png"" % (i, xref))
pix0 = None
# free Pixmap resources
"
6788,source/pymupdf.pdf,"pix = None
# free Pixmap resources
"
6789,source/pymupdf.pdf,"238
Chapter 19. Classes
"
6790,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6791,source/pymupdf.pdf,"Rotate all pages of a PDF:
"
6792,source/pymupdf.pdf,">>> for page in doc: page.set_rotation(90)
"
6793,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
6794,source/pymupdf.pdf,"19.6 DocumentWriter
"
6795,source/pymupdf.pdf,"• New in v1.21.0
"
6796,source/pymupdf.pdf,"This class represents a utility which can output various document types supported by MuPDF.
"
6797,source/pymupdf.pdf,"In PyMuPDF only used for outputting PDF documents whose pages are populated by Story DOMs.
"
6798,source/pymupdf.pdf,"Using DocumentWriter also for other document types might happen in the future.
"
6799,source/pymupdf.pdf,"Method / Attribute
Short Description
"
6800,source/pymupdf.pdf,"DocumentWriter.begin_page()
start a new output page
"
6801,source/pymupdf.pdf,"DocumentWriter.end_page()
finish the current output page
"
6802,source/pymupdf.pdf,"DocumentWriter.close()
flush pending output and close the file
"
6803,source/pymupdf.pdf,"Class API
"
6804,source/pymupdf.pdf,"class DocumentWriter
"
6805,source/pymupdf.pdf,"__init__(self, path, options=None)
"
6806,source/pymupdf.pdf,"Create a document writer object, passing a Python file pointer or a file path. Options to use when saving
the file may also be passed.
"
6807,source/pymupdf.pdf,"This class can also be used as a Python context manager.
"
6808,source/pymupdf.pdf,"Parameters
"
6809,source/pymupdf.pdf,"• path – the output file. This may be a string file name, or any Python file pointer.
"
6810,source/pymupdf.pdf,"Note:
By using a io.BytesIO() object as file pointer, a document writer can
create a PDF in memory. Subsequently, this PDF can be re-opened for input and be
further manipulated. This technique is used by several example scripts in Stories
recipes.
"
6811,source/pymupdf.pdf,"• options (str) – specify saving options for the output PDF. Typical are “compress”
or “clean”. More possible values may be taken from help output of the mutool
convert CLI utility.
"
6812,source/pymupdf.pdf,"begin_page(mediabox)
"
6813,source/pymupdf.pdf,"Start a new output page of a given dimension.
"
6814,source/pymupdf.pdf,"Parameters
"
6815,source/pymupdf.pdf,"mediabox (rect_like) – a rectangle specifying the page size. After this method, out-
put operations may write content to the page.
"
6816,source/pymupdf.pdf,"19.6. DocumentWriter
239
"
6817,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6818,source/pymupdf.pdf,"end_page()
"
6819,source/pymupdf.pdf,"Finish a page. This flushes any pending data and appends the page to the output document.
"
6820,source/pymupdf.pdf,"close()
"
6821,source/pymupdf.pdf,"Close the output file. This method is required for writing any pending data.
"
6822,source/pymupdf.pdf,"For usage examples consult the section of Story.
"
6823,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
6824,source/pymupdf.pdf,"19.7 Font
"
6825,source/pymupdf.pdf,"• New in v1.16.18
"
6826,source/pymupdf.pdf,"This class represents a font as defined in MuPDF (fz_font_s structure). It is required for the new class TextWriter and the
new Page.write_text(). Currently, it has no connection to how fonts are used in methods Page.insert_text()
or Page.insert_textbox(), respectively.
"
6827,source/pymupdf.pdf,"A Font object also contains useful general information, like the font bbox, the number of defined glyphs, glyph names
or the bbox of a single glyph.
"
6828,source/pymupdf.pdf,"Method / Attribute
Short Description
"
6829,source/pymupdf.pdf,"glyph_advance()
Width of a character
"
6830,source/pymupdf.pdf,"glyph_bbox()
Glyph rectangle
"
6831,source/pymupdf.pdf,"glyph_name_to_unicode()
Get unicode from glyph name
"
6832,source/pymupdf.pdf,"has_glyph()
Return glyph id of unicode
"
6833,source/pymupdf.pdf,"text_length()
Compute string length
"
6834,source/pymupdf.pdf,"char_lengths()
Tuple of char widths of a string
"
6835,source/pymupdf.pdf,"unicode_to_glyph_name()
Get glyph name of a unicode
"
6836,source/pymupdf.pdf,"valid_codepoints()
Array of supported unicodes
"
6837,source/pymupdf.pdf,"ascender
Font ascender
"
6838,source/pymupdf.pdf,"descender
Font descender
"
6839,source/pymupdf.pdf,"bbox
Font rectangle
"
6840,source/pymupdf.pdf,"buffer
Copy of the font’s binary image
"
6841,source/pymupdf.pdf,"flags
Collection of font properties
"
6842,source/pymupdf.pdf,"glyph_count
Number of supported glyphs
"
6843,source/pymupdf.pdf,"name
Name of font
"
6844,source/pymupdf.pdf,"is_writable
Font usable with TextWriter
"
6845,source/pymupdf.pdf,"Class API
"
6846,source/pymupdf.pdf,"class Font
"
6847,source/pymupdf.pdf,"__init__(self, fontname=None, fontfile=None,
fontbuffer=None, script=0, language=None, ordering=-1, is_bold=0,
is_italic=0, is_serif=0)
"
6848,source/pymupdf.pdf,"Font constructor. The large number of parameters are used to locate font, which most closely resembles
the requirements. Not all parameters are ever required – see the below pseudo code explaining the logic
how the parameters are evaluated.
"
6849,source/pymupdf.pdf,"Parameters
"
6850,source/pymupdf.pdf,"240
Chapter 19. Classes
"
6851,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6852,source/pymupdf.pdf,"• fontname (str) – one of the PDF Base 14 Fonts or CJK fontnames. Also possible
are a select few other names like (watch the correct spelling): “Arial”, “Times”,
“Times Roman”.
"
6853,source/pymupdf.pdf,"(Changed in v1.17.5)
"
6854,source/pymupdf.pdf,"If you have installed pymupdf-fonts, there are also new “reserved” fontnames avail-
able, which are listed in fitz_fonts and in the table further down.
"
6855,source/pymupdf.pdf,"• fontfile (str) – the filename of a fontfile somewhere on your system1.
"
6856,source/pymupdf.pdf,"• fontbuffer (bytes,bytearray,io.BytesIO) – a fontfile loaded in mem-
oryPage 241, 1.
"
6857,source/pymupdf.pdf,"• script (in) – the number of a UCDN script. Currently supported in PyMuPDF
are numbers 24, and 32 through 35.
"
6858,source/pymupdf.pdf,"• language (str) – one of the values “zh-Hant” (traditional Chinese), “zh-Hans”
(simplified Chinese), “ja” (Japanese) and “ko” (Korean). Otherwise, all ISO 639
codes from the subsets 1, 2, 3 and 5 are also possible, but are currently documentary
only.
"
6859,source/pymupdf.pdf,"• ordering (int) – an alternative selector for one of the CJK fonts.
"
6860,source/pymupdf.pdf,"• is_bold (bool) – look for a bold font.
"
6861,source/pymupdf.pdf,"• is_italic (bool) – look for an italic font.
"
6862,source/pymupdf.pdf,"• is_serif (bool) – look for a serifed font.
"
6863,source/pymupdf.pdf,"Returns
"
6864,source/pymupdf.pdf,"a MuPDF font if successful. This is the overall sequence of checks to determine an
appropriate font:
"
6865,source/pymupdf.pdf,"Argu-
ment
"
6866,source/pymupdf.pdf,"Action
"
6867,source/pymupdf.pdf,"fontfile?
Create font from file, exception if failure.
"
6868,source/pymupdf.pdf,"font-
buffer?
"
6869,source/pymupdf.pdf,"Create font from buffer, exception if failure.
"
6870,source/pymupdf.pdf,"order-
ing>=0
"
6871,source/pymupdf.pdf,"Create universal font, always succeeds.
"
6872,source/pymupdf.pdf,"font-
name?
"
6873,source/pymupdf.pdf,"Create a Base-14 font, universal font, or font provided by pymupdf-
fonts. See table below.
"
6874,source/pymupdf.pdf,"Note: With the usual reserved names “helv”, “tiro”, etc., you will create fonts with the expected names
“Helvetica”, “Times-Roman” and so on. However, and in contrast to Page.insert_font() and friends,
"
6875,source/pymupdf.pdf,"• a font file will always be embedded in your PDF,
"
6876,source/pymupdf.pdf,"• Greek and Cyrillic characters are supported without needing the encoding parameter.
"
6877,source/pymupdf.pdf,"Using ordering >= 0, or fontnames “cjk”, “china-t”, “china-s”, “japan” or “korea” will always create
the same “universal” font “Droid Sans Fallback Regular”. This font supports all Chinese, Japanese,
Korean and Latin characters, including Greek and Cyrillic. This is a sans-serif font.
"
6878,source/pymupdf.pdf,"Actually, you would rarely ever need another sans-serif font than “Droid Sans Fallback Regular”. Except
that this font file is relatively large and adds about 1.65 MB (compressed) to your PDF file size. If you do
"
6879,source/pymupdf.pdf,"1 MuPDF does not support all fontfiles with this feature and will raise exceptions like “mupdf: FT_New_Memory_Face((null)): unknown file
format”, if it encounters issues. The TextWriter methods check Font.is_writable.
"
6880,source/pymupdf.pdf,"19.7. Font
241
"
6881,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6882,source/pymupdf.pdf,"not need CJK support, stick with specifying “helv”, “tiro” etc., and you will get away with about 35 KB
compressed.
"
6883,source/pymupdf.pdf,"If you know you have a mixture of CJK and Latin text, consider just using Font(""cjk"") because this
supports everything and also significantly (by a factor of up to three) speeds up execution: MuPDF will
always find any character in this single font and never needs to check fallbacks.
"
6884,source/pymupdf.pdf,"But if you do use some other font, you will still automatically be able to also write CJK characters: MuPDF
detects this situation and silently falls back to the universal font (which will then of course also be embedded
in your PDF).
"
6885,source/pymupdf.pdf,"(New in v1.17.5) Optionally, some new “reserved” fontname codes become available if you install
pymupdf-fonts, pip install pymupdf-fonts. “Fira Mono” is a mono-spaced sans font set and Fi-
raGO is another non-serifed “universal” font set which supports all Latin (including Cyrillic and Greek)
plus Thai, Arabian, Hewbrew and Devanagari – but none of the CJK languages. The size of a FiraGO font
is only a quarter of the “Droid Sans Fallback” size (compressed 400 KB vs. 1.65 MB) – and it provides
the weights bold, italic, bold-italic – which the universal font doesn’t.
"
6886,source/pymupdf.pdf,"“Space Mono” is another nice and small mono-spaced font from Google Fonts, which supports Latin
Extended characters and comes with all 4 important weights.
"
6887,source/pymupdf.pdf,"The following table maps a fontname code to the corresponding font. For the current content of the package
please see its documentation:
"
6888,source/pymupdf.pdf,"Code
Fontname
New in
Comment
"
6889,source/pymupdf.pdf,"figo
FiraGO Regular
v1.0.0
narrower than Helvetica
"
6890,source/pymupdf.pdf,"figbo
FiraGO Bold
v1.0.0
"
6891,source/pymupdf.pdf,"figit
FiraGO Italic
v1.0.0
"
6892,source/pymupdf.pdf,"figbi
FiraGO Bold Italic
v1.0.0
"
6893,source/pymupdf.pdf,"fimo
Fira Mono Regular
v1.0.0
"
6894,source/pymupdf.pdf,"fimbo
Fira Mono Bold
v1.0.0
"
6895,source/pymupdf.pdf,"spacemo
Space Mono Regular
v1.0.1
"
6896,source/pymupdf.pdf,"spacembo
Space Mono Bold
v1.0.1
"
6897,source/pymupdf.pdf,"spacemit
Space Mono Italic
v1.0.1
"
6898,source/pymupdf.pdf,"spacembi
Space Mono Bold-Italic
v1.0.1
"
6899,source/pymupdf.pdf,"math
Noto Sans Math Regular
v1.0.2
math symbols
"
6900,source/pymupdf.pdf,"music
Noto Music Regular
v1.0.2
musical symbols
"
6901,source/pymupdf.pdf,"symbol1
Noto Sans Symbols Regular
v1.0.2
replacement for “symb”
"
6902,source/pymupdf.pdf,"symbol2
Noto Sans Symbols2 Regular
v1.0.2
extended symbol set
"
6903,source/pymupdf.pdf,"notos
Noto Sans Regular
v1.0.3
alternative to Helvetica
"
6904,source/pymupdf.pdf,"notosit
Noto Sans Italic
v1.0.3
"
6905,source/pymupdf.pdf,"notosbo
Noto Sans Bold
v1.0.3
"
6906,source/pymupdf.pdf,"notosbi
Noto Sans BoldItalic
v1.0.3
"
6907,source/pymupdf.pdf,"has_glyph(chr, language=None, script=0, fallback=False)
"
6908,source/pymupdf.pdf,"Check whether the unicode chr exists in the font or (option) some fallback font. May be used to check
whether any “TOFU” symbols will appear on output.
"
6909,source/pymupdf.pdf,"Parameters
"
6910,source/pymupdf.pdf,"• chr (int) – the unicode of the character (i.e. ord()).
"
6911,source/pymupdf.pdf,"• language (str) – the language – currently unused.
"
6912,source/pymupdf.pdf,"• script (int) – the UCDN script number.
"
6913,source/pymupdf.pdf,"242
Chapter 19. Classes
"
6914,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6915,source/pymupdf.pdf,"• fallback (bool) – (new in v1.17.5) perform an extended search in fallback fonts
or restrict to current font (default).
"
6916,source/pymupdf.pdf,"Returns
"
6917,source/pymupdf.pdf,"(changed in 1.17.7) the glyph number. Zero indicates no glyph found.
"
6918,source/pymupdf.pdf,"valid_codepoints()
"
6919,source/pymupdf.pdf,"• New in v1.17.5
"
6920,source/pymupdf.pdf,"Return an array of unicodes supported by this font.
"
6921,source/pymupdf.pdf,"Returns
"
6922,source/pymupdf.pdf,"an array.array2 of length at most Font.glyph_count. I.e. chr() of every item in this
array has a glyph in the font without using fallbacks. This is an example display of the
supported glyphs:
"
6923,source/pymupdf.pdf,">>> import fitz
>>> font = fitz.Font(""math"")
>>> vuc = font.valid_codepoints()
>>> for i in vuc:
"
6924,source/pymupdf.pdf,"print(""%04X %s (%s)"" % (i, chr(i), font.unicode_to_glyph_
"
6925,source/pymupdf.pdf,"˓→name(i)))
0000
000D
(CR)
"
6926,source/pymupdf.pdf,"0020
(space)
"
6927,source/pymupdf.pdf,"0021 ! (exclam)
0022 "" (quotedbl)
0023 # (numbersign)
0024 $ (dollar)
0025 % (percent)
...
00AC ¬ (logicalnot)
00B1 ± (plusminus)
...
21D0
(arrowdblleft)
"
6928,source/pymupdf.pdf,"21D1
(arrowdblup)
"
6929,source/pymupdf.pdf,"21D2
(arrowdblright)
"
6930,source/pymupdf.pdf,"21D3
(arrowdbldown)
"
6931,source/pymupdf.pdf,"21D4
(arrowdblboth)
"
6932,source/pymupdf.pdf,"...
221E ∞ (infinity)
...
"
6933,source/pymupdf.pdf,"Note: This method only returns meaningful data for fonts having a CMAP (character map, charmap, the
/ToUnicode PDF key). Otherwise, this array will have length 1 and contain zero only.
"
6934,source/pymupdf.pdf,"glyph_advance(chr, language=None, script=0, wmode=0)
"
6935,source/pymupdf.pdf,"Calculate the “width” of the character’s glyph (visual representation).
"
6936,source/pymupdf.pdf,"Parameters
"
6937,source/pymupdf.pdf,"2 The built-in module array has been chosen for its speed and its compact representation of values.
"
6938,source/pymupdf.pdf,"19.7. Font
243
"
6939,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6940,source/pymupdf.pdf,"• chr (int) – the unicode number of the character. Use ord(), not the character itself.
Again, this should normally work even if a character is not supported by that font,
because fallback fonts will be checked where necessary.
"
6941,source/pymupdf.pdf,"• wmode (int) – write mode, 0 = horizontal, 1 = vertical.
"
6942,source/pymupdf.pdf,"The other parameters are not in use currently.
"
6943,source/pymupdf.pdf,"Returns
"
6944,source/pymupdf.pdf,"a float representing the glyph’s width relative to fontsize 1.
"
6945,source/pymupdf.pdf,"glyph_name_to_unicode(name)
"
6946,source/pymupdf.pdf,"Return the unicode value for a given glyph name. Use it in conjunction with chr() if you want to output
e.g. a certain symbol.
"
6947,source/pymupdf.pdf,"Parameters
"
6948,source/pymupdf.pdf,"name (str) – The name of the glyph.
"
6949,source/pymupdf.pdf,"Returns
"
6950,source/pymupdf.pdf,"The unicode integer,
or 65533 = 0xFFFD if the name is unknown.
Ex-
amples:
font.glyph_name_to_unicode(""Sigma"") = 931,
font.
glyph_name_to_unicode(""sigma"") = 963.
Refer to the Adobe Glyph List
"
6951,source/pymupdf.pdf,"publication for a list of glyph names and their unicode numbers. Example:
"
6952,source/pymupdf.pdf,">>> font = fitz.Font(""helv"")
>>> font.has_glyph(font.glyph_name_to_unicode(""infinity""))
True
"
6953,source/pymupdf.pdf,"glyph_bbox(chr, language=None, script=0)
"
6954,source/pymupdf.pdf,"The glyph rectangle relative to fontsize 1.
"
6955,source/pymupdf.pdf,"Parameters
"
6956,source/pymupdf.pdf,"chr (int) – ord() of the character.
"
6957,source/pymupdf.pdf,"Returns
"
6958,source/pymupdf.pdf,"a Rect.
"
6959,source/pymupdf.pdf,"unicode_to_glyph_name(ch)
"
6960,source/pymupdf.pdf,"Show the name of the character’s glyph.
"
6961,source/pymupdf.pdf,"Parameters
"
6962,source/pymupdf.pdf,"ch (int) – the unicode number of the character. Use ord(), not the character itself.
"
6963,source/pymupdf.pdf,"Returns
"
6964,source/pymupdf.pdf,"a string representing the glyph’s name.
E.g.
font.glyph_name(ord(""#"")) =
""numbersign"". For an invalid code “.notfound” is returned.
"
6965,source/pymupdf.pdf,"Note:
(Changed in v1.18.0) This method and Font.glyph_name_to_unicode()
"
6966,source/pymupdf.pdf,"no longer depend on a font and instead retrieve information from the Adobe Glyph
List.
Also available as fitz.unicode_to_glyph_name() and resp.
fitz.
glyph_name_to_unicode().
"
6967,source/pymupdf.pdf,"text_length(text, fontsize=11)
"
6968,source/pymupdf.pdf,"Calculate the length in points of a unicode string.
"
6969,source/pymupdf.pdf,"244
Chapter 19. Classes
"
6970,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6971,source/pymupdf.pdf,"Note: There is a functional overlap with get_text_length() for Base-14 fonts only.
"
6972,source/pymupdf.pdf,"Parameters
"
6973,source/pymupdf.pdf,"• text (str) – a text string, UTF-8 encoded.
"
6974,source/pymupdf.pdf,"• fontsize (float) – the fontsize.
"
6975,source/pymupdf.pdf,"Return type
"
6976,source/pymupdf.pdf,"float
"
6977,source/pymupdf.pdf,"Returns
"
6978,source/pymupdf.pdf,"the length of the string in points when stored in the PDF. If a character is not contained
in the font, it will automatically be looked up in a fallback font.
"
6979,source/pymupdf.pdf,"Note:
This method was originally implemented in Python, based on calling Font.
glyph_advance(). For performance reasons, it has been rewritten in C for v1.18.14.
To compute the width of a single character, you can now use either of the following
without performance penalty:
"
6980,source/pymupdf.pdf,"1. font.glyph_advance(ord(""Ä"")) * fontsize
"
6981,source/pymupdf.pdf,"2. font.text_length(""Ä"", fontsize=fontsize)
"
6982,source/pymupdf.pdf,"For multi-character strings, the method offers a huge performance advantage compared
to the previous implementation: instead of about 0.5 microseconds for each character,
only 12.5 nanoseconds are required for the second and subsequent ones.
"
6983,source/pymupdf.pdf,"char_lengths(text, fontsize=11)
"
6984,source/pymupdf.pdf,"New in v1.18.14
"
6985,source/pymupdf.pdf,"Sequence of character lengths in points of a unicode string.
"
6986,source/pymupdf.pdf,"Parameters
"
6987,source/pymupdf.pdf,"• text (str) – a text string, UTF-8 encoded.
"
6988,source/pymupdf.pdf,"• fontsize (float) – the fontsize.
"
6989,source/pymupdf.pdf,"Return type
"
6990,source/pymupdf.pdf,"tuple
"
6991,source/pymupdf.pdf,"Returns
"
6992,source/pymupdf.pdf,"the lengths in points of the characters of a string when stored in the PDF. It works like
Font.text_length() broken down to single characters. This is a high speed method,
used e.g. in TextWriter.fill_textbox(). The following is true (allowing rounding
errors): font.text_length(text) == sum(font.char_lengths(text)).
"
6993,source/pymupdf.pdf,">>> font = fitz.Font(""helv"")
>>> text = ""PyMuPDF""
>>> font.text_length(text)
50.115999937057495
>>> fitz.get_text_length(text, fontname=""helv"")
50.115999937057495
>>> sum(font.char_lengths(text))
"
6994,source/pymupdf.pdf,"(continues on next page)
"
6995,source/pymupdf.pdf,"19.7. Font
245
"
6996,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
6997,source/pymupdf.pdf,"(continued from previous page)
"
6998,source/pymupdf.pdf,"50.115999937057495
>>> pprint(font.char_lengths(text))
(7.336999952793121,
# P
"
6999,source/pymupdf.pdf,"5.5,
# y
"
7000,source/pymupdf.pdf,"9.163000047206879,
# M
"
7001,source/pymupdf.pdf,"6.115999937057495,
# u
"
7002,source/pymupdf.pdf,"7.336999952793121,
# P
"
7003,source/pymupdf.pdf,"7.942000031471252,
# D
"
7004,source/pymupdf.pdf,"6.721000015735626)
# F
"
7005,source/pymupdf.pdf,"buffer
"
7006,source/pymupdf.pdf,"• New in v1.17.6
"
7007,source/pymupdf.pdf,"Copy of the binary font file content.
"
7008,source/pymupdf.pdf,"Return type
"
7009,source/pymupdf.pdf,"bytes
"
7010,source/pymupdf.pdf,"flags
"
7011,source/pymupdf.pdf,"A dictionary with various font properties, each represented as bools. Example for Helvetica:
"
7012,source/pymupdf.pdf,">>> pprint(font.flags)
{'bold': 0,
'fake-bold': 0,
'fake-italic': 0,
'invalid-bbox': 0,
'italic': 0,
'mono': 0,
'opentype': 0,
'serif': 1,
'stretch': 0,
'substitute': 0}
"
7013,source/pymupdf.pdf,"Return type
"
7014,source/pymupdf.pdf,"dict
"
7015,source/pymupdf.pdf,"name
"
7016,source/pymupdf.pdf,"Return type
"
7017,source/pymupdf.pdf,"str
"
7018,source/pymupdf.pdf,"Name of the font. May be “” or “(null)”.
"
7019,source/pymupdf.pdf,"bbox
"
7020,source/pymupdf.pdf,"The font bbox. This is the maximum of its glyph bboxes.
"
7021,source/pymupdf.pdf,"Return type
"
7022,source/pymupdf.pdf,"Rect
"
7023,source/pymupdf.pdf,"glyph_count
"
7024,source/pymupdf.pdf,"Return type
"
7025,source/pymupdf.pdf,"int
"
7026,source/pymupdf.pdf,"The number of glyphs defined in the font.
"
7027,source/pymupdf.pdf,"246
Chapter 19. Classes
"
7028,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7029,source/pymupdf.pdf,"ascender
"
7030,source/pymupdf.pdf,"• New in v1.18.0
"
7031,source/pymupdf.pdf,"The ascender value of the font, see here for details. Please note that there is a difference to the strict
definition: our value includes everything above the baseline – not just the height difference between upper
case “A” and and lower case “a”.
"
7032,source/pymupdf.pdf,"Return type
"
7033,source/pymupdf.pdf,"float
"
7034,source/pymupdf.pdf,"descender
"
7035,source/pymupdf.pdf,"• New in v1.18.0
"
7036,source/pymupdf.pdf,"The descender value of the font, see here for details. This value always is negative and is the portion that
some glyphs descend below the base line, for example “g” or “y”. As a consequence, the value ascender
- descender is the total height, that every glyph of the font fits into. This is true at least for most fonts –
as always, there are exceptions, especially for calligraphic fonts, etc.
"
7037,source/pymupdf.pdf,"Return type
"
7038,source/pymupdf.pdf,"float
"
7039,source/pymupdf.pdf,"is_writable
"
7040,source/pymupdf.pdf,"• New in v1.18.0
"
7041,source/pymupdf.pdf,"Indicates whether this font can be used with TextWriter.
"
7042,source/pymupdf.pdf,"Return type
"
7043,source/pymupdf.pdf,"bool
"
7044,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
7045,source/pymupdf.pdf,"19.8 Identity
"
7046,source/pymupdf.pdf,"Identity is a Matrix that performs no action – to be used whenever the syntax requires a matrix, but no actual transfor-
mation should take place. It has the form fitz.Matrix(1, 0, 0, 1, 0, 0).
"
7047,source/pymupdf.pdf,"Identity is a constant, an “immutable” object. So, all of its matrix properties are read-only and its methods are disabled.
"
7048,source/pymupdf.pdf,"If you need a mutable identity matrix as a starting point, use one of the following statements:
"
7049,source/pymupdf.pdf,">>> m = fitz.Matrix(1, 0, 0, 1, 0, 0)
# specify the values
"
7050,source/pymupdf.pdf,">>> m = fitz.Matrix(1, 1)
# use scaling by factor 1
"
7051,source/pymupdf.pdf,">>> m = fitz.Matrix(0)
# use rotation by zero degrees
"
7052,source/pymupdf.pdf,">>> m = fitz.Matrix(fitz.Identity)
# make a copy of Identity
"
7053,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
7054,source/pymupdf.pdf,"19.8. Identity
247
"
7055,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7056,source/pymupdf.pdf,"19.9 IRect
"
7057,source/pymupdf.pdf,"IRect is a rectangular bounding box, very similar to Rect, except that all corner coordinates are integers. IRect is used
to specify an area of pixels, e.g. to receive image data during rendering. Otherwise, e.g. considerations concerning
emptiness and validity of rectangles also apply to this class. Methods and attributes have the same names, and in many
cases are implemented by re-using the respective Rect counterparts.
"
7058,source/pymupdf.pdf,"Attribute / Method
Short Description
"
7059,source/pymupdf.pdf,"IRect.contains()
checks containment of another object
"
7060,source/pymupdf.pdf,"IRect.get_area()
calculate rectangle area
"
7061,source/pymupdf.pdf,"IRect.intersect()
common part with another rectangle
"
7062,source/pymupdf.pdf,"IRect.intersects()
checks for non-empty intersection
"
7063,source/pymupdf.pdf,"IRect.morph()
transform with a point and a matrix
"
7064,source/pymupdf.pdf,"IRect.torect()
matrix that transforms to another rectangle
"
7065,source/pymupdf.pdf,"IRect.norm()
the Euclidean norm
"
7066,source/pymupdf.pdf,"IRect.normalize()
makes a rectangle finite
"
7067,source/pymupdf.pdf,"IRect.bottom_left
bottom left point, synonym bl
"
7068,source/pymupdf.pdf,"IRect.bottom_right
bottom right point, synonym br
"
7069,source/pymupdf.pdf,"IRect.height
height of the rectangle
"
7070,source/pymupdf.pdf,"IRect.is_empty
whether rectangle is empty
"
7071,source/pymupdf.pdf,"IRect.is_infinite
whether rectangle is infinite
"
7072,source/pymupdf.pdf,"IRect.rect
the Rect equivalent
"
7073,source/pymupdf.pdf,"IRect.top_left
top left point, synonym tl
"
7074,source/pymupdf.pdf,"IRect.top_right
top_right point, synonym tr
"
7075,source/pymupdf.pdf,"IRect.quad
Quad made from rectangle corners
"
7076,source/pymupdf.pdf,"IRect.width
width of the rectangle
"
7077,source/pymupdf.pdf,"IRect.x0
X-coordinate of the top left corner
"
7078,source/pymupdf.pdf,"IRect.x1
X-coordinate of the bottom right corner
"
7079,source/pymupdf.pdf,"IRect.y0
Y-coordinate of the top left corner
"
7080,source/pymupdf.pdf,"IRect.y1
Y-coordinate of the bottom right corner
"
7081,source/pymupdf.pdf,"Class API
"
7082,source/pymupdf.pdf,"class IRect
"
7083,source/pymupdf.pdf,"__init__(self )
"
7084,source/pymupdf.pdf,"__init__(self, x0, y0, x1, y1)
"
7085,source/pymupdf.pdf,"__init__(self, irect)
"
7086,source/pymupdf.pdf,"__init__(self, sequence)
"
7087,source/pymupdf.pdf,"Overloaded constructors. Also see examples below and those for the Rect class.
"
7088,source/pymupdf.pdf,"If another irect is specified, a new copy will be made.
"
7089,source/pymupdf.pdf,"If sequence is specified, it must be a Python sequence type of 4 numbers (see Using Python Sequences
as Arguments in PyMuPDF). Non-integer numbers will be truncated, non-numeric values will raise an
exception.
"
7090,source/pymupdf.pdf,"The other parameters mean integer coordinates.
"
7091,source/pymupdf.pdf,"get_area([unit])
"
7092,source/pymupdf.pdf,"Calculates the area of the rectangle and, with no parameter, equals abs(IRect). Like an empty rectangle,
the area of an infinite rectangle is also zero.
"
7093,source/pymupdf.pdf,"248
Chapter 19. Classes
"
7094,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7095,source/pymupdf.pdf,"Parameters
"
7096,source/pymupdf.pdf,"unit (str) – Specify required unit: respective squares of “px” (pixels, default), “in”
(inches), “cm” (centimeters), or “mm” (millimeters).
"
7097,source/pymupdf.pdf,"Return type
"
7098,source/pymupdf.pdf,"float
"
7099,source/pymupdf.pdf,"intersect(ir)
"
7100,source/pymupdf.pdf,"The intersection (common rectangular area) of the current rectangle and ir is calculated and replaces the
current rectangle. If either rectangle is empty, the result is also empty. If either rectangle is infinite, the
other one is taken as the result – and hence also infinite if both rectangles were infinite.
"
7101,source/pymupdf.pdf,"Parameters
"
7102,source/pymupdf.pdf,"ir (rect_like) – Second rectangle.
"
7103,source/pymupdf.pdf,"contains(x)
"
7104,source/pymupdf.pdf,"Checks whether x is contained in the rectangle. It may be rect_like, point_like or a number. If x is
an empty rectangle, this is always true. Conversely, if the rectangle is empty this is always False, if x is not
an empty rectangle and not a number. If x is a number, it will be checked to be one of the four components.
x in irect and irect.contains(x) are equivalent.
"
7105,source/pymupdf.pdf,"Parameters
"
7106,source/pymupdf.pdf,"x (IRect or Rect or Point or int) – the object to check.
"
7107,source/pymupdf.pdf,"Return type
"
7108,source/pymupdf.pdf,"bool
"
7109,source/pymupdf.pdf,"intersects(r)
"
7110,source/pymupdf.pdf,"Checks whether the rectangle and the rect_like “r” contain a common non-empty IRect. This will
always be False if either is infinite or empty.
"
7111,source/pymupdf.pdf,"Parameters
"
7112,source/pymupdf.pdf,"r (rect_like) – the rectangle to check.
"
7113,source/pymupdf.pdf,"Return type
"
7114,source/pymupdf.pdf,"bool
"
7115,source/pymupdf.pdf,"torect(rect)
"
7116,source/pymupdf.pdf,"• New in version 1.19.3
"
7117,source/pymupdf.pdf,"Compute the matrix which transforms this rectangle to a given one. See Rect.torect().
"
7118,source/pymupdf.pdf,"Parameters
"
7119,source/pymupdf.pdf,"rect (rect_like) – the target rectangle. Must not be empty or infinite.
"
7120,source/pymupdf.pdf,"Return type
"
7121,source/pymupdf.pdf,"Matrix
"
7122,source/pymupdf.pdf,"Returns
"
7123,source/pymupdf.pdf,"a matrix mat such that self * mat = rect. Can for example be used to transform
between the page and the pixmap coordinates.
"
7124,source/pymupdf.pdf,"morph(fixpoint, matrix)
"
7125,source/pymupdf.pdf,"• New in version 1.17.0
"
7126,source/pymupdf.pdf,"Return a new quad after applying a matrix to it using a fixed point.
"
7127,source/pymupdf.pdf,"Parameters
"
7128,source/pymupdf.pdf,"• fixpoint (point_like) – the fixed point.
"
7129,source/pymupdf.pdf,"19.9. IRect
249
"
7130,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7131,source/pymupdf.pdf,"• matrix (matrix_like) – the matrix.
"
7132,source/pymupdf.pdf,"Returns
"
7133,source/pymupdf.pdf,"a new Quad. This a wrapper of the same-named quad method. If infinite, the infinite
quad is returned.
"
7134,source/pymupdf.pdf,"norm()
"
7135,source/pymupdf.pdf,"• New in version 1.16.0
"
7136,source/pymupdf.pdf,"Return the Euclidean norm of the rectangle treated as a vector of four numbers.
"
7137,source/pymupdf.pdf,"normalize()
"
7138,source/pymupdf.pdf,"Make the rectangle finite. This is done by shuffling rectangle corners. After this, the bottom right corner
will indeed be south-eastern to the top left one. See Rect for a more details.
"
7139,source/pymupdf.pdf,"top_left
"
7140,source/pymupdf.pdf,"tl
"
7141,source/pymupdf.pdf,"Equals Point(x0, y0).
"
7142,source/pymupdf.pdf,"Type
"
7143,source/pymupdf.pdf,"Point
"
7144,source/pymupdf.pdf,"top_right
"
7145,source/pymupdf.pdf,"tr
"
7146,source/pymupdf.pdf,"Equals Point(x1, y0).
"
7147,source/pymupdf.pdf,"Type
"
7148,source/pymupdf.pdf,"Point
"
7149,source/pymupdf.pdf,"bottom_left
"
7150,source/pymupdf.pdf,"bl
"
7151,source/pymupdf.pdf,"Equals Point(x0, y1).
"
7152,source/pymupdf.pdf,"Type
"
7153,source/pymupdf.pdf,"Point
"
7154,source/pymupdf.pdf,"bottom_right
"
7155,source/pymupdf.pdf,"br
"
7156,source/pymupdf.pdf,"Equals Point(x1, y1).
"
7157,source/pymupdf.pdf,"Type
"
7158,source/pymupdf.pdf,"Point
"
7159,source/pymupdf.pdf,"rect
"
7160,source/pymupdf.pdf,"The Rect with the same coordinates as floats.
"
7161,source/pymupdf.pdf,"Type
"
7162,source/pymupdf.pdf,"Rect
"
7163,source/pymupdf.pdf,"quad
"
7164,source/pymupdf.pdf,"The quadrilateral Quad(irect.tl, irect.tr, irect.bl, irect.br).
"
7165,source/pymupdf.pdf,"Type
"
7166,source/pymupdf.pdf,"Quad
"
7167,source/pymupdf.pdf,"250
Chapter 19. Classes
"
7168,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7169,source/pymupdf.pdf,"width
"
7170,source/pymupdf.pdf,"Contains the width of the bounding box. Equals abs(x1 - x0).
"
7171,source/pymupdf.pdf,"Type
"
7172,source/pymupdf.pdf,"int
"
7173,source/pymupdf.pdf,"height
"
7174,source/pymupdf.pdf,"Contains the height of the bounding box. Equals abs(y1 - y0).
"
7175,source/pymupdf.pdf,"Type
"
7176,source/pymupdf.pdf,"int
"
7177,source/pymupdf.pdf,"x0
"
7178,source/pymupdf.pdf,"X-coordinate of the left corners.
"
7179,source/pymupdf.pdf,"Type
"
7180,source/pymupdf.pdf,"int
"
7181,source/pymupdf.pdf,"y0
"
7182,source/pymupdf.pdf,"Y-coordinate of the top corners.
"
7183,source/pymupdf.pdf,"Type
"
7184,source/pymupdf.pdf,"int
"
7185,source/pymupdf.pdf,"x1
"
7186,source/pymupdf.pdf,"X-coordinate of the right corners.
"
7187,source/pymupdf.pdf,"Type
"
7188,source/pymupdf.pdf,"int
"
7189,source/pymupdf.pdf,"y1
"
7190,source/pymupdf.pdf,"Y-coordinate of the bottom corners.
"
7191,source/pymupdf.pdf,"Type
"
7192,source/pymupdf.pdf,"int
"
7193,source/pymupdf.pdf,"is_infinite
"
7194,source/pymupdf.pdf,"True if rectangle is infinite, False otherwise.
"
7195,source/pymupdf.pdf,"Type
"
7196,source/pymupdf.pdf,"bool
"
7197,source/pymupdf.pdf,"is_empty
"
7198,source/pymupdf.pdf,"True if rectangle is empty, False otherwise.
"
7199,source/pymupdf.pdf,"Type
"
7200,source/pymupdf.pdf,"bool
"
7201,source/pymupdf.pdf,"Note:
"
7202,source/pymupdf.pdf,"• This class adheres to the Python sequence protocol, so components can be accessed via their index, too. Also
refer to Using Python Sequences as Arguments in PyMuPDF.
"
7203,source/pymupdf.pdf,"• Rectangles can be used with arithmetic operators – see chapter Operator Algebra for Geometry Objects.
"
7204,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
7205,source/pymupdf.pdf,"19.9. IRect
251
"
7206,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7207,source/pymupdf.pdf,"19.10 Link
"
7208,source/pymupdf.pdf,"Represents a pointer to somewhere (this document, other documents, the internet). Links exist per document page,
and they are forward-chained to each other, starting from an initial link which is accessible by the Page.first_link
property.
"
7209,source/pymupdf.pdf,"There is a parent-child relationship between a link and its page. If the page object becomes unusable (closed document,
any document structure change, etc.), then so does every of its existing link objects – an exception is raised saying that
the object is “orphaned”, whenever a link property or method is accessed.
"
7210,source/pymupdf.pdf,"Attribute
Short Description
"
7211,source/pymupdf.pdf,"Link.set_border()
modify border properties
"
7212,source/pymupdf.pdf,"Link.set_colors()
modify color properties
"
7213,source/pymupdf.pdf,"Link.set_flags()
modify link flags
"
7214,source/pymupdf.pdf,"Link.border
border characteristics
"
7215,source/pymupdf.pdf,"Link.colors
border line color
"
7216,source/pymupdf.pdf,"Link.dest
points to destination details
"
7217,source/pymupdf.pdf,"Link.is_external
checks if the link is an external destination
"
7218,source/pymupdf.pdf,"Link.flags
link annotation flags
"
7219,source/pymupdf.pdf,"Link.next
points to next link
"
7220,source/pymupdf.pdf,"Link.rect
clickable area in untransformed coordinates
"
7221,source/pymupdf.pdf,"Link.uri
link destination
"
7222,source/pymupdf.pdf,"Link.xref
xref number of the entry
"
7223,source/pymupdf.pdf,"Class API
"
7224,source/pymupdf.pdf,"class Link
"
7225,source/pymupdf.pdf,"set_border(border=None, width=0, style=None, dashes=None)
"
7226,source/pymupdf.pdf,"PDF only: Change border width and dashing properties.
"
7227,source/pymupdf.pdf,"(Changed in version 1.16.9) Allow specification without using a dictionary. The direct parameters are used
if border is not a dictionary.
"
7228,source/pymupdf.pdf,"Parameters
"
7229,source/pymupdf.pdf,"• border (dict) – a dictionary as returned by the border property, with keys
“width” (float), “style” (str) and “dashes” (sequence). Omitted keys will leave
the resp. property unchanged. To e.g. remove dashing use: “dashes”: []. If dashes
is not an empty sequence, “style” will automatically be set to “D” (dashed).
"
7230,source/pymupdf.pdf,"• width (float) – see above.
"
7231,source/pymupdf.pdf,"• style (str) – see above.
"
7232,source/pymupdf.pdf,"• dashes (sequence) – see above.
"
7233,source/pymupdf.pdf,"set_colors(colors=None, stroke=None)
"
7234,source/pymupdf.pdf,"PDF only: Changes the “stroke” color.
"
7235,source/pymupdf.pdf,"Note: In PDF, links are a subtype of annotations technically and do not support fill colors. However, to
keep a consistent API, we do allow specifying a fill= parameter like with all annotations, which will be
ignored with a warning.
"
7236,source/pymupdf.pdf,"(Changed in version 1.16.9) Allow colors to be directly set. These parameters are used if colors is not a
dictionary.
"
7237,source/pymupdf.pdf,"252
Chapter 19. Classes
"
7238,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7239,source/pymupdf.pdf,"Parameters
"
7240,source/pymupdf.pdf,"• colors (dict) – a dictionary containing color specifications. For accepted dictio-
nary keys and values see below. The most practical way should be to first make a
copy of the colors property and then modify this dictionary as required.
"
7241,source/pymupdf.pdf,"• stroke (sequence) – see above.
"
7242,source/pymupdf.pdf,"set_flags(flags)
"
7243,source/pymupdf.pdf,"New in v1.18.16
"
7244,source/pymupdf.pdf,"Set the PDF /F property of the link annotation. See Annot.set_flags() for details. If not a PDF, this
method is a no-op.
"
7245,source/pymupdf.pdf,"flags
"
7246,source/pymupdf.pdf,"New in v1.18.16
"
7247,source/pymupdf.pdf,"Return the link annotation flags, an integer (see Annot.flags for details). Zero if not a PDF.
"
7248,source/pymupdf.pdf,"colors
"
7249,source/pymupdf.pdf,"Meaningful for PDF only: A dictionary of two tuples of floats in range 0 <= float <= 1 specifying the
stroke and the interior (fill) colors. If not a PDF, None is returned. As mentioned above, the fill color is
always None for links. The stroke color is used for the border of the link rectangle. The length of the tuple
implicitly determines the colorspace: 1 = GRAY, 3 = RGB, 4 = CMYK. So (1.0, 0.0, 0.0) stands
for RGB color red. The value of each float f is mapped to the integer value i in range 0 to 255 via the
computation f = i / 255.
"
7250,source/pymupdf.pdf,"Return type
"
7251,source/pymupdf.pdf,"dict
"
7252,source/pymupdf.pdf,"border
"
7253,source/pymupdf.pdf,"Meaningful for PDF only: A dictionary containing border characteristics. It will be None for non-PDFs
and an empty dictionary if no border information exists. The following keys can occur:
"
7254,source/pymupdf.pdf,"• width – a float indicating the border thickness in points. The value is -1.0 if no width is specified.
"
7255,source/pymupdf.pdf,"• dashes – a sequence of integers specifying a line dash pattern. [] means no dashes, [n] means equal
on-off lengths of n points, longer lists will be interpreted as specifying alternating on-off length
values. See the Adobe PDF References page 126 for more detail.
"
7256,source/pymupdf.pdf,"• style – 1-byte border style: S (Solid) = solid rectangle surrounding the annotation, D (Dashed) =
dashed rectangle surrounding the link, the dash pattern is specified by the dashes entry, B (Beveled)
= a simulated embossed rectangle that appears to be raised above the surface of the page, I (Inset) = a
simulated engraved rectangle that appears to be recessed below the surface of the page, U (Underline)
= a single line along the bottom of the annotation rectangle.
"
7257,source/pymupdf.pdf,"Return type
"
7258,source/pymupdf.pdf,"dict
"
7259,source/pymupdf.pdf,"rect
"
7260,source/pymupdf.pdf,"The area that can be clicked in untransformed coordinates.
"
7261,source/pymupdf.pdf,"Type
"
7262,source/pymupdf.pdf,"Rect
"
7263,source/pymupdf.pdf,"is_external
"
7264,source/pymupdf.pdf,"A bool specifying whether the link target is outside of the current document.
"
7265,source/pymupdf.pdf,"Type
"
7266,source/pymupdf.pdf,"bool
"
7267,source/pymupdf.pdf,"19.10. Link
253
"
7268,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7269,source/pymupdf.pdf,"uri
"
7270,source/pymupdf.pdf,"A string specifying the link target. The meaning of this property should be evaluated in conjunction with
property isExternal. The value may be None, in which case isExternal == False. If uri starts with file://,
mailto:, or an internet resource name, isExternal is True. In all other cases isExternal == False and uri
points to an internal location. In case of PDF documents, this should either be #nnnn to indicate a 1-
based (!) page number nnnn, or a named location. The format varies for other document types, e.g. uri =
‘../FixedDoc.fdoc#PG_2_LNK_1’ for page number 2 (1-based) in an XPS document.
"
7271,source/pymupdf.pdf,"Type
"
7272,source/pymupdf.pdf,"str
"
7273,source/pymupdf.pdf,"xref
"
7274,source/pymupdf.pdf,"An integer specifying the PDF xref. Zero if not a PDF.
"
7275,source/pymupdf.pdf,"Type
"
7276,source/pymupdf.pdf,"int
"
7277,source/pymupdf.pdf,"next
"
7278,source/pymupdf.pdf,"The next link or None.
"
7279,source/pymupdf.pdf,"Type
"
7280,source/pymupdf.pdf,"Link
"
7281,source/pymupdf.pdf,"dest
"
7282,source/pymupdf.pdf,"The link destination details object.
"
7283,source/pymupdf.pdf,"Type
"
7284,source/pymupdf.pdf,"linkDest
"
7285,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
7286,source/pymupdf.pdf,"19.11 linkDest
"
7287,source/pymupdf.pdf,"Class representing the dest property of an outline entry or a link. Describes the destination to which such entries
point.
"
7288,source/pymupdf.pdf,"Note:
Up to MuPDF v1.9.0 this class existed inside MuPDF and was dropped in version 1.10.0. For backward
compatibility, PyMuPDF is still maintaining it, although some of its attributes are no longer backed by data actually
available via MuPDF.
"
7289,source/pymupdf.pdf,"254
Chapter 19. Classes
"
7290,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7291,source/pymupdf.pdf,"Attribute
Short Description
"
7292,source/pymupdf.pdf,"linkDest.dest
destination
"
7293,source/pymupdf.pdf,"linkDest.fileSpec
file specification (path, filename)
"
7294,source/pymupdf.pdf,"linkDest.flags
descriptive flags
"
7295,source/pymupdf.pdf,"linkDest.isMap
is this a MAP?
"
7296,source/pymupdf.pdf,"linkDest.isUri
is this a URI?
"
7297,source/pymupdf.pdf,"linkDest.kind
kind of destination
"
7298,source/pymupdf.pdf,"linkDest.lt
top left coordinates
"
7299,source/pymupdf.pdf,"linkDest.named
name if named destination
"
7300,source/pymupdf.pdf,"linkDest.newWindow
name of new window
"
7301,source/pymupdf.pdf,"linkDest.page
page number
"
7302,source/pymupdf.pdf,"linkDest.rb
bottom right coordinates
"
7303,source/pymupdf.pdf,"linkDest.uri
URI
"
7304,source/pymupdf.pdf,"Class API
"
7305,source/pymupdf.pdf,"class linkDest
"
7306,source/pymupdf.pdf,"dest
"
7307,source/pymupdf.pdf,"Target destination name if linkDest.kind is LINK_GOTOR and linkDest.page is -1.
"
7308,source/pymupdf.pdf,"Type
"
7309,source/pymupdf.pdf,"str
"
7310,source/pymupdf.pdf,"fileSpec
"
7311,source/pymupdf.pdf,"Contains the filename and path this link points to, if linkDest.kind is LINK_GOTOR or LINK_LAUNCH.
"
7312,source/pymupdf.pdf,"Type
"
7313,source/pymupdf.pdf,"str
"
7314,source/pymupdf.pdf,"flags
"
7315,source/pymupdf.pdf,"A bitfield describing the validity and meaning of the different aspects of the destination. As far as possible,
link destinations are constructed such that e.g. linkDest.lt and linkDest.rb can be treated as defining
a bounding box. But the flags indicate which of the values were actually specified, see Link Destination
Flags.
"
7316,source/pymupdf.pdf,"Type
"
7317,source/pymupdf.pdf,"int
"
7318,source/pymupdf.pdf,"isMap
"
7319,source/pymupdf.pdf,"This flag specifies whether to track the mouse position when the URI is resolved. Default value: False.
"
7320,source/pymupdf.pdf,"Type
"
7321,source/pymupdf.pdf,"bool
"
7322,source/pymupdf.pdf,"isUri
"
7323,source/pymupdf.pdf,"Specifies whether this destination is an internet resource (as opposed to e.g. a local file specification in
URI format).
"
7324,source/pymupdf.pdf,"Type
"
7325,source/pymupdf.pdf,"bool
"
7326,source/pymupdf.pdf,"kind
"
7327,source/pymupdf.pdf,"Indicates the type of this destination, like a place in this document, a URI, a file launch, an action or a
place in another file. Look at Link Destination Kinds to see the names and numerical values.
"
7328,source/pymupdf.pdf,"Type
"
7329,source/pymupdf.pdf,"int
"
7330,source/pymupdf.pdf,"19.11. linkDest
255
"
7331,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7332,source/pymupdf.pdf,"lt
"
7333,source/pymupdf.pdf,"The top left Point of the destination.
"
7334,source/pymupdf.pdf,"Type
"
7335,source/pymupdf.pdf,"Point
"
7336,source/pymupdf.pdf,"named
"
7337,source/pymupdf.pdf,"This destination refers to some named action to perform (e.g. a javascript, see Adobe PDF References).
Standard actions provided are NextPage, PrevPage, FirstPage, and LastPage.
"
7338,source/pymupdf.pdf,"Type
"
7339,source/pymupdf.pdf,"str
"
7340,source/pymupdf.pdf,"newWindow
"
7341,source/pymupdf.pdf,"If true, the destination should be launched in a new window.
"
7342,source/pymupdf.pdf,"Type
"
7343,source/pymupdf.pdf,"bool
"
7344,source/pymupdf.pdf,"page
"
7345,source/pymupdf.pdf,"The page number (in this or the target document) this destination points to. Only set if linkDest.kind is
LINK_GOTOR or LINK_GOTO. May be -1 if linkDest.kind is LINK_GOTOR. In this case linkDest.dest
contains the name of a destination in the target document.
"
7346,source/pymupdf.pdf,"Type
"
7347,source/pymupdf.pdf,"int
"
7348,source/pymupdf.pdf,"rb
"
7349,source/pymupdf.pdf,"The bottom right Point of this destination.
"
7350,source/pymupdf.pdf,"Type
"
7351,source/pymupdf.pdf,"Point
"
7352,source/pymupdf.pdf,"uri
"
7353,source/pymupdf.pdf,"The name of the URI this destination points to.
"
7354,source/pymupdf.pdf,"Type
"
7355,source/pymupdf.pdf,"str
"
7356,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
7357,source/pymupdf.pdf,"19.12 Matrix
"
7358,source/pymupdf.pdf,"Matrix is a row-major 3x3 matrix used by image transformations in MuPDF (which complies with the respective
concepts laid down in the Adobe PDF References). With matrices you can manipulate the rendered image of a page in
a variety of ways: (parts of) the page can be rotated, zoomed, flipped, sheared and shifted by setting some or all of just
six float values.
"
7359,source/pymupdf.pdf,"Since all points or pixels live in a two-dimensional space, one column vector of that matrix is a constant unit vector,
and only the remaining six elements are used for manipulations. These six elements are usually represented by [a, b,
c, d, e, f]. Here is how they are positioned in the matrix:
"
7360,source/pymupdf.pdf,"256
Chapter 19. Classes
"
7361,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7362,source/pymupdf.pdf,"Please note:
"
7363,source/pymupdf.pdf,"• the below methods are just convenience functions – everything they do, can also be achieved by directly manip-
ulating the six numerical values
"
7364,source/pymupdf.pdf,"• all manipulations can be combined – you can construct a matrix that rotates and shears and scales and shifts,
etc. in one go. If you however choose to do this, do have a look at the remarks further down or at the Adobe
PDF References.
"
7365,source/pymupdf.pdf,"Method / Attribute
Description
"
7366,source/pymupdf.pdf,"Matrix.prerotate()
perform a rotation
"
7367,source/pymupdf.pdf,"Matrix.prescale()
perform a scaling
"
7368,source/pymupdf.pdf,"Matrix.preshear()
perform a shearing (skewing)
"
7369,source/pymupdf.pdf,"Matrix.pretranslate()
perform a translation (shifting)
"
7370,source/pymupdf.pdf,"Matrix.concat()
perform a matrix multiplication
"
7371,source/pymupdf.pdf,"Matrix.invert()
calculate the inverted matrix
"
7372,source/pymupdf.pdf,"Matrix.norm()
the Euclidean norm
"
7373,source/pymupdf.pdf,"Matrix.a
zoom factor X direction
"
7374,source/pymupdf.pdf,"Matrix.b
shearing effect Y direction
"
7375,source/pymupdf.pdf,"Matrix.c
shearing effect X direction
"
7376,source/pymupdf.pdf,"Matrix.d
zoom factor Y direction
"
7377,source/pymupdf.pdf,"Matrix.e
horizontal shift
"
7378,source/pymupdf.pdf,"Matrix.f
vertical shift
"
7379,source/pymupdf.pdf,"Matrix.is_rectilinear
true if rect corners will remain rect corners
"
7380,source/pymupdf.pdf,"Class API
"
7381,source/pymupdf.pdf,"class Matrix
"
7382,source/pymupdf.pdf,"__init__(self )
"
7383,source/pymupdf.pdf,"__init__(self, zoom-x, zoom-y)
"
7384,source/pymupdf.pdf,"__init__(self, shear-x, shear-y, 1)
"
7385,source/pymupdf.pdf,"__init__(self, a, b, c, d, e, f )
"
7386,source/pymupdf.pdf,"__init__(self, matrix)
"
7387,source/pymupdf.pdf,"__init__(self, degree)
"
7388,source/pymupdf.pdf,"__init__(self, sequence)
"
7389,source/pymupdf.pdf,"Overloaded constructors.
"
7390,source/pymupdf.pdf,"Without parameters, the zero matrix Matrix(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) will be created.
"
7391,source/pymupdf.pdf,"zoom-* and shear-* specify zoom or shear values (float) and create a zoom or shear matrix, respectively.
"
7392,source/pymupdf.pdf,"For “matrix” a new copy of another matrix will be made.
"
7393,source/pymupdf.pdf,"Float value “degree” specifies the creation of a rotation matrix which rotates anti-clockwise.
"
7394,source/pymupdf.pdf,"19.12. Matrix
257
"
7395,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7396,source/pymupdf.pdf,"A “sequence” must be any Python sequence object with exactly 6 float entries (see Using Python Sequences
as Arguments in PyMuPDF).
"
7397,source/pymupdf.pdf,"fitz.Matrix(1, 1) and fitz.Matrix(fitz.Identity) create modifiable versions of the Identity matrix, which looks
like [1, 0, 0, 1, 0, 0].
"
7398,source/pymupdf.pdf,"norm()
"
7399,source/pymupdf.pdf,"• New in version 1.16.0
"
7400,source/pymupdf.pdf,"Return the Euclidean norm of the matrix as a vector.
"
7401,source/pymupdf.pdf,"prerotate(deg)
"
7402,source/pymupdf.pdf,"Modify the matrix to perform a counter-clockwise rotation for positive deg degrees, else clockwise. The
matrix elements of an identity matrix will change in the following way:
"
7403,source/pymupdf.pdf,"[1, 0, 0, 1, 0, 0] -> [cos(deg), sin(deg), -sin(deg), cos(deg), 0, 0].
"
7404,source/pymupdf.pdf,"Parameters
"
7405,source/pymupdf.pdf,"deg (float) – The rotation angle in degrees (use conventional notation based on Pi =
180 degrees).
"
7406,source/pymupdf.pdf,"prescale(sx, sy)
"
7407,source/pymupdf.pdf,"Modify the matrix to scale by the zoom factors sx and sy. Has effects on attributes a thru d only: [a, b, c,
d, e, f] -> [a*sx, b*sx, c*sy, d*sy, e, f].
"
7408,source/pymupdf.pdf,"Parameters
"
7409,source/pymupdf.pdf,"• sx (float) – Zoom factor in X direction. For the effect see description of attribute
a.
"
7410,source/pymupdf.pdf,"• sy (float) – Zoom factor in Y direction. For the effect see description of attribute
d.
"
7411,source/pymupdf.pdf,"preshear(sx, sy)
"
7412,source/pymupdf.pdf,"Modify the matrix to perform a shearing, i.e. transformation of rectangles into parallelograms (rhomboids).
Has effects on attributes a thru d only: [a, b, c, d, e, f] -> [c*sy, d*sy, a*sx, b*sx, e, f].
"
7413,source/pymupdf.pdf,"Parameters
"
7414,source/pymupdf.pdf,"• sx (float) – Shearing effect in X direction. See attribute c.
"
7415,source/pymupdf.pdf,"• sy (float) – Shearing effect in Y direction. See attribute b.
"
7416,source/pymupdf.pdf,"pretranslate(tx, ty)
"
7417,source/pymupdf.pdf,"Modify the matrix to perform a shifting / translation operation along the x and / or y axis. Has effects on
attributes e and f only: [a, b, c, d, e, f] -> [a, b, c, d, tx*a + ty*c, tx*b + ty*d].
"
7418,source/pymupdf.pdf,"Parameters
"
7419,source/pymupdf.pdf,"• tx (float) – Translation effect in X direction. See attribute e.
"
7420,source/pymupdf.pdf,"• ty (float) – Translation effect in Y direction. See attribute f.
"
7421,source/pymupdf.pdf,"concat(m1, m2)
"
7422,source/pymupdf.pdf,"Calculate the matrix product m1 * m2 and store the result in the current matrix. Any of m1 or m2 may be
the current matrix. Be aware that matrix multiplication is not commutative. So the sequence of m1, m2 is
important.
"
7423,source/pymupdf.pdf,"Parameters
"
7424,source/pymupdf.pdf,"• m1 (Matrix) – First (left) matrix.
"
7425,source/pymupdf.pdf,"• m2 (Matrix) – Second (right) matrix.
"
7426,source/pymupdf.pdf,"258
Chapter 19. Classes
"
7427,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7428,source/pymupdf.pdf,"invert(m=None)
"
7429,source/pymupdf.pdf,"Calculate the matrix inverse of m and store the result in the current matrix. Returns 1 if m is not invertible
(“degenerate”). In this case the current matrix will not change. Returns 0 if m is invertible, and the current
matrix is replaced with the inverted m.
"
7430,source/pymupdf.pdf,"Parameters
"
7431,source/pymupdf.pdf,"m (Matrix) – Matrix to be inverted. If not provided, the current matrix will be used.
"
7432,source/pymupdf.pdf,"Return type
"
7433,source/pymupdf.pdf,"int
"
7434,source/pymupdf.pdf,"a
"
7435,source/pymupdf.pdf,"Scaling in X-direction (width). For example, a value of 0.5 performs a shrink of the width by a factor of
2. If a < 0, a left-right flip will (additionally) occur.
"
7436,source/pymupdf.pdf,"Type
"
7437,source/pymupdf.pdf,"float
"
7438,source/pymupdf.pdf,"b
"
7439,source/pymupdf.pdf,"Causes a shearing effect: each Point(x, y) will become Point(x, y - b*x). Therefore, horizontal
lines will be “tilt”.
"
7440,source/pymupdf.pdf,"Type
"
7441,source/pymupdf.pdf,"float
"
7442,source/pymupdf.pdf,"c
"
7443,source/pymupdf.pdf,"Causes a shearing effect: each Point(x, y) will become Point(x - c*y, y). Therefore, vertical lines
will be “tilt”.
"
7444,source/pymupdf.pdf,"Type
"
7445,source/pymupdf.pdf,"float
"
7446,source/pymupdf.pdf,"d
"
7447,source/pymupdf.pdf,"Scaling in Y-direction (height). For example, a value of 1.5 performs a stretch of the height by 50%. If d
< 0, an up-down flip will (additionally) occur.
"
7448,source/pymupdf.pdf,"Type
"
7449,source/pymupdf.pdf,"float
"
7450,source/pymupdf.pdf,"e
"
7451,source/pymupdf.pdf,"Causes a horizontal shift effect: Each Point(x, y) will become Point(x + e, y). Positive (negative) values
of e will shift right (left).
"
7452,source/pymupdf.pdf,"Type
"
7453,source/pymupdf.pdf,"float
"
7454,source/pymupdf.pdf,"f
"
7455,source/pymupdf.pdf,"Causes a vertical shift effect: Each Point(x, y) will become Point(x, y - f). Positive (negative) values of f
will shift down (up).
"
7456,source/pymupdf.pdf,"Type
"
7457,source/pymupdf.pdf,"float
"
7458,source/pymupdf.pdf,"is_rectilinear
"
7459,source/pymupdf.pdf,"Rectilinear means that no shearing is present and that any rotations are integer multiples of 90 degrees.
Usually this is used to confirm that (axis-aligned) rectangles before the transformation are still axis-aligned
rectangles afterwards.
"
7460,source/pymupdf.pdf,"Type
"
7461,source/pymupdf.pdf,"bool
"
7462,source/pymupdf.pdf,"19.12. Matrix
259
"
7463,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7464,source/pymupdf.pdf,"Note:
"
7465,source/pymupdf.pdf,"• This class adheres to the Python sequence protocol, so components can be accessed via their index, too. Also
refer to Using Python Sequences as Arguments in PyMuPDF.
"
7466,source/pymupdf.pdf,"• Matrices can be used with arithmetic operators almost like ordinary numbers: they can be added, subtracted,
multiplied or divided – see chapter Operator Algebra for Geometry Objects.
"
7467,source/pymupdf.pdf,"• Matrix multiplication is not commutative – changing the sequence of the multiplicands will change the result
in general. So it can quickly become unclear which result a transformation will yield.
"
7468,source/pymupdf.pdf,"19.12.1 Examples
"
7469,source/pymupdf.pdf,"Here are examples that illustrate some of the achievable effects. All pictures show some text, inserted under control of
some matrix and relative to a fixed reference point (the red dot).
"
7470,source/pymupdf.pdf,"1. The Identity matrix performs no operation.
"
7471,source/pymupdf.pdf,"2. The scaling matrix Matrix(2, 0.5) stretches by a factor of 2 in horizontal, and shrinks by factor 0.5 in vertical
direction.
"
7472,source/pymupdf.pdf,"3. Attributes Matrix.e and Matrix.f shift horizontally and, respectively vertically. In the following 10 to the
right and 20 down.
"
7473,source/pymupdf.pdf,"260
Chapter 19. Classes
"
7474,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7475,source/pymupdf.pdf,"4. A negative Matrix.a causes a left-right flip.
"
7476,source/pymupdf.pdf,"5. A negative Matrix.d causes an up-down flip.
"
7477,source/pymupdf.pdf,"6. Attribute Matrix.b tilts upwards / downwards along the x-axis.
"
7478,source/pymupdf.pdf,"7. Attribute Matrix.c tilts left / right along the y-axis.
"
7479,source/pymupdf.pdf,"19.12. Matrix
261
"
7480,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7481,source/pymupdf.pdf,"8. Matrix Matrix(beta) performs counterclockwise rotations for positive angles beta.
"
7482,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
7483,source/pymupdf.pdf,"19.13 Outline
"
7484,source/pymupdf.pdf,"outline (or “bookmark”), is a property of Document. If not None, it stands for the first outline item of the document.
Its properties in turn define the characteristics of this item and also point to other outline items in “horizontal” or
downward direction. The full tree of all outline items for e.g. a conventional table of contents (TOC) can be recovered
by following these “pointers”.
"
7485,source/pymupdf.pdf,"Method / Attribute
Short Description
"
7486,source/pymupdf.pdf,"Outline.down
next item downwards
"
7487,source/pymupdf.pdf,"Outline.next
next item same level
"
7488,source/pymupdf.pdf,"Outline.page
page number (0-based)
"
7489,source/pymupdf.pdf,"Outline.title
title
"
7490,source/pymupdf.pdf,"Outline.uri
string further specifying outline target
"
7491,source/pymupdf.pdf,"Outline.is_external
target outside document
"
7492,source/pymupdf.pdf,"Outline.is_open
whether sub-outlines are open or collapsed
"
7493,source/pymupdf.pdf,"Outline.dest
points to destination details object
"
7494,source/pymupdf.pdf,"Class API
"
7495,source/pymupdf.pdf,"class Outline
"
7496,source/pymupdf.pdf,"down
"
7497,source/pymupdf.pdf,"The next outline item on the next level down. Is None if the item has no children.
"
7498,source/pymupdf.pdf,"262
Chapter 19. Classes
"
7499,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7500,source/pymupdf.pdf,"Type
"
7501,source/pymupdf.pdf,"Outline
"
7502,source/pymupdf.pdf,"next
"
7503,source/pymupdf.pdf,"The next outline item at the same level as this item. Is None if this is the last one in its level.
"
7504,source/pymupdf.pdf,"Type
"
7505,source/pymupdf.pdf,"Outline
"
7506,source/pymupdf.pdf,"page
"
7507,source/pymupdf.pdf,"The page number (0-based) this bookmark points to.
"
7508,source/pymupdf.pdf,"Type
"
7509,source/pymupdf.pdf,"int
"
7510,source/pymupdf.pdf,"title
"
7511,source/pymupdf.pdf,"The item’s title as a string or None.
"
7512,source/pymupdf.pdf,"Type
"
7513,source/pymupdf.pdf,"str
"
7514,source/pymupdf.pdf,"is_open
"
7515,source/pymupdf.pdf,"Indicator showing whether any sub-outlines should be expanded (True) or be collapsed (False). This
information is interpreted by PDF reader software.
"
7516,source/pymupdf.pdf,"Type
"
7517,source/pymupdf.pdf,"bool
"
7518,source/pymupdf.pdf,"is_external
"
7519,source/pymupdf.pdf,"A bool specifying whether the target is outside (True) of the current document.
"
7520,source/pymupdf.pdf,"Type
"
7521,source/pymupdf.pdf,"bool
"
7522,source/pymupdf.pdf,"uri
"
7523,source/pymupdf.pdf,"A string specifying the link target. The meaning of this property should be evaluated in conjunction with
isExternal. The value may be None, in which case isExternal == False. If uri starts with file://, mailto:,
or an internet resource name, isExternal is True. In all other cases isExternal == False and uri points
to an internal location. In case of PDF documents, this should either be #nnnn to indicate a 1-based
(!) page number nnnn, or a named location. The format varies for other document types, e.g. uri =
‘../FixedDoc.fdoc#PG_21_LNK_84’ for page number 21 (1-based) in an XPS document.
"
7524,source/pymupdf.pdf,"Type
"
7525,source/pymupdf.pdf,"str
"
7526,source/pymupdf.pdf,"dest
"
7527,source/pymupdf.pdf,"The link destination details object.
"
7528,source/pymupdf.pdf,"Type
"
7529,source/pymupdf.pdf,"linkDest
"
7530,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
7531,source/pymupdf.pdf,"19.13. Outline
263
"
7532,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7533,source/pymupdf.pdf,"19.14 Page
"
7534,source/pymupdf.pdf,"Class representing a document page. A page object is created by Document.load_page() or, equivalently, via index-
ing the document like doc[n] - it has no independent constructor.
"
7535,source/pymupdf.pdf,"There is a parent-child relationship between a document and its pages. If the document is closed or deleted, all page
objects (and their respective children, too) in existence will become unusable (“orphaned”): If a page property or
method is being used, an exception is raised.
"
7536,source/pymupdf.pdf,"Several page methods have a Document counterpart for convenience. At the end of this chapter you will find a synopsis.
"
7537,source/pymupdf.pdf,"Note: Many times in this chapter we are using the term coordinate. It is of high importance to have at least a basic
understanding of what that is and that you feel comfortable with the section Coordinates.
"
7538,source/pymupdf.pdf,"19.14.1 Modifying Pages
"
7539,source/pymupdf.pdf,"Changing page properties and adding or changing page content is available for PDF documents only.
"
7540,source/pymupdf.pdf,"In a nutshell, this is what you can do with PyMuPDF:
"
7541,source/pymupdf.pdf,"• Modify page rotation and the visible part (“cropbox”) of the page.
"
7542,source/pymupdf.pdf,"• Insert images, other PDF pages, text and simple geometrical objects.
"
7543,source/pymupdf.pdf,"• Add annotations and form fields.
"
7544,source/pymupdf.pdf,"Note:
Methods require coordinates (points, rectangles) to put content in desired places. Please be aware that these
coordinates must always be provided relative to the unrotated page (since v1.17.0). The reverse is also true: except
Page.rect, resp. Page.bound() (both reflect when the page is rotated), all coordinates returned by methods and
attributes pertain to the unrotated page.
"
7545,source/pymupdf.pdf,"So the returned value of e.g. Page.get_image_bbox() will not change if you do a Page.set_rotation(). The
same is true for coordinates returned by Page.get_text(), annotation rectangles, and so on. If you want to find out,
where an object is located in rotated coordinates, multiply the coordinates with Page.rotation_matrix. There
also is its inverse, Page.derotation_matrix, which you can use when interfacing with other readers, which may
behave differently in this respect.
"
7546,source/pymupdf.pdf,"Note: If you add or update annotations, links or form fields on the page and immediately afterwards need to work with
them (i.e. without leaving the page), you should reload the page using Document.reload_page() before referring
to these new or updated items.
"
7547,source/pymupdf.pdf,"Reloading the page is generally recommended – although not strictly required in all cases. However, some annotation
and widget types have extended features in PyMuPDF compared to MuPDF. More of these extensions may also be
added in the future.
"
7548,source/pymupdf.pdf,"Releoading the page ensures all your changes have been fully applied to PDF structures, so you can safely create
Pixmaps or successfully iterate over annotations, links and form fields.
"
7549,source/pymupdf.pdf,"Method / Attribute
Short Description
"
7550,source/pymupdf.pdf,"Page.add_caret_annot()
PDF only: add a caret annotation
"
7551,source/pymupdf.pdf,"Page.add_circle_annot()
PDF only: add a circle annotation
"
7552,source/pymupdf.pdf,"continues on next page
"
7553,source/pymupdf.pdf,"264
Chapter 19. Classes
"
7554,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7555,source/pymupdf.pdf,"Table 3 – continued from previous page
"
7556,source/pymupdf.pdf,"Method / Attribute
Short Description
"
7557,source/pymupdf.pdf,"Page.add_file_annot()
PDF only: add a file attachment annotation
"
7558,source/pymupdf.pdf,"Page.add_freetext_annot()
PDF only: add a text annotation
"
7559,source/pymupdf.pdf,"Page.add_highlight_annot()
PDF only: add a “highlight” annotation
"
7560,source/pymupdf.pdf,"Page.add_ink_annot()
PDF only: add an ink annotation
"
7561,source/pymupdf.pdf,"Page.add_line_annot()
PDF only: add a line annotation
"
7562,source/pymupdf.pdf,"Page.add_polygon_annot()
PDF only: add a polygon annotation
"
7563,source/pymupdf.pdf,"Page.add_polyline_annot()
PDF only: add a multi-line annotation
"
7564,source/pymupdf.pdf,"Page.add_rect_annot()
PDF only: add a rectangle annotation
"
7565,source/pymupdf.pdf,"Page.add_redact_annot()
PDF only: add a redaction annotation
"
7566,source/pymupdf.pdf,"Page.add_squiggly_annot()
PDF only: add a “squiggly” annotation
"
7567,source/pymupdf.pdf,"Page.add_stamp_annot()
PDF only: add a “rubber stamp” annotation
"
7568,source/pymupdf.pdf,"Page.add_strikeout_annot()
PDF only: add a “strike-out” annotation
"
7569,source/pymupdf.pdf,"Page.add_text_annot()
PDF only: add a comment
"
7570,source/pymupdf.pdf,"Page.add_underline_annot()
PDF only: add an “underline” annotation
"
7571,source/pymupdf.pdf,"Page.add_widget()
PDF only: add a PDF Form field
"
7572,source/pymupdf.pdf,"Page.annot_names()
PDF only: a list of annotation (and widget) names
"
7573,source/pymupdf.pdf,"Page.annot_xrefs()
PDF only: a list of annotation (and widget) xrefs
"
7574,source/pymupdf.pdf,"Page.annots()
return a generator over the annots on the page
"
7575,source/pymupdf.pdf,"Page.apply_redactions()
PDF only: process the redactions of the page
"
7576,source/pymupdf.pdf,"Page.bound()
rectangle of the page
"
7577,source/pymupdf.pdf,"Page.delete_annot()
PDF only: delete an annotation
"
7578,source/pymupdf.pdf,"Page.delete_image()
PDF only: delete an image
"
7579,source/pymupdf.pdf,"Page.delete_link()
PDF only: delete a link
"
7580,source/pymupdf.pdf,"Page.delete_widget()
PDF only: delete a widget / field
"
7581,source/pymupdf.pdf,"Page.draw_bezier()
PDF only: draw a cubic Bezier curve
"
7582,source/pymupdf.pdf,"Page.draw_circle()
PDF only: draw a circle
"
7583,source/pymupdf.pdf,"Page.draw_curve()
PDF only: draw a special Bezier curve
"
7584,source/pymupdf.pdf,"Page.draw_line()
PDF only: draw a line
"
7585,source/pymupdf.pdf,"Page.draw_oval()
PDF only: draw an oval / ellipse
"
7586,source/pymupdf.pdf,"Page.draw_polyline()
PDF only: connect a point sequence
"
7587,source/pymupdf.pdf,"Page.draw_quad()
PDF only: draw a quad
"
7588,source/pymupdf.pdf,"Page.draw_rect()
PDF only: draw a rectangle
"
7589,source/pymupdf.pdf,"Page.draw_sector()
PDF only: draw a circular sector
"
7590,source/pymupdf.pdf,"Page.draw_squiggle()
PDF only: draw a squiggly line
"
7591,source/pymupdf.pdf,"Page.draw_zigzag()
PDF only: draw a zig-zagged line
"
7592,source/pymupdf.pdf,"Page.find_tables()
locate tables on the page
"
7593,source/pymupdf.pdf,"Page.get_drawings()
get vector graphics on page
"
7594,source/pymupdf.pdf,"Page.get_fonts()
PDF only: get list of referenced fonts
"
7595,source/pymupdf.pdf,"Page.get_image_bbox()
PDF only: get bbox and matrix of embedded image
"
7596,source/pymupdf.pdf,"Page.get_image_info()
get list of meta information for all used images
"
7597,source/pymupdf.pdf,"Page.get_image_rects()
PDF only: improved version of Page.get_image_bbox()
"
7598,source/pymupdf.pdf,"Page.get_images()
PDF only: get list of referenced images
"
7599,source/pymupdf.pdf,"Page.get_label()
PDF only: return the label of the page
"
7600,source/pymupdf.pdf,"Page.get_links()
get all links
"
7601,source/pymupdf.pdf,"Page.get_pixmap()
create a page image in raster format
"
7602,source/pymupdf.pdf,"Page.get_svg_image()
create a page image in SVG format
"
7603,source/pymupdf.pdf,"Page.get_text()
extract the page’s text
"
7604,source/pymupdf.pdf,"Page.get_textbox()
extract text contained in a rectangle
"
7605,source/pymupdf.pdf,"Page.get_textpage_ocr()
create a TextPage with OCR for the page
"
7606,source/pymupdf.pdf,"continues on next page
"
7607,source/pymupdf.pdf,"19.14. Page
265
"
7608,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7609,source/pymupdf.pdf,"Table 3 – continued from previous page
"
7610,source/pymupdf.pdf,"Method / Attribute
Short Description
"
7611,source/pymupdf.pdf,"Page.get_textpage()
create a TextPage for the page
"
7612,source/pymupdf.pdf,"Page.get_xobjects()
PDF only: get list of referenced xobjects
"
7613,source/pymupdf.pdf,"Page.insert_font()
PDF only: insert a font for use by the page
"
7614,source/pymupdf.pdf,"Page.insert_image()
PDF only: insert an image
"
7615,source/pymupdf.pdf,"Page.insert_link()
PDF only: insert a link
"
7616,source/pymupdf.pdf,"Page.insert_text()
PDF only: insert text
"
7617,source/pymupdf.pdf,"Page.insert_htmlbox()
PDF only: insert html text in a rectangle
"
7618,source/pymupdf.pdf,"Page.insert_textbox()
PDF only: insert a text box
"
7619,source/pymupdf.pdf,"Page.links()
return a generator of the links on the page
"
7620,source/pymupdf.pdf,"Page.load_annot()
PDF only: load a specific annotation
"
7621,source/pymupdf.pdf,"Page.load_widget()
PDF only: load a specific field
"
7622,source/pymupdf.pdf,"Page.load_links()
return the first link on a page
"
7623,source/pymupdf.pdf,"Page.new_shape()
PDF only: create a new Shape
"
7624,source/pymupdf.pdf,"Page.replace_image()
PDF only: replace an image
"
7625,source/pymupdf.pdf,"Page.search_for()
search for a string
"
7626,source/pymupdf.pdf,"Page.set_artbox()
PDF only: modify /ArtBox
"
7627,source/pymupdf.pdf,"Page.set_bleedbox()
PDF only: modify /BleedBox
"
7628,source/pymupdf.pdf,"Page.set_cropbox()
PDF only: modify the cropbox (visible page)
"
7629,source/pymupdf.pdf,"Page.set_mediabox()
PDF only: modify /MediaBox
"
7630,source/pymupdf.pdf,"Page.set_rotation()
PDF only: set page rotation
"
7631,source/pymupdf.pdf,"Page.set_trimbox()
PDF only: modify /TrimBox
"
7632,source/pymupdf.pdf,"Page.show_pdf_page()
PDF only: display PDF page image
"
7633,source/pymupdf.pdf,"Page.update_link()
PDF only: modify a link
"
7634,source/pymupdf.pdf,"Page.widgets()
return a generator over the fields on the page
"
7635,source/pymupdf.pdf,"Page.write_text()
write one or more TextWriter objects
"
7636,source/pymupdf.pdf,"Page.cropbox_position
displacement of the cropbox
"
7637,source/pymupdf.pdf,"Page.cropbox
the page’s cropbox
"
7638,source/pymupdf.pdf,"Page.artbox
the page’s /ArtBox
"
7639,source/pymupdf.pdf,"Page.bleedbox
the page’s /BleedBox
"
7640,source/pymupdf.pdf,"Page.trimbox
the page’s /TrimBox
"
7641,source/pymupdf.pdf,"Page.derotation_matrix
PDF only: get coordinates in unrotated page space
"
7642,source/pymupdf.pdf,"Page.first_annot
first Annot on the page
"
7643,source/pymupdf.pdf,"Page.first_link
first Link on the page
"
7644,source/pymupdf.pdf,"Page.first_widget
first widget (form field) on the page
"
7645,source/pymupdf.pdf,"Page.mediabox_size
bottom-right point of mediabox
"
7646,source/pymupdf.pdf,"Page.mediabox
the page’s mediabox
"
7647,source/pymupdf.pdf,"Page.number
page number
"
7648,source/pymupdf.pdf,"Page.parent
owning document object
"
7649,source/pymupdf.pdf,"Page.rect
rectangle of the page
"
7650,source/pymupdf.pdf,"Page.rotation_matrix
PDF only: get coordinates in rotated page space
"
7651,source/pymupdf.pdf,"Page.rotation
PDF only: page rotation
"
7652,source/pymupdf.pdf,"Page.transformation_matrix
PDF only: translate between PDF and MuPDF space
"
7653,source/pymupdf.pdf,"Page.xref
PDF only: page xref
"
7654,source/pymupdf.pdf,"Class API
"
7655,source/pymupdf.pdf,"class Page
"
7656,source/pymupdf.pdf,"bound()
"
7657,source/pymupdf.pdf,"Determine the rectangle of the page. Same as property Page.rect. For PDF documents this usually also
coincides with mediabox and cropbox, but not always. For example, if the page is rotated, then this is
"
7658,source/pymupdf.pdf,"266
Chapter 19. Classes
"
7659,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7660,source/pymupdf.pdf,"reflected by this method – the Page.cropbox however will not change.
"
7661,source/pymupdf.pdf,"Return type
"
7662,source/pymupdf.pdf,"Rect
"
7663,source/pymupdf.pdf,"add_caret_annot(point)
"
7664,source/pymupdf.pdf,"PDF only: Add a caret icon. A caret annotation is a visual symbol normally used to indicate the presence
of text edits on the page.
"
7665,source/pymupdf.pdf,"Parameters
"
7666,source/pymupdf.pdf,"point (point_like) – the top left point of a 20 x 20 rectangle containing the MuPDF-
provided icon.
"
7667,source/pymupdf.pdf,"Return type
"
7668,source/pymupdf.pdf,"Annot
"
7669,source/pymupdf.pdf,"Returns
"
7670,source/pymupdf.pdf,"the created annotation. Stroke color blue = (0, 0, 1), no fill color support.
"
7671,source/pymupdf.pdf,"• New in v1.16.0
"
7672,source/pymupdf.pdf,"add_text_annot(point, text, icon='Note')
"
7673,source/pymupdf.pdf,"PDF only: Add a comment icon (“sticky note”) with accompanying text. Only the icon is visible, the
accompanying text is hidden and can be visualized by many PDF viewers by hovering the mouse over the
symbol.
"
7674,source/pymupdf.pdf,"Parameters
"
7675,source/pymupdf.pdf,"• point (point_like) – the top left point of a 20 x 20 rectangle containing the
MuPDF-provided “note” icon.
"
7676,source/pymupdf.pdf,"• text (str) – the commentary text. This will be shown on double clicking or hov-
ering over the icon. May contain any Latin characters.
"
7677,source/pymupdf.pdf,"• icon (str) – choose one of “Note” (default), “Comment”, “Help”, “Insert”, “Key”,
“NewParagraph”, “Paragraph” as the visual symbol for the embodied text4. (New
in v1.16.0)
"
7678,source/pymupdf.pdf,"Return type
"
7679,source/pymupdf.pdf,"Annot
"
7680,source/pymupdf.pdf,"Returns
"
7681,source/pymupdf.pdf,"the created annotation. Stroke color yellow = (1, 1, 0), no fill color support.
"
7682,source/pymupdf.pdf,"add_freetext_annot(rect, text, fontsize=12, fontname='helv', border_color=None, text_color=0,
fill_color=1, rotate=0, align=TEXT_ALIGN_LEFT)
"
7683,source/pymupdf.pdf,"PDF only: Add text in a given rectangle.
"
7684,source/pymupdf.pdf,"Parameters
"
7685,source/pymupdf.pdf,"4 You are generally free to choose any of the Annotation Icons in MuPDF you consider adequate.
"
7686,source/pymupdf.pdf,"19.14. Page
267
"
7687,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7688,source/pymupdf.pdf,"• rect (rect_like) – the rectangle into which the text should be inserted. Text is
automatically wrapped to a new line at box width. Lines not fitting into the box will
be invisible.
"
7689,source/pymupdf.pdf,"• text (str) – the text. May contain any mixture of Latin, Greek, Cyrillic, Chinese,
Japanese and Korean characters. The respective required font is automatically de-
termined. (New in v1.17.0)
"
7690,source/pymupdf.pdf,"• fontsize (float) – the fontsize. Default is 12.
"
7691,source/pymupdf.pdf,"• fontname (str) – the font name. Default is “Helv”. Accepted alternatives are
“Cour”, “TiRo”, “ZaDb” and “Symb”. The name may be abbreviated to the first two
characters, like “Co” for “Cour”. Lower case is also accepted. Bold or italic variants
of the fonts are not accepted (changed in v1.16.0). A user-contributed script pro-
vides a circumvention for this restriction – see section Using Buttons and JavaScript
in chapter FAQ. The actual font to use is now determined on a by-character level, and
all required fonts (or sub-fonts) are automatically included. Therefore, you should
rarely ever need to care about this parameter and let it default (except you insist on
a serifed font for your non-CJK text parts). (New in v1.17.0)
"
7692,source/pymupdf.pdf,"• text_color (sequence,float) – the text color.
Default is black.
(New in
v1.16.0)
"
7693,source/pymupdf.pdf,"• fill_color (sequence,float) – the fill color.
Default is white.
(New in
v1.16.0)
"
7694,source/pymupdf.pdf,"• text_color – the text color. Default is black.
"
7695,source/pymupdf.pdf,"• border_color (sequence,float) – the border color. Default is None. (New in
v1.19.6)
"
7696,source/pymupdf.pdf,"• align
(int)
–
text
alignment,
one
of
TEXT_ALIGN_LEFT,
TEXT_ALIGN_CENTER, TEXT_ALIGN_RIGHT - justify is not supported.
(New in v1.17.0)
"
7697,source/pymupdf.pdf,"• rotate (int) – the text orientation. Accepted values are 0, 90, 270, invalid entries
are set to zero.
"
7698,source/pymupdf.pdf,"Return type
"
7699,source/pymupdf.pdf,"Annot
"
7700,source/pymupdf.pdf,"Returns
"
7701,source/pymupdf.pdf,"the created annotation. Color properties can only be changed using special parameters
of Annot.update(). There, you can also set a border color different from the text color.
"
7702,source/pymupdf.pdf,"• Changed in v1.19.6: add border color parameter
"
7703,source/pymupdf.pdf,"add_file_annot(pos, buffer, filename, ufilename=None, desc=None, icon='PushPin')
"
7704,source/pymupdf.pdf,"PDF only: Add a file attachment annotation with a “PushPin” icon at the specified location.
"
7705,source/pymupdf.pdf,"Parameters
"
7706,source/pymupdf.pdf,"• pos (point_like) – the top-left point of a 18x18 rectangle containing the MuPDF-
provided “PushPin” icon.
"
7707,source/pymupdf.pdf,"• buffer (bytes,bytearray,BytesIO) – the data to be stored (actual file content,
any data, etc.).
"
7708,source/pymupdf.pdf,"268
Chapter 19. Classes
"
7709,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7710,source/pymupdf.pdf,"Changed in v1.14.13: io.BytesIO is now also supported.
"
7711,source/pymupdf.pdf,"• filename (str) – the filename to associate with the data.
"
7712,source/pymupdf.pdf,"• ufilename (str) – the optional PDF unicode version of filename. Defaults to
filename.
"
7713,source/pymupdf.pdf,"• desc (str) – an optional description of the file. Defaults to filename.
"
7714,source/pymupdf.pdf,"• icon (str) – choose one of “PushPin” (default), “Graph”, “Paperclip”, “Tag” as
the visual symbol for the attached dataPage 267, 4. (New in v1.16.0)
"
7715,source/pymupdf.pdf,"Return type
"
7716,source/pymupdf.pdf,"Annot
"
7717,source/pymupdf.pdf,"Returns
"
7718,source/pymupdf.pdf,"the created annotation. Stroke color yellow = (1, 1, 0), no fill color support.
"
7719,source/pymupdf.pdf,"add_ink_annot(list)
"
7720,source/pymupdf.pdf,"PDF only: Add a “freehand” scribble annotation.
"
7721,source/pymupdf.pdf,"Parameters
"
7722,source/pymupdf.pdf,"list (sequence) – a list of one or more lists, each containing point_like items. Each
item in these sublists is interpreted as a Point through which a connecting line is drawn.
Separate sublists thus represent separate drawing lines.
"
7723,source/pymupdf.pdf,"Return type
"
7724,source/pymupdf.pdf,"Annot
"
7725,source/pymupdf.pdf,"Returns
"
7726,source/pymupdf.pdf,"the created annotation in default appearance black =(0, 0, 0),line width 1. No fill color
support.
"
7727,source/pymupdf.pdf,"add_line_annot(p1, p2)
"
7728,source/pymupdf.pdf,"PDF only: Add a line annotation.
"
7729,source/pymupdf.pdf,"Parameters
"
7730,source/pymupdf.pdf,"• p1 (point_like) – the starting point of the line.
"
7731,source/pymupdf.pdf,"• p2 (point_like) – the end point of the line.
"
7732,source/pymupdf.pdf,"Return type
"
7733,source/pymupdf.pdf,"Annot
"
7734,source/pymupdf.pdf,"Returns
"
7735,source/pymupdf.pdf,"the created annotation. It is drawn with line (stroke) color red = (1, 0, 0) and line width
1. No fill color support. The annot rectangle is automatically created to contain both
points, each one surrounded by a circle of radius 3 * line width to make room for any
line end symbols.
"
7736,source/pymupdf.pdf,"add_rect_annot(rect)
"
7737,source/pymupdf.pdf,"add_circle_annot(rect)
"
7738,source/pymupdf.pdf,"PDF only: Add a rectangle, resp. circle annotation.
"
7739,source/pymupdf.pdf,"Parameters
"
7740,source/pymupdf.pdf,"rect (rect_like) – the rectangle in which the circle or rectangle is drawn, must be
finite and not empty. If the rectangle is not equal-sided, an ellipse is drawn.
"
7741,source/pymupdf.pdf,"Return type
"
7742,source/pymupdf.pdf,"Annot
"
7743,source/pymupdf.pdf,"19.14. Page
269
"
7744,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7745,source/pymupdf.pdf,"Returns
"
7746,source/pymupdf.pdf,"the created annotation. It is drawn with line (stroke) color red = (1, 0, 0), line width 1,
fill color is supported.
"
7747,source/pymupdf.pdf,"add_redact_annot(quad, text=None, fontname=None, fontsize=11, align=TEXT_ALIGN_LEFT, fill=(1, 1,
1), text_color=(0, 0, 0), cross_out=True)
"
7748,source/pymupdf.pdf,"PDF only: Add a redaction annotation. A redaction annotation identifies content to be removed from the
document. Adding such an annotation is the first of two steps. It makes visible what will be removed in
the subsequent step, Page.apply_redactions().
"
7749,source/pymupdf.pdf,"Parameters
"
7750,source/pymupdf.pdf,"• quad (quad_like,rect_like) – specifies the (rectangular) area to be removed
which is always equal to the annotation rectangle. This may be a rect_like or
quad_like object. If a quad is specified, then the enveloping rectangle is taken.
"
7751,source/pymupdf.pdf,"• text (str) – text to be placed in the rectangle after applying the redaction (and
thus removing old content). (New in v1.16.12)
"
7752,source/pymupdf.pdf,"• fontname (str) – the font to use when text is given, otherwise ignored. The
same rules apply as for Page.insert_textbox() – which is the method Page.
apply_redactions() internally invokes. The replacement text will be vertically
centered, if this is one of the CJK or PDF Base 14 Fonts. (New in v1.16.12)
"
7753,source/pymupdf.pdf,"Note:
"
7754,source/pymupdf.pdf,"– For an existing font of the page, use its reference name as fontname (this is
item[4] of its entry in Page.get_fonts()).
"
7755,source/pymupdf.pdf,"– For a new, non-builtin font, proceed as follows:
"
7756,source/pymupdf.pdf,"page.insert_text(point,
# anywhere, but outside all␣
"
7757,source/pymupdf.pdf,"˓→redaction rectangles
"
7758,source/pymupdf.pdf,"""something"",
# some non-empty string
"
7759,source/pymupdf.pdf,"fontname=""newname"",
# new, unused reference name
"
7760,source/pymupdf.pdf,"fontfile=""..."",
# desired font file
"
7761,source/pymupdf.pdf,"render_mode=3,
# makes the text invisible
"
7762,source/pymupdf.pdf,")
page.add_redact_annot(..., fontname=""newname"")
"
7763,source/pymupdf.pdf,"• fontsize (float) – the fontsize to use for the replacing text. If the text is
too large to fit, several insertion attempts will be made, gradually reducing the
fontsize to no less than 4. If then the text will still not fit, no text insertion will
take place at all. (New in v1.16.12)
"
7764,source/pymupdf.pdf,"• align (int) – the horizontal alignment for the replacing text.
See
"
7765,source/pymupdf.pdf,"insert_textbox() for available values.
The vertical alignment is (approxi-
mately) centered if a PDF built-in font is used (CJK or PDF Base 14 Fonts). (New
in v1.16.12)
"
7766,source/pymupdf.pdf,"• fill (sequence) – the fill color of the rectangle after applying the redaction. The
default is white = (1, 1, 1), which is also taken if None is specified. To suppress a
fill color altogether, specify False. In this cases the rectangle remains transparent.
(New in v1.16.12)
"
7767,source/pymupdf.pdf,"• text_color (sequence) – the color of the replacing text. Default is black = (0, 0,
0). (New in v1.16.12)
"
7768,source/pymupdf.pdf,"270
Chapter 19. Classes
"
7769,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7770,source/pymupdf.pdf,"• cross_out (bool) – add two diagonal lines to the annotation rectangle. (New in
v1.17.2)
"
7771,source/pymupdf.pdf,"Return type
"
7772,source/pymupdf.pdf,"Annot
"
7773,source/pymupdf.pdf,"Returns
"
7774,source/pymupdf.pdf,"the created annotation. Its standard appearance looks like a red rectangle (no fill color),
optionally showing two diagonal lines. Colors, line width, dashing, opacity and blend
mode can now be set and applied via Annot.update() like with other annotations.
(Changed in v1.17.2)
"
7775,source/pymupdf.pdf,"• New in v1.16.11
"
7776,source/pymupdf.pdf,"add_polyline_annot(points)
"
7777,source/pymupdf.pdf,"add_polygon_annot(points)
"
7778,source/pymupdf.pdf,"PDF only: Add an annotation consisting of lines which connect the given points. A Polygon’s first and last
points are automatically connected, which does not happen for a PolyLine. The rectangle is automatically
created as the smallest rectangle containing the points, each one surrounded by a circle of radius 3 (= 3 *
line width). The following shows a ‘PolyLine’ that has been modified with colors and line ends.
"
7779,source/pymupdf.pdf,"Parameters
"
7780,source/pymupdf.pdf,"points (list) – a list of point_like objects.
"
7781,source/pymupdf.pdf,"Return type
"
7782,source/pymupdf.pdf,"Annot
"
7783,source/pymupdf.pdf,"Returns
"
7784,source/pymupdf.pdf,"the created annotation. It is drawn with line color black, line width 1 no fill color but
fill color support. Use methods of Annot to make any changes to achieve something like
this:
"
7785,source/pymupdf.pdf,"add_underline_annot(quads=None, start=None, stop=None, clip=None)
"
7786,source/pymupdf.pdf,"add_strikeout_annot(quads=None, start=None, stop=None, clip=None)
"
7787,source/pymupdf.pdf,"add_squiggly_annot(quads=None, start=None, stop=None, clip=None)
"
7788,source/pymupdf.pdf,"add_highlight_annot(quads=None, start=None, stop=None, clip=None)
"
7789,source/pymupdf.pdf,"PDF only: These annotations are normally used for marking text which has previously been somehow
located (for example via Page.search_for()). But this is not required: you are free to “mark” just
anything.
"
7790,source/pymupdf.pdf,"19.14. Page
271
"
7791,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7792,source/pymupdf.pdf,"Standard (stroke only – no fill color support) colors are chosen per annotation type: yellow for highlighting,
red for striking out, green for underlining, and magenta for wavy underlining.
"
7793,source/pymupdf.pdf,"All these four methods convert the arguments into a list of Quad objects. The annotation rectangle is then
calculated to envelop all these quadrilaterals.
"
7794,source/pymupdf.pdf,"Note: search_for() delivers a list of either Rect or Quad objects. Such a list can be directly used as an
argument for these annotation types and will deliver one common annotation for all occurrences of the
search string:
"
7795,source/pymupdf.pdf,">>> # prefer quads=True in text searching for annotations!
>>> quads = page.search_for(""pymupdf"", quads=True)
>>> page.add_highlight_annot(quads)
"
7796,source/pymupdf.pdf,"Note: Obviously, text marker annotations need to know what is the top, the bottom, the left, and the right
side of the area(s) to be marked. If the arguments are quads, this information is given by the sequence of
the quad points. In contrast, a rectangle delivers much less information – this is illustrated by the fact, that
4! = 24 different quads can be constructed with the four corners of a rectangle.
"
7797,source/pymupdf.pdf,"Therefore, we strongly recommend to use the quads option for text searches, to ensure correct annota-
tions. A similar consideration applies to marking text spans extracted with the “dict” / “rawdict” options
of Page.get_text(). For more details on how to compute quadrilaterals in this case, see section “How
to Mark Non-horizontal Text” of FAQ.
"
7798,source/pymupdf.pdf,"Parameters
"
7799,source/pymupdf.pdf,"• quads (rect_like,quad_like,list,tuple) – the location(s) – rectangle(s) or
quad(s) – to be marked. (Changed in v1.14.20) A list or tuple must consist of
rect_like or quad_like items (or even a mixture of either). Every item must
be finite, convex and not empty (as applicable). Set this parameter to None if you
want to use the following arguments (Changed in v1.16.14). And vice versa: if not
None, the remaining parameters must be None.
"
7800,source/pymupdf.pdf,"• start (point_like) – start text marking at this point. Defaults to the top-left
point of clip. Must be provided if quads is None. (New in v1.16.14)
"
7801,source/pymupdf.pdf,"• stop (point_like) – stop text marking at this point. Defaults to the bottom-right
point of clip. Must be used if quads is None. (New in v1.16.14)
"
7802,source/pymupdf.pdf,"• clip (rect_like) – only consider text lines intersecting this area. Defaults to the
page rectangle. Only use if start and stop are provided. (New in v1.16.14)
"
7803,source/pymupdf.pdf,"Return type
"
7804,source/pymupdf.pdf,"Annot or None (changed in v1.16.14).
"
7805,source/pymupdf.pdf,"Returns
"
7806,source/pymupdf.pdf,"the created annotation. If quads is an empty list, no annotation is created (changed in
v1.16.14).
"
7807,source/pymupdf.pdf,"Note: You can use parameters start, stop and clip to highlight consecutive lines between the points start
and stop (starting with v1.16.14). Make use of clip to further reduce the selected line bboxes and thus deal
with e.g. multi-column pages. The following multi-line highlight on a page with three text columns was
created by specifying the two red points and setting clip accordingly.
"
7808,source/pymupdf.pdf,"272
Chapter 19. Classes
"
7809,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7810,source/pymupdf.pdf,"find_tables(clip=None, strategy=None, vertical_strategy=None, horizontal_strategy=None,
vertical_lines=None, horizontal_lines=None, snap_tolerance=None, snap_x_tolerance=None,
snap_y_tolerance=None, join_tolerance=None, join_x_tolerance=None,
join_y_tolerance=None, edge_min_length=3, min_words_vertical=3,
min_words_horizontal=1, intersection_tolerance=None, intersection_x_tolerance=None,
intersection_y_tolerance=None, text_tolerance=None, text_x_tolerance=None,
text_y_tolerance=None, add_lines=None)
"
7811,source/pymupdf.pdf,"Find tables on the page and return an object with related information. Typically, the default values of the
many parameters will be sufficient. Adjustments should ever only be needed in corner case situations.
"
7812,source/pymupdf.pdf,"Parameters
"
7813,source/pymupdf.pdf,"• clip (rect_like) – specify a region to consider within the page rectangle and
ignore the rest. Default is the full page.
"
7814,source/pymupdf.pdf,"• strategy (str) – Request a table detection strategy. Valid values are “lines”,
“lines_strict” and “text”.
"
7815,source/pymupdf.pdf,"Default is “lines” which uses all vector graphics on the page to detect grid lines.
"
7816,source/pymupdf.pdf,"Strategy “lines_strict” ignores borderless rectangle vector graphics. Sometimes
single text pieces have background colors which may lead to false columns or lines.
This strategy ignores them and can thus increase detection precision.
"
7817,source/pymupdf.pdf,"If “text” is specified, text positions are used to generate “virtual” column and / or
row boundaries. Use min_words_* to request the number of words for considering
their coordinates.
"
7818,source/pymupdf.pdf,"Use parameters vertical_strategy and horizontal_strategy instead for a
more fine-grained treatment of the dimensions.
"
7819,source/pymupdf.pdf,"• horizontal_lines (sequence[floats]) – y-coordinates of rows. If provided,
there will be no attempt to identify additional table rows. This influences table
detection.
"
7820,source/pymupdf.pdf,"• vertical_lines (sequence[floats]) – x-coordinates of columns. If provided,
there will be no attempt to identify additional table columns. This influences table
detection.
"
7821,source/pymupdf.pdf,"• min_words_vertical (int) – relevant for vertical strategy option “text”: at least
this many words must coincide to establish a virtual column boundary.
"
7822,source/pymupdf.pdf,"• min_words_horizontal (int) – relevant for horizontal strategy option “text”: at
least this many words must coincide to establish a virtual row boundary.
"
7823,source/pymupdf.pdf,"• snap_tolerance (float) – Any two horizontal lines whose y-values differ by
no more than this value will be snapped into one. Accordingly for vertical lines.
"
7824,source/pymupdf.pdf,"19.14. Page
273
"
7825,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7826,source/pymupdf.pdf,"Default is 3. Separate values can be specified instead for the dimensions, using
snap_x_tolerance and snap_y_tolerance.
"
7827,source/pymupdf.pdf,"• join_tolerance (float) – Any two lines will be joined to one if the end and
the start points differ by no more than this value (in points). Default is 3. In-
stead of this value, separate values can be specified for the dimensions using
join_x_tolerance and join_y_tolerance.
"
7828,source/pymupdf.pdf,"• edge_min_length (float) – Ignore a line if its length does not exceed this value
(points). Default is 3.
"
7829,source/pymupdf.pdf,"• intersection_tolerance (float) – When combining lines into cell borders,
orthogonal lines must be within this value (points) to be considered intersecting.
Default is 3. Instead of this value, separate values can be specified for the dimen-
sions using intersection_x_tolerance and intersection_y_tolerance.
"
7830,source/pymupdf.pdf,"• text_tolerance (float) – Characters will be combined into words only if their
distance is no larger than this value (points). Default is 3. Instead of this value,
separate values can be specified for the dimensions using text_x_tolerance and
text_y_tolerance.
"
7831,source/pymupdf.pdf,"• add_lines (tuple,list) – Specify a list of “lines” (i.e. pairs of point_like
"
7832,source/pymupdf.pdf,"objects) as additional, “virtual” vector graphics. These lines may help with table
and / or cell detection and will not otherwise influence the detection strategy. Espe-
cially, in contrast to parameters horizontal_lines and vertical_lines, they
will not prevent detecting rows or columns in other ways. These lines will be treated
exactly like “real” vector graphics in terms of joining, snapping, intersectiing, min-
imum length and containment in the clip rectangle. Similarly, lines not parallel to
any of the coordinate axes will be ignored.
"
7833,source/pymupdf.pdf,"Returns
"
7834,source/pymupdf.pdf,"a TableFinder object that has the following significant attributes:
"
7835,source/pymupdf.pdf,"• cells: a list of all bboxes on the page, that have been identified as table cells (across
all tables). Each cell is a tuple (x0, y0, x1, y1) of coordinates or None.
"
7836,source/pymupdf.pdf,"• tables: a list of Table objects. This is [] if the page has no tables. Single tables can
be found as items of this list. But the TableFinder object itself is also a sequence
"
7837,source/pymupdf.pdf,"274
Chapter 19. Classes
"
7838,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7839,source/pymupdf.pdf,"of its tables. This means that if tabs is a TableFinder object, then table “n” is
delivered by tabs.tables[n] as well as by the shorter tabs[n].
"
7840,source/pymupdf.pdf,"• The Table object has the following attributes:
"
7841,source/pymupdf.pdf,"– bbox: the bounding box of the table as a tuple (x0, y0, x1, y1).
"
7842,source/pymupdf.pdf,"– cells: bounding boxes of the table’s cells (list of tuples). A cell may also be
None.
"
7843,source/pymupdf.pdf,"– extract(): this method returns the text content of each table cell as a list of list
of strings.
"
7844,source/pymupdf.pdf,"– to_pandas(): this method returns the table as a pandas DataFrame.
"
7845,source/pymupdf.pdf,"– header: a TableHeader object containing header information of the table.
"
7846,source/pymupdf.pdf,"– col_count: an integer containing the number of table columns.
"
7847,source/pymupdf.pdf,"– row_count: an integer containing the number of table rows.
"
7848,source/pymupdf.pdf,"– rows: a list of TableRow objects containing two attributes: bbox is the bound-
ary box of the row, and cells is a list of table cells contained in this row.
"
7849,source/pymupdf.pdf,"• The TableHeader object has the following attributes:
"
7850,source/pymupdf.pdf,"– bbox: the bounding box of the header.
"
7851,source/pymupdf.pdf,"– cells: a list of bounding boxes containing the name of the respective column.
"
7852,source/pymupdf.pdf,"– names: a list of strings containing the text of each of the cell bboxes. They
represent the column names – which can be used when exporting the table to
pandas DataFrames or CSV, etc.
"
7853,source/pymupdf.pdf,"– external: a bool indicating whether the header bbox is outside the table body
(True) or not. Table headers are never identified by the TableFinder logic.
Therefore, if external is true, then the header cells are not part of any cell iden-
tified by TableFinder. If external == False, then the first table row is the
header.
"
7854,source/pymupdf.pdf,"Please have a look at these Jupyter notebooks, which cover standard situations like mul-
tiple tables on one page or joining table fragments across multiple pages.
"
7855,source/pymupdf.pdf,"• New in version 1.23.0
"
7856,source/pymupdf.pdf,"• Changed in version 1.23.19: new argument add_lines.
"
7857,source/pymupdf.pdf,"Important: There is also the pdf2docx extract tables method which is capable of table extraction if you
prefer.
"
7858,source/pymupdf.pdf,"add_stamp_annot(rect, stamp=0)
"
7859,source/pymupdf.pdf,"PDF only: Add a “rubber stamp” like annotation to e.g. indicate the document’s intended use (“DRAFT”,
“CONFIDENTIAL”, etc.).
"
7860,source/pymupdf.pdf,"Parameters
"
7861,source/pymupdf.pdf,"• rect (rect_like) – rectangle where to place the annotation.
"
7862,source/pymupdf.pdf,"19.14. Page
275
"
7863,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7864,source/pymupdf.pdf,"• stamp (int) – id number of the stamp text. For available stamps see Stamp Anno-
tation Icons.
"
7865,source/pymupdf.pdf,"Note:
"
7866,source/pymupdf.pdf,"• The stamp’s text and its border line will automatically be sized and be put horizontally and vertically
centered in the given rectangle. Annot.rect is automatically calculated to fit the given width and
will usually be smaller than this parameter.
"
7867,source/pymupdf.pdf,"• The font chosen is “Times Bold” and the text will be upper case.
"
7868,source/pymupdf.pdf,"• The appearance can be changed using Annot.set_opacity() and by setting the “stroke” color (no
“fill” color supported).
"
7869,source/pymupdf.pdf,"• This can be used to create watermark images: on a temporary PDF page create a stamp annotation
with a low opacity value, make a pixmap from it with alpha=True (and potentially also rotate it),
discard the temporary PDF page and use the pixmap with insert_image() for your target PDF.
"
7870,source/pymupdf.pdf,"add_widget(widget)
"
7871,source/pymupdf.pdf,"PDF only: Add a PDF Form field (“widget”) to a page. This also turns the PDF into a Form PDF.
Because of the large amount of different options available for widgets, we have developed a new class
Widget, which contains the possible PDF field attributes. It must be used for both, form field creation and
updates.
"
7872,source/pymupdf.pdf,"Parameters
"
7873,source/pymupdf.pdf,"widget (Widget) – a Widget object which must have been created upfront.
"
7874,source/pymupdf.pdf,"Returns
"
7875,source/pymupdf.pdf,"a widget annotation.
"
7876,source/pymupdf.pdf,"delete_annot(annot)
"
7877,source/pymupdf.pdf,"• The removal will now include any bound ‘Popup’ or response annotations and related objects
(changed in v1.16.6).
"
7878,source/pymupdf.pdf,"PDF only: Delete annotation from the page and return the next one.
"
7879,source/pymupdf.pdf,"Parameters
"
7880,source/pymupdf.pdf,"annot (Annot) – the annotation to be deleted.
"
7881,source/pymupdf.pdf,"Return type
"
7882,source/pymupdf.pdf,"Annot
"
7883,source/pymupdf.pdf,"Returns
"
7884,source/pymupdf.pdf,"the annotation following the deleted one. Please remember that physical removal re-
quires saving to a new file with garbage > 0.
"
7885,source/pymupdf.pdf,"delete_widget(widget)
"
7886,source/pymupdf.pdf,"PDF only: Delete field from the page and return the next one.
"
7887,source/pymupdf.pdf,"Parameters
"
7888,source/pymupdf.pdf,"widget (Widget) – the widget to be deleted.
"
7889,source/pymupdf.pdf,"Return type
"
7890,source/pymupdf.pdf,"Widget
"
7891,source/pymupdf.pdf,"276
Chapter 19. Classes
"
7892,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7893,source/pymupdf.pdf,"Returns
"
7894,source/pymupdf.pdf,"the widget following the deleted one. Please remember that physical removal requires
saving to a new file with garbage > 0.
"
7895,source/pymupdf.pdf,"(New in v1.18.4)
"
7896,source/pymupdf.pdf,"apply_redactions(images=PDF_REDACT_IMAGE_PIXELS)
"
7897,source/pymupdf.pdf,"PDF only: Remove all text content contained in any redaction rectangle.
"
7898,source/pymupdf.pdf,"This method applies and then deletes all redactions from the page.
"
7899,source/pymupdf.pdf,"Parameters
"
7900,source/pymupdf.pdf,"images (int) – How to redact overlapping images.
The default (2) blanks
out
overlapping
pixels.
PDF_REDACT_IMAGE_NONE
(0)
ignores,
and
PDF_REDACT_IMAGE_REMOVE (1) completely removes all overlapping images.
"
7901,source/pymupdf.pdf,"Returns
"
7902,source/pymupdf.pdf,"True if at least one redaction annotation has been processed, False otherwise.
"
7903,source/pymupdf.pdf,"Note:
"
7904,source/pymupdf.pdf,"• Text contained in a redaction rectangle will be physically removed from the page (assuming
"
7905,source/pymupdf.pdf,"Document.save() with a suitable garbage option) and will no longer appear in e.g. text extractions
or anywhere else. All redaction annotations will also be removed. Other annotations are unaffected.
"
7906,source/pymupdf.pdf,"• All overlapping links will be removed. If the rectangle of the link was covering text, then only the
overlapping part of the text is being removed. Similar applies to images covered by link rectangles.
"
7907,source/pymupdf.pdf,"• The
overlapping
parts
of
images
will
be
blanked-out
for
default
option
PDF_REDACT_IMAGE_PIXELS (changed in v1.18.0).
Option 0 does not touch any images
and 1 will remove any image with an overlap.
Please be aware that there is a bug for option
PDF_REDACT_IMAGE_PIXELS = 2: transparent images will be incorrectly handled!
"
7908,source/pymupdf.pdf,"• For option images=PDF_REDACT_IMAGE_REMOVE only this page’s references to the images are
removed - not necessarily the images themselves. Images are completely removed from the file
only, if no longer referenced at all (assuming suitable garbage collection options).
"
7909,source/pymupdf.pdf,"• For option images=PDF_REDACT_IMAGE_PIXELS a new image of format PNG is created, which
the page will use in place of the original one. The original image is not deleted or replaced as part of
this process, so other pages may still show the original. In addition, the new, modified PNG image
currently is stored uncompressed. Do keep these aspects in mind when choosing the right garbage
collection method and compression options during save.
"
7910,source/pymupdf.pdf,"• Text removal is done by character: A character is removed if its bbox has a non-empty over-
lap with a redaction rectangle (changed in MuPDF v1.17).
Depending on the font properties
and / or the chosen line height, deletion may occur for undesired text parts.
Using Tools.
set_small_glyph_heights() with a True argument before text search may help to prevent this.
"
7911,source/pymupdf.pdf,"• Redactions are a simple way to replace single words in a PDF, or to just physically remove them.
Locate the word “secret” using some text extraction or search method and insert a redaction using
“xxxxxx” as replacement text for each occurrence.
"
7912,source/pymupdf.pdf,"– Be wary if the replacement is longer than the original – this may lead to an awkward appear-
ance, line breaks or no new text at all.
"
7913,source/pymupdf.pdf,"– For a number of reasons, the new text may not exactly be positioned on the same line like the
old one – especially true if the replacement font was not one of CJK or PDF Base 14 Fonts.
"
7914,source/pymupdf.pdf,"19.14. Page
277
"
7915,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7916,source/pymupdf.pdf,"• New in v1.16.11
"
7917,source/pymupdf.pdf,"• Changed in v1.16.12: The previous mark parameter is gone. Instead, the respective rectangles are
filled with the individual fill color of each redaction annotation. If a text was given in the annotation,
then insert_textbox() is invoked to insert it, using parameters provided with the redaction.
"
7918,source/pymupdf.pdf,"• Changed in v1.18.0: added option for handling images that overlap redaction areas.
"
7919,source/pymupdf.pdf,"delete_link(linkdict)
"
7920,source/pymupdf.pdf,"PDF only: Delete the specified link from the page.
The parameter must be an original item of
"
7921,source/pymupdf.pdf,"get_links(), see Description of get_links() Entries. The reason for this is the dictionary’s “xref” key,
which identifies the PDF object to be deleted.
"
7922,source/pymupdf.pdf,"Parameters
"
7923,source/pymupdf.pdf,"linkdict (dict) – the link to be deleted.
"
7924,source/pymupdf.pdf,"insert_link(linkdict)
"
7925,source/pymupdf.pdf,"PDF only: Insert a new link on this page. The parameter must be a dictionary of format as provided by
get_links(), see Description of get_links() Entries.
"
7926,source/pymupdf.pdf,"Parameters
"
7927,source/pymupdf.pdf,"linkdict (dict) – the link to be inserted.
"
7928,source/pymupdf.pdf,"update_link(linkdict)
"
7929,source/pymupdf.pdf,"PDF only: Modify the specified link. The parameter must be a (modified) original item of get_links(),
see Description of get_links() Entries. The reason for this is the dictionary’s “xref” key, which identifies
the PDF object to be changed.
"
7930,source/pymupdf.pdf,"Parameters
"
7931,source/pymupdf.pdf,"linkdict (dict) – the link to be modified.
"
7932,source/pymupdf.pdf,"Warning:
If updating / inserting a URI link (""kind"":
LINK_URI), please make sure to start the
value for the ""uri"" key with a disambiguating string like ""http://"", ""https://"", ""file://"",
""ftp://"", ""mailto:"", etc. Otherwise – depending on your browser or other “consumer” software –
unexpected default assumptions may lead to unwanted behaviours.
"
7933,source/pymupdf.pdf,"get_label()
"
7934,source/pymupdf.pdf,"PDF only: Return the label for the page.
"
7935,source/pymupdf.pdf,"Return type
"
7936,source/pymupdf.pdf,"str
"
7937,source/pymupdf.pdf,"Returns
"
7938,source/pymupdf.pdf,"the label string like “vii” for Roman numbering or “” if not defined.
"
7939,source/pymupdf.pdf,"• New in v1.18.6
"
7940,source/pymupdf.pdf,"278
Chapter 19. Classes
"
7941,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7942,source/pymupdf.pdf,"get_links()
"
7943,source/pymupdf.pdf,"Retrieves all links of a page.
"
7944,source/pymupdf.pdf,"Return type
"
7945,source/pymupdf.pdf,"list
"
7946,source/pymupdf.pdf,"Returns
"
7947,source/pymupdf.pdf,"A list of dictionaries. For a description of the dictionary entries, see Description of
get_links() Entries. Always use this or the Page.links() method if you intend to make
changes to the links of a page.
"
7948,source/pymupdf.pdf,"links(kinds=None)
"
7949,source/pymupdf.pdf,"Return a generator over the page’s links. The results equal the entries of Page.get_links().
"
7950,source/pymupdf.pdf,"Parameters
"
7951,source/pymupdf.pdf,"kinds (sequence) – a sequence of integers to down-select to one or more link kinds.
Default is all links. Example: kinds=(fitz.LINK_GOTO,) will only return internal links.
"
7952,source/pymupdf.pdf,"Return type
"
7953,source/pymupdf.pdf,"generator
"
7954,source/pymupdf.pdf,"Returns
"
7955,source/pymupdf.pdf,"an entry of Page.get_links() for each iteration.
"
7956,source/pymupdf.pdf,"• New in v1.16.4
"
7957,source/pymupdf.pdf,"annots(types=None)
"
7958,source/pymupdf.pdf,"Return a generator over the page’s annotations.
"
7959,source/pymupdf.pdf,"Parameters
"
7960,source/pymupdf.pdf,"types (sequence) – a sequence of integers to down-select to one or more annotation
types. Default is all annotations. Example: types=(fitz.PDF_ANNOT_FREETEXT,
fitz.PDF_ANNOT_TEXT) will only return ‘FreeText’ and ‘Text’ annotations.
"
7961,source/pymupdf.pdf,"Return type
"
7962,source/pymupdf.pdf,"generator
"
7963,source/pymupdf.pdf,"Returns
"
7964,source/pymupdf.pdf,"an Annot for each iteration.
"
7965,source/pymupdf.pdf,"Caution: You cannot safely update annotations from within this generator. This
is because most annotation updates require reloading the page via page = doc.
reload_page(page). To circumvent this restriction, make a list of annotations
xref numbers first and then iterate over these numbers:
"
7966,source/pymupdf.pdf,"In [4]: xrefs = [annot.xref for annot in page.annots(types=[...
"
7967,source/pymupdf.pdf,"˓→])]
In [5]: for xref in xrefs:
"
7968,source/pymupdf.pdf,"...:
annot = page.load_annot(xref)
"
7969,source/pymupdf.pdf,"...:
annot.update()
"
7970,source/pymupdf.pdf,"...:
page = doc.reload_page(page)
In [6]:
"
7971,source/pymupdf.pdf,"19.14. Page
279
"
7972,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7973,source/pymupdf.pdf,"• New in v1.16.4
"
7974,source/pymupdf.pdf,"widgets(types=None)
"
7975,source/pymupdf.pdf,"Return a generator over the page’s form fields.
"
7976,source/pymupdf.pdf,"Parameters
"
7977,source/pymupdf.pdf,"types (sequence) – a sequence of integers to down-select to one or more widget types.
Default is all form fields. Example: types=(fitz.PDF_WIDGET_TYPE_TEXT,) will
only return ‘Text’ fields.
"
7978,source/pymupdf.pdf,"Return type
"
7979,source/pymupdf.pdf,"generator
"
7980,source/pymupdf.pdf,"Returns
"
7981,source/pymupdf.pdf,"a Widget for each iteration.
"
7982,source/pymupdf.pdf,"• New in v1.16.4
"
7983,source/pymupdf.pdf,"write_text(rect=None, writers=None, overlay=True, color=None, opacity=None, keep_proportion=True,
rotate=0, oc=0)
"
7984,source/pymupdf.pdf,"PDF only: Write the text of one or more TextWriter objects to the page.
"
7985,source/pymupdf.pdf,"Parameters
"
7986,source/pymupdf.pdf,"• rect (rect_like) – where to place the text. If omitted, the rectangle union of the
text writers is used.
"
7987,source/pymupdf.pdf,"• writers (sequence) – a non-empty tuple / list of TextWriter objects or a single
"
7988,source/pymupdf.pdf,"TextWriter.
"
7989,source/pymupdf.pdf,"• opacity (float) – set transparency, overwrites resp. value in the text writers.
"
7990,source/pymupdf.pdf,"• color (sequ) – set the text color, overwrites resp. value in the text writers.
"
7991,source/pymupdf.pdf,"• overlay (bool) – put the text in foreground or background.
"
7992,source/pymupdf.pdf,"• keep_proportion (bool) – maintain the aspect ratio.
"
7993,source/pymupdf.pdf,"• rotate (float) – rotate the text by an arbitrary angle.
"
7994,source/pymupdf.pdf,"• oc (int) – the xref of an OCG or OCMD. (New in v1.18.4)
"
7995,source/pymupdf.pdf,"Note:
Parameters overlay, keep_proportion, rotate and oc have the same meaning as in Page.
show_pdf_page().
"
7996,source/pymupdf.pdf,"• New in v1.16.18
"
7997,source/pymupdf.pdf,"280
Chapter 19. Classes
"
7998,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
7999,source/pymupdf.pdf,"insert_text(point, text, fontsize=11, fontname='helv', fontfile=None, idx=0, color=None, fill=None,
render_mode=0, border_width=1, encoding=TEXT_ENCODING_LATIN, rotate=0,
morph=None, stroke_opacity=1, fill_opacity=1, overlay=True, oc=0)
"
8000,source/pymupdf.pdf,"PDF only: Insert text starting at point_like point. See Shape.insert_text().
"
8001,source/pymupdf.pdf,"• Changed in v1.18.4
"
8002,source/pymupdf.pdf,"insert_textbox(rect, buffer, fontsize=11, fontname='helv', fontfile=None, idx=0, color=None, fill=None,
render_mode=0, border_width=1, encoding=TEXT_ENCODING_LATIN, expandtabs=8,
align=TEXT_ALIGN_LEFT, charwidths=None, rotate=0, morph=None,
stroke_opacity=1, fill_opacity=1, oc=0, overlay=True)
"
8003,source/pymupdf.pdf,"PDF only: Insert text into the specified rect_like rect. See Shape.insert_textbox().
"
8004,source/pymupdf.pdf,"• Changed in v1.18.4
"
8005,source/pymupdf.pdf,"insert_htmlbox(rect, text, *, css=None, scale_low=0, archive=None, rotate=0, oc=0, opacity=1,
overlay=True)
"
8006,source/pymupdf.pdf,"PDF only: Insert text into the specified rectangle. The method has similarities with methods Page.
insert_textbox() and TextWriter.fill_textbox(), but is much more powerful. This is achieved
by letting a Story object do all the required processing.
"
8007,source/pymupdf.pdf,"• Parameter text may be a string as in the other methods. But it will be interpreted as HTML source
and may therefore also contain HTML language elements – including styling. The css parameter
may be used to pass in additional styling instructions.
"
8008,source/pymupdf.pdf,"• Automatic line breaks are generated at word boundaries. The “soft hyphen” character ""&#173;"" (or
&shy;) can be used to cause hyphenation and thus may also cause line breaks. Forced line breaks
however are only achievable via the HTML tag <br> - ""\\n"" is ignored and will be treated like a
space.
"
8009,source/pymupdf.pdf,"• With this method the following can be achieved:
"
8010,source/pymupdf.pdf,"– Styling effects like bold, italic, text color, text alignment, font size or font switching.
"
8011,source/pymupdf.pdf,"– The text may include arbitrary languages – including right-to-left languages.
"
8012,source/pymupdf.pdf,"– Scripts like Devanagari and several others in Asia have a highly complex system of ligatures,
where two or more unicodes together yield one glyph. The Story uses the software package
HarfBuzz , to deal with these things and produce correct output.
"
8013,source/pymupdf.pdf,"– One can also include images via HTML tag <img> – the Story will take care of the appropriate
layout. This is an alternative option to insert images, compared to Page.insert_image().
"
8014,source/pymupdf.pdf,"– HTML tables (tag <table>) may be included in the text and will be handled appropriately.
"
8015,source/pymupdf.pdf,"– Links are automatically generated when present.
"
8016,source/pymupdf.pdf,"• If content does not fit in the rectangle, the developer has two choices:
"
8017,source/pymupdf.pdf,"– either only be informed about this (and accept a no-op, just like with the other textbox insertion
methods),
"
8018,source/pymupdf.pdf,"– or (scale_low=0 - the default) scale down the content until it fits.
"
8019,source/pymupdf.pdf,"19.14. Page
281
"
8020,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8021,source/pymupdf.pdf,"Parameters
"
8022,source/pymupdf.pdf,"• rect (rect_like) – rectangle on page to receive the text.
"
8023,source/pymupdf.pdf,"• text (str,Story) – the text to be written. Can contain a mixture of plain text and
HTML tags with styling instructions. Alternatively, a Story object may be specified
(in which case the internal Story generation step will be omitted). A Story must
have been generated with all required styling and Archive information.
"
8024,source/pymupdf.pdf,"• css (str) – optional string containing additional CSS instructions. This parameter
is ignored if text is a Story.
"
8025,source/pymupdf.pdf,"• scale_low (float) – if necessary, scale down the content until it fits in the target
rectangle. This sets the down scaling limit. Default is 0, no limit. A value of 1
means no down-scaling permitted. A value of e.g. 0.2 means maximum down-
scaling by 80%.
"
8026,source/pymupdf.pdf,"• archive (Archive) – an Archive object that points to locations where to find im-
ages or non-standard fonts. If text refers to images or non-standard fonts, this
parameter is required. This parameter is ignored if text is a Story.
"
8027,source/pymupdf.pdf,"• rotate (int) – one of the values 0, 90, 180, 270. Depending on this, text will be
filled:
"
8028,source/pymupdf.pdf,"– 0: top-left to bottom-right.
"
8029,source/pymupdf.pdf,"– 90: bottom-left to top-right.
"
8030,source/pymupdf.pdf,"– 180: bottom-right to top-left.
"
8031,source/pymupdf.pdf,"– 270: top-right to bottom-left.
"
8032,source/pymupdf.pdf,"• oc (int) – the xref of an OCG / OCMD or 0. Please refer to Page.show_pdf_page()
"
8033,source/pymupdf.pdf,"for details.
"
8034,source/pymupdf.pdf,"• opacity (float) – set the fill and stroke opacity of the content. Only values 0 <=
opacity < 1 are considered.
"
8035,source/pymupdf.pdf,"• overlay (bool) – put the text in front of other content. Please refer to Page.
show_pdf_page() for details.
"
8036,source/pymupdf.pdf,"Returns
"
8037,source/pymupdf.pdf,"A tuple of floats (spare_height, scale).
"
8038,source/pymupdf.pdf,"• spare_height: -1 if content did not fit, else >= 0. It is the height of the unused (still
available) rectangle stripe. Positive only if scale = 1 (no down-scaling happened).
"
8039,source/pymupdf.pdf,"• scale: down-scaling factor, 0 < scale <= 1.
"
8040,source/pymupdf.pdf,"Please refer to examples in this section of the recipes: How to Fill a Box with HTML
Text.
"
8041,source/pymupdf.pdf,"282
Chapter 19. Classes
"
8042,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8043,source/pymupdf.pdf,"• New in v1.23.8; rebased-only.
"
8044,source/pymupdf.pdf,"• New in v1.23.9: opacity parameter.
"
8045,source/pymupdf.pdf,"draw_line(p1, p2, color=None, width=1, dashes=None, lineCap=0, lineJoin=0, overlay=True,
morph=None, stroke_opacity=1, fill_opacity=1, oc=0)
"
8046,source/pymupdf.pdf,"PDF only: Draw a line from p1 to p2 (point_like s). See Shape.draw_line().
"
8047,source/pymupdf.pdf,"• Changed in v1.18.4
"
8048,source/pymupdf.pdf,"draw_zigzag(p1, p2, breadth=2, color=None, width=1, dashes=None, lineCap=0, lineJoin=0,
overlay=True, morph=None, stroke_opacity=1, fill_opacity=1, oc=0)
"
8049,source/pymupdf.pdf,"PDF only: Draw a zigzag line from p1 to p2 (point_like s). See Shape.draw_zigzag().
"
8050,source/pymupdf.pdf,"• Changed in v1.18.4
"
8051,source/pymupdf.pdf,"draw_squiggle(p1, p2, breadth=2, color=None, width=1, dashes=None, lineCap=0, lineJoin=0,
overlay=True, morph=None, stroke_opacity=1, fill_opacity=1, oc=0)
"
8052,source/pymupdf.pdf,"PDF only: Draw a squiggly (wavy, undulated) line from p1 to p2 (point_like s).
See Shape.
draw_squiggle().
"
8053,source/pymupdf.pdf,"• Changed in v1.18.4
"
8054,source/pymupdf.pdf,"draw_circle(center, radius, color=None, fill=None, width=1, dashes=None, lineCap=0, lineJoin=0,
overlay=True, morph=None, stroke_opacity=1, fill_opacity=1, oc=0)
"
8055,source/pymupdf.pdf,"PDF only:
Draw a circle around center (point_like) with a radius of radius.
See Shape.
draw_circle().
"
8056,source/pymupdf.pdf,"• Changed in v1.18.4
"
8057,source/pymupdf.pdf,"draw_oval(quad, color=None, fill=None, width=1, dashes=None, lineCap=0, lineJoin=0, overlay=True,
morph=None, stroke_opacity=1, fill_opacity=1, oc=0)
"
8058,source/pymupdf.pdf,"PDF only: Draw an oval (ellipse) within the given rect_like or quad_like. See Shape.draw_oval().
"
8059,source/pymupdf.pdf,"• Changed in v1.18.4
"
8060,source/pymupdf.pdf,"19.14. Page
283
"
8061,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8062,source/pymupdf.pdf,"draw_sector(center, point, angle, color=None, fill=None, width=1, dashes=None, lineCap=0, lineJoin=0,
fullSector=True, overlay=True, closePath=False, morph=None, stroke_opacity=1,
fill_opacity=1, oc=0)
"
8063,source/pymupdf.pdf,"PDF only: Draw a circular sector, optionally connecting the arc to the circle’s center (like a piece of pie).
See Shape.draw_sector().
"
8064,source/pymupdf.pdf,"• Changed in v1.18.4
"
8065,source/pymupdf.pdf,"draw_polyline(points, color=None, fill=None, width=1, dashes=None, lineCap=0, lineJoin=0,
overlay=True, closePath=False, morph=None, stroke_opacity=1, fill_opacity=1, oc=0)
"
8066,source/pymupdf.pdf,"PDF only:
Draw several connected lines defined by a sequence of point_like s.
See Shape.
draw_polyline().
"
8067,source/pymupdf.pdf,"• Changed in v1.18.4
"
8068,source/pymupdf.pdf,"draw_bezier(p1, p2, p3, p4, color=None, fill=None, width=1, dashes=None, lineCap=0, lineJoin=0,
overlay=True, closePath=False, morph=None, stroke_opacity=1, fill_opacity=1, oc=0)
"
8069,source/pymupdf.pdf,"PDF only: Draw a cubic Bézier curve from p1 to p4 with the control points p2 and p3 (all are point_like
s). See Shape.draw_bezier().
"
8070,source/pymupdf.pdf,"• Changed in v1.18.4
"
8071,source/pymupdf.pdf,"draw_curve(p1, p2, p3, color=None, fill=None, width=1, dashes=None, lineCap=0, lineJoin=0,
overlay=True, closePath=False, morph=None, stroke_opacity=1, fill_opacity=1, oc=0)
"
8072,source/pymupdf.pdf,"PDF only: This is a special case of draw_bezier(). See Shape.draw_curve().
"
8073,source/pymupdf.pdf,"• Changed in v1.18.4
"
8074,source/pymupdf.pdf,"draw_rect(rect, color=None, fill=None, width=1, dashes=None, lineCap=0, lineJoin=0, overlay=True,
morph=None, stroke_opacity=1, fill_opacity=1, radius=None, oc=0)
"
8075,source/pymupdf.pdf,"PDF only: Draw a rectangle. See Shape.draw_rect().
"
8076,source/pymupdf.pdf,"• Changed in v1.18.4
"
8077,source/pymupdf.pdf,"• Changed in v1.22.0: Added parameter radius.
"
8078,source/pymupdf.pdf,"284
Chapter 19. Classes
"
8079,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8080,source/pymupdf.pdf,"draw_quad(quad, color=None, fill=None, width=1, dashes=None, lineCap=0, lineJoin=0, overlay=True,
morph=None, stroke_opacity=1, fill_opacity=1, oc=0)
"
8081,source/pymupdf.pdf,"PDF only: Draw a quadrilateral. See Shape.draw_quad().
"
8082,source/pymupdf.pdf,"• Changed in v1.18.4
"
8083,source/pymupdf.pdf,"insert_font(fontname='helv', fontfile=None, fontbuffer=None, set_simple=False,
encoding=TEXT_ENCODING_LATIN)
"
8084,source/pymupdf.pdf,"PDF only: Add a new font to be used by text output methods and return its xref. If not already present in
the file, the font definition will be added. Supported are the built-in Base14_Fonts and the CJK fonts via
“reserved” fontnames. Fonts can also be provided as a file path or a memory area containing the image
of a font file.
"
8085,source/pymupdf.pdf,"Parameters
"
8086,source/pymupdf.pdf,"• fontname (str) – The name by which this font shall be referenced when outputting
text on this page. In general, you have a “free” choice here (but consult the Adobe
PDF References, page 16, section 7.3.5 for a formal description of building legal
PDF names). However, if it matches one of the Base14_Fonts or one of the CJK
fonts, fontfile and fontbuffer are ignored.
"
8087,source/pymupdf.pdf,"In other words, you cannot insert a font via fontfile / fontbuffer and also give it a
reserved fontname.
"
8088,source/pymupdf.pdf,"Note: A reserved fontname can be specified in any mixture of upper or lower case
and still match the right built-in font definition: fontnames “helv”, “Helv”, “HELV”,
“Helvetica”, etc. all lead to the same font definition “Helvetica”. But from a Page
perspective, these are different references. You can exploit this fact when using
different encoding variants (Latin, Greek, Cyrillic) of the same font on a page.
"
8089,source/pymupdf.pdf,"• fontfile (str) – a path to a font file. If used, fontname must be different from
all reserved names.
"
8090,source/pymupdf.pdf,"• fontbuffer (bytes/bytearray) – the memory image of a font file. If used, font-
name must be different from all reserved names. This parameter would typically
be used with Font.buffer for fonts supported / available via Font.
"
8091,source/pymupdf.pdf,"• set_simple (int) – applicable for fontfile / fontbuffer cases only: enforce treat-
ment as a “simple” font, i.e. one that only uses character codes up to 255.
"
8092,source/pymupdf.pdf,"• encoding (int) – applicable for the “Helvetica”, “Courier” and “Times” sets of
"
8093,source/pymupdf.pdf,"Base14_Fonts only. Select one of the available encodings Latin (0), Cyrillic (2)
or Greek (1). Only use the default (0 = Latin) for “Symbol” and “ZapfDingBats”.
"
8094,source/pymupdf.pdf,"Rytpe
"
8095,source/pymupdf.pdf,"int
"
8096,source/pymupdf.pdf,"Returns
"
8097,source/pymupdf.pdf,"the xref of the installed font.
"
8098,source/pymupdf.pdf,"Note:
Built-in fonts will not lead to the inclusion of a font file. So the resulting PDF file will remain
small. However, your PDF viewer software is responsible for generating an appropriate appearance – and
there exist differences on whether or how each one of them does this. This is especially true for the CJK
"
8099,source/pymupdf.pdf,"19.14. Page
285
"
8100,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8101,source/pymupdf.pdf,"fonts. But also Symbol and ZapfDingbats are incorrectly handled in some cases. Following are the Font
Names and their correspondingly installed Base Font names:
"
8102,source/pymupdf.pdf,"Base-14 Fonts1
"
8103,source/pymupdf.pdf,"Font Name
Installed Base Font
Comments
"
8104,source/pymupdf.pdf,"helv
Helvetica
normal
"
8105,source/pymupdf.pdf,"heit
Helvetica-Oblique
italic
"
8106,source/pymupdf.pdf,"hebo
Helvetica-Bold
bold
"
8107,source/pymupdf.pdf,"hebi
Helvetica-BoldOblique
bold-italic
"
8108,source/pymupdf.pdf,"cour
Courier
normal
"
8109,source/pymupdf.pdf,"coit
Courier-Oblique
italic
"
8110,source/pymupdf.pdf,"cobo
Courier-Bold
bold
"
8111,source/pymupdf.pdf,"cobi
Courier-BoldOblique
bold-italic
"
8112,source/pymupdf.pdf,"tiro
Times-Roman
normal
"
8113,source/pymupdf.pdf,"tiit
Times-Italic
italic
"
8114,source/pymupdf.pdf,"tibo
Times-Bold
bold
"
8115,source/pymupdf.pdf,"tibi
Times-BoldItalic
bold-italic
"
8116,source/pymupdf.pdf,"symb
Symbol
3
"
8117,source/pymupdf.pdf,"zadb
ZapfDingbats
3
"
8118,source/pymupdf.pdf,"CJK Fonts2 (China, Japan, Korea)
"
8119,source/pymupdf.pdf,"Font Name
Installed Base Font
Comments
"
8120,source/pymupdf.pdf,"china-s
Heiti
simplified Chinese
"
8121,source/pymupdf.pdf,"china-ss
Song
simplified Chinese (serif)
"
8122,source/pymupdf.pdf,"china-t
Fangti
traditional Chinese
"
8123,source/pymupdf.pdf,"china-ts
Ming
traditional Chinese (serif)
"
8124,source/pymupdf.pdf,"japan
Gothic
Japanese
"
8125,source/pymupdf.pdf,"japan-s
Mincho
Japanese (serif)
"
8126,source/pymupdf.pdf,"korea
Dotum
Korean
"
8127,source/pymupdf.pdf,"korea-s
Batang
Korean (serif)
"
8128,source/pymupdf.pdf,"insert_image(rect, *, alpha=-1, filename=None, height=0, keep_proportion=True, mask=None, oc=0,
overlay=True, pixmap=None, rotate=0, stream=None, width=0, xref=0)
"
8129,source/pymupdf.pdf,"PDF only: Put an image inside the given rectangle. The image may already exist in the PDF or be taken
from a pixmap, a file, or a memory area.
"
8130,source/pymupdf.pdf,"Parameters
"
8131,source/pymupdf.pdf,"• rect (rect_like) – where to put the image. Must be finite and not empty.
"
8132,source/pymupdf.pdf,"• alpha (int) – deprecated and ignored.
"
8133,source/pymupdf.pdf,"• filename (str) – name of an image file (all formats supported by MuPDF – see
"
8134,source/pymupdf.pdf,"Supported Input Image Formats).
"
8135,source/pymupdf.pdf,"• height (int) –
"
8136,source/pymupdf.pdf,"1 If your existing code already uses the installed base name as a font reference (as it was supported by PyMuPDF versions earlier than 1.14), this
will continue to work.
3 Not all PDF readers display these fonts at all. Some others do, but use a wrong character spacing, etc.
2 Not all PDF reader software (including internet browsers and office software) display all of these fonts. And if they do, the difference between
the serifed and the non-serifed version may hardly be noticeable. But serifed and non-serifed versions lead to different installed base fonts, thus
providing an option to be displayable with your specific PDF viewer.
"
8137,source/pymupdf.pdf,"286
Chapter 19. Classes
"
8138,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8139,source/pymupdf.pdf,"• keep_proportion (bool) – maintain the aspect ratio of the image.
"
8140,source/pymupdf.pdf,"• mask (bytes,bytearray,io.BytesIO) – image in memory – to be used as image
mask (alpha values) for the base image. When specified, the base image must be
provided as a filename or a stream – and must not be an image that already has a
mask.
"
8141,source/pymupdf.pdf,"• oc (int) – (xref) make image visibility dependent on this OCG or OCMD. Ignored
after the first of multiple insertions. The property is stored with the generated PDF
image object and therefore controls the image’s visibility throughout the PDF.
"
8142,source/pymupdf.pdf,"• overlay – see Common Parameters.
"
8143,source/pymupdf.pdf,"• pixmap (Pixmap) – a pixmap containing the image.
"
8144,source/pymupdf.pdf,"• rotate (int) – rotate the image. Must be an integer multiple of 90 degrees. Posi-
tive values rotate anti-clockwise. If you need a rotation by an arbitrary angle, con-
sider converting the image to a PDF (Document.convert_to_pdf()) first and
then use Page.show_pdf_page() instead.
"
8145,source/pymupdf.pdf,"• stream (bytes,bytearray,io.BytesIO) – image in memory (all formats sup-
ported by MuPDF – see Supported Input Image Formats).
"
8146,source/pymupdf.pdf,"• width (int) –
"
8147,source/pymupdf.pdf,"• xref (int) – the xref of an image already present in the PDF. If given, parameters
filename, Pixmap, stream, alpha and mask are ignored. The page will simply
receive a reference to the existing image.
"
8148,source/pymupdf.pdf,"Returns
"
8149,source/pymupdf.pdf,"The xref of the embedded image. This can be used as the xref argument for very
significant performance boosts, if the image is inserted again.
"
8150,source/pymupdf.pdf,"This example puts the same image on every page of a document:
"
8151,source/pymupdf.pdf,">>> doc = fitz.open(...)
>>> rect = fitz.Rect(0, 0, 50, 50)
# put thumbnail in upper left corner
"
8152,source/pymupdf.pdf,">>> img = open(""some.jpg"", ""rb"").read()
# an image file
"
8153,source/pymupdf.pdf,">>> img_xref = 0
# first execution embeds the image
"
8154,source/pymupdf.pdf,">>> for page in doc:
"
8155,source/pymupdf.pdf,"img_xref = page.insert_image(rect, stream=img,
"
8156,source/pymupdf.pdf,"xref=img_xref,
2nd time reuses existing image
"
8157,source/pymupdf.pdf,")
"
8158,source/pymupdf.pdf,">>> doc.save(...)
"
8159,source/pymupdf.pdf,"Note:
"
8160,source/pymupdf.pdf,"1. The method detects multiple insertions of the same image (like in the above example) and will store
its data only on the first execution. This is even true (although less performant), if using the default
xref=0.
"
8161,source/pymupdf.pdf,"2. The method cannot detect if the same image had already been part of the file before opening it.
"
8162,source/pymupdf.pdf,"3. You can use this method to provide a background or foreground image for the page, like a copyright
or a watermark. Please remember, that watermarks require a transparent image if put in foreground
...
"
8163,source/pymupdf.pdf,"4. The image may be inserted uncompressed, e.g. if a Pixmap is used or if the image has an alpha
channel. Therefore, consider using deflate=True when saving the file. In addition, there are ways
"
8164,source/pymupdf.pdf,"19.14. Page
287
"
8165,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8166,source/pymupdf.pdf,"to control the image size – even if transparency comes into play. Have a look at How to Add Images
to a PDF Page.
"
8167,source/pymupdf.pdf,"5. The image is stored in the PDF at its original quality level. This may be much better than what
you need for your display. Consider decreasing the image size before insertion – e.g. by using
the pixmap option and then shrinking it or scaling it down (see Pixmap chapter). The PIL method
Image.thumbnail() can also be used for that purpose. The file size savings can be very significant.
"
8168,source/pymupdf.pdf,"6. Another efficient way to display the same image on multiple pages is another method:
"
8169,source/pymupdf.pdf,"show_pdf_page(). Consult Document.convert_to_pdf() for how to obtain intermediary PDFs
usable for that method.
"
8170,source/pymupdf.pdf,"• Changed in v1.14.1: By default, the image keeps its aspect ratio.
"
8171,source/pymupdf.pdf,"• Changed in v1.14.11: Added args keep_proportion, rotate.
"
8172,source/pymupdf.pdf,"• Changed in v1.14.13:
"
8173,source/pymupdf.pdf,"– The image is now always placed centered in the rectangle, i.e. the centers of image and rect-
angle are equal.
"
8174,source/pymupdf.pdf,"– Added support for stream as io.BytesIO.
"
8175,source/pymupdf.pdf,"• Changed in v1.17.6: Insertion rectangle no longer needs to have a non-empty intersection with the
page’s Page.cropbox5.
"
8176,source/pymupdf.pdf,"• Changed in v1.18.1: Added mask arg.
"
8177,source/pymupdf.pdf,"• Changed in v1.18.3: Added oc arg.
"
8178,source/pymupdf.pdf,"• Changed in v1.18.13:
"
8179,source/pymupdf.pdf,"– Allow providing the image as the xref of an existing one.
"
8180,source/pymupdf.pdf,"– Added xref arg.
"
8181,source/pymupdf.pdf,"– Return xref of stored image.
"
8182,source/pymupdf.pdf,"• Changed in v1.19.3: deprecate and ignore alpha arg.
"
8183,source/pymupdf.pdf,"replace_image(xref, filename=None, pixmap=None, stream=None)
"
8184,source/pymupdf.pdf,"Replace the image at xref with another one.
"
8185,source/pymupdf.pdf,"Parameters
"
8186,source/pymupdf.pdf,"• xref (int) – the xref of the image.
"
8187,source/pymupdf.pdf,"• filename – the filename of the new image.
"
8188,source/pymupdf.pdf,"• pixmap – the Pixmap of the new image.
"
8189,source/pymupdf.pdf,"• stream – the memory area containing the new image.
"
8190,source/pymupdf.pdf,"Arguments filename, Pixmap, stream have the same meaning as in Page.insert_image(), especially
exactly one of these must be provided.
"
8191,source/pymupdf.pdf,"This is a global replacement: the new image will also be shown wherever the old one has been displayed
throughout the file.
"
8192,source/pymupdf.pdf,"5 The previous algorithm caused images to be shrunk to this intersection. Now the image can be anywhere on Page.mediabox, potentially
being invisible or only partially visible if the cropbox (representing the visible page part) is smaller.
"
8193,source/pymupdf.pdf,"288
Chapter 19. Classes
"
8194,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8195,source/pymupdf.pdf,"This method mainly exists for technical purposes. Typical uses include replacing large images by smaller
versions, like a lower resolution, graylevel instead of colored, etc., or changing transparency.
"
8196,source/pymupdf.pdf,"• New in v1.21.0
"
8197,source/pymupdf.pdf,"delete_image(xref )
"
8198,source/pymupdf.pdf,"Delete the image at xref. This is slightly misleading: actually the image is being replaced with a small
transparent Pixmap using above Page.replace_image(). The visible effect however is equivalent.
"
8199,source/pymupdf.pdf,"Parameters
"
8200,source/pymupdf.pdf,"xref (int) – the xref of the image.
"
8201,source/pymupdf.pdf,"This is a global replacement: the image will disappear wherever the old one has been displayed throughout
the file.
"
8202,source/pymupdf.pdf,"If you inspect / extract a page’s images by methods like Page.get_images(), Page.get_image_info()
or Page.get_text(), the replacing “dummy” image will be detected like so (45, 47, 1, 1, 8,
'DeviceGray', '', 'Im1', 'FlateDecode') and also seem to “cover” the same boundary box on
the page.
"
8203,source/pymupdf.pdf,"• New in v1.21.0
"
8204,source/pymupdf.pdf,"get_text(option, *, clip=None, flags=None, textpage=None, sort=False, delimiters=None)
"
8205,source/pymupdf.pdf,"Retrieves the content of a page in a variety of formats. This is a wrapper for multiple TextPage methods
by choosing the output option opt as follows:
"
8206,source/pymupdf.pdf,"• “text” – TextPage.extractTEXT(), default
"
8207,source/pymupdf.pdf,"• “blocks” – TextPage.extractBLOCKS()
"
8208,source/pymupdf.pdf,"• “words” – TextPage.extractWORDS()
"
8209,source/pymupdf.pdf,"• “html” – TextPage.extractHTML()
"
8210,source/pymupdf.pdf,"• “xhtml” – TextPage.extractXHTML()
"
8211,source/pymupdf.pdf,"• “xml” – TextPage.extractXML()
"
8212,source/pymupdf.pdf,"• “dict” – TextPage.extractDICT()
"
8213,source/pymupdf.pdf,"• “json” – TextPage.extractJSON()
"
8214,source/pymupdf.pdf,"• “rawdict” – TextPage.extractRAWDICT()
"
8215,source/pymupdf.pdf,"• “rawjson” – TextPage.extractRAWJSON()
"
8216,source/pymupdf.pdf,"Parameters
"
8217,source/pymupdf.pdf,"• opt (str) – A string indicating the requested format, one of the above. A mixture
of upper and lower case is supported.
"
8218,source/pymupdf.pdf,"Values “words” and “blocks” are also accepted (changed in v1.16.3).
"
8219,source/pymupdf.pdf,"• clip (rect-like) – restrict extracted text to this rectangle. If None, the full page
is taken. Has no effect for options “html”, “xhtml” and “xml”. (New in v1.17.7)
"
8220,source/pymupdf.pdf,"19.14. Page
289
"
8221,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8222,source/pymupdf.pdf,"• flags (int) – indicator bits to control whether to include images or how text should
be handled with respect to white spaces and ligatures. See Text Extraction Flags
for available indicators and Text Extraction Flags Defaults for default settings. (New
in v1.16.2)
"
8223,source/pymupdf.pdf,"• textpage – use a previously created TextPage. This reduces execution time very
significantly: by more than 50% and up to 95%, depending on the extraction option.
If specified, the ‘flags’ and ‘clip’ arguments are ignored, because they are textpage-
only properties. If omitted, a new, temporary textpage will be created. (New in
v1.19.0)
"
8224,source/pymupdf.pdf,"• sort (bool) – sort the output by vertical, then horizontal coordinates. In many
cases, this should suffice to generate a “natural” reading order. Has no effect on
(X)HTML and XML. Output option “words” sorts by (y1, x0) of the words’
bboxes. Similar is true for “blocks”, “dict”, “json”, “rawdict”, “rawjson”: they
all are sorted by (y1, x0) of the resp. block bbox. If specified for “text”, then
internally “blocks” is used. (New in v1.19.1)
"
8225,source/pymupdf.pdf,"• delimiters (str) – use these characters as additional word separators with the
“words” output option (ignored otherwise). By default, all white spaces (includ-
ing non-breaking space 0xA0) indicate start and end of a word. Now you can
specify more characters causing this. For instance, the default will return ""john.
doe@outlook.com"" as one word. If you specify delimiters=""@."" then the four
words ""john"", ""doe"", ""outlook"", ""com"" will be returned. Other possible uses in-
clude ignoring punctuation characters delimiters=string.punctuation. The
“word” strings will not contain any delimiting character. (New in v1.23.5)
"
8226,source/pymupdf.pdf,"Return type
"
8227,source/pymupdf.pdf,"str, list, dict
"
8228,source/pymupdf.pdf,"Returns
"
8229,source/pymupdf.pdf,"The page’s content as a string, a list or a dictionary. Refer to the corresponding TextPage
method for details.
"
8230,source/pymupdf.pdf,"Note:
"
8231,source/pymupdf.pdf,"1. You can use this method as a document conversion tool from any supported document type to one
of TEXT, HTML, XHTML or XML documents.
"
8232,source/pymupdf.pdf,"2. The inclusion of text via the clip parameter is decided on a by-character level: a character becomes
part of the output, if its bbox is contained in clip (changed in v1.18.2). This deviates from the
algorithm used in redaction annotations: a character will be removed if its bbox intersects any
redaction annotation.
"
8233,source/pymupdf.pdf,"• Changed in v1.19.0: added TextPage parameter
"
8234,source/pymupdf.pdf,"• Changed in v1.19.1: added sort parameter
"
8235,source/pymupdf.pdf,"• Changed in v1.19.6: added new constants for defining default flags per method.
"
8236,source/pymupdf.pdf,"• Changed in v1.23.5: added delimiters parameter
"
8237,source/pymupdf.pdf,"get_textbox(rect, textpage=None)
"
8238,source/pymupdf.pdf,"Retrieve the text contained in a rectangle.
"
8239,source/pymupdf.pdf,"290
Chapter 19. Classes
"
8240,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8241,source/pymupdf.pdf,"Parameters
"
8242,source/pymupdf.pdf,"• rect (rect-like) – rect-like.
"
8243,source/pymupdf.pdf,"• textpage – a TextPage to use. If omitted, a new, temporary textpage will be cre-
ated.
"
8244,source/pymupdf.pdf,"Returns
"
8245,source/pymupdf.pdf,"a string with interspersed linebreaks where necessary. It is based on dedicated code
(changed in v1.19.0). A tyical use is checking the result of Page.search_for():
"
8246,source/pymupdf.pdf,">>> rl = page.search_for(""currency:"")
>>> page.get_textbox(rl[0])
'Currency:'
>>>
"
8247,source/pymupdf.pdf,"• New in v1.17.7
"
8248,source/pymupdf.pdf,"• Changed in v1.19.0: add TextPage parameter
"
8249,source/pymupdf.pdf,"get_textpage(clip=None, flags=3)
"
8250,source/pymupdf.pdf,"Create a TextPage for the page.
"
8251,source/pymupdf.pdf,"Parameters
"
8252,source/pymupdf.pdf,"• flags (int) – indicator bits controlling the content available for subsequent text
extractions and searches – see the parameter of Page.get_text().
"
8253,source/pymupdf.pdf,"• clip (rect-like) – restrict extracted text to this area. (New in v1.17.7)
"
8254,source/pymupdf.pdf,"Returns
"
8255,source/pymupdf.pdf,"TextPage
"
8256,source/pymupdf.pdf,"• New in v1.16.5
"
8257,source/pymupdf.pdf,"• Changed in v1.17.7: introduced clip parameter.
"
8258,source/pymupdf.pdf,"get_textpage_ocr(flags=3, language='eng', dpi=72, full=False, tessdata=None)
"
8259,source/pymupdf.pdf,"Create a TextPage for the page that includes OCRed text. MuPDF will invoke Tesseract-OCR if this method
is used. Otherwise this is a normal TextPage object.
"
8260,source/pymupdf.pdf,"Parameters
"
8261,source/pymupdf.pdf,"• flags (int) – indicator bits controlling the content available for subsequent test
extractions and searches – see the parameter of Page.get_text().
"
8262,source/pymupdf.pdf,"• language (str) – the expected language(s). Use “+”-separated values if multiple
languages are expected, “eng+spa” for English and Spanish.
"
8263,source/pymupdf.pdf,"• dpi (int) – the desired resolution in dots per inch. Influences recognition quality
(and execution time).
"
8264,source/pymupdf.pdf,"• full (bool) – whether to OCR the full page, or just the displayed images.
"
8265,source/pymupdf.pdf,"19.14. Page
291
"
8266,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8267,source/pymupdf.pdf,"• tessdata (str) – The name of Tesseract’s language support folder tessdata.
If
omitted,
this
information
must
be
present
as
environment
variable
"
8268,source/pymupdf.pdf,"TESSDATA_PREFIX. Can be determined by function get_tessdata().
"
8269,source/pymupdf.pdf,"Note: This method does not support a clip parameter – OCR will always happen for the complete page
rectangle.
"
8270,source/pymupdf.pdf,"Returns
"
8271,source/pymupdf.pdf,"a TextPage. Execution may be significantly longer than Page.get_textpage().
"
8272,source/pymupdf.pdf,"For a full page OCR, all text will have the font “GlyphlessFont” from Tesseract. In case
of partial OCR, normal text will keep its properties, and only text coming from images
will have the GlyphlessFont.
"
8273,source/pymupdf.pdf,"Note:
OCRed text is only available to PyMuPDF’s text extractions and searches if
their TextPage parameter specifies the output of this method.
"
8274,source/pymupdf.pdf,"This Jupyter notebook walks through an example for using OCR textpages.
"
8275,source/pymupdf.pdf,"• New in v.1.19.0
"
8276,source/pymupdf.pdf,"• Changed in v1.19.1: support full and partial OCRing a page.
"
8277,source/pymupdf.pdf,"get_drawings(extended=False)
"
8278,source/pymupdf.pdf,"Return the vector graphics of the page. These are instructions which draw lines, rectangles, quadruples or
curves, including properties like colors, transparency, line width and dashing, etc. Alternative terms are
“line art” and “drawings”.
"
8279,source/pymupdf.pdf,"Returns
"
8280,source/pymupdf.pdf,"a list of dictionaries. Each dictionary item contains one or more single draw commands
belonging together: they have the same properties (colors, dashing, etc.). This is called
a “path” in PDF, so we adopted that name here, but the method works for all document
types.
"
8281,source/pymupdf.pdf,"The path dictionary for fill, stroke and fill-stroke paths has been designed to be compatible with class
Shape. There are the following keys:
"
8282,source/pymupdf.pdf,"292
Chapter 19. Classes
"
8283,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8284,source/pymupdf.pdf,"Key
Value
"
8285,source/pymupdf.pdf,"closePath
Same as the parameter in Shape.
"
8286,source/pymupdf.pdf,"color
Stroke color (see Shape).
"
8287,source/pymupdf.pdf,"dashes
Dashed line specification (see Shape).
"
8288,source/pymupdf.pdf,"even_odd
Fill colors of area overlaps – same as the parameter in Shape.
"
8289,source/pymupdf.pdf,"fill
Fill color (see Shape).
"
8290,source/pymupdf.pdf,"items
List of draw commands: lines, rectangles, quads or curves.
"
8291,source/pymupdf.pdf,"lineCap
Number 3-tuple, use its max value on output with Shape.
"
8292,source/pymupdf.pdf,"lineJoin
Same as the parameter in Shape.
"
8293,source/pymupdf.pdf,"fill_opacity
fill color transparency (see Shape). (New in v1.18.17)
"
8294,source/pymupdf.pdf,"stroke_opacity
stroke color transparency (see Shape). (New in v1.18.17)
"
8295,source/pymupdf.pdf,"rect
Page area covered by this path. Information only.
"
8296,source/pymupdf.pdf,"layer
name of applicable Optional Content Group. (New in v1.22.0)
"
8297,source/pymupdf.pdf,"level
the hierarchy level if extended=True. (New in v1.22.0)
"
8298,source/pymupdf.pdf,"seqno
command number when building page appearance. (New in v1.19.0)
"
8299,source/pymupdf.pdf,"type
type of this path. (New in v1.18.17)
"
8300,source/pymupdf.pdf,"width
Stroke line width. (see Shape).
"
8301,source/pymupdf.pdf,"Key ""opacity"" has been replaced by the new keys ""fill_opacity"" and ""stroke_opacity"". This is
now compatible with the corresponding parameters of Shape.finish(). (Changed in v1.18.17)
"
8302,source/pymupdf.pdf,"For paths other than groups or clips, key ""type"" takes one of the following values:
"
8303,source/pymupdf.pdf,"• “f” – this is a fill-only path. Only key-values relevant for this operation have a meaning, not ap-
plicable ones are present with a value of None: ""color"", ""lineCap"", ""lineJoin"", ""width"",
""closePath"", ""dashes"" and should be ignored.
"
8304,source/pymupdf.pdf,"• “s” – this is a stroke-only path. Similar to previous, key ""fill"" is present with value None.
"
8305,source/pymupdf.pdf,"• “fs” – this is a path performing combined fill and stroke operations.
"
8306,source/pymupdf.pdf,"Each item in path[""items""] is one of the following:
"
8307,source/pymupdf.pdf,"• (""l"", p1, p2) - a line from p1 to p2 (Point objects).
"
8308,source/pymupdf.pdf,"• (""c"", p1, p2, p3, p4) - cubic Bézier curve from p1 to p4 (p2 and p3 are the control points).
All objects are of type Point.
"
8309,source/pymupdf.pdf,"• (""re"", rect, orientation) - a Rect. Multiple rectangles within the same path are now detected
(changed in v1.18.17). Integer orientation is 1 resp. -1 indicating whether the enclosed area is
rotated left (1 = anti-clockwise), or resp. right7 (changed in v1.19.2).
"
8310,source/pymupdf.pdf,"• (""qu"", quad) - a Quad. 3 or 4 consecutive lines are detected to actually represent a Quad (changed
in v1.19.2:). (New in v1.18.17)
"
8311,source/pymupdf.pdf,"Using class Shape, you should be able to recreate the original drawings on a separate (PDF) page with
high fidelity under normal, not too sophisticated circumstances. Please see the following comments on
restrictions. A coding draft can be found in section “Extractings Drawings” of chapter FAQ.
"
8312,source/pymupdf.pdf,"Specifying extended=True significantly alters the output. Most importantly, new dictionary types are
present: “clip” and “group”. All paths will now be organized in a hierarchic structure which is encoded
by the new integer key “level”, the hierarchy level. Each group or clip establishes a new hierarchy, which
applies to all subsequent paths having a larger level value. (New in v1.22.0)
"
8313,source/pymupdf.pdf,"7 In PDF, an area enclosed by some lines or curves can have a property called “orientation”. This is significant for switching on or off the fill
color of that area when there exist multiple area overlaps - see discussion in method Shape.finish() using the “non-zero winding number” rule.
While orientation of curves, quads, triangles and other shapes enclosed by lines always was detectable, this has been impossible for “re” (rectangle)
items in the past. Adding the orientation parameter now delivers the missing information.
"
8314,source/pymupdf.pdf,"19.14. Page
293
"
8315,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8316,source/pymupdf.pdf,"Any path with a smaller level value than its predecessor will end the scope of (at least) the preceeding
hierarchy level. A “clip” path with the same level as the preceding clip will end the scope of that clip.
Same is true for groups. This is best explained by an example:
"
8317,source/pymupdf.pdf,"+------+------+--------+------+--------+
| line | lvl0 | lvl1
| lvl2 |
lvl3
|
"
8318,source/pymupdf.pdf,"+------+------+--------+------+--------+
|
0
| clip |
|
|
|
"
8319,source/pymupdf.pdf,"|
1
|
| fill
|
|
|
"
8320,source/pymupdf.pdf,"|
2
|
| group
|
|
|
"
8321,source/pymupdf.pdf,"|
3
|
|
| clip |
|
"
8322,source/pymupdf.pdf,"|
4
|
|
|
| stroke |
"
8323,source/pymupdf.pdf,"|
5
|
|
| fill |
|
ends scope of clip in line 3
"
8324,source/pymupdf.pdf,"|
6
|
| stroke |
|
|
ends scope of group in line 2
"
8325,source/pymupdf.pdf,"|
7
|
| clip
|
|
|
"
8326,source/pymupdf.pdf,"|
8
| fill |
|
|
|
ends scope of line 0
"
8327,source/pymupdf.pdf,"+------+------+--------+------+--------+
"
8328,source/pymupdf.pdf,"The clip in line 0 applies to line including line 7. Group in line 2 applies to lines 3 to 5, clip in line 3 only
applies to line 4.
"
8329,source/pymupdf.pdf,"“stroke” in line 4 is under control of “group” in line 2 and “clip” in line 3 (which in turn is a subset of line
0 clip).
"
8330,source/pymupdf.pdf,"• “clip” dictionary. Its values (most importantly “scissor”) remain valid / apply as long as following
dictionaries have a larger “level” value.
"
8331,source/pymupdf.pdf,"Key
Value
"
8332,source/pymupdf.pdf,"closePath
Same as in “stroke” or “fill” dictionaries
"
8333,source/pymupdf.pdf,"even_odd
Same as in “stroke” or “fill” dictionaries
"
8334,source/pymupdf.pdf,"items
Same as in “stroke” or “fill” dictionaries
"
8335,source/pymupdf.pdf,"rect
Same as in “stroke” or “fill” dictionaries
"
8336,source/pymupdf.pdf,"layer
Same as in “stroke” or “fill” dictionaries
"
8337,source/pymupdf.pdf,"level
Same as in “stroke” or “fill” dictionaries
"
8338,source/pymupdf.pdf,"scissor
the clip rectangle
"
8339,source/pymupdf.pdf,"type
“clip”
"
8340,source/pymupdf.pdf,"• “group” dictionary. Its values remain valid (apply) as long as following dictionaries have a larger
“level” value. Any dictionary with an equal or lower level end this group.
"
8341,source/pymupdf.pdf,"Key
Value
"
8342,source/pymupdf.pdf,"rect
Same as in “stroke” or “fill” dictionaries
"
8343,source/pymupdf.pdf,"layer
Same as in “stroke” or “fill” dictionaries
"
8344,source/pymupdf.pdf,"level
Same as in “stroke” or “fill” dictionaries
"
8345,source/pymupdf.pdf,"isolated
(bool) Whether this group is isolated
"
8346,source/pymupdf.pdf,"knockout
(bool) Whether this is a “Knockout Group”
"
8347,source/pymupdf.pdf,"blendmode
Name of the BlendMode, default is “Normal”
"
8348,source/pymupdf.pdf,"opacity
Float value in range [0, 1].
"
8349,source/pymupdf.pdf,"type
“group”
"
8350,source/pymupdf.pdf,"Note: The method is based on the output of Page.get_cdrawings() – which is much faster, but requires
somewhat more attention processing its output.
"
8351,source/pymupdf.pdf,"294
Chapter 19. Classes
"
8352,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8353,source/pymupdf.pdf,"• New in v1.18.0
"
8354,source/pymupdf.pdf,"• Changed in v1.18.17
"
8355,source/pymupdf.pdf,"• Changed in v1.19.0: add “seqno” key, remove “clippings” key
"
8356,source/pymupdf.pdf,"• Changed in v1.19.1: “color” / “fill” keys now always are either are RGB tuples or None. This resolves
issues caused by exotic colorspaces.
"
8357,source/pymupdf.pdf,"• Changed in v1.19.2: add an indicator for the “orientation” of the area covered by an “re” item.
"
8358,source/pymupdf.pdf,"• Changed in v1.22.0: add new key ""layer"" which contains the name of the Optional Content Group
of the path (or None).
"
8359,source/pymupdf.pdf,"• Changed in v1.22.0: add parameter extended to also return clipping and group paths.
"
8360,source/pymupdf.pdf,"get_cdrawings(extended=False)
"
8361,source/pymupdf.pdf,"Extract the vector graphics on the page. Apart from following technical differences, functionally equivalent
to Page.get_drawings(), but much faster:
"
8362,source/pymupdf.pdf,"• Every path type only contains the relevant keys, e.g. a stroke path has no ""fill"" color key. See
comment in method Page.get_drawings().
"
8363,source/pymupdf.pdf,"• Coordinates are given as point_like, rect_like and quad_like tuples – not as Point, Rect,
"
8364,source/pymupdf.pdf,"Quad objects.
"
8365,source/pymupdf.pdf,"If performance is a concern, consider using this method: Compared to versions earlier than 1.18.17, you
should see much shorter response times. We have seen pages that required 2 seconds then, now only need
200 ms with this method.
"
8366,source/pymupdf.pdf,"• New in v1.18.17
"
8367,source/pymupdf.pdf,"• Changed in v1.19.0: removed “clippings” key, added “seqno” key.
"
8368,source/pymupdf.pdf,"• Changed in v1.19.1: always generate RGB color tuples.
"
8369,source/pymupdf.pdf,"• Changed in v1.22.0: added new key ""layer"" which contains the name of the Optional Content
Group of the path (or None).
"
8370,source/pymupdf.pdf,"• Changed in v1.22.0: added parameter extended to also return clipping paths.
"
8371,source/pymupdf.pdf,"get_fonts(full=False)
"
8372,source/pymupdf.pdf,"PDF only: Return a list of fonts referenced by the page. Wrapper for Document.get_page_fonts().
"
8373,source/pymupdf.pdf,"get_images(full=False)
"
8374,source/pymupdf.pdf,"PDF only: Return a list of images referenced by the page. Wrapper for Document.get_page_images().
"
8375,source/pymupdf.pdf,"get_image_info(hashes=False, xrefs=False)
"
8376,source/pymupdf.pdf,"Return a list of meta information dictionaries for all images shown on the page. This works for all document
types. Technically, this is a subset of the dictionary output of Page.get_text(): the image binary content
and any text on the page are ignored.
"
8377,source/pymupdf.pdf,"Parameters
"
8378,source/pymupdf.pdf,"19.14. Page
295
"
8379,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8380,source/pymupdf.pdf,"• hashes (bool) – Compute the MD5 hashcode for each encountered image, which
allows identifying image duplicates. This adds the key ""digest"" to the output,
whose value is a 16 byte bytes object. (New in v1.18.13)
"
8381,source/pymupdf.pdf,"• xrefs (bool) – PDF only.
Try to find the xref for each image.
Implies
hashes=True. Adds the ""xref"" key to the dictionary. If not found, the value
is 0, which means, the image is either “inline” or otherwise undetectable. Please
note that this option has an extended response time, because the MD5 hashcode will
be computed at least two times for each image with an xref. (New in v1.18.13)
"
8382,source/pymupdf.pdf,"Return type
"
8383,source/pymupdf.pdf,"list[dict]
"
8384,source/pymupdf.pdf,"Returns
"
8385,source/pymupdf.pdf,"A list of dictionaries. This includes information for exactly those images, that are
shown on the page – including “inline images”. In contrast to images included in
Page.get_text(), image binary content is not loaded, which drastically reduces
memory usage.
The dictionary layout is similar to that of image blocks in page.
get_text(""dict"").
"
8386,source/pymupdf.pdf,"Key
Value
"
8387,source/pymupdf.pdf,"number
block number (int)
"
8388,source/pymupdf.pdf,"bbox
image bbox on page, rect_like
"
8389,source/pymupdf.pdf,"width
original image width (int)
"
8390,source/pymupdf.pdf,"height
original image height (int)
"
8391,source/pymupdf.pdf,"cs-name
colorspace name (str)
"
8392,source/pymupdf.pdf,"colorspace
colorspace.n (int)
"
8393,source/pymupdf.pdf,"xres
resolution in x-direction (int)
"
8394,source/pymupdf.pdf,"yres
resolution in y-direction (int)
"
8395,source/pymupdf.pdf,"bpc
bits per component (int)
"
8396,source/pymupdf.pdf,"size
storage occupied by image (int)
"
8397,source/pymupdf.pdf,"digest
MD5 hashcode (bytes), if hashes is true
"
8398,source/pymupdf.pdf,"xref
image xref or 0, if xrefs is true
"
8399,source/pymupdf.pdf,"transform
matrix transforming image rect to bbox, matrix_like
"
8400,source/pymupdf.pdf,"Multiple occurrences of the same image are always reported. You can detect duplicates
by comparing their digest values.
"
8401,source/pymupdf.pdf,"• New in v1.18.11
"
8402,source/pymupdf.pdf,"• Changed in v1.18.13: added image MD5 hashcode computation and xref search.
"
8403,source/pymupdf.pdf,"get_xobjects()
"
8404,source/pymupdf.pdf,"PDF only:
Return a list of Form XObjects referenced by the page.
Wrapper for Document.
get_page_xobjects().
"
8405,source/pymupdf.pdf,"get_image_rects(item, transform=False)
"
8406,source/pymupdf.pdf,"PDF only: Return boundary boxes and transformation matrices of an embedded image. This is an improved
version of Page.get_image_bbox() with the following differences:
"
8407,source/pymupdf.pdf,"• There is no restriction on how the image is invoked (by the page or one of its Form XObjects). The
result is always complete and correct.
"
8408,source/pymupdf.pdf,"296
Chapter 19. Classes
"
8409,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8410,source/pymupdf.pdf,"• The result is a list of Rect or (Rect, Matrix) objects – depending on transform. Each list item rep-
resents one location of the image on the page. Multiple occurrences might not be detectable by
Page.get_image_bbox().
"
8411,source/pymupdf.pdf,"• The method invokes Page.get_image_info() with xrefs=True and therefore has a noticeably
longer response time than Page.get_image_bbox().
"
8412,source/pymupdf.pdf,"Parameters
"
8413,source/pymupdf.pdf,"• item (list,str,int) – an item of the list Page.get_images(), or the reference
name entry of such an item (item[7]), or the image xref.
"
8414,source/pymupdf.pdf,"• transform (bool) – also return the matrix used to transform the image rectangle
to the bbox on the page. If true, then tuples (bbox, matrix) are returned.
"
8415,source/pymupdf.pdf,"Return type
"
8416,source/pymupdf.pdf,"list
"
8417,source/pymupdf.pdf,"Returns
"
8418,source/pymupdf.pdf,"Boundary boxes and respective transformation matrices for each image occurrence on
the page. If the item is not on the page, an empty list [] is returned.
"
8419,source/pymupdf.pdf,"New in v1.18.13
"
8420,source/pymupdf.pdf,"get_image_bbox(item, transform=False)
"
8421,source/pymupdf.pdf,"PDF only: Return boundary box and transformation matrix of an embedded image.
"
8422,source/pymupdf.pdf,"Parameters
"
8423,source/pymupdf.pdf,"• item (list,str) – an item of the list Page.get_images() with full=True spec-
ified, or the reference name entry of such an item, which is item[-3] (or item[7]
respectively).
"
8424,source/pymupdf.pdf,"• transform (bool) – return the matrix used to transform the image rectangle to the
bbox on the page (new in v1.18.11). Default is just the bbox. If true, then a tuple
(bbox, matrix) is returned.
"
8425,source/pymupdf.pdf,"Return type
"
8426,source/pymupdf.pdf,"Rect or (Rect, Matrix)
"
8427,source/pymupdf.pdf,"Returns
"
8428,source/pymupdf.pdf,"the boundary box of the image – optionally also its transformation matrix.
"
8429,source/pymupdf.pdf,"• (Changed in v1.16.7): If the page in fact does not display this image, an infinite
rectangle is returned now. In previous versions, an exception was raised. Formally
invalid parameters still raise exceptions.
"
8430,source/pymupdf.pdf,"• (Changed in v1.17.0): Only images referenced directly by the page are considered.
This means that images occurring in embedded PDF pages are ignored and an ex-
ception is raised.
"
8431,source/pymupdf.pdf,"• (Changed in v1.18.5): Removed the restriction introduced in v1.17.0: any item of
the page’s image list may be specified.
"
8432,source/pymupdf.pdf,"19.14. Page
297
"
8433,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8434,source/pymupdf.pdf,"• (Changed in v1.18.11): Partially re-instated a restriction: only those images are
considered, that are either directly referenced by the page or by a Form XObject
directly referenced by the page.
"
8435,source/pymupdf.pdf,"• (Changed in v1.18.11): Optionally also return the transformation matrix together
with the bbox as the tuple (bbox, transform).
"
8436,source/pymupdf.pdf,"Note:
"
8437,source/pymupdf.pdf,"1. Be aware that Page.get_images() may contain “dead” entries i.e. images, which the page does
not display. This is no error, but intended by the PDF creator. No exception will be raised in this
case, but an infinite rectangle is returned. You can avoid this from happening by executing Page.
clean_contents() before this method.
"
8438,source/pymupdf.pdf,"2. The image’s “transformation matrix” is defined as the matrix, for which the expression bbox /
transform == fitz.Rect(0, 0, 1, 1) is true, lookup details here: Image Transformation
Matrix.
"
8439,source/pymupdf.pdf,"• Changed in v1.18.11: return image transformation matrix
"
8440,source/pymupdf.pdf,"get_svg_image(matrix=fitz.Identity, text_as_path=True)
"
8441,source/pymupdf.pdf,"Create an SVG image from the page. Only full page images are currently supported.
"
8442,source/pymupdf.pdf,"Parameters
"
8443,source/pymupdf.pdf,"• matrix (matrix_like) – a matrix, default is Identity.
"
8444,source/pymupdf.pdf,"• text_as_path (bool) – – controls how text is represented. True outputs each
character as a series of elementary draw commands, which leads to a more precise
text display in browsers, but a very much larger output for text-oriented pages.
Display quality for False relies on the presence of the referenced fonts on the current
system. For missing fonts, the internet browser will fall back to some default –
leading to unpleasant appearances. Choose False if you want to parse the text of
the SVG. (New in v1.17.5)
"
8445,source/pymupdf.pdf,"Returns
"
8446,source/pymupdf.pdf,"a UTF-8 encoded string that contains the image. Because SVG has XML syntax it can
be saved in a text file, the standard extension is .svg.
"
8447,source/pymupdf.pdf,"Note: In case of a PDF, you can circumvent the “full page image only” restriction by
modifying the page’s CropBox before using the method.
"
8448,source/pymupdf.pdf,"get_pixmap(*, matrix=fitz.Identity, dpi=None, colorspace=fitz.csRGB, clip=None, alpha=False,
annots=True)
"
8449,source/pymupdf.pdf,"Create a pixmap from the page. This is probably the most often used method to create a Pixmap.
"
8450,source/pymupdf.pdf,"All parameters are keyword-only.
"
8451,source/pymupdf.pdf,"Parameters
"
8452,source/pymupdf.pdf,"298
Chapter 19. Classes
"
8453,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8454,source/pymupdf.pdf,"• matrix (matrix_like) – default is Identity.
"
8455,source/pymupdf.pdf,"• dpi (int) – desired resolution in x and y direction. If not None, the ""matrix""
parameter is ignored. (New in v1.19.2)
"
8456,source/pymupdf.pdf,"• colorspace (str or Colorspace) – The desired colorspace, one of “GRAY”, “RGB”
or “CMYK” (case insensitive). Or specify a Colorspace, ie. one of the predefined
ones: csGRAY, csRGB or csCMYK.
"
8457,source/pymupdf.pdf,"• clip (irect_like) – restrict rendering to the intersection of this area with the
page’s rectangle.
"
8458,source/pymupdf.pdf,"• alpha (bool) – whether to add an alpha channel. Always accept the default False
if you do not really need transparency. This will save a lot of memory (25% in
case of RGB ... and pixmaps are typically large!), and also processing time. Also
note an important difference in how the image will be rendered: with True the
pixmap’s samples area will be pre-cleared with 0x00. This results in transparent
areas where the page is empty. With False the pixmap’s samples will be pre-cleared
with 0xff. This results in white where the page has nothing to show.
"
8459,source/pymupdf.pdf,"Changed in v1.14.17
"
8460,source/pymupdf.pdf,"The default alpha value is now False.
"
8461,source/pymupdf.pdf,"– Generated with alpha=True
"
8462,source/pymupdf.pdf,"– Generated with alpha=False
"
8463,source/pymupdf.pdf,"• annots (bool) – (new in version 1.16.0) whether to also render annotations or to
suppress them. You can create pixmaps for annotations separately.
"
8464,source/pymupdf.pdf,"Return type
"
8465,source/pymupdf.pdf,"Pixmap
"
8466,source/pymupdf.pdf,"19.14. Page
299
"
8467,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8468,source/pymupdf.pdf,"Returns
"
8469,source/pymupdf.pdf,"Pixmap of the page. For fine-controlling the generated image, the by far most important
parameter is matrix. E.g. you can increase or decrease the image resolution by using
Matrix(xzoom, yzoom). If zoom > 1, you will get a higher resolution: zoom=2 will
double the number of pixels in that direction and thus generate a 2 times larger image.
Non-positive values will flip horizontally, resp. vertically. Similarly, matrices also let
you rotate or shear, and you can combine effects via e.g. matrix multiplication. See the
Matrix section to learn more.
"
8470,source/pymupdf.pdf,"Note:
"
8471,source/pymupdf.pdf,"• The pixmap will have “premultiplied” pixels if alpha=True. To learn about some background, e.g.
look for “Premultiplied alpha” here.
"
8472,source/pymupdf.pdf,"• The method will respect any page rotation and will not exceed the intersection of clip and Page.
cropbox. If you need the page’s mediabox (and if this is a different rectangle), you can use a snippet
like the following to achieve this:
"
8473,source/pymupdf.pdf,"In [1]: import fitz
In [2]: doc=fitz.open(""demo1.pdf"")
In [3]: page=doc[0]
In [4]: rotation = page.rotation
In [5]: cropbox = page.cropbox
In [6]: page.set_cropbox(page.mediabox)
In [7]: page.set_rotation(0)
In [8]: pix = page.get_pixmap()
In [9]: page.set_cropbox(cropbox)
In [10]: if rotation != 0:
"
8474,source/pymupdf.pdf,"...:
page.set_rotation(rotation)
"
8475,source/pymupdf.pdf,"...:
In [11]:
"
8476,source/pymupdf.pdf,"• Changed in v1.19.2: added support of parameter dpi.
"
8477,source/pymupdf.pdf,"annot_names()
"
8478,source/pymupdf.pdf,"PDF only: return a list of the names of annotations, widgets and links. Technically, these are the /NM
values of every PDF object found in the page’s /Annots array.
"
8479,source/pymupdf.pdf,"Return type
"
8480,source/pymupdf.pdf,"list
"
8481,source/pymupdf.pdf,"• New in v1.16.10
"
8482,source/pymupdf.pdf,"annot_xrefs()
"
8483,source/pymupdf.pdf,"PDF only: return a list of the :data`xref` numbers of annotations, widgets and links – technically of all
entries found in the page’s /Annots array.
"
8484,source/pymupdf.pdf,"300
Chapter 19. Classes
"
8485,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8486,source/pymupdf.pdf,"Return type
"
8487,source/pymupdf.pdf,"list
"
8488,source/pymupdf.pdf,"Returns
"
8489,source/pymupdf.pdf,"a list of items (xref, type) where type is the annotation type. Use the type to tell apart
links, fields and annotations, see Annotation Types.
"
8490,source/pymupdf.pdf,"• New in v1.17.1
"
8491,source/pymupdf.pdf,"load_annot(ident)
"
8492,source/pymupdf.pdf,"PDF only: return the annotation identified by ident. This may be its unique name (PDF /NM key), or its
xref.
"
8493,source/pymupdf.pdf,"Parameters
"
8494,source/pymupdf.pdf,"ident (str,int) – the annotation name or xref.
"
8495,source/pymupdf.pdf,"Return type
"
8496,source/pymupdf.pdf,"Annot
"
8497,source/pymupdf.pdf,"Returns
"
8498,source/pymupdf.pdf,"the annotation or None.
"
8499,source/pymupdf.pdf,"Note: Methods Page.annot_names(), Page.annot_xrefs() provide lists of names or xrefs, respec-
tively, from where an item may be picked and loaded via this method.
"
8500,source/pymupdf.pdf,"• New in v1.17.1
"
8501,source/pymupdf.pdf,"load_widget(xref )
"
8502,source/pymupdf.pdf,"PDF only: return the field identified by xref.
"
8503,source/pymupdf.pdf,"Parameters
"
8504,source/pymupdf.pdf,"xref (int) – the field’s xref.
"
8505,source/pymupdf.pdf,"Return type
"
8506,source/pymupdf.pdf,"Widget
"
8507,source/pymupdf.pdf,"Returns
"
8508,source/pymupdf.pdf,"the field or None.
"
8509,source/pymupdf.pdf,"Note: This is similar to the analogous method Page.load_annot() – except that here only the xref is
supported as identifier.
"
8510,source/pymupdf.pdf,"• New in v1.19.6
"
8511,source/pymupdf.pdf,"19.14. Page
301
"
8512,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8513,source/pymupdf.pdf,"load_links()
"
8514,source/pymupdf.pdf,"Return the first link on a page. Synonym of property first_link.
"
8515,source/pymupdf.pdf,"Return type
"
8516,source/pymupdf.pdf,"Link
"
8517,source/pymupdf.pdf,"Returns
"
8518,source/pymupdf.pdf,"first link on the page (or None).
"
8519,source/pymupdf.pdf,"set_rotation(rotate)
"
8520,source/pymupdf.pdf,"PDF only: Set the rotation of the page.
"
8521,source/pymupdf.pdf,"Parameters
"
8522,source/pymupdf.pdf,"rotate (int) – An integer specifying the required rotation in degrees. Must be an
integer multiple of 90. Values will be converted to one of 0, 90, 180, 270.
"
8523,source/pymupdf.pdf,"show_pdf_page(rect, docsrc, pno=0, keep_proportion=True, overlay=True, oc=0, rotate=0, clip=None)
"
8524,source/pymupdf.pdf,"PDF only:
Display a page of another PDF as a vector image (otherwise similar to Page.
insert_image()). This is a multi-purpose method. For example, you can use it to
"
8525,source/pymupdf.pdf,"• create “n-up” versions of existing PDF files, combining several input pages into one output page
(see example combine.py),
"
8526,source/pymupdf.pdf,"• create “posterized” PDF files, i.e. every input page is split up in parts which each create a separate
output page (see posterize.py),
"
8527,source/pymupdf.pdf,"• include PDF-based vector images like company logos, watermarks, etc., see svg-logo.py, which puts
an SVG-based logo on each page (requires additional packages to deal with SVG-to-PDF conver-
sions).
"
8528,source/pymupdf.pdf,"Parameters
"
8529,source/pymupdf.pdf,"• rect (rect_like) – where to place the image on current page. Must be finite and
its intersection with the page must not be empty.
"
8530,source/pymupdf.pdf,"• docsrc (Document) – source PDF document containing the page. Must be a dif-
ferent document object, but may be the same file.
"
8531,source/pymupdf.pdf,"• pno (int) – page number (0-based, in -∞ < pno < docsrc.page_count) to be
shown.
"
8532,source/pymupdf.pdf,"• keep_proportion (bool) – whether to maintain the width-height-ratio (default).
If false, all 4 corners are always positioned on the border of the target rectangle
– whatever the rotation value. In general, this will deliver distorted and /or non-
rectangular images.
"
8533,source/pymupdf.pdf,"• overlay (bool) – put image in foreground (default) or background.
"
8534,source/pymupdf.pdf,"• oc (int) – (xref) make visibility dependent on this OCG / OCMD (which must be
defined in the target PDF)9. (New in v1.18.3)
"
8535,source/pymupdf.pdf,"• rotate (float) – show the source rectangle rotated by some angle. Any angle is
supported (changed in v1.14.11). (New in v1.14.10)
"
8536,source/pymupdf.pdf,"• clip (rect_like) – choose which part of the source page to show. Default is the
full page, else must be finite and its intersection with the source page must not be
empty.
"
8537,source/pymupdf.pdf,"9 Objects inside the source page, like images, text or drawings, are never aware of whether their owning page now is under OC control inside the
target PDF. If source page objects are OC-controlled in the source PDF, then this will not be retained on the target: they will become unconditionally
visible.
"
8538,source/pymupdf.pdf,"302
Chapter 19. Classes
"
8539,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8540,source/pymupdf.pdf,"Note: In contrast to method Document.insert_pdf(), this method does not copy annotations, widgets
or links, so these are not included in the target6. But all its other resources (text, images, fonts, etc.) will
be imported into the current PDF. They will therefore appear in text extractions and in get_fonts() and
get_images() lists – even if they are not contained in the visible area given by clip.
"
8541,source/pymupdf.pdf,"Example: Show the same source page, rotated by 90 and by -90 degrees:
"
8542,source/pymupdf.pdf,">>> doc = fitz.open()
# new empty PDF
"
8543,source/pymupdf.pdf,">>> page=doc.new_page()
# new page in A4 format
"
8544,source/pymupdf.pdf,">>>
>>> # upper half page
>>> r1 = fitz.Rect(0, 0, page.rect.width, page.rect.height/2)
>>>
>>> # lower half page
>>> r2 = r1 + (0, page.rect.height/2, 0, page.rect.height/2)
>>>
>>> src = fitz.open(""PyMuPDF.pdf"")
# show page 0 of this
"
8545,source/pymupdf.pdf,">>>
>>> page.show_pdf_page(r1, src, 0, rotate=90)
>>> page.show_pdf_page(r2, src, 0, rotate=-90)
>>> doc.save(""show.pdf"")
"
8546,source/pymupdf.pdf,"6 If you need to also see annotations or fields in the target page, you can try and convert the source PDF to another PDF using Document.
convert_to_pdf().
The underlying MuPDF function of that method will convert these objects to normal page content.
Then use Page.
show_pdf_page() with the converted PDF page.
"
8547,source/pymupdf.pdf,"19.14. Page
303
"
8548,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8549,source/pymupdf.pdf,"• Changed in v1.14.11: Parameter reuse_xref has been deprecated. Position the source rectangle
centered in target rectangle. Any rotation angle is now supported.
"
8550,source/pymupdf.pdf,"• Changed in v1.18.3: New parameter oc.
"
8551,source/pymupdf.pdf,"new_shape()
"
8552,source/pymupdf.pdf,"PDF only: Create a new Shape object for the page.
"
8553,source/pymupdf.pdf,"Return type
"
8554,source/pymupdf.pdf,"Shape
"
8555,source/pymupdf.pdf,"Returns
"
8556,source/pymupdf.pdf,"a new Shape to use for compound drawings. See description there.
"
8557,source/pymupdf.pdf,"search_for(needle, *, clip=None, quads=False, flags=TEXT_DEHYPHENATE |
TEXT_PRESERVE_WHITESPACE | TEXT_PRESERVE_LIGATURES |
TEXT_MEDIABOX_CLIP, textpage=None)
"
8558,source/pymupdf.pdf,"Search for needle on a page. Wrapper for TextPage.search().
"
8559,source/pymupdf.pdf,"Parameters
"
8560,source/pymupdf.pdf,"• needle (str) – Text to search for. May contain spaces. Upper / lower case is ig-
nored, but only works for ASCII characters: For example, “COMPÉTENCES” will
not be found if needle is “compétences” – “compÉtences” however will. Similar is
true for German umlauts and the like.
"
8561,source/pymupdf.pdf,"• clip (rect_like) – only search within this area. (New in v1.18.2)
"
8562,source/pymupdf.pdf,"• quads (bool) – Return object type Quad instead of Rect.
"
8563,source/pymupdf.pdf,"• flags (int) – Control the data extracted by the underlying TextPage. By default,
ligatures and white spaces are kept, and hyphenation8 is detected.
"
8564,source/pymupdf.pdf,"• textpage – use a previously created TextPage. This reduces execution time sig-
nificantly. If specified, the ‘flags’ and ‘clip’ arguments are ignored. If omitted, a
temporary textpage will be created. (New in v1.19.0)
"
8565,source/pymupdf.pdf,"Return type
"
8566,source/pymupdf.pdf,"list
"
8567,source/pymupdf.pdf,"Returns
"
8568,source/pymupdf.pdf,"A list of Rect or Quad objects, each of which – normally! – surrounds one occurrence
of needle. However: if parts of needle occur on more than one line, then a separate item
is generated for each these parts. So, if needle = ""search string"", two rectangles
may be generated.
"
8569,source/pymupdf.pdf,"Changes in v1.18.2:
"
8570,source/pymupdf.pdf,"• There no longer is a limit on the list length (removal of the hit_max parameter).
"
8571,source/pymupdf.pdf,"• If a word is hyphenated at a line break, it will still be found. E.g. the needle
“method” will be found even if hyphenated as “meth-od” at a line break, and two
rectangles will be returned: one surrounding “meth” (without the hyphen) and an-
other one surrounding “od”.
"
8572,source/pymupdf.pdf,"8 Hyphenation detection simply means that if the last character of a line is “-”, it will be assumed to be a continuation character. That character
will not be found by text searching with its default flag setting. Please take note, that a MuPDF line may not always be what you expect: words
separated by overly large gaps (e.g. caused by text justification) may constitute separate MuPDF lines. If then any of these words ends with a hyphen,
it will only be found by text searching if hyphenation is switched off.
"
8573,source/pymupdf.pdf,"304
Chapter 19. Classes
"
8574,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8575,source/pymupdf.pdf,"Note: The method supports multi-line text marker annotations: you can use the full returned list as one
single parameter for creating the annotation.
"
8576,source/pymupdf.pdf,"Caution:
"
8577,source/pymupdf.pdf,"• There is a tricky aspect: the search logic regards contiguous multiple occurrences of needle
as one: assuming needle is “abc”, and the page contains “abc” and “abcabc”, then only two
rectangles will be returned, one for “abc”, and a second one for “abcabc”.
"
8578,source/pymupdf.pdf,"• You can always use Page.get_textbox() to check what text actually is being surrounded by
each rectangle.
"
8579,source/pymupdf.pdf,"Note: A feature repeatedly asked for is supporting regular expressions when specifying the ""needle""
string: There is no way to do this. If you need something in that direction, first extract text in the desired
format and then subselect the result by matching with some regex pattern. Here is an example for matching
words:
"
8580,source/pymupdf.pdf,">>> pattern = re.compile(r""..."")
# the regex pattern
"
8581,source/pymupdf.pdf,">>> words = page.get_text(""words"")
# extract words on page
"
8582,source/pymupdf.pdf,">>> matches = [w for w in words if pattern.search(w[4])]
"
8583,source/pymupdf.pdf,"The matches list will contain the words matching the given pattern. In the same way you can select
span[""text""] from the output of page.get_text(""dict"").
"
8584,source/pymupdf.pdf,"• Changed in v1.18.2: added clip parameter. Remove hit_max parameter. Add default “dehyphen-
ate”.
"
8585,source/pymupdf.pdf,"• Changed in v1.19.0: added TextPage parameter.
"
8586,source/pymupdf.pdf,"set_mediabox(r)
"
8587,source/pymupdf.pdf,"PDF only: Change the physical page dimension by setting mediabox in the page’s object definition.
"
8588,source/pymupdf.pdf,"Parameters
"
8589,source/pymupdf.pdf,"r (rect-like) – the new mediabox value.
"
8590,source/pymupdf.pdf,"Note: This method also removes the page’s other (optional) rectangles (cropbox, ArtBox, TrimBox and
Bleedbox) to prevent inconsistent situations. This will cause those to assume their default values.
"
8591,source/pymupdf.pdf,"Caution:
For non-empty pages this may have undesired effects, because the location of all content
depends on this value and will therefore change position or even disappear.
"
8592,source/pymupdf.pdf,"19.14. Page
305
"
8593,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8594,source/pymupdf.pdf,"• New in v1.16.13
"
8595,source/pymupdf.pdf,"• Changed in v1.19.4: remove all other rectangle definitions.
"
8596,source/pymupdf.pdf,"set_cropbox(r)
"
8597,source/pymupdf.pdf,"PDF only: change the visible part of the page.
"
8598,source/pymupdf.pdf,"Parameters
"
8599,source/pymupdf.pdf,"r (rect_like) – the new visible area of the page. Note that this must be specified
in unrotated coordinates, not empty, nor infinite and be completely contained in the
Page.mediabox.
"
8600,source/pymupdf.pdf,"After execution (if the page is not rotated), Page.rect will equal this rectangle, but be shifted to the
top-left position (0, 0) if necessary. Example session:
"
8601,source/pymupdf.pdf,">>> page = doc.new_page()
>>> page.rect
fitz.Rect(0.0, 0.0, 595.0, 842.0)
>>>
>>> page.cropbox
# cropbox and mediabox still equal
"
8602,source/pymupdf.pdf,"fitz.Rect(0.0, 0.0, 595.0, 842.0)
>>>
>>> # now set cropbox to a part of the page
>>> page.set_cropbox(fitz.Rect(100, 100, 400, 400))
>>> # this will also change the ""rect"" property:
>>> page.rect
fitz.Rect(0.0, 0.0, 300.0, 300.0)
>>>
>>> # but mediabox remains unaffected
>>> page.mediabox
fitz.Rect(0.0, 0.0, 595.0, 842.0)
>>>
>>> # revert CropBox change
>>> # either set it to MediaBox
>>> page.set_cropbox(page.mediabox)
>>> # or 'refresh' MediaBox: will remove all other rectangles
>>> page.set_mediabox(page.mediabox)
"
8603,source/pymupdf.pdf,"set_artbox(r)
"
8604,source/pymupdf.pdf,"set_bleedbox(r)
"
8605,source/pymupdf.pdf,"set_trimbox(r)
"
8606,source/pymupdf.pdf,"PDF only: Set the resp. rectangle in the page object. For the meaning of these objects see Adobe PDF
References, page 77. Parameter and restrictions are the same as for Page.set_cropbox().
"
8607,source/pymupdf.pdf,"• New in v1.19.4
"
8608,source/pymupdf.pdf,"rotation
"
8609,source/pymupdf.pdf,"Contains the rotation of the page in degrees (always 0 for non-PDF types). This is a copy of the value in
the PDF file. The PDF documentation says:
"
8610,source/pymupdf.pdf,"306
Chapter 19. Classes
"
8611,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8612,source/pymupdf.pdf,"“The number of degrees by which the page should be rotated clockwise when displayed or
printed. The value must be a multiple of 90. Default value: 0.”
"
8613,source/pymupdf.pdf,"In PyMuPDF, we make sure that this attribute is always one of 0, 90, 180 or 270.
"
8614,source/pymupdf.pdf,"Type
"
8615,source/pymupdf.pdf,"int
"
8616,source/pymupdf.pdf,"cropbox_position
"
8617,source/pymupdf.pdf,"Contains the top-left point of the page’s /CropBox for a PDF, otherwise Point(0, 0).
"
8618,source/pymupdf.pdf,"Type
"
8619,source/pymupdf.pdf,"Point
"
8620,source/pymupdf.pdf,"cropbox
"
8621,source/pymupdf.pdf,"The page’s /CropBox for a PDF. Always the unrotated page rectangle is returned. For a non-PDF this
will always equal the page rectangle.
"
8622,source/pymupdf.pdf,"Note:
In PDF, the relationship between /MediaBox, /CropBox and page rectangle may sometimes be
confusing, please do lookup the glossary for MediaBox.
"
8623,source/pymupdf.pdf,"Type
"
8624,source/pymupdf.pdf,"Rect
"
8625,source/pymupdf.pdf,"artbox
"
8626,source/pymupdf.pdf,"bleedbox
"
8627,source/pymupdf.pdf,"trimbox
"
8628,source/pymupdf.pdf,"The page’s /ArtBox, /BleedBox, /TrimBox, respectively. If not provided, defaulting to Page.cropbox.
"
8629,source/pymupdf.pdf,"Type
"
8630,source/pymupdf.pdf,"Rect
"
8631,source/pymupdf.pdf,"mediabox_size
"
8632,source/pymupdf.pdf,"Contains the width and height of the page’s Page.mediabox for a PDF, otherwise the bottom-right coor-
dinates of Page.rect.
"
8633,source/pymupdf.pdf,"Type
"
8634,source/pymupdf.pdf,"Point
"
8635,source/pymupdf.pdf,"mediabox
"
8636,source/pymupdf.pdf,"The page’s mediabox for a PDF, otherwise Page.rect.
"
8637,source/pymupdf.pdf,"Type
"
8638,source/pymupdf.pdf,"Rect
"
8639,source/pymupdf.pdf,"Note: For most PDF documents and for all other document types, page.rect == page.cropbox ==
page.mediabox is true. However, for some PDFs the visible page is a true subset of mediabox. Also, if
the page is rotated, its Page.rect may not equal Page.cropbox. In these cases the above attributes help
to correctly locate page elements.
"
8640,source/pymupdf.pdf,"19.14. Page
307
"
8641,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8642,source/pymupdf.pdf,"transformation_matrix
"
8643,source/pymupdf.pdf,"This matrix translates coordinates from the PDF space to the MuPDF space. For example, in PDF /Rect
[x0 y0 x1 y1] the pair (x0, y0) specifies the bottom-left point of the rectangle – in contrast to MuPDF’s
system, where (x0, y0) specify top-left. Multiplying the PDF coordinates with this matrix will deliver the
(Py-) MuPDF rectangle version. Obviously, the inverse matrix will again yield the PDF rectangle.
"
8644,source/pymupdf.pdf,"Type
"
8645,source/pymupdf.pdf,"Matrix
"
8646,source/pymupdf.pdf,"rotation_matrix
"
8647,source/pymupdf.pdf,"derotation_matrix
"
8648,source/pymupdf.pdf,"These matrices may be used for dealing with rotated PDF pages. When adding / inserting anything to a
PDF page, the coordinates of the unrotated page are always used. These matrices help translating between
the two states. Example: if a page is rotated by 90 degrees – what would then be the coordinates of the
top-left Point(0, 0) of an A4 page?
"
8649,source/pymupdf.pdf,">>> page.set_rotation(90)
# rotate an ISO A4 page
"
8650,source/pymupdf.pdf,">>> page.rect
Rect(0.0, 0.0, 842.0, 595.0)
>>> p = fitz.Point(0, 0)
# where did top-left point land?
"
8651,source/pymupdf.pdf,">>> p * page.rotation_matrix
Point(842.0, 0.0)
>>>
"
8652,source/pymupdf.pdf,"Type
"
8653,source/pymupdf.pdf,"Matrix
"
8654,source/pymupdf.pdf,"first_link
"
8655,source/pymupdf.pdf,"Contains the first Link of a page (or None).
"
8656,source/pymupdf.pdf,"Type
"
8657,source/pymupdf.pdf,"Link
"
8658,source/pymupdf.pdf,"first_annot
"
8659,source/pymupdf.pdf,"Contains the first Annot of a page (or None).
"
8660,source/pymupdf.pdf,"Type
"
8661,source/pymupdf.pdf,"Annot
"
8662,source/pymupdf.pdf,"first_widget
"
8663,source/pymupdf.pdf,"Contains the first Widget of a page (or None).
"
8664,source/pymupdf.pdf,"Type
"
8665,source/pymupdf.pdf,"Widget
"
8666,source/pymupdf.pdf,"number
"
8667,source/pymupdf.pdf,"The page number.
"
8668,source/pymupdf.pdf,"Type
"
8669,source/pymupdf.pdf,"int
"
8670,source/pymupdf.pdf,"parent
"
8671,source/pymupdf.pdf,"The owning document object.
"
8672,source/pymupdf.pdf,"Type
"
8673,source/pymupdf.pdf,"Document
"
8674,source/pymupdf.pdf,"308
Chapter 19. Classes
"
8675,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8676,source/pymupdf.pdf,"rect
"
8677,source/pymupdf.pdf,"Contains the rectangle of the page. Same as result of Page.bound().
"
8678,source/pymupdf.pdf,"Type
"
8679,source/pymupdf.pdf,"Rect
"
8680,source/pymupdf.pdf,"xref
"
8681,source/pymupdf.pdf,"The page’s PDF xref. Zero if not a PDF.
"
8682,source/pymupdf.pdf,"Type
"
8683,source/pymupdf.pdf,"Rect
"
8684,source/pymupdf.pdf,"19.14.2 Description of get_links() Entries
"
8685,source/pymupdf.pdf,"Each entry of the Page.get_links() list is a dictionary with the following keys:
"
8686,source/pymupdf.pdf,"• kind: (required) an integer indicating the kind of link. This is one of LINK_NONE, LINK_GOTO, LINK_GOTOR,
LINK_LAUNCH, or LINK_URI. For values and meaning of these names refer to Link Destination Kinds.
"
8687,source/pymupdf.pdf,"• from: (required) a Rect describing the “hot spot” location on the page’s visible representation (where the cursor
changes to a hand image, usually).
"
8688,source/pymupdf.pdf,"• page: a 0-based integer indicating the destination page. Required for LINK_GOTO and LINK_GOTOR, else
ignored.
"
8689,source/pymupdf.pdf,"• to: either a fitz.Point, specifying the destination location on the provided page, default is fitz.Point(0, 0), or a
symbolic (indirect) name. If an indirect name is specified, page = -1 is required and the name must be defined
in the PDF in order for this to work. Required for LINK_GOTO and LINK_GOTOR, else ignored.
"
8690,source/pymupdf.pdf,"• file: a string specifying the destination file. Required for LINK_GOTOR and LINK_LAUNCH, else ignored.
"
8691,source/pymupdf.pdf,"• uri: a string specifying the destination internet resource. Required for LINK_URI, else ignored. You should make
sure to start this string with an unambiguous substring, that classifies the subtype of the URL, like ""http://"",
""https://"", ""file://"", ""ftp://"", ""mailto:"", etc. Otherwise your browser will try to interpret the text and
come to unwanted / unexpected conclusions about the intended URL type.
"
8692,source/pymupdf.pdf,"• xref : an integer specifying the PDF xref of the link object. Do not change this entry in any way. Required for
link deletion and update, otherwise ignored. For non-PDF documents, this entry contains -1. It is also -1 for all
entries in the get_links() list, if any of the links is not supported by MuPDF - see Notes on Supporting Links.
"
8693,source/pymupdf.pdf,"19.14.3 Notes on Supporting Links
"
8694,source/pymupdf.pdf,"MuPDF’s support for links has changed in v1.10a. These changes affect link types LINK_GOTO and LINK_GOTOR.
"
8695,source/pymupdf.pdf,"Reading (pertains to method get_links() and the first_link property chain)
"
8696,source/pymupdf.pdf,"If MuPDF detects a link to another file, it will supply either a LINK_GOTOR or a LINK_LAUNCH link kind. In case
of LINK_GOTOR destination details may either be given as page number (eventually including position information),
or as an indirect destination.
"
8697,source/pymupdf.pdf,"If an indirect destination is given, then this is indicated by page = -1, and link.dest.dest will contain this name. The
dictionaries in the get_links() list will contain this information as the to value.
"
8698,source/pymupdf.pdf,"Internal links are always of kind LINK_GOTO. If an internal link specifies an indirect destination, it will always
be resolved and the resulting direct destination will be returned. Names are never returned for internal links, and
undefined destinations will cause the link to be ignored.
"
8699,source/pymupdf.pdf,"19.14. Page
309
"
8700,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8701,source/pymupdf.pdf,"Writing
"
8702,source/pymupdf.pdf,"PyMuPDF writes (updates, inserts) links by constructing and writing the appropriate PDF object source. This makes
it possible to specify indirect destinations for LINK_GOTOR and LINK_GOTO link kinds (pre PDF 1.2 file formats
are not supported).
"
8703,source/pymupdf.pdf,"Warning: If a LINK_GOTO indirect destination specifies an undefined name, this link can later on not be found /
read again with MuPDF / PyMuPDF. Other readers however will detect it, but flag it as erroneous.
"
8704,source/pymupdf.pdf,"Indirect LINK_GOTOR destinations can in general of course not be checked for validity and are therefore always
accepted.
"
8705,source/pymupdf.pdf,"Example: How to insert a link pointing to another page in the same document
"
8706,source/pymupdf.pdf,"1. Determine the rectangle on the current page, where the link should be placed. This may be the bbox of an image
or some text.
"
8707,source/pymupdf.pdf,"2. Determine the target page number (“pno”, 0-based) and a Point on it, where the link should be directed to.
"
8708,source/pymupdf.pdf,"3. Create
a
dictionary
d = {""kind"":
fitz.LINK_GOTO, ""page"":
pno, ""from"":
bbox, ""to"":
point}.
"
8709,source/pymupdf.pdf,"4. Execute page.insert_link(d).
"
8710,source/pymupdf.pdf,"19.14.4 Homologous Methods of Document and Page
"
8711,source/pymupdf.pdf,"This is an overview of homologous methods on the Document and on the Page level.
"
8712,source/pymupdf.pdf,"Document Level
Page Level
"
8713,source/pymupdf.pdf,"Document.get_page_fonts(pno)
Page.get_fonts()
"
8714,source/pymupdf.pdf,"Document.get_page_images(pno)
Page.get_images()
"
8715,source/pymupdf.pdf,"Document.get_page_pixmap(pno, ...)
Page.get_pixmap()
"
8716,source/pymupdf.pdf,"Document.get_page_text(pno, ...)
Page.get_text()
"
8717,source/pymupdf.pdf,"Document.search_page_for(pno, ...)
Page.search_for()
"
8718,source/pymupdf.pdf,"The page number “pno” is a 0-based integer -∞ < pno < page_count.
"
8719,source/pymupdf.pdf,"Note:
Most document methods (left column) exist for convenience reasons, and are just wrappers for: Docu-
ment[pno].<page method>. So they load and discard the page on each execution.
"
8720,source/pymupdf.pdf,"However, the first two methods work differently. They only need a page’s object definition statement - the page itself will
not be loaded. So e.g. Page.get_fonts() is a wrapper the other way round and defined as follows: page.get_fonts
== page.parent.get_page_fonts(page.number).
"
8721,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
8722,source/pymupdf.pdf,"310
Chapter 19. Classes
"
8723,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8724,source/pymupdf.pdf,"19.15 Pixmap
"
8725,source/pymupdf.pdf,"Pixmaps (“pixel maps”) are objects at the heart of MuPDF’s rendering capabilities. They represent plane rectangular
sets of pixels. Each pixel is described by a number of bytes (“components”) defining its color, plus an optional alpha
byte defining its transparency.
"
8726,source/pymupdf.pdf,"In PyMuPDF, there exist several ways to create a pixmap. Except the first one, all of them are available as overloaded
constructors. A pixmap can be created ...
"
8727,source/pymupdf.pdf,"1. from a document page (method Page.get_pixmap())
"
8728,source/pymupdf.pdf,"2. empty, based on Colorspace and IRect information
"
8729,source/pymupdf.pdf,"3. from a file
"
8730,source/pymupdf.pdf,"4. from an in-memory image
"
8731,source/pymupdf.pdf,"5. from a memory area of plain pixels
"
8732,source/pymupdf.pdf,"6. from an image inside a PDF document
"
8733,source/pymupdf.pdf,"7. as a copy of another pixmap
"
8734,source/pymupdf.pdf,"Note: A number of image formats is supported as input for points 3. and 4. above. See section Supported Input Image
Formats.
"
8735,source/pymupdf.pdf,"Have a look at the FAQ section to see some pixmap usage “at work”.
"
8736,source/pymupdf.pdf,"Method / Attribute
Short Description
"
8737,source/pymupdf.pdf,"Pixmap.clear_with()
clear parts of the pixmap
"
8738,source/pymupdf.pdf,"Pixmap.color_count()
determine used colors
"
8739,source/pymupdf.pdf,"Pixmap.color_topusage()
determine share of most used color
"
8740,source/pymupdf.pdf,"Pixmap.copy()
copy parts of another pixmap
"
8741,source/pymupdf.pdf,"Pixmap.gamma_with()
apply a gamma factor to the pixmap
"
8742,source/pymupdf.pdf,"Pixmap.invert_irect()
invert the pixels of a given area
"
8743,source/pymupdf.pdf,"Pixmap.pdfocr_save()
save the pixmap as an OCRed 1-page PDF
"
8744,source/pymupdf.pdf,"Pixmap.pdfocr_tobytes()
save the pixmap as an OCRed 1-page PDF
"
8745,source/pymupdf.pdf,"Pixmap.pil_save()
save as image using pillow
"
8746,source/pymupdf.pdf,"Pixmap.pil_tobytes()
write to bytes object using pillow
"
8747,source/pymupdf.pdf,"Pixmap.pixel()
return the value of a pixel
"
8748,source/pymupdf.pdf,"Pixmap.save()
save the pixmap in a variety of formats
"
8749,source/pymupdf.pdf,"Pixmap.set_alpha()
set alpha values
"
8750,source/pymupdf.pdf,"Pixmap.set_dpi()
set the image resolution
"
8751,source/pymupdf.pdf,"Pixmap.set_origin()
set pixmap x,y values
"
8752,source/pymupdf.pdf,"Pixmap.set_pixel()
set color and alpha of a pixel
"
8753,source/pymupdf.pdf,"Pixmap.set_rect()
set color and alpha of all pixels in a rectangle
"
8754,source/pymupdf.pdf,"Pixmap.shrink()
reduce size keeping proportions
"
8755,source/pymupdf.pdf,"Pixmap.tint_with()
tint the pixmap
"
8756,source/pymupdf.pdf,"Pixmap.tobytes()
return a memory area in a variety of formats
"
8757,source/pymupdf.pdf,"Pixmap.warp()
return a pixmap made from a quad inside
"
8758,source/pymupdf.pdf,"Pixmap.alpha
transparency indicator
"
8759,source/pymupdf.pdf,"Pixmap.colorspace
pixmap’s Colorspace
"
8760,source/pymupdf.pdf,"Pixmap.digest
MD5 hashcode of the pixmap
"
8761,source/pymupdf.pdf,"Pixmap.height
pixmap height
"
8762,source/pymupdf.pdf,"continues on next page
"
8763,source/pymupdf.pdf,"19.15. Pixmap
311
"
8764,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8765,source/pymupdf.pdf,"Table 4 – continued from previous page
"
8766,source/pymupdf.pdf,"Method / Attribute
Short Description
"
8767,source/pymupdf.pdf,"Pixmap.interpolate
interpolation method indicator
"
8768,source/pymupdf.pdf,"Pixmap.is_monochrome
check if only black and white occur
"
8769,source/pymupdf.pdf,"Pixmap.is_unicolor
check if only one color occurs
"
8770,source/pymupdf.pdf,"Pixmap.irect
IRect of the pixmap
"
8771,source/pymupdf.pdf,"Pixmap.n
bytes per pixel
"
8772,source/pymupdf.pdf,"Pixmap.samples_mv
memoryview of pixel area
"
8773,source/pymupdf.pdf,"Pixmap.samples_ptr
Python pointer to pixel area
"
8774,source/pymupdf.pdf,"Pixmap.samples
bytes copy of pixel area
"
8775,source/pymupdf.pdf,"Pixmap.size
pixmap’s total length
"
8776,source/pymupdf.pdf,"Pixmap.stride
size of one image row
"
8777,source/pymupdf.pdf,"Pixmap.width
pixmap width
"
8778,source/pymupdf.pdf,"Pixmap.x
X-coordinate of top-left corner
"
8779,source/pymupdf.pdf,"Pixmap.xres
resolution in X-direction
"
8780,source/pymupdf.pdf,"Pixmap.y
Y-coordinate of top-left corner
"
8781,source/pymupdf.pdf,"Pixmap.yres
resolution in Y-direction
"
8782,source/pymupdf.pdf,"Class API
"
8783,source/pymupdf.pdf,"class Pixmap
"
8784,source/pymupdf.pdf,"__init__(self, colorspace, irect, alpha)
"
8785,source/pymupdf.pdf,"New empty pixmap: Create an empty pixmap of size and origin given by the rectangle. So, irect.top_left
designates the top left corner of the pixmap, and its width and height are irect.width resp. irect.height. Note
that the image area is not initialized and will contain crap data – use eg. clear_with() or set_rect()
to be sure.
"
8786,source/pymupdf.pdf,"Parameters
"
8787,source/pymupdf.pdf,"• colorspace (Colorspace) – colorspace.
"
8788,source/pymupdf.pdf,"• irect (irect_like) – The pixmap’s position and dimension.
"
8789,source/pymupdf.pdf,"• alpha (bool) – Specifies whether transparency bytes should be included. Default
is False.
"
8790,source/pymupdf.pdf,"__init__(self, colorspace, source)
"
8791,source/pymupdf.pdf,"Copy and set colorspace: Copy source pixmap converting colorspace. Any colorspace combination is
possible, but source colorspace must not be None.
"
8792,source/pymupdf.pdf,"Parameters
"
8793,source/pymupdf.pdf,"• colorspace (Colorspace) – desired target colorspace. This may also be None.
In this case, a “masking” pixmap is created: its Pixmap.samples will consist of
the source’s alpha bytes only.
"
8794,source/pymupdf.pdf,"• source (Pixmap) – the source pixmap.
"
8795,source/pymupdf.pdf,"__init__(self, source, mask)
"
8796,source/pymupdf.pdf,"• New in v1.18.18
"
8797,source/pymupdf.pdf,"Copy and add image mask: Copy source pixmap, add an alpha channel with transparency data from a
mask pixmap.
"
8798,source/pymupdf.pdf,"Parameters
"
8799,source/pymupdf.pdf,"• source (Pixmap) – pixmap without alpha channel.
"
8800,source/pymupdf.pdf,"312
Chapter 19. Classes
"
8801,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8802,source/pymupdf.pdf,"• mask (Pixmap) – a mask pixmap. Must be a graysale pixmap.
"
8803,source/pymupdf.pdf,"__init__(self, source, width, height[, clip])
"
8804,source/pymupdf.pdf,"Copy and scale: Copy source pixmap, scaling new width and height values – the image will appear
stretched or shrunk accordingly. Supports partial copying. The source colorspace may be None.
"
8805,source/pymupdf.pdf,"Parameters
"
8806,source/pymupdf.pdf,"• source (Pixmap) – the source pixmap.
"
8807,source/pymupdf.pdf,"• width (float) – desired target width.
"
8808,source/pymupdf.pdf,"• height (float) – desired target height.
"
8809,source/pymupdf.pdf,"• clip (irect_like) – restrict the resulting pixmap to this region of the scaled
pixmap.
"
8810,source/pymupdf.pdf,"Note:
If width or height do not represent integers (i.e. value.is_integer() != True), then the
resulting pixmap will have an alpha channel.
"
8811,source/pymupdf.pdf,"__init__(self, source, alpha=1)
"
8812,source/pymupdf.pdf,"Copy and add or drop alpha: Copy source and add or drop its alpha channel. Identical copy if alpha
equals source.alpha. If an alpha channel is added, its values will be set to 255.
"
8813,source/pymupdf.pdf,"Parameters
"
8814,source/pymupdf.pdf,"• source (Pixmap) – source pixmap.
"
8815,source/pymupdf.pdf,"• alpha (bool) – whether the target will have an alpha channel, default and manda-
tory if source colorspace is None.
"
8816,source/pymupdf.pdf,"Note:
A typical use includes separation of color and transparency bytes in separate pixmaps. Some
applications require this like e.g. wx.Bitmap.FromBufferAndAlpha() of wxPython:
"
8817,source/pymupdf.pdf,">>> # 'pix' is an RGBA pixmap
>>> pixcolors = fitz.Pixmap(pix, 0)
# extract the RGB part (drop alpha)
"
8818,source/pymupdf.pdf,">>> pixalpha = fitz.Pixmap(None, pix)
# extract the alpha part
"
8819,source/pymupdf.pdf,">>> bm = wx.Bitmap.FromBufferAndAlpha(pix.width, pix.height, pixcolors.samples,
"
8820,source/pymupdf.pdf,"˓→ pixalpha.samples)
"
8821,source/pymupdf.pdf,"__init__(self, filename)
"
8822,source/pymupdf.pdf,"From a file: Create a pixmap from filename. All properties are inferred from the input. The origin of the
resulting pixmap is (0, 0).
"
8823,source/pymupdf.pdf,"Parameters
"
8824,source/pymupdf.pdf,"filename (str) – Path of the image file.
"
8825,source/pymupdf.pdf,"__init__(self, stream)
"
8826,source/pymupdf.pdf,"From memory: Create a pixmap from a memory area. All properties are inferred from the input. The
origin of the resulting pixmap is (0, 0).
"
8827,source/pymupdf.pdf,"Parameters
"
8828,source/pymupdf.pdf,"stream (bytes,bytearray,BytesIO) – Data containing a complete, valid image.
Could have been created by e.g. stream = bytearray(open(‘image.file’, ‘rb’).read()).
Type bytes is supported in Python 3 only, because bytes == str in Python 2 and the
method will interpret the stream as a filename.
"
8829,source/pymupdf.pdf,"19.15. Pixmap
313
"
8830,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8831,source/pymupdf.pdf,"Changed in version 1.14.13: io.BytesIO is now also supported.
"
8832,source/pymupdf.pdf,"__init__(self, colorspace, width, height, samples, alpha)
"
8833,source/pymupdf.pdf,"From plain pixels: Create a pixmap from samples. Each pixel must be represented by a number of bytes
as controlled by the colorspace and alpha parameters. The origin of the resulting pixmap is (0, 0). This
method is useful when raw image data are provided by some other program – see FAQ.
"
8834,source/pymupdf.pdf,"Parameters
"
8835,source/pymupdf.pdf,"• colorspace (Colorspace) – Colorspace of image.
"
8836,source/pymupdf.pdf,"• width (int) – image width
"
8837,source/pymupdf.pdf,"• height (int) – image height
"
8838,source/pymupdf.pdf,"• samples (bytes,bytearray,BytesIO) – an area containing all pixels of the im-
age. Must include alpha values if specified.
"
8839,source/pymupdf.pdf,"Changed in version 1.14.13: (1) io.BytesIO can now also be used. (2) Data are now
copied to the pixmap, so may safely be deleted or become unavailable.
"
8840,source/pymupdf.pdf,"• alpha (bool) – whether a transparency channel is included.
"
8841,source/pymupdf.pdf,"Note:
"
8842,source/pymupdf.pdf,"1. The following equation must be true: (colorspace.n + alpha) * width * height == len(samples).
"
8843,source/pymupdf.pdf,"2. Starting with version 1.14.13, the samples data are copied to the pixmap.
"
8844,source/pymupdf.pdf,"__init__(self, doc, xref )
"
8845,source/pymupdf.pdf,"From a PDF image: Create a pixmap from an image contained in PDF doc identified by its xref. All
pimap properties are set by the image. Have a look at extract-img1.py and extract-img2.py to see how this
can be used to recover all of a PDF’s images.
"
8846,source/pymupdf.pdf,"Parameters
"
8847,source/pymupdf.pdf,"• doc (Document) – an opened PDF document.
"
8848,source/pymupdf.pdf,"• xref (int) – the xref of an image object. For example, you can make a list of
images used on a particular page with Document.get_page_images(), which
also shows the xref numbers of each image.
"
8849,source/pymupdf.pdf,"clear_with([value[, irect]])
"
8850,source/pymupdf.pdf,"Initialize the samples area.
"
8851,source/pymupdf.pdf,"Parameters
"
8852,source/pymupdf.pdf,"• value (int) – if specified, values from 0 to 255 are valid. Each color byte of each
pixel will be set to this value, while alpha will be set to 255 (non-transparent) if
present. If omitted, then all bytes (including any alpha) are cleared to 0x00.
"
8853,source/pymupdf.pdf,"• irect (irect_like) – the area to be cleared. Omit to clear the whole pixmap.
Can only be specified, if value is also specified.
"
8854,source/pymupdf.pdf,"tint_with(black, white)
"
8855,source/pymupdf.pdf,"Colorize a pixmap by replacing black and / or white with colors given as sRGB integer values. Only
colorspaces CS_GRAY and CS_RGB are supported, others are ignored with a warning.
"
8856,source/pymupdf.pdf,"If the colorspace is CS_GRAY, the average (red + green + blue)/3 will be taken. The pixmap will be changed
in place.
"
8857,source/pymupdf.pdf,"Parameters
"
8858,source/pymupdf.pdf,"314
Chapter 19. Classes
"
8859,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8860,source/pymupdf.pdf,"• black (int) – replace black with this value.
Specifying 0x000000 makes no
changes.
"
8861,source/pymupdf.pdf,"• white (int) – replace white with this value. Specifying 0xFFFFFF makes no
changes.
"
8862,source/pymupdf.pdf,"Examples:
"
8863,source/pymupdf.pdf,"• tint_with(0x000000, 0xFFFFFF) is a no-op.
"
8864,source/pymupdf.pdf,"• tint_with(0x00FF00, 0xFFFFFF) changes black to green, leaves white intact.
"
8865,source/pymupdf.pdf,"• tint_with(0xFF0000, 0x0000FF) changes black to red and white to blue.
"
8866,source/pymupdf.pdf,"gamma_with(gamma)
"
8867,source/pymupdf.pdf,"Apply a gamma factor to a pixmap, i.e. lighten or darken it. Pixmaps with colorspace None are ignored
with a warning.
"
8868,source/pymupdf.pdf,"Parameters
"
8869,source/pymupdf.pdf,"gamma (float) – gamma = 1.0 does nothing, gamma < 1.0 lightens, gamma > 1.0
darkens the image.
"
8870,source/pymupdf.pdf,"shrink(n)
"
8871,source/pymupdf.pdf,"Shrink the pixmap by dividing both, its width and height by 2:sup:n.
"
8872,source/pymupdf.pdf,"Parameters
"
8873,source/pymupdf.pdf,"n (int) – determines the new pixmap (samples) size. For example, a value of 2 divides
width and height by 4 and thus results in a size of one 16th of the original. Values less
than 1 are ignored with a warning.
"
8874,source/pymupdf.pdf,"Note:
Use this methods to reduce a pixmap’s size retaining its proportion. The pixmap is changed “in
place”. If you want to keep original and also have more granular choices, use the resp. copy constructor
above.
"
8875,source/pymupdf.pdf,"pixel(x, y)
"
8876,source/pymupdf.pdf,"New in version:: 1.14.5: Return the value of the pixel at location (x, y) (column, line).
"
8877,source/pymupdf.pdf,"Parameters
"
8878,source/pymupdf.pdf,"• x (int) – the column number of the pixel. Must be in range(pix.width).
"
8879,source/pymupdf.pdf,"• y (int) – the line number of the pixel, Must be in range(pix.height).
"
8880,source/pymupdf.pdf,"Return type
"
8881,source/pymupdf.pdf,"list
"
8882,source/pymupdf.pdf,"Returns
"
8883,source/pymupdf.pdf,"a list of color values and, potentially the alpha value. Its length and content depend on
the pixmap’s colorspace and the presence of an alpha. For RGBA pixmaps the result
would e.g. be [r, g, b, a]. All items are integers in range(256).
"
8884,source/pymupdf.pdf,"set_pixel(x, y, color)
"
8885,source/pymupdf.pdf,"New in version 1.14.7: Manipulate the pixel at location (x, y) (column, line).
"
8886,source/pymupdf.pdf,"Parameters
"
8887,source/pymupdf.pdf,"• x (int) – the column number of the pixel. Must be in range(pix.width).
"
8888,source/pymupdf.pdf,"• y (int) – the line number of the pixel. Must be in range(pix.height).
"
8889,source/pymupdf.pdf,"19.15. Pixmap
315
"
8890,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8891,source/pymupdf.pdf,"• color (sequence) – the desired pixel value given as a sequence of integers in
range(256). The length of the sequence must equal Pixmap.n, which includes
any alpha byte.
"
8892,source/pymupdf.pdf,"set_rect(irect, color)
"
8893,source/pymupdf.pdf,"New in version 1.14.8: Set the pixels of a rectangle to a value.
"
8894,source/pymupdf.pdf,"Parameters
"
8895,source/pymupdf.pdf,"• irect (irect_like) – the rectangle to be filled with the value. The actual area is
the intersection of this parameter and Pixmap.irect. For an empty intersection
(or an invalid parameter), no change will happen.
"
8896,source/pymupdf.pdf,"• color (sequence) – the desired value, given as a sequence of integers in
range(256). The length of the sequence must equal Pixmap.n, which includes
any alpha byte.
"
8897,source/pymupdf.pdf,"Return type
"
8898,source/pymupdf.pdf,"bool
"
8899,source/pymupdf.pdf,"Returns
"
8900,source/pymupdf.pdf,"False if the rectangle was invalid or had an empty intersection with Pixmap.irect, else
True.
"
8901,source/pymupdf.pdf,"Note:
"
8902,source/pymupdf.pdf,"1. This method is equivalent to Pixmap.set_pixel() executed for each pixel in the rectangle, but is
obviously very much faster if many pixels are involved.
"
8903,source/pymupdf.pdf,"2. This method can be used similar to Pixmap.clear_with() to initialize a pixmap with a certain
color like this: pix.set_rect(pix.irect, (255, 255, 0)) (RGB example, colors the complete pixmap with
yellow).
"
8904,source/pymupdf.pdf,"set_origin(x, y)
"
8905,source/pymupdf.pdf,"• New in v1.17.7
"
8906,source/pymupdf.pdf,"Set the x and y values of the pixmap’s top-left point.
"
8907,source/pymupdf.pdf,"Parameters
"
8908,source/pymupdf.pdf,"• x (int) – x coordinate
"
8909,source/pymupdf.pdf,"• y (int) – y coordinate
"
8910,source/pymupdf.pdf,"set_dpi(xres, yres)
"
8911,source/pymupdf.pdf,"• New in v1.16.17
"
8912,source/pymupdf.pdf,"• Changed in v1.18.0: When saving as a PNG image, these values will be stored now.
"
8913,source/pymupdf.pdf,"Set the resolution (dpi) in x and y direction.
"
8914,source/pymupdf.pdf,"Parameters
"
8915,source/pymupdf.pdf,"• xres (int) – resolution in x direction.
"
8916,source/pymupdf.pdf,"• yres (int) – resolution in y direction.
"
8917,source/pymupdf.pdf,"set_alpha(alphavalues, premultiply=1, opaque=None)
"
8918,source/pymupdf.pdf,"• Changed in v 1.18.13
"
8919,source/pymupdf.pdf,"316
Chapter 19. Classes
"
8920,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8921,source/pymupdf.pdf,"Change the alpha values. The pixmap must have an alpha channel.
"
8922,source/pymupdf.pdf,"Parameters
"
8923,source/pymupdf.pdf,"• alphavalues (bytes,bytearray,BytesIO) – the new alpha values. If provided,
its length must be at least width * height. If omitted (None), all alpha values are
set to 255 (no transparency). Changed in version 1.14.13: io.BytesIO is now also
accepted.
"
8924,source/pymupdf.pdf,"• premultiply (bool) – New in v1.18.13: whether to premultiply color components
with the alpha value.
"
8925,source/pymupdf.pdf,"• opaque (list,tuple) – ignore the alpha value and set this color to fully transpar-
ent. A sequence of integers in range(256) with a length of Pixmap.n. Default
is None. For example, a typical choice for RGB would be opaque=(255, 255,
255) (white).
"
8926,source/pymupdf.pdf,"invert_irect([irect])
"
8927,source/pymupdf.pdf,"Invert the color of all pixels in IRect irect. Will have no effect if colorspace is None.
"
8928,source/pymupdf.pdf,"Parameters
"
8929,source/pymupdf.pdf,"irect (irect_like) – The area to be inverted. Omit to invert everything.
"
8930,source/pymupdf.pdf,"copy(source, irect)
"
8931,source/pymupdf.pdf,"Copy the irect part of the source pixmap into the corresponding area of this one. The two pixmaps may
have different dimensions and can each have CS_GRAY or CS_RGB colorspaces, but they currently must
have the same alpha property2. The copy mechanism automatically adjusts discrepancies between source
and target like so:
"
8932,source/pymupdf.pdf,"If copying from CS_GRAY to CS_RGB, the source gray-shade value will be put into each of the three rgb
component bytes. If the other way round, (r + g + b) / 3 will be taken as the gray-shade value of the target.
"
8933,source/pymupdf.pdf,"Between irect and the target pixmap’s rectangle, an “intersection” is calculated at first. This takes into
account the rectangle coordinates and the current attribute values Pixmap.x and Pixmap.y (which you
are free to modify for this purpose via Pixmap.set_origin()). Then the corresponding data of this
intersection are copied. If the intersection is empty, nothing will happen.
"
8934,source/pymupdf.pdf,"Parameters
"
8935,source/pymupdf.pdf,"• source (Pixmap) – source pixmap.
"
8936,source/pymupdf.pdf,"• irect (irect_like) – The area to be copied.
"
8937,source/pymupdf.pdf,"Note:
Example: Suppose you have two pixmaps, pix1 and pix2 and you want to copy the lower right
quarter of pix2 to pix1 such that it starts at the top-left point of pix1. Use the following snippet:
"
8938,source/pymupdf.pdf,">>> # safeguard: set top-left of pix1 and pix2 to (0, 0)
>>> pix1.set_origin(0, 0)
>>> pix2.set_origin(0, 0)
>>> # compute top-left coordinates of pix2 region to copy
>>> x1 = int(pix2.width / 2)
>>> y1 = int(pix2.height / 2)
>>> # shift top-left of pix2 such, that the to-be-copied
>>> # area starts at (0, 0):
>>> pix2.set_origin(-x1, -y1)
>>> # now copy ...
>>> pix1.copy(pix2, (0, 0, x1, y1))
"
8939,source/pymupdf.pdf,"2 To also set the alpha property, add an additional step to this method by dropping or adding an alpha channel to the result.
"
8940,source/pymupdf.pdf,"19.15. Pixmap
317
"
8941,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8942,source/pymupdf.pdf,"save(filename, output=None, jpg_quality=95)
"
8943,source/pymupdf.pdf,"• Changed in v1.22.0: Added direct support of JPEG images. Image quality can be controlled via
parameter “jpg_quality”.
"
8944,source/pymupdf.pdf,"Save pixmap as an image file. Depending on the output chosen, only some or all colorspaces are supported
and different file extensions can be chosen. Please see the table below.
"
8945,source/pymupdf.pdf,"Parameters
"
8946,source/pymupdf.pdf,"• filename (str,Path,file) – The file to save to. May be provided as a string, as
a pathlib.Path or as a Python file object. In the latter two cases, the filename is
taken from the resp. object. The filename’s extension determines the image format,
which can be overruled by the output parameter.
"
8947,source/pymupdf.pdf,"• output (str) – The desired image format. The default is the filename’s extension.
If both, this value and the file extension are unsupported, an exception is raised. For
possible values see Supported Output Image Formats.
"
8948,source/pymupdf.pdf,"• jpg_quality (int) – The desired image quality, default 95. Only applies to JPEG
images, else ignored. This parameter trades quality against file size. A value of 98
is close to lossless. Higher values should not lead to better quality.
"
8949,source/pymupdf.pdf,"Raises
"
8950,source/pymupdf.pdf,"ValueError – For unsupported image formats.
"
8951,source/pymupdf.pdf,"tobytes(output='png', jpg_quality=95)
"
8952,source/pymupdf.pdf,"• New in version 1.14.5: Return the pixmap as a bytes memory object of the specified format – similar
to save().
"
8953,source/pymupdf.pdf,"• Changed in v1.22.0: Added direct JPEG support. Image quality can be influenced via new param-
eter “jpg_quality”.
"
8954,source/pymupdf.pdf,"Parameters
"
8955,source/pymupdf.pdf,"• output (str) – The desired image format. The default is “png”. For possible
values see Supported Output Image Formats.
"
8956,source/pymupdf.pdf,"• jpg_quality (int) – The desired image quality, default 95. Only applies to JPEG
images, else ignored. This parameter trades quality against file size. A value of 98
is close to lossless. Higher values should not lead to better quality.
"
8957,source/pymupdf.pdf,"• output – The requested image format. The default is “png”. For other possible
values see Supported Output Image Formats.
"
8958,source/pymupdf.pdf,"Raises
"
8959,source/pymupdf.pdf,"ValueError – For unsupported image formats.
"
8960,source/pymupdf.pdf,"Return type
"
8961,source/pymupdf.pdf,"bytes
"
8962,source/pymupdf.pdf,"318
Chapter 19. Classes
"
8963,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8964,source/pymupdf.pdf,"pdfocr_save(filename, compress=True, language='eng', tessdata=None)
"
8965,source/pymupdf.pdf,"• New in v1.19.0
"
8966,source/pymupdf.pdf,"• Changed in v1.22.5: Support of new parameter for Tesseract’s tessdata.
"
8967,source/pymupdf.pdf,"Perform text recognition using Tesseract and save the image as a 1-page PDF with an OCR text layer.
"
8968,source/pymupdf.pdf,"Parameters
"
8969,source/pymupdf.pdf,"• filename (str,fp) – identifies the file to save to. May be either a string or a
pointer to a file opened with “wb” (includes io.BytesIO() objects).
"
8970,source/pymupdf.pdf,"• compress (bool) – whether to compress the resulting PDF, default is True.
"
8971,source/pymupdf.pdf,"• language (str) – the languages occurring in the image. This must be specified
in Tesseract format. Default is “eng” for English. Use “+”-separated Tesseract
language codes for multiple languages, like “eng+spa” for English and Spanish.
"
8972,source/pymupdf.pdf,"• tessdata (str) – folder name of Tesseract’s language support. If omitted, this
information must be present as environment variable TESSDATA_PREFIX.
"
8973,source/pymupdf.pdf,"Note: Will fail if Tesseract is not installed or if the environment variable “TESSDATA_PREFIX” is not
set to the tessdata folder name and not provided as parameter.
"
8974,source/pymupdf.pdf,"pdfocr_tobytes(compress=True, language='eng', tessdata=None)
"
8975,source/pymupdf.pdf,"• New in v1.19.0
"
8976,source/pymupdf.pdf,"• Changed in v1.22.5: Support of new parameter for Tesseract’s tessdata.
"
8977,source/pymupdf.pdf,"Perform text recognition using Tesseract and convert the image to a 1-page PDF with an OCR text layer.
Internally invokes Pixmap.pdfocr_save().
"
8978,source/pymupdf.pdf,"Returns
"
8979,source/pymupdf.pdf,"A 1-page PDF file in memory. Could be opened like doc=fitz.open(""pdf"", pix.
pdfocr_tobytes()), and text extractions could be performed on its page=doc[0].
"
8980,source/pymupdf.pdf,"Note: Another possible use is insertion into some pdf. The following snippet reads the
images of a folder and stores them as pages in a new PDF that contain an OCR text layer:
"
8981,source/pymupdf.pdf,"doc = fitz.open()
for imgfile in os.listdir(folder):
pix = fitz.Pixmap(imgfile)
imgpdf = fitz.open(""pdf"", pix.pdfocr_tobytes())
doc.insert_pdf(imgpdf)
pix = None
imgpdf.close()
doc.save(""ocr-images.pdf"")
"
8982,source/pymupdf.pdf,"pil_save(*args, unmultiply=False, **kwargs)
"
8983,source/pymupdf.pdf,"• New in v1.17.3
"
8984,source/pymupdf.pdf,"Write the pixmap as an image file using Pillow. Use this method for output unsupported by MuPDF.
Examples are
"
8985,source/pymupdf.pdf,"• Formats JPX, J2K, WebP, etc.
"
8986,source/pymupdf.pdf,"19.15. Pixmap
319
"
8987,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
8988,source/pymupdf.pdf,"• Storing EXIF information.
"
8989,source/pymupdf.pdf,"• If you do not provide dpi information, the values xres, yres stored with the pixmap are automatically
used.
"
8990,source/pymupdf.pdf,"A simple example: pix.pil_save(""some.webp"", optimize=True, dpi=(150, 150)).
"
8991,source/pymupdf.pdf,"Parameters
"
8992,source/pymupdf.pdf,"unmultiply (bool) – If the pixmap’s colorspace is RGB with transparency, the alpha
values may or may not already be multiplied into the color components ref/green/blue
(called “premultiplied”). To enforce undoing premultiplication, set this parameter to
True. To learn about some background, e.g. look for “Premultiplied alpha” here.
"
8993,source/pymupdf.pdf,"For details on other parameters see the Pillow documentation.
"
8994,source/pymupdf.pdf,"Since v1.22.0, PyMuPDF supports JPEG output directly. We recommended to no longer use this method
for JPEG output – for performance reasons and for avoiding unnecessary external dependencies.
"
8995,source/pymupdf.pdf,"Raises
"
8996,source/pymupdf.pdf,"ImportError – if Pillow is not installed.
"
8997,source/pymupdf.pdf,"pil_tobytes(*args, unmultiply=False, **kwargs)
"
8998,source/pymupdf.pdf,"• New in v1.17.3
"
8999,source/pymupdf.pdf,"Return an image as a bytes object in the specified format using Pillow. For example stream = pix.
pil_tobytes(format=""WEBP"", optimize=True, dpi=(150, 150)). Also see above. For details
on other parameters see the Pillow documentation.
"
9000,source/pymupdf.pdf,"Raises
"
9001,source/pymupdf.pdf,"ImportError – if Pillow is not installed.
"
9002,source/pymupdf.pdf,"Return type
"
9003,source/pymupdf.pdf,"bytes
"
9004,source/pymupdf.pdf,"warp(quad, width, height)
"
9005,source/pymupdf.pdf,"• New in v1.19.3
"
9006,source/pymupdf.pdf,"Return a new pixmap by “warping” the quad such that the quad corners become the new pixmap’s corners.
The target pixmap’s IRect will be (0, 0, width, height).
"
9007,source/pymupdf.pdf,"Parameters
"
9008,source/pymupdf.pdf,"• quad (quad_like) – a convex quad with coordinates inside Pixmap.irect (in-
cluding the border points).
"
9009,source/pymupdf.pdf,"• width (int) – desired resulting width.
"
9010,source/pymupdf.pdf,"• height (int) – desired resulting height.
"
9011,source/pymupdf.pdf,"Returns
"
9012,source/pymupdf.pdf,"A new pixmap where the quad corners are mapped to the pixmap corners in a clockwise
fashion: quad.ul -> irect.tl, quad.ur -> irect.tr, etc.
"
9013,source/pymupdf.pdf,"Return type
"
9014,source/pymupdf.pdf,"320
Chapter 19. Classes
"
9015,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9016,source/pymupdf.pdf,"Pixmap
"
9017,source/pymupdf.pdf,"color_count(colors=False, clip=None)
"
9018,source/pymupdf.pdf,"• New in v1.19.2
"
9019,source/pymupdf.pdf,"• Changed in v1.19.3
"
9020,source/pymupdf.pdf,"Determine the pixmap’s unique colors and their count.
"
9021,source/pymupdf.pdf,"Parameters
"
9022,source/pymupdf.pdf,"• colors (bool) – (changed in v1.19.3) If True return a dictionary of color pixels
and their usage count, else just the number of unique colors.
"
9023,source/pymupdf.pdf,"• clip (rect_like) – a rectangle inside Pixmap.irect. If provided, only those
pixels are considered. This allows inspecting sub-rectangles of a given pixmap
directly – instead of building sub-pixmaps.
"
9024,source/pymupdf.pdf,"Return type
"
9025,source/pymupdf.pdf,"dict or int
"
9026,source/pymupdf.pdf,"Returns
"
9027,source/pymupdf.pdf,"either the number of colors, or a dictionary with the items pixel:
count. The pixel
key is a bytes object of length Pixmap.n.
"
9028,source/pymupdf.pdf,"Note:
To recover the tuple of a pixel, use tuple(colors.keys()[i]) for the i-th
item.
"
9029,source/pymupdf.pdf,"• The response time depends on the pixmap’s samples size and may be more than a
second for very large pixmaps.
"
9030,source/pymupdf.pdf,"• Where applicable, pixels with different alpha values will be treated as different col-
ors.
"
9031,source/pymupdf.pdf,"color_topusage(clip=None)
"
9032,source/pymupdf.pdf,"• New in v1.19.3
"
9033,source/pymupdf.pdf,"Return the most frequently used color and its relative frequency.
"
9034,source/pymupdf.pdf,"Parameters
"
9035,source/pymupdf.pdf,"clip (rect_like) – A rectangle inside Pixmap.irect. If provided, only those pix-
els are considered. This allows inspecting sub-rectangles of a given pixmap directly –
instead of building sub-pixmaps.
"
9036,source/pymupdf.pdf,"Return type
"
9037,source/pymupdf.pdf,"tuple
"
9038,source/pymupdf.pdf,"Returns
"
9039,source/pymupdf.pdf,"A tuple (ratio, pixel) where 0 < ratio <= 1 and pixel is the pixel value of
"
9040,source/pymupdf.pdf,"19.15. Pixmap
321
"
9041,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9042,source/pymupdf.pdf,"the color. Use this to decide if the image is “almost” unicolor: a response (0.95,
b""x00x00x00"") means that 95% of all pixels are black. See an example here How to
Use Pixmaps: Checking Text Visibility.
"
9043,source/pymupdf.pdf,"alpha
"
9044,source/pymupdf.pdf,"Indicates whether the pixmap contains transparency information.
"
9045,source/pymupdf.pdf,"Type
"
9046,source/pymupdf.pdf,"bool
"
9047,source/pymupdf.pdf,"digest
"
9048,source/pymupdf.pdf,"The MD5 hashcode (16 bytes) of the pixmap. This is a technical value used for unique identifications.
"
9049,source/pymupdf.pdf,"Type
"
9050,source/pymupdf.pdf,"bytes
"
9051,source/pymupdf.pdf,"colorspace
"
9052,source/pymupdf.pdf,"The colorspace of the pixmap. This value may be None if the image is to be treated as a so-called image
mask or stencil mask (currently happens for extracted PDF document images only).
"
9053,source/pymupdf.pdf,"Type
"
9054,source/pymupdf.pdf,"Colorspace
"
9055,source/pymupdf.pdf,"stride
"
9056,source/pymupdf.pdf,"Contains the length of one row of image data in Pixmap.samples. This is primarily used for calculation
purposes. The following expressions are true:
"
9057,source/pymupdf.pdf,"• len(samples) == height * stride
"
9058,source/pymupdf.pdf,"• width * n == stride
"
9059,source/pymupdf.pdf,"Type
"
9060,source/pymupdf.pdf,"int
"
9061,source/pymupdf.pdf,"is_monochrome
"
9062,source/pymupdf.pdf,"• New in v1.19.2
"
9063,source/pymupdf.pdf,"Is True for a gray pixmap which only has the colors black and white.
"
9064,source/pymupdf.pdf,"Type
"
9065,source/pymupdf.pdf,"bool
"
9066,source/pymupdf.pdf,"is_unicolor
"
9067,source/pymupdf.pdf,"• New in v1.19.2
"
9068,source/pymupdf.pdf,"Is True if all pixels are identical (any colorspace). Where applicable, pixels with different alpha values
will be treated as different colors.
"
9069,source/pymupdf.pdf,"Type
"
9070,source/pymupdf.pdf,"bool
"
9071,source/pymupdf.pdf,"irect
"
9072,source/pymupdf.pdf,"Contains the IRect of the pixmap.
"
9073,source/pymupdf.pdf,"Type
"
9074,source/pymupdf.pdf,"IRect
"
9075,source/pymupdf.pdf,"322
Chapter 19. Classes
"
9076,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9077,source/pymupdf.pdf,"samples
"
9078,source/pymupdf.pdf,"The color and (if Pixmap.alpha is true) transparency values for all pixels. It is an area of width *
height * n bytes. Each n bytes define one pixel. Each successive n bytes yield another pixel in scanline
order. Subsequent scanlines follow each other with no padding. E.g. for an RGBA colorspace this means,
samples is a sequence of bytes like ..., R, G, B, A, ..., and the four byte values R, G, B, A define one pixel.
"
9079,source/pymupdf.pdf,"This area can be passed to other graphics libraries like PIL (Python Imaging Library) to do additional
processing like saving the pixmap in other image formats.
"
9080,source/pymupdf.pdf,"Note:
"
9081,source/pymupdf.pdf,"• The underlying data is typically a large memory area, from which a bytes copy is made for this
attribute ... each time you access it: for example an RGB-rendered letter page has a samples size of
almost 1.4 MB. So consider assigning a new variable to it or use the memoryview version Pixmap.
samples_mv (new in v1.18.17).
"
9082,source/pymupdf.pdf,"• Any changes to the underlying data are available only after accessing this attribute again. This is
different from using the memoryview version.
"
9083,source/pymupdf.pdf,"Type
"
9084,source/pymupdf.pdf,"bytes
"
9085,source/pymupdf.pdf,"samples_mv
"
9086,source/pymupdf.pdf,"• New in v1.18.17
"
9087,source/pymupdf.pdf,"Like Pixmap.samples, but in Python memoryview format. It is built pointing to the memory in the
pixmap – not from a copy of it. So its creation speed is independent from the pixmap size, and any
changes to pixels will be available immediately.
"
9088,source/pymupdf.pdf,"Copies like bytearray(pix.samples_mv), or bytes(pixmap.samples_mv) are equivalent to and can
be used in place of pix.samples.
"
9089,source/pymupdf.pdf,"We also have len(pix.samples) == len(pix.samples_mv).
"
9090,source/pymupdf.pdf,"Look at this example from a 2 MB JPEG: the memoryview is ten thousand times faster:
"
9091,source/pymupdf.pdf,"In [3]: %timeit len(pix.samples_mv)
367 ns ± 1.75 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)
In [4]: %timeit len(pix.samples)
3.52 ms ± 57.5 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)
"
9092,source/pymupdf.pdf,"Type
"
9093,source/pymupdf.pdf,"memoryview
"
9094,source/pymupdf.pdf,"samples_ptr
"
9095,source/pymupdf.pdf,"• New in v1.18.17
"
9096,source/pymupdf.pdf,"Python pointer to the pixel area. This is a special integer format, which can be used by supporting appli-
cations (such as PyQt) to directly address the samples area and thus build their images extremely fast. For
example:
"
9097,source/pymupdf.pdf,"img = QtGui.QImage(pix.samples, pix.width, pix.height, format) # (1)
img = QtGui.QImage(pix.samples_ptr, pix.width, pix.height, format) # (2)
"
9098,source/pymupdf.pdf,"19.15. Pixmap
323
"
9099,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9100,source/pymupdf.pdf,"Both of the above lead to the same Qt image, but (2) can be many hundred times faster, because it avoids
an additional copy of the pixel area.
"
9101,source/pymupdf.pdf,"Type
"
9102,source/pymupdf.pdf,"int
"
9103,source/pymupdf.pdf,"size
"
9104,source/pymupdf.pdf,"Contains len(pixmap). This will generally equal len(pix.samples) plus some platform-specific value for
defining other attributes of the object.
"
9105,source/pymupdf.pdf,"Type
"
9106,source/pymupdf.pdf,"int
"
9107,source/pymupdf.pdf,"width
"
9108,source/pymupdf.pdf,"w
"
9109,source/pymupdf.pdf,"Width of the region in pixels.
"
9110,source/pymupdf.pdf,"Type
"
9111,source/pymupdf.pdf,"int
"
9112,source/pymupdf.pdf,"height
"
9113,source/pymupdf.pdf,"h
"
9114,source/pymupdf.pdf,"Height of the region in pixels.
"
9115,source/pymupdf.pdf,"Type
"
9116,source/pymupdf.pdf,"int
"
9117,source/pymupdf.pdf,"x
"
9118,source/pymupdf.pdf,"X-coordinate of top-left corner in pixels. Cannot directly be changed – use Pixmap.set_origin().
"
9119,source/pymupdf.pdf,"Type
"
9120,source/pymupdf.pdf,"int
"
9121,source/pymupdf.pdf,"y
"
9122,source/pymupdf.pdf,"Y-coordinate of top-left corner in pixels. Cannot directly be changed – use Pixmap.set_origin().
"
9123,source/pymupdf.pdf,"Type
"
9124,source/pymupdf.pdf,"int
"
9125,source/pymupdf.pdf,"n
"
9126,source/pymupdf.pdf,"Number of components per pixel. This number depends on colorspace and alpha. If colorspace is not
None (stencil masks), then Pixmap.n - Pixmap.alpha == pixmap.colorspace.n is true. If colorspace is
None, then n == alpha == 1.
"
9127,source/pymupdf.pdf,"Type
"
9128,source/pymupdf.pdf,"int
"
9129,source/pymupdf.pdf,"xres
"
9130,source/pymupdf.pdf,"Horizontal resolution in dpi (dots per inch). Please also see resolution. Cannot directly be changed –
use Pixmap.set_dpi().
"
9131,source/pymupdf.pdf,"Type
"
9132,source/pymupdf.pdf,"int
"
9133,source/pymupdf.pdf,"yres
"
9134,source/pymupdf.pdf,"Vertical resolution in dpi (dots per inch). Please also see resolution. Cannot directly be changed – use
Pixmap.set_dpi().
"
9135,source/pymupdf.pdf,"324
Chapter 19. Classes
"
9136,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9137,source/pymupdf.pdf,"Type
"
9138,source/pymupdf.pdf,"int
"
9139,source/pymupdf.pdf,"interpolate
"
9140,source/pymupdf.pdf,"An information-only boolean flag set to True if the image will be drawn using “linear interpolation”. If
False “nearest neighbour sampling” will be used.
"
9141,source/pymupdf.pdf,"Type
"
9142,source/pymupdf.pdf,"bool
"
9143,source/pymupdf.pdf,"19.15.1 Supported Input Image Formats
"
9144,source/pymupdf.pdf,"The following file types are supported as input to construct pixmaps: BMP, JPEG, GIF, TIFF, JXR, JPX, PNG,
PAM and all of the Portable Anymap family (PBM, PGM, PNM, PPM). This support is two-fold:
"
9145,source/pymupdf.pdf,"1. Directly create a pixmap with Pixmap(filename) or Pixmap(byterray). The pixmap will then have properties as
determined by the image.
"
9146,source/pymupdf.pdf,"2. Open such files with fitz.open(...). The result will then appear as a document containing one single page. Cre-
ating a pixmap of this page offers all the options available in this context: apply a matrix, choose colorspace and
alpha, confine the pixmap to a clip area, etc.
"
9147,source/pymupdf.pdf,"SVG images are only supported via method 2 above, not directly as pixmaps. But remember: the result of this is a
raster image as is always the case with pixmaps1.
"
9148,source/pymupdf.pdf,"19.15.2 Supported Output Image Formats
"
9149,source/pymupdf.pdf,"A number of image output formats are supported. You have the option to either write an image directly to a file
(Pixmap.save()), or to generate a bytes object (Pixmap.tobytes()). Both methods accept a string identifying the
desired format (Format column below). Please note that not all combinations of pixmap colorspace, transparency
support (alpha) and image format are possible.
"
9150,source/pymupdf.pdf,"Format
Colorspaces
alpha
Extensions
Description
"
9151,source/pymupdf.pdf,"jpg, jpeg
gray, rgb, cmyk
no
.jpg, .jpeg
Joint Photographic Experts Group
"
9152,source/pymupdf.pdf,"pam
gray, rgb, cmyk
yes
.pam
Portable Arbitrary Map
"
9153,source/pymupdf.pdf,"pbm
gray, rgb
no
.pbm
Portable Bitmap
"
9154,source/pymupdf.pdf,"pgm
gray, rgb
no
.pgm
Portable Graymap
"
9155,source/pymupdf.pdf,"png
gray, rgb
yes
.png
Portable Network Graphics
"
9156,source/pymupdf.pdf,"pnm
gray, rgb
no
.pnm
Portable Anymap
"
9157,source/pymupdf.pdf,"ppm
gray, rgb
no
.ppm
Portable Pixmap
"
9158,source/pymupdf.pdf,"ps
gray, rgb, cmyk
no
.ps
Adobe PostScript Image
"
9159,source/pymupdf.pdf,"psd
gray, rgb, cmyk
yes
.psd
Adobe Photoshop Document
"
9160,source/pymupdf.pdf,"Note:
"
9161,source/pymupdf.pdf,"• Not all image file types are supported (or at least common) on all OS platforms. E.g. PAM and the Portable
Anymap formats are rare or even unknown on Windows.
"
9162,source/pymupdf.pdf,"• Especially pertaining to CMYK colorspaces, you can always convert a CMYK pixmap to an RGB pixmap with
rgb_pix = fitz.Pixmap(fitz.csRGB, cmyk_pix) and then save that in the desired format.
"
9163,source/pymupdf.pdf,"1 If you need a vector image from the SVG, you must first convert it to a PDF. Try Document.convert_to_pdf(). If this is not good enough,
look for other SVG-to-PDF conversion tools like the Python packages svglib, CairoSVG, Uniconvertor or the Java solution Apache Batik. Have a
look at our Wiki for more examples.
"
9164,source/pymupdf.pdf,"19.15. Pixmap
325
"
9165,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9166,source/pymupdf.pdf,"• As can be seen, MuPDF’s image support range is different for input and output. Among those supported both
ways, PNG and JPEG are probably the most popular.
"
9167,source/pymupdf.pdf,"• We also recommend using “ppm” formats as input to tkinter’s PhotoImage method like this: tkimg = tkin-
ter.PhotoImage(data=pix.tobytes(“ppm”)) (also see the tutorial). This is very fast (60 times faster than PNG).
"
9168,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
9169,source/pymupdf.pdf,"19.16 Point
"
9170,source/pymupdf.pdf,"Point represents a point in the plane, defined by its x and y coordinates.
"
9171,source/pymupdf.pdf,"Attribute / Method
Description
"
9172,source/pymupdf.pdf,"Point.distance_to()
calculate distance to point or rect
"
9173,source/pymupdf.pdf,"Point.norm()
the Euclidean norm
"
9174,source/pymupdf.pdf,"Point.transform()
transform point with a matrix
"
9175,source/pymupdf.pdf,"Point.abs_unit
same as unit, but positive coordinates
"
9176,source/pymupdf.pdf,"Point.unit
point coordinates divided by abs(point)
"
9177,source/pymupdf.pdf,"Point.x
the X-coordinate
"
9178,source/pymupdf.pdf,"Point.y
the Y-coordinate
"
9179,source/pymupdf.pdf,"Class API
"
9180,source/pymupdf.pdf,"class Point
"
9181,source/pymupdf.pdf,"__init__(self )
"
9182,source/pymupdf.pdf,"__init__(self, x, y)
"
9183,source/pymupdf.pdf,"__init__(self, point)
"
9184,source/pymupdf.pdf,"__init__(self, sequence)
"
9185,source/pymupdf.pdf,"Overloaded constructors.
"
9186,source/pymupdf.pdf,"Without parameters, Point(0, 0) will be created.
"
9187,source/pymupdf.pdf,"With another point specified, a new copy will be created, “sequence” is a Python sequence of
2 numbers (see Using Python Sequences as Arguments in PyMuPDF).
"
9188,source/pymupdf.pdf,"Parameters
"
9189,source/pymupdf.pdf,"• x (float) – x coordinate of the point
"
9190,source/pymupdf.pdf,"• y (float) – y coordinate of the point
"
9191,source/pymupdf.pdf,"distance_to(x[, unit])
"
9192,source/pymupdf.pdf,"Calculate the distance to x, which may be point_like or rect_like. The distance is given
in units of either pixels (default), inches, centimeters or millimeters.
"
9193,source/pymupdf.pdf,"Parameters
"
9194,source/pymupdf.pdf,"326
Chapter 19. Classes
"
9195,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9196,source/pymupdf.pdf,"• x (point_like,rect_like) – to which to compute the distance.
"
9197,source/pymupdf.pdf,"• unit (str) – the unit to be measured in. One of “px”, “in”, “cm”, “mm”.
"
9198,source/pymupdf.pdf,"Return type
"
9199,source/pymupdf.pdf,"float
"
9200,source/pymupdf.pdf,"Returns
"
9201,source/pymupdf.pdf,"the distance to x. If this is rect_like, then the distance
"
9202,source/pymupdf.pdf,"• is the length of the shortest line connecting to one of the rectangle sides
"
9203,source/pymupdf.pdf,"• is calculated to the finite version of it
"
9204,source/pymupdf.pdf,"• is zero if it contains the point
"
9205,source/pymupdf.pdf,"norm()
"
9206,source/pymupdf.pdf,"• New in version 1.16.0
"
9207,source/pymupdf.pdf,"Return the Euclidean norm (the length) of the point as a vector. Equals result of function abs().
"
9208,source/pymupdf.pdf,"transform(m)
"
9209,source/pymupdf.pdf,"Apply a matrix to the point and replace it with the result.
"
9210,source/pymupdf.pdf,"Parameters
"
9211,source/pymupdf.pdf,"m (matrix_like) – The matrix to be applied.
"
9212,source/pymupdf.pdf,"Return type
"
9213,source/pymupdf.pdf,"Point
"
9214,source/pymupdf.pdf,"unit
"
9215,source/pymupdf.pdf,"Result of dividing each coordinate by norm(point), the distance of the point to (0,0). This is a vector of
length 1 pointing in the same direction as the point does. Its x, resp. y values are equal to the cosine, resp.
sine of the angle this vector (and the point itself) has with the x axis.
"
9216,source/pymupdf.pdf,"Type
"
9217,source/pymupdf.pdf,"Point
"
9218,source/pymupdf.pdf,"19.16. Point
327
"
9219,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9220,source/pymupdf.pdf,"abs_unit
"
9221,source/pymupdf.pdf,"Same as unit above, replacing the coordinates with their absolute values.
"
9222,source/pymupdf.pdf,"Type
"
9223,source/pymupdf.pdf,"Point
"
9224,source/pymupdf.pdf,"x
"
9225,source/pymupdf.pdf,"The x coordinate
"
9226,source/pymupdf.pdf,"Type
"
9227,source/pymupdf.pdf,"float
"
9228,source/pymupdf.pdf,"y
"
9229,source/pymupdf.pdf,"The y coordinate
"
9230,source/pymupdf.pdf,"Type
"
9231,source/pymupdf.pdf,"float
"
9232,source/pymupdf.pdf,"Note:
"
9233,source/pymupdf.pdf,"• This class adheres to the Python sequence protocol, so components can be accessed via their index, too. Also
refer to Using Python Sequences as Arguments in PyMuPDF.
"
9234,source/pymupdf.pdf,"• Rectangles can be used with arithmetic operators – see chapter Operator Algebra for Geometry Objects.
"
9235,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
9236,source/pymupdf.pdf,"19.17 Quad
"
9237,source/pymupdf.pdf,"Represents a four-sided mathematical shape (also called “quadrilateral” or “tetragon”) in the plane, defined as a se-
quence of four Point objects ul, ur, ll, lr (conveniently called upper left, upper right, lower left, lower right).
"
9238,source/pymupdf.pdf,"Quads can be obtained as results of text search methods (Page.search_for()), and they are used to define text
marker annotations (see e.g. Page.add_squiggly_annot() and friends), and in several draw methods (like Page.
draw_quad() / Shape.draw_quad(), Page.draw_oval()/ Shape.draw_quad()).
"
9239,source/pymupdf.pdf,"Note:
"
9240,source/pymupdf.pdf,"• If the corners of a rectangle are transformed with a rotation, scale or translation Matrix, then the resulting quad
is rectangular (= congruent to a rectangle), i.e. all of its corners again enclose angles of 90 degrees. Property
Quad.is_rectangular checks whether a quad can be thought of being the result of such an operation.
"
9241,source/pymupdf.pdf,"• This is not true for all matrices: e.g. shear matrices produce parallelograms, and non-invertible matrices deliver
“degenerate” tetragons like triangles or lines.
"
9242,source/pymupdf.pdf,"• Attribute Quad.rect obtains the enveloping rectangle. Vice versa, rectangles now have attributes Rect.quad,
resp. IRect.quad to obtain their respective tetragon versions.
"
9243,source/pymupdf.pdf,"328
Chapter 19. Classes
"
9244,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9245,source/pymupdf.pdf,"Methods / Attributes
Short Description
"
9246,source/pymupdf.pdf,"Quad.transform()
transform with a matrix
"
9247,source/pymupdf.pdf,"Quad.morph()
transform with a point and matrix
"
9248,source/pymupdf.pdf,"Quad.ul
upper left point
"
9249,source/pymupdf.pdf,"Quad.ur
upper right point
"
9250,source/pymupdf.pdf,"Quad.ll
lower left point
"
9251,source/pymupdf.pdf,"Quad.lr
lower right point
"
9252,source/pymupdf.pdf,"Quad.is_convex
true if quad is a convex set
"
9253,source/pymupdf.pdf,"Quad.is_empty
true if quad is an empty set
"
9254,source/pymupdf.pdf,"Quad.is_rectangular
true if quad is congruent to a rectangle
"
9255,source/pymupdf.pdf,"Quad.rect
smallest containing Rect
"
9256,source/pymupdf.pdf,"Quad.width
the longest width value
"
9257,source/pymupdf.pdf,"Quad.height
the longest height value
"
9258,source/pymupdf.pdf,"Class API
"
9259,source/pymupdf.pdf,"class Quad
"
9260,source/pymupdf.pdf,"__init__(self )
"
9261,source/pymupdf.pdf,"__init__(self, ul, ur, ll, lr)
"
9262,source/pymupdf.pdf,"__init__(self, quad)
"
9263,source/pymupdf.pdf,"__init__(self, sequence)
"
9264,source/pymupdf.pdf,"Overloaded constructors: “ul”, “ur”, “ll”, “lr” stand for point_like objects (the four corners), “sequence”
is a Python sequence with four point_like objects.
"
9265,source/pymupdf.pdf,"If “quad” is specified, the constructor creates a new copy of it.
"
9266,source/pymupdf.pdf,"Without parameters, a quad consisting of 4 copies of Point(0, 0) is created.
"
9267,source/pymupdf.pdf,"transform(matrix)
"
9268,source/pymupdf.pdf,"Modify the quadrilateral by transforming each of its corners with a matrix.
"
9269,source/pymupdf.pdf,"Parameters
"
9270,source/pymupdf.pdf,"matrix (matrix_like) – the matrix.
"
9271,source/pymupdf.pdf,"morph(fixpoint, matrix)
"
9272,source/pymupdf.pdf,"(New in version 1.17.0) “Morph” the quad with a matrix-like using a point-like as fixed point.
"
9273,source/pymupdf.pdf,"Parameters
"
9274,source/pymupdf.pdf,"• fixpoint (point_like) – the point.
"
9275,source/pymupdf.pdf,"• matrix (matrix_like) – the matrix.
"
9276,source/pymupdf.pdf,"Returns
"
9277,source/pymupdf.pdf,"a new quad (no operation if this is the infinite quad).
"
9278,source/pymupdf.pdf,"rect
"
9279,source/pymupdf.pdf,"The smallest rectangle containing the quad, represented by the blue area in the following picture.
"
9280,source/pymupdf.pdf,"19.17. Quad
329
"
9281,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9282,source/pymupdf.pdf,"Type
"
9283,source/pymupdf.pdf,"Rect
"
9284,source/pymupdf.pdf,"ul
"
9285,source/pymupdf.pdf,"Upper left point.
"
9286,source/pymupdf.pdf,"Type
"
9287,source/pymupdf.pdf,"Point
"
9288,source/pymupdf.pdf,"ur
"
9289,source/pymupdf.pdf,"Upper right point.
"
9290,source/pymupdf.pdf,"Type
"
9291,source/pymupdf.pdf,"Point
"
9292,source/pymupdf.pdf,"ll
"
9293,source/pymupdf.pdf,"Lower left point.
"
9294,source/pymupdf.pdf,"Type
"
9295,source/pymupdf.pdf,"Point
"
9296,source/pymupdf.pdf,"lr
"
9297,source/pymupdf.pdf,"Lower right point.
"
9298,source/pymupdf.pdf,"Type
"
9299,source/pymupdf.pdf,"Point
"
9300,source/pymupdf.pdf,"is_convex
"
9301,source/pymupdf.pdf,"• New in version 1.16.1
"
9302,source/pymupdf.pdf,"Checks if for any two points of the quad, all points on their connecting line also belong to the quad.
"
9303,source/pymupdf.pdf,"330
Chapter 19. Classes
"
9304,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9305,source/pymupdf.pdf,"Type
"
9306,source/pymupdf.pdf,"bool
"
9307,source/pymupdf.pdf,"is_empty
"
9308,source/pymupdf.pdf,"True if enclosed area is zero, which means that at least three of the four corners are on the same line. If
this is false, the quad may still be degenerate or not look like a tetragon at all (triangles, parallelograms,
trapezoids, ...).
"
9309,source/pymupdf.pdf,"Type
"
9310,source/pymupdf.pdf,"bool
"
9311,source/pymupdf.pdf,"is_rectangular
"
9312,source/pymupdf.pdf,"True if all corner angles are 90 degrees. This implies that the quad is convex and not empty.
"
9313,source/pymupdf.pdf,"Type
"
9314,source/pymupdf.pdf,"bool
"
9315,source/pymupdf.pdf,"width
"
9316,source/pymupdf.pdf,"The maximum length of the top and the bottom side.
"
9317,source/pymupdf.pdf,"Type
"
9318,source/pymupdf.pdf,"float
"
9319,source/pymupdf.pdf,"height
"
9320,source/pymupdf.pdf,"The maximum length of the left and the right side.
"
9321,source/pymupdf.pdf,"Type
"
9322,source/pymupdf.pdf,"float
"
9323,source/pymupdf.pdf,"19.17.1 Remark
"
9324,source/pymupdf.pdf,"This class adheres to the sequence protocol, so components can be dealt with via their indices, too. Also refer to Using
Python Sequences as Arguments in PyMuPDF.
"
9325,source/pymupdf.pdf,"19.17.2 Algebra and Containment Checks
"
9326,source/pymupdf.pdf,"Starting with v1.19.6, quads can be used in algebraic expressions like the other geometry object – the respective re-
strictions have been lifted. In particular, all the following combinations of containment checking are now possible:
"
9327,source/pymupdf.pdf,"{Point | IRect | Rect | Quad} in {IRect | Rect | Quad}
"
9328,source/pymupdf.pdf,"Please note the following interesting detail:
"
9329,source/pymupdf.pdf,"For a rectangle, only its top-left point belongs to it. Since v1.19.0, rectangles are defined to be “open”, such that its
bottom and its right edge do not belong to it – including the respective corners. But for quads there exists no such
notion like “openness”, so we have the following somewhat surprising implication:
"
9330,source/pymupdf.pdf,">>> rect.br in rect
False
>>> # but:
>>> rect.br in rect.quad
True
"
9331,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
9332,source/pymupdf.pdf,"19.17. Quad
331
"
9333,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9334,source/pymupdf.pdf,"19.18 Rect
"
9335,source/pymupdf.pdf,"Rect represents a rectangle defined by four floating point numbers x0, y0, x1, y1. They are treated as being coordinates
of two diagonally opposite points. The first two numbers are regarded as the “top left” corner P(x0,y0) and P(x1,y1) as the
“bottom right” one. However, these two properties need not coincide with their intuitive meanings – read on.
"
9336,source/pymupdf.pdf,"The following remarks are also valid for IRect objects:
"
9337,source/pymupdf.pdf,"• A rectangle in the sense of (Py-) MuPDF (and PDF) always has borders parallel to the x- resp. y-axis. A
general orthogonal tetragon is not a rectangle – in contrast to the mathematical definition.
"
9338,source/pymupdf.pdf,"• The constructing points can be (almost! – see below) anywhere in the plane – they need not even be different,
and e.g. “top left” need not be the geometrical “north-western” point.
"
9339,source/pymupdf.pdf,"• Units are in points, where 72 points is 1 inch.
"
9340,source/pymupdf.pdf,"• For any given quadruple of numbers, the geometrically “same” rectangle can be defined in four different
ways:
"
9341,source/pymupdf.pdf,"1. Rect(P(x0,y0), P(x1,y1))
"
9342,source/pymupdf.pdf,"2. Rect(P(x1,y1), P(x0,y0))
"
9343,source/pymupdf.pdf,"3. Rect(P(x0,y1), P(x1,y0))
"
9344,source/pymupdf.pdf,"4. Rect(P(x1,y0), P(x0,y1))
"
9345,source/pymupdf.pdf,"(Changed in v1.19.0) Hence some classification:
"
9346,source/pymupdf.pdf,"• A rectangle is called valid if x0 <= x1 and y0 <= y1 (i.e. the bottom right point is “south-eastern” to the top
left one), otherwise invalid. Of the four alternatives above, only the first is valid. Please take into account, that
in MuPDF’s coordinate system, the y-axis is oriented from top to bottom. Invalid rectangles have been called
infinite in earlier versions.
"
9347,source/pymupdf.pdf,"• A rectangle is called empty if x0 >= x1 or y0 >= y1. This implies, that invalid rectangles are also always
empty. And width (resp. height) is set to zero if x0 > x1 (resp. y0 > y1). In previous versions, a rectangle
was empty only if one of width or height was zero.
"
9348,source/pymupdf.pdf,"• Rectangle coordinates cannot be outside the number range from FZ_MIN_INF_RECT = -2147483648 to
FZ_MAX_INF_RECT = 2147483520. Both values have been chosen, because they are the smallest / largest 32bit
integers that survive C float conversion roundtrips. In previous versions there was no limit for coordinate values.
"
9349,source/pymupdf.pdf,"• There is exactly one “infinite” rectangle, defined by x0 = y0 = FZ_MIN_INF_RECT and x1 = y1 =
FZ_MAX_INF_RECT. It contains every other rectangle. It is mainly used for technical purposes – e.g. when a
function call should ignore a formally required rectangle argument. This rectangle is not empty.
"
9350,source/pymupdf.pdf,"• Rectangles are (semi-) open: The right and the bottom edges (including the resp. corners) are not considered
part of the rectangle. This implies, that only the top-left corner (x0, y0) can ever belong to the rectangle - the
other three corners never do. An empty rectangle contains no corners at all.
"
9351,source/pymupdf.pdf,"• Here is an overview of the changes.
"
9352,source/pymupdf.pdf,"332
Chapter 19. Classes
"
9353,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9354,source/pymupdf.pdf,"Notion
Versions < 1.19.0
Versions 1.19.*
"
9355,source/pymupdf.pdf,"empty
x0 = x1 or y0 = y1
x0 >= x1 or y0 >= y1 – includes invalid rects
"
9356,source/pymupdf.pdf,"valid
n/a
x0 <= x1 and y0 <= y1
"
9357,source/pymupdf.pdf,"infinite
all rects where x0 > x1 or y1
> y0
"
9358,source/pymupdf.pdf,"exactly one infinite rect / irect!
"
9359,source/pymupdf.pdf,"coordinate
values
"
9360,source/pymupdf.pdf,"all numbers
FZ_MIN_INF_RECT <= number <=
FZ_MAX_INF_RECT
"
9361,source/pymupdf.pdf,"borders,
corners
"
9362,source/pymupdf.pdf,"are parts of the rectangle
right and bottom corners and edges are outside
"
9363,source/pymupdf.pdf,"• There are new top level functions defining infinite and standard empty rectangles and quads, see
"
9364,source/pymupdf.pdf,"INFINITE_RECT() and friends.
"
9365,source/pymupdf.pdf,"Methods / Attributes
Short Description
"
9366,source/pymupdf.pdf,"Rect.contains()
checks containment of point_likes and rect_likes
"
9367,source/pymupdf.pdf,"Rect.get_area()
calculate rectangle area
"
9368,source/pymupdf.pdf,"Rect.include_point()
enlarge rectangle to also contain a point
"
9369,source/pymupdf.pdf,"Rect.include_rect()
enlarge rectangle to also contain another one
"
9370,source/pymupdf.pdf,"Rect.intersect()
common part with another rectangle
"
9371,source/pymupdf.pdf,"Rect.intersects()
checks for non-empty intersections
"
9372,source/pymupdf.pdf,"Rect.morph()
transform with a point and a matrix
"
9373,source/pymupdf.pdf,"Rect.torect()
the matrix that transforms to another rectangle
"
9374,source/pymupdf.pdf,"Rect.norm()
the Euclidean norm
"
9375,source/pymupdf.pdf,"Rect.normalize()
makes a rectangle valid
"
9376,source/pymupdf.pdf,"Rect.round()
create smallest IRect containing rectangle
"
9377,source/pymupdf.pdf,"Rect.transform()
transform rectangle with a matrix
"
9378,source/pymupdf.pdf,"Rect.bottom_left
bottom left point, synonym bl
"
9379,source/pymupdf.pdf,"Rect.bottom_right
bottom right point, synonym br
"
9380,source/pymupdf.pdf,"Rect.height
rectangle height
"
9381,source/pymupdf.pdf,"Rect.irect
equals result of method round()
"
9382,source/pymupdf.pdf,"Rect.is_empty
whether rectangle is empty
"
9383,source/pymupdf.pdf,"Rect.is_valid
whether rectangle is valid
"
9384,source/pymupdf.pdf,"Rect.is_infinite
whether rectangle is infinite
"
9385,source/pymupdf.pdf,"Rect.top_left
top left point, synonym tl
"
9386,source/pymupdf.pdf,"Rect.top_right
top_right point, synonym tr
"
9387,source/pymupdf.pdf,"Rect.quad
Quad made from rectangle corners
"
9388,source/pymupdf.pdf,"Rect.width
rectangle width
"
9389,source/pymupdf.pdf,"Rect.x0
left corners’ x coordinate
"
9390,source/pymupdf.pdf,"Rect.x1
right corners’ x -coordinate
"
9391,source/pymupdf.pdf,"Rect.y0
top corners’ y coordinate
"
9392,source/pymupdf.pdf,"Rect.y1
bottom corners’ y coordinate
"
9393,source/pymupdf.pdf,"Class API
"
9394,source/pymupdf.pdf,"class Rect
"
9395,source/pymupdf.pdf,"__init__(self )
"
9396,source/pymupdf.pdf,"__init__(self, x0, y0, x1, y1)
"
9397,source/pymupdf.pdf,"__init__(self, top_left, bottom_right)
"
9398,source/pymupdf.pdf,"19.18. Rect
333
"
9399,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9400,source/pymupdf.pdf,"__init__(self, top_left, x1, y1)
"
9401,source/pymupdf.pdf,"__init__(self, x0, y0, bottom_right)
"
9402,source/pymupdf.pdf,"__init__(self, rect)
"
9403,source/pymupdf.pdf,"__init__(self, sequence)
"
9404,source/pymupdf.pdf,"Overloaded constructors: top_left, bottom_right stand for point_like objects, “sequence” is a Python
sequence type of 4 numbers (see Using Python Sequences as Arguments in PyMuPDF), “rect” means
another rect_like, while the other parameters mean coordinates.
"
9405,source/pymupdf.pdf,"If “rect” is specified, the constructor creates a new copy of it.
"
9406,source/pymupdf.pdf,"Without parameters, the empty rectangle Rect(0.0, 0.0, 0.0, 0.0) is created.
"
9407,source/pymupdf.pdf,"round()
"
9408,source/pymupdf.pdf,"Creates the smallest containing IRect. This is not the same as simply rounding the rectangle’s edges: The
top left corner is rounded upwards and to the left while the bottom right corner is rounded downwards and
to the right.
"
9409,source/pymupdf.pdf,">>> fitz.Rect(0.5, -0.01, 123.88, 455.123456).round()
IRect(0, -1, 124, 456)
"
9410,source/pymupdf.pdf,"1. If the rectangle is empty, the result is also empty.
"
9411,source/pymupdf.pdf,"2. Possible paradox: The result may be empty, even if the rectangle is not empty! In such cases, the
result obviously does not contain the rectangle. This is because MuPDF’s algorithm allows for a
small tolerance (1e-3). Example:
"
9412,source/pymupdf.pdf,">>> r = fitz.Rect(100, 100, 200, 100.001)
>>> r.is_empty
# rect is NOT empty
"
9413,source/pymupdf.pdf,"False
>>> r.round()
# but its irect IS empty!
"
9414,source/pymupdf.pdf,"fitz.IRect(100, 100, 200, 100)
>>> r.round().is_empty
True
"
9415,source/pymupdf.pdf,"Return type
"
9416,source/pymupdf.pdf,"IRect
"
9417,source/pymupdf.pdf,"transform(m)
"
9418,source/pymupdf.pdf,"Transforms the rectangle with a matrix and replaces the original. If the rectangle is empty or infinite, this
is a no-operation.
"
9419,source/pymupdf.pdf,"Parameters
"
9420,source/pymupdf.pdf,"m (Matrix) – The matrix for the transformation.
"
9421,source/pymupdf.pdf,"Return type
"
9422,source/pymupdf.pdf,"Rect
"
9423,source/pymupdf.pdf,"Returns
"
9424,source/pymupdf.pdf,"the smallest rectangle that contains the transformed original.
"
9425,source/pymupdf.pdf,"intersect(r)
"
9426,source/pymupdf.pdf,"The intersection (common rectangular area, largest rectangle contained in both) of the current rectangle
and r is calculated and replaces the current rectangle. If either rectangle is empty, the result is also empty.
"
9427,source/pymupdf.pdf,"334
Chapter 19. Classes
"
9428,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9429,source/pymupdf.pdf,"If r is infinite, this is a no-operation. If the rectangles are (mathematically) disjoint sets, then the result is
invalid. If the result is valid but empty, then the rectangles touch each other in a corner or (part of) a side.
"
9430,source/pymupdf.pdf,"Parameters
"
9431,source/pymupdf.pdf,"r (Rect) – Second rectangle
"
9432,source/pymupdf.pdf,"include_rect(r)
"
9433,source/pymupdf.pdf,"The smallest rectangle containing the current one and r is calculated and replaces the current one. If
either rectangle is infinite, the result is also infinite. If one is empty, the other one will be taken as the
result.
"
9434,source/pymupdf.pdf,"Parameters
"
9435,source/pymupdf.pdf,"r (Rect) – Second rectangle
"
9436,source/pymupdf.pdf,"include_point(p)
"
9437,source/pymupdf.pdf,"The smallest rectangle containing the current one and point p is calculated and replaces the current one.
The infinite rectangle remains unchanged. To create a rectangle containing a series of points, start with
(the empty) fitz.Rect(p1, p1) and successively include the remaining points.
"
9438,source/pymupdf.pdf,"Parameters
"
9439,source/pymupdf.pdf,"p (Point) – Point to include.
"
9440,source/pymupdf.pdf,"get_area([unit])
"
9441,source/pymupdf.pdf,"Calculate the area of the rectangle and, with no parameter, equals abs(rect). Like an empty rectangle, the
area of an infinite rectangle is also zero. So, at least one of fitz.Rect(p1, p2) and fitz.Rect(p2, p1) has a zero
area.
"
9442,source/pymupdf.pdf,"Parameters
"
9443,source/pymupdf.pdf,"unit (str) – Specify required unit: respective squares of px (pixels, default), in (inches),
cm (centimeters), or mm (millimeters).
"
9444,source/pymupdf.pdf,"Return type
"
9445,source/pymupdf.pdf,"float
"
9446,source/pymupdf.pdf,"contains(x)
"
9447,source/pymupdf.pdf,"Checks whether x is contained in the rectangle. It may be an IRect, Rect, Point or number. If x is an empty
rectangle, this is always true. If the rectangle is empty this is always False for all non-empty rectangles
and for all points. x in rect and rect.contains(x) are equivalent.
"
9448,source/pymupdf.pdf,"Parameters
"
9449,source/pymupdf.pdf,"x (rect_like or point_like.) – the object to check.
"
9450,source/pymupdf.pdf,"Return type
"
9451,source/pymupdf.pdf,"bool
"
9452,source/pymupdf.pdf,"intersects(r)
"
9453,source/pymupdf.pdf,"Checks whether the rectangle and a rect_like “r” contain a common non-empty Rect. This will always
be False if either is infinite or empty.
"
9454,source/pymupdf.pdf,"Parameters
"
9455,source/pymupdf.pdf,"r (rect_like) – the rectangle to check.
"
9456,source/pymupdf.pdf,"Return type
"
9457,source/pymupdf.pdf,"bool
"
9458,source/pymupdf.pdf,"torect(rect)
"
9459,source/pymupdf.pdf,"• New in version 1.19.3
"
9460,source/pymupdf.pdf,"Compute the matrix which transforms this rectangle to a given one.
"
9461,source/pymupdf.pdf,"19.18. Rect
335
"
9462,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9463,source/pymupdf.pdf,"Parameters
"
9464,source/pymupdf.pdf,"rect (rect_like) – the target rectangle. Must not be empty or infinite.
"
9465,source/pymupdf.pdf,"Return type
"
9466,source/pymupdf.pdf,"Matrix
"
9467,source/pymupdf.pdf,"Returns
"
9468,source/pymupdf.pdf,"a matrix mat such that self * mat = rect. Can for example be used to transform
between the page and the pixmap coordinates. See an example use here How to Use
Pixmaps: Checking Text Visibility.
"
9469,source/pymupdf.pdf,"morph(fixpoint, matrix)
"
9470,source/pymupdf.pdf,"• New in version 1.17.0
"
9471,source/pymupdf.pdf,"Return a new quad after applying a matrix to the rectangle using the fixed point fixpoint.
"
9472,source/pymupdf.pdf,"Parameters
"
9473,source/pymupdf.pdf,"• fixpoint (point_like) – the fixed point.
"
9474,source/pymupdf.pdf,"• matrix (matrix_like) – the matrix.
"
9475,source/pymupdf.pdf,"Returns
"
9476,source/pymupdf.pdf,"a new Quad. This a wrapper for the same-named quad method. If infinite, the infinite
quad is returned.
"
9477,source/pymupdf.pdf,"norm()
"
9478,source/pymupdf.pdf,"• New in version 1.16.0
"
9479,source/pymupdf.pdf,"Return the Euclidean norm of the rectangle treated as a vector of four numbers.
"
9480,source/pymupdf.pdf,"normalize()
"
9481,source/pymupdf.pdf,"Replace the rectangle with its valid version. This is done by shuffling the rectangle corners. After com-
pletion of this method, the bottom right corner will indeed be south-eastern to the top left one (but may
still be empty).
"
9482,source/pymupdf.pdf,"irect
"
9483,source/pymupdf.pdf,"Equals result of method round().
"
9484,source/pymupdf.pdf,"top_left
"
9485,source/pymupdf.pdf,"tl
"
9486,source/pymupdf.pdf,"Equals Point(x0, y0).
"
9487,source/pymupdf.pdf,"Type
"
9488,source/pymupdf.pdf,"Point
"
9489,source/pymupdf.pdf,"top_right
"
9490,source/pymupdf.pdf,"tr
"
9491,source/pymupdf.pdf,"Equals Point(x1, y0).
"
9492,source/pymupdf.pdf,"Type
"
9493,source/pymupdf.pdf,"Point
"
9494,source/pymupdf.pdf,"bottom_left
"
9495,source/pymupdf.pdf,"bl
"
9496,source/pymupdf.pdf,"Equals Point(x0, y1).
"
9497,source/pymupdf.pdf,"336
Chapter 19. Classes
"
9498,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9499,source/pymupdf.pdf,"Type
"
9500,source/pymupdf.pdf,"Point
"
9501,source/pymupdf.pdf,"bottom_right
"
9502,source/pymupdf.pdf,"br
"
9503,source/pymupdf.pdf,"Equals Point(x1, y1).
"
9504,source/pymupdf.pdf,"Type
"
9505,source/pymupdf.pdf,"Point
"
9506,source/pymupdf.pdf,"quad
"
9507,source/pymupdf.pdf,"The quadrilateral Quad(rect.tl, rect.tr, rect.bl, rect.br).
"
9508,source/pymupdf.pdf,"Type
"
9509,source/pymupdf.pdf,"Quad
"
9510,source/pymupdf.pdf,"width
"
9511,source/pymupdf.pdf,"Width of the rectangle. Equals max(x1 - x0, 0).
"
9512,source/pymupdf.pdf,"Return type
"
9513,source/pymupdf.pdf,"float
"
9514,source/pymupdf.pdf,"height
"
9515,source/pymupdf.pdf,"Height of the rectangle. Equals max(y1 - y0, 0).
"
9516,source/pymupdf.pdf,"Return type
"
9517,source/pymupdf.pdf,"float
"
9518,source/pymupdf.pdf,"x0
"
9519,source/pymupdf.pdf,"X-coordinate of the left corners.
"
9520,source/pymupdf.pdf,"Type
"
9521,source/pymupdf.pdf,"float
"
9522,source/pymupdf.pdf,"y0
"
9523,source/pymupdf.pdf,"Y-coordinate of the top corners.
"
9524,source/pymupdf.pdf,"Type
"
9525,source/pymupdf.pdf,"float
"
9526,source/pymupdf.pdf,"x1
"
9527,source/pymupdf.pdf,"X-coordinate of the right corners.
"
9528,source/pymupdf.pdf,"Type
"
9529,source/pymupdf.pdf,"float
"
9530,source/pymupdf.pdf,"y1
"
9531,source/pymupdf.pdf,"Y-coordinate of the bottom corners.
"
9532,source/pymupdf.pdf,"Type
"
9533,source/pymupdf.pdf,"float
"
9534,source/pymupdf.pdf,"is_infinite
"
9535,source/pymupdf.pdf,"True if this is the infinite rectangle.
"
9536,source/pymupdf.pdf,"Type
"
9537,source/pymupdf.pdf,"bool
"
9538,source/pymupdf.pdf,"19.18. Rect
337
"
9539,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9540,source/pymupdf.pdf,"is_empty
"
9541,source/pymupdf.pdf,"True if rectangle is empty.
"
9542,source/pymupdf.pdf,"Type
"
9543,source/pymupdf.pdf,"bool
"
9544,source/pymupdf.pdf,"is_valid
"
9545,source/pymupdf.pdf,"True if rectangle is valid.
"
9546,source/pymupdf.pdf,"Type
"
9547,source/pymupdf.pdf,"bool
"
9548,source/pymupdf.pdf,"Note:
"
9549,source/pymupdf.pdf,"• This class adheres to the Python sequence protocol, so components can be accessed via their index, too. Also
refer to Using Python Sequences as Arguments in PyMuPDF.
"
9550,source/pymupdf.pdf,"• Rectangles can be used with arithmetic operators – see chapter Operator Algebra for Geometry Objects.
"
9551,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
9552,source/pymupdf.pdf,"19.19 Shape
"
9553,source/pymupdf.pdf,"This class allows creating interconnected graphical elements on a PDF page. Its methods have the same meaning and
name as the corresponding Page methods.
"
9554,source/pymupdf.pdf,"In fact, each Page draw method is just a convenience wrapper for (1) one shape draw method, (2) the Shape.finish()
method, and (3) the Shape.commit() method. For page text insertion, only the Shape.commit() method is invoked.
If many draw and text operations are executed for a page, you should always consider using a Shape object.
"
9555,source/pymupdf.pdf,"Several draw methods can be executed in a row and each one of them will contribute to one drawing. Once the drawing is
complete, the Shape.finish() method must be invoked to apply color, dashing, width, morphing and other attributes.
"
9556,source/pymupdf.pdf,"Draw methods of this class (and Shape.insert_textbox()) are logging the area they are covering in a rectangle
(Shape.rect). This property can for instance be used to set Page.cropbox_position.
"
9557,source/pymupdf.pdf,"Text insertions Shape.insert_text() and Shape.insert_textbox() implicitly execute a “finish” and therefore
only require Shape.commit() to become effective. As a consequence, both include parameters for controlling prop-
erties like colors, etc.
"
9558,source/pymupdf.pdf,"338
Chapter 19. Classes
"
9559,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9560,source/pymupdf.pdf,"Method / Attribute
Description
"
9561,source/pymupdf.pdf,"Shape.commit()
update the page’s contents
"
9562,source/pymupdf.pdf,"Shape.draw_bezier()
draw a cubic Bezier curve
"
9563,source/pymupdf.pdf,"Shape.draw_circle()
draw a circle around a point
"
9564,source/pymupdf.pdf,"Shape.draw_curve()
draw a cubic Bezier using one helper point
"
9565,source/pymupdf.pdf,"Shape.draw_line()
draw a line
"
9566,source/pymupdf.pdf,"Shape.draw_oval()
draw an ellipse
"
9567,source/pymupdf.pdf,"Shape.draw_polyline()
connect a sequence of points
"
9568,source/pymupdf.pdf,"Shape.draw_quad()
draw a quadrilateral
"
9569,source/pymupdf.pdf,"Shape.draw_rect()
draw a rectangle
"
9570,source/pymupdf.pdf,"Shape.draw_sector()
draw a circular sector or piece of pie
"
9571,source/pymupdf.pdf,"Shape.draw_squiggle()
draw a squiggly line
"
9572,source/pymupdf.pdf,"Shape.draw_zigzag()
draw a zigzag line
"
9573,source/pymupdf.pdf,"Shape.finish()
finish a set of draw commands
"
9574,source/pymupdf.pdf,"Shape.insert_text()
insert text lines
"
9575,source/pymupdf.pdf,"Shape.insert_textbox()
fit text into a rectangle
"
9576,source/pymupdf.pdf,"Shape.doc
stores the page’s document
"
9577,source/pymupdf.pdf,"Shape.draw_cont
draw commands since last Shape.finish()
"
9578,source/pymupdf.pdf,"Shape.height
stores the page’s height
"
9579,source/pymupdf.pdf,"Shape.lastPoint
stores the current point
"
9580,source/pymupdf.pdf,"Shape.page
stores the owning page
"
9581,source/pymupdf.pdf,"Shape.rect
rectangle surrounding drawings
"
9582,source/pymupdf.pdf,"Shape.text_cont
accumulated text insertions
"
9583,source/pymupdf.pdf,"Shape.totalcont
accumulated string to be stored in contents
"
9584,source/pymupdf.pdf,"Shape.width
stores the page’s width
"
9585,source/pymupdf.pdf,"Class API
"
9586,source/pymupdf.pdf,"class Shape
"
9587,source/pymupdf.pdf,"__init__(self, page)
"
9588,source/pymupdf.pdf,"Create a new drawing. During importing PyMuPDF, the fitz.Page object is being given the convenience
method new_shape() to construct a Shape object. During instantiation, a check will be made whether we
do have a PDF page. An exception is otherwise raised.
"
9589,source/pymupdf.pdf,"Parameters
"
9590,source/pymupdf.pdf,"page (Page) – an existing page of a PDF document.
"
9591,source/pymupdf.pdf,"draw_line(p1, p2)
"
9592,source/pymupdf.pdf,"Draw a line from point_like objects p1 to p2.
"
9593,source/pymupdf.pdf,"Parameters
"
9594,source/pymupdf.pdf,"• p1 (point_like) – starting point
"
9595,source/pymupdf.pdf,"• p2 (point_like) – end point
"
9596,source/pymupdf.pdf,"Return type
"
9597,source/pymupdf.pdf,"Point
"
9598,source/pymupdf.pdf,"Returns
"
9599,source/pymupdf.pdf,"the end point, p2.
"
9600,source/pymupdf.pdf,"draw_squiggle(p1, p2, breadth=2)
"
9601,source/pymupdf.pdf,"Draw a squiggly (wavy, undulated) line from point_like objects p1 to p2. An integer number of full
wave periods will always be drawn, one period having a length of 4 * breadth. The breadth parameter will
"
9602,source/pymupdf.pdf,"19.19. Shape
339
"
9603,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9604,source/pymupdf.pdf,"be adjusted as necessary to meet this condition. The drawn line will always turn “left” when leaving p1
and always join p2 from the “right”.
"
9605,source/pymupdf.pdf,"Parameters
"
9606,source/pymupdf.pdf,"• p1 (point_like) – starting point
"
9607,source/pymupdf.pdf,"• p2 (point_like) – end point
"
9608,source/pymupdf.pdf,"• breadth (float) – the amplitude of each wave. The condition 2 * breadth <
abs(p2 - p1) must be true to fit in at least one wave. See the following picture,
which shows two points connected by one full period.
"
9609,source/pymupdf.pdf,"Return type
"
9610,source/pymupdf.pdf,"Point
"
9611,source/pymupdf.pdf,"Returns
"
9612,source/pymupdf.pdf,"the end point, p2.
"
9613,source/pymupdf.pdf,"Here is an example of three connected lines, forming a closed, filled triangle. Little arrows indicate the
stroking direction.
"
9614,source/pymupdf.pdf,">>> import fitz
>>> doc=fitz.open()
>>> page=doc.new_page()
>>> r = fitz.Rect(100, 100, 300, 200)
>>> shape=page.new_shape()
>>> shape.draw_squiggle(r.tl, r.tr)
>>> shape.draw_squiggle(r.tr, r.br)
>>> shape.draw_squiggle(r.br, r.tl)
>>> shape.finish(color=(0, 0, 1), fill=(1, 1, 0))
>>> shape.commit()
>>> doc.save(""x.pdf"")
"
9615,source/pymupdf.pdf,"340
Chapter 19. Classes
"
9616,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9617,source/pymupdf.pdf,"Note: Waves drawn are not trigonometric (sine / cosine). If you need that, have a look at draw.py.
"
9618,source/pymupdf.pdf,"draw_zigzag(p1, p2, breadth=2)
"
9619,source/pymupdf.pdf,"Draw a zigzag line from point_like objects p1 to p2.
Otherwise works exactly like Shape.
draw_squiggle().
"
9620,source/pymupdf.pdf,"Parameters
"
9621,source/pymupdf.pdf,"• p1 (point_like) – starting point
"
9622,source/pymupdf.pdf,"• p2 (point_like) – end point
"
9623,source/pymupdf.pdf,"• breadth (float) – the amplitude of the movement. The condition 2 * breadth <
abs(p2 - p1) must be true to fit in at least one period.
"
9624,source/pymupdf.pdf,"Return type
"
9625,source/pymupdf.pdf,"Point
"
9626,source/pymupdf.pdf,"Returns
"
9627,source/pymupdf.pdf,"the end point, p2.
"
9628,source/pymupdf.pdf,"draw_polyline(points)
"
9629,source/pymupdf.pdf,"Draw several connected lines between points contained in the sequence points. This can be used for cre-
ating arbitrary polygons by setting the last item equal to the first one.
"
9630,source/pymupdf.pdf,"Parameters
"
9631,source/pymupdf.pdf,"points (sequence) – a sequence of point_like objects. Its length must at least be 2
(in which case it is equivalent to draw_line()).
"
9632,source/pymupdf.pdf,"Return type
"
9633,source/pymupdf.pdf,"Point
"
9634,source/pymupdf.pdf,"Returns
"
9635,source/pymupdf.pdf,"points[-1] – the last point in the argument sequence.
"
9636,source/pymupdf.pdf,"draw_bezier(p1, p2, p3, p4)
"
9637,source/pymupdf.pdf,"Draw a standard cubic Bézier curve from p1 to p4, using p2 and p3 as control points.
"
9638,source/pymupdf.pdf,"19.19. Shape
341
"
9639,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9640,source/pymupdf.pdf,"All arguments are point_like s.
"
9641,source/pymupdf.pdf,"Return type
"
9642,source/pymupdf.pdf,"Point
"
9643,source/pymupdf.pdf,"Returns
"
9644,source/pymupdf.pdf,"the end point, p4.
"
9645,source/pymupdf.pdf,"Note: The points do not need to be different – experiment a bit with some of them being equal!
"
9646,source/pymupdf.pdf,"Example:
"
9647,source/pymupdf.pdf,"draw_oval(tetra)
"
9648,source/pymupdf.pdf,"Draw an “ellipse” inside the given tetragon (quadrilateral). If it is a square, a regular circle is drawn, a
general rectangle will result in an ellipse. If a quadrilateral is used instead, a plethora of shapes can be the
result.
"
9649,source/pymupdf.pdf,"The drawing starts and ends at the middle point of the line bottom-left -> top-left corners in an
anti-clockwise movement.
"
9650,source/pymupdf.pdf,"Parameters
"
9651,source/pymupdf.pdf,"tetra (rect_like,quad_like) – rect_like or quad_like.
"
9652,source/pymupdf.pdf,"Changed in version 1.14.5: Quads are now also supported.
"
9653,source/pymupdf.pdf,"Return type
"
9654,source/pymupdf.pdf,"Point
"
9655,source/pymupdf.pdf,"Returns
"
9656,source/pymupdf.pdf,"the middle point of line rect.bl -> rect.tl, or resp. quad.ll -> quad.ul. Look
at just a few examples here, or at the quad-show?.py scripts in the PyMuPDF-Utilities
repository.
"
9657,source/pymupdf.pdf,"342
Chapter 19. Classes
"
9658,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9659,source/pymupdf.pdf,"draw_circle(center, radius)
"
9660,source/pymupdf.pdf,"Draw a circle given its center and radius. The drawing starts and ends at point center - (radius, 0)
in an anti-clockwise movement. This point is the middle of the enclosing square’s left side.
"
9661,source/pymupdf.pdf,"This is a shortcut for draw_sector(center, start, 360, fullSector=False). To draw the same
circle in a clockwise movement, use -360 as degrees.
"
9662,source/pymupdf.pdf,"Parameters
"
9663,source/pymupdf.pdf,"• center (point_like) – the center of the circle.
"
9664,source/pymupdf.pdf,"• radius (float) – the radius of the circle. Must be positive.
"
9665,source/pymupdf.pdf,"Return type
"
9666,source/pymupdf.pdf,"Point
"
9667,source/pymupdf.pdf,"Returns
"
9668,source/pymupdf.pdf,"Point(center.x - radius, center.y).
"
9669,source/pymupdf.pdf,"draw_curve(p1, p2, p3)
"
9670,source/pymupdf.pdf,"A special case of draw_bezier(): Draw a cubic Bezier curve from p1 to p3. On each of the two lines p1 ->
p2 and p3 -> p2 one control point is generated. Both control points will therefore be on the same side
of the line p1 -> p3. This guaranties that the curve’s curvature does not change its sign. If the lines to
p2 intersect with an angle of 90 degrees, then the resulting curve is a quarter ellipse (resp. quarter circle,
if of same length).
"
9671,source/pymupdf.pdf,"All arguments are point_like.
"
9672,source/pymupdf.pdf,"Return type
"
9673,source/pymupdf.pdf,"Point
"
9674,source/pymupdf.pdf,"Returns
"
9675,source/pymupdf.pdf,"the
end
point,
p3.
The
following
is
a
filled
quarter
el-
lipse
segment.
The
yellow
area
is
oriented
clockwise:
"
9676,source/pymupdf.pdf,"draw_sector(center, point, angle, fullSector=True)
"
9677,source/pymupdf.pdf,"Draw a circular sector, optionally connecting the arc to the circle’s center (like a piece of pie).
"
9678,source/pymupdf.pdf,"Parameters
"
9679,source/pymupdf.pdf,"19.19. Shape
343
"
9680,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9681,source/pymupdf.pdf,"• center (point_like) – the center of the circle.
"
9682,source/pymupdf.pdf,"• point (point_like) – one of the two end points of the pie’s arc segment. The
other one is calculated from the angle.
"
9683,source/pymupdf.pdf,"• angle (float) – the angle of the sector in degrees. Used to calculate the other end
point of the arc. Depending on its sign, the arc is drawn anti-clockwise (positive)
or clockwise.
"
9684,source/pymupdf.pdf,"• fullSector (bool) – whether to draw connecting lines from the ends of the arc to
the circle center. If a fill color is specified, the full “pie” is colored, otherwise just
the sector.
"
9685,source/pymupdf.pdf,"Return type
"
9686,source/pymupdf.pdf,"Point
"
9687,source/pymupdf.pdf,"Returns
"
9688,source/pymupdf.pdf,"the other end point of the arc.
Can be used as starting point for a fol-
lowing
invocation
to
create
logically
connected
pies
charts.
Examples:
"
9689,source/pymupdf.pdf,"draw_rect(rect, *, radius=None)
"
9690,source/pymupdf.pdf,"• Changed in v1.22.0: Added parameter radius.
"
9691,source/pymupdf.pdf,"Draw a rectangle. The drawing starts and ends at the top-left corner in an anti-clockwise movement.
"
9692,source/pymupdf.pdf,"Parameters
"
9693,source/pymupdf.pdf,"• rect (rect_like) – where to put the rectangle on the page.
"
9694,source/pymupdf.pdf,"• radius (multiple) – draw rounded rectangle corners. If not None, specifies the
radius of the curvature as a percentage of a rectangle side length. This must one
or (a tuple of) two floats 0 < radius <= 0.5, where 0.5 corresponds to 50% of
the respective side. If a float, the radius of the curvature is computed as radius
* min(width, height), drawing the corner’s perimeter as a quarter circle. If a
tuple (rx, ry) is given, then the curvature is asymmetric with respect to the hor-
izontal and vertical directions. A value of radius=(0.5, 0.5) draws an ellipse.
"
9695,source/pymupdf.pdf,"Return type
"
9696,source/pymupdf.pdf,"Point
"
9697,source/pymupdf.pdf,"Returns
"
9698,source/pymupdf.pdf,"top-left corner of the rectangle.
"
9699,source/pymupdf.pdf,"draw_quad(quad)
"
9700,source/pymupdf.pdf,"Draw a quadrilateral. The drawing starts and ends at the top-left corner (Quad.ul) in an anti-clockwise
movement. It is a shortcut of Shape.draw_polyline() with the argument (ul, ll, lr, ur, ul).
"
9701,source/pymupdf.pdf,"Parameters
"
9702,source/pymupdf.pdf,"quad (quad_like) – where to put the tetragon on the page.
"
9703,source/pymupdf.pdf,"344
Chapter 19. Classes
"
9704,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9705,source/pymupdf.pdf,"Return type
"
9706,source/pymupdf.pdf,"Point
"
9707,source/pymupdf.pdf,"Returns
"
9708,source/pymupdf.pdf,"Quad.ul.
"
9709,source/pymupdf.pdf,"finish(width=1, color=None, fill=None, lineCap=0, lineJoin=0, dashes=None, closePath=True,
even_odd=False, morph=(fixpoint, matrix), stroke_opacity=1, fill_opacity=1, oc=0)
"
9710,source/pymupdf.pdf,"Finish a set of draw*() methods by applying Common Parameters to all of them.
"
9711,source/pymupdf.pdf,"It has no effect on Shape.insert_text() and Shape.insert_textbox().
"
9712,source/pymupdf.pdf,"The method also supports morphing the compound drawing using Point fixpoint and Matrix matrix.
"
9713,source/pymupdf.pdf,"Parameters
"
9714,source/pymupdf.pdf,"• morph (sequence) – morph the text or the compound drawing around some arbi-
trary Point fixpoint by applying Matrix matrix to it. This implies that fixpoint is a
fixed point of this operation: it will not change its position. Default is no morphing
(None). The matrix can contain any values in its first 4 components, matrix.e ==
matrix.f == 0 must be true, however. This means that any combination of scaling,
shearing, rotating, flipping, etc. is possible, but translations are not.
"
9715,source/pymupdf.pdf,"• stroke_opacity (float) – (new in v1.18.1) set transparency for stroke colors.
Value < 0 or > 1 will be ignored. Default is 1 (intransparent).
"
9716,source/pymupdf.pdf,"• fill_opacity (float) – (new in v1.18.1) set transparency for fill colors. Default
is 1 (intransparent).
"
9717,source/pymupdf.pdf,"• even_odd (bool) – request the “even-odd rule” for filling operations. Default
is False, so that the “nonzero winding number rule” is used. These rules are
alternative methods to apply the fill color where areas overlap. Only with fairly
complex shapes a different behavior is to be expected with these rules. For an in-
depth explanation, see Adobe PDF References, pp. 137 ff. Here is an example to
demonstrate the difference.
"
9718,source/pymupdf.pdf,"• oc (int) – (new in v1.18.4) the xref number of an OCG or OCMD to make this
drawing conditionally displayable.
"
9719,source/pymupdf.pdf,"19.19. Shape
345
"
9720,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9721,source/pymupdf.pdf,"Note: For each pixel in a shape, the following will happen:
"
9722,source/pymupdf.pdf,"1. Rule “even-odd” counts, how many areas contain the pixel. If this count is odd, the pixel is regarded
inside the shape, if it is even, the pixel is outside.
"
9723,source/pymupdf.pdf,"2. The default rule “nonzero winding” in addition looks at the “orientation” of each area containing
the pixel: it adds 1 if an area is drawn anti-clockwise and it subtracts 1 for clockwise areas. If the
result is zero, the pixel is regarded outside, pixels with a non-zero count are inside the shape.
"
9724,source/pymupdf.pdf,"Of the four shapes in above image, the top two each show three circles drawn in standard manner (anti-
clockwise, look at the arrows). The lower two shapes contain one (the top-left) circle drawn clockwise.
As can be seen, area orientation is irrelevant for the right column (even-odd rule).
"
9725,source/pymupdf.pdf,"insert_text(point, text, fontsize=11, fontname='helv', fontfile=None, set_simple=False,
encoding=TEXT_ENCODING_LATIN, color=None, lineheight=None, fill=None,
render_mode=0, border_width=1, rotate=0, morph=None, stroke_opacity=1, fill_opacity=1,
oc=0)
"
9726,source/pymupdf.pdf,"Insert text lines start at point.
"
9727,source/pymupdf.pdf,"346
Chapter 19. Classes
"
9728,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9729,source/pymupdf.pdf,"Parameters
"
9730,source/pymupdf.pdf,"• point (point_like) – the bottom-left position of the first character of text
in pixels.
It is important to understand, how this works in conjunction with
the rotate parameter.
Please have a look at the following picture.
The small
red dots indicate the positions of point in each of the four possible cases.
"
9731,source/pymupdf.pdf,"• text (str/sequence) – the text to be inserted. May be specified as either a string
type or as a sequence type. For sequences, or strings containing line breaks n,
several lines will be inserted. No care will be taken if lines are too wide, but the
number of inserted lines will be limited by “vertical” space on the page (in the
sense of reading direction as established by the rotate parameter). Any rest of text
is discarded – the return code however contains the number of inserted lines.
"
9732,source/pymupdf.pdf,"• lineheight (float) – a factor to override the line height calculated from font
properties. If not None, a line height of fontsize * lineheight will be used.
"
9733,source/pymupdf.pdf,"• stroke_opacity (float) – (new in v1.18.1) set transparency for stroke colors (the
border line of a character). Only 0 <= value <= 1 will be considered. Default
is 1 (intransparent).
"
9734,source/pymupdf.pdf,"• fill_opacity (float) – (new in v1.18.1) set transparency for fill colors. Default
is 1 (intransparent). Use this value to control transparency of the text color. Stroke
opacity only affects the border line of characters.
"
9735,source/pymupdf.pdf,"• rotate (int) – determines whether to rotate the text. Acceptable values are multi-
ples of 90 degrees. Default is 0 (no rotation), meaning horizontal text lines oriented
from left to right. 180 means text is shown upside down from right to left. 90
means anti-clockwise rotation, text running upwards. 270 (or -90) means clock-
wise rotation, text running downwards. In any case, point specifies the bottom-left
coordinates of the first character’s rectangle. Multiple lines, if present, always fol-
low the reading direction established by this parameter. So line 2 is located above
line 1 in case of rotate = 180, etc.
"
9736,source/pymupdf.pdf,"• oc (int) – (new in v1.18.4) the xref number of an OCG or OCMD to make this text
conditionally displayable.
"
9737,source/pymupdf.pdf,"Return type
"
9738,source/pymupdf.pdf,"int
"
9739,source/pymupdf.pdf,"Returns
"
9740,source/pymupdf.pdf,"number of lines inserted.
"
9741,source/pymupdf.pdf,"For a description of the other parameters see Common Parameters.
"
9742,source/pymupdf.pdf,"19.19. Shape
347
"
9743,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9744,source/pymupdf.pdf,"insert_textbox(rect, buffer, fontsize=11, fontname='helv', fontfile=None, set_simple=False,
encoding=TEXT_ENCODING_LATIN, color=None, fill=None, render_mode=0,
border_width=1, expandtabs=8, align=TEXT_ALIGN_LEFT, rotate=0, lineheight=None,
morph=None, stroke_opacity=1, fill_opacity=1, oc=0)
"
9745,source/pymupdf.pdf,"PDF only: Insert text into the specified rectangle. The text will be split into lines and words and then filled
into the available space, starting from one of the four rectangle corners, which depends on rotate. Line
feeds and multiple space will be respected.
"
9746,source/pymupdf.pdf,"Parameters
"
9747,source/pymupdf.pdf,"• rect (rect_like) – the area to use. It must be finite and not empty.
"
9748,source/pymupdf.pdf,"• buffer (str/sequence) – the text to be inserted. Must be specified as a string or
a sequence of strings. Line breaks are respected also when occurring in a sequence
entry.
"
9749,source/pymupdf.pdf,"• align (int) – align each text line. Default is 0 (left). Centered, right and justified
are the other supported options, see Text Alignment. Please note that the effect of
parameter value TEXT_ALIGN_JUSTIFY is only achievable with “simple” (single-
byte) fonts (including the PDF Base 14 Fonts).
"
9750,source/pymupdf.pdf,"• lineheight (float) – a factor to override the line height calculated from font
properties. If not None, a line height of fontsize * lineheight will be used.
"
9751,source/pymupdf.pdf,"arg int expandtabs
"
9752,source/pymupdf.pdf,"controls
handling
of
tab
characters
\\t
using
the
string.
expandtabs() method per each line.
"
9753,source/pymupdf.pdf,"• stroke_opacity (float) – (new in v1.18.1) set transparency for stroke colors.
Negative values and values > 1 will be ignored. Default is 1 (intransparent).
"
9754,source/pymupdf.pdf,"• fill_opacity (float) – (new in v1.18.1) set transparency for fill colors. Default
is 1 (intransparent). Use this value to control transparency of the text color. Stroke
opacity only affects the border line of characters.
"
9755,source/pymupdf.pdf,"• rotate (int) – requests text to be rotated in the rectangle. This value must be a
multiple of 90 degrees. Default is 0 (no rotation). Effectively, the four values 0, 90,
180 and 270 (= -90) are processed, each causing the text to start in a different rect-
angle corner. Bottom-left is 90, bottom-right is 180, and -90 / 270 is top-right.
See the example how text is filled in a rectangle. This argument takes precedence
over morphing. See the second example, which shows text first rotated left by 90
degrees and then the whole rectangle rotated clockwise around is lower left corner.
"
9756,source/pymupdf.pdf,"• oc (int) – (new in v1.18.4) the xref number of an OCG or OCMD to make this text
conditionally displayable.
"
9757,source/pymupdf.pdf,"Return type
"
9758,source/pymupdf.pdf,"float
"
9759,source/pymupdf.pdf,"Returns
"
9760,source/pymupdf.pdf,"If positive or zero: successful execution. The value returned is the unused rectangle
line space in pixels. This may safely be ignored – or be used to optimize the rectangle,
position subsequent items, etc.
"
9761,source/pymupdf.pdf,"If negative: no execution. The value returned is the space deficit to store text lines.
Enlarge rectangle, decrease fontsize, decrease text amount, etc.
"
9762,source/pymupdf.pdf,"348
Chapter 19. Classes
"
9763,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9764,source/pymupdf.pdf,"For a description of the other parameters see Common Parameters.
"
9765,source/pymupdf.pdf,"commit(overlay=True)
"
9766,source/pymupdf.pdf,"Update the page’s contents with the accumulated drawings, followed by any text insertions. If text over-
laps drawings, it will be written on top of the drawings.
"
9767,source/pymupdf.pdf,"Warning: Do not forget to execute this method:
"
9768,source/pymupdf.pdf,"If a shape is not committed, it will be ignored and the page will not be changed!
"
9769,source/pymupdf.pdf,"The method will reset attributes Shape.rect, lastPoint, draw_cont, text_cont and totalcont.
Afterwards, the shape object can be reused for the same page.
"
9770,source/pymupdf.pdf,"Parameters
"
9771,source/pymupdf.pdf,"overlay (bool) – determine whether to put content in foreground (default) or back-
ground. Relevant only, if the page already has a non-empty contents object.
"
9772,source/pymupdf.pdf,"———- Attributes ———-
"
9773,source/pymupdf.pdf,"doc
"
9774,source/pymupdf.pdf,"For reference only: the page’s document.
"
9775,source/pymupdf.pdf,"Type
"
9776,source/pymupdf.pdf,"Document
"
9777,source/pymupdf.pdf,"page
"
9778,source/pymupdf.pdf,"For reference only: the owning page.
"
9779,source/pymupdf.pdf,"Type
"
9780,source/pymupdf.pdf,"Page
"
9781,source/pymupdf.pdf,"19.19. Shape
349
"
9782,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9783,source/pymupdf.pdf,"height
"
9784,source/pymupdf.pdf,"Copy of the page’s height
"
9785,source/pymupdf.pdf,"Type
"
9786,source/pymupdf.pdf,"float
"
9787,source/pymupdf.pdf,"width
"
9788,source/pymupdf.pdf,"Copy of the page’s width.
"
9789,source/pymupdf.pdf,"Type
"
9790,source/pymupdf.pdf,"float
"
9791,source/pymupdf.pdf,"draw_cont
"
9792,source/pymupdf.pdf,"Accumulated command buffer for draw methods since last finish. Every finish method will append its
commands to Shape.totalcont.
"
9793,source/pymupdf.pdf,"Type
"
9794,source/pymupdf.pdf,"str
"
9795,source/pymupdf.pdf,"text_cont
"
9796,source/pymupdf.pdf,"Accumulated text buffer. All text insertions go here. This buffer will be appended to totalcont Shape.
commit(), so that text will never be covered by drawings in the same Shape.
"
9797,source/pymupdf.pdf,"Type
"
9798,source/pymupdf.pdf,"str
"
9799,source/pymupdf.pdf,"rect
"
9800,source/pymupdf.pdf,"Rectangle surrounding drawings. This attribute is at your disposal and may be changed at any time.
Its value is set to None when a shape is created or committed.
Every draw* method, and Shape.
insert_textbox() update this property (i.e. enlarge the rectangle as needed). Morphing operations,
however (Shape.finish(), Shape.insert_textbox()) are ignored.
"
9801,source/pymupdf.pdf,"A typical use of this attribute would be setting Page.cropbox_position to this value, when you are
creating shapes for later or external use. If you have not manipulated the attribute yourself, it should
reflect a rectangle that contains all drawings so far.
"
9802,source/pymupdf.pdf,"If you have used morphing and need a rectangle containing the morphed objects, use the following code:
"
9803,source/pymupdf.pdf,">>> # assuming ...
>>> morph = (point, matrix)
>>> # ... recalculate the shape rectangle like so:
>>> shape.rect = (shape.rect - fitz.Rect(point, point)) * ~matrix + fitz.
"
9804,source/pymupdf.pdf,"˓→Rect(point, point)
"
9805,source/pymupdf.pdf,"Type
"
9806,source/pymupdf.pdf,"Rect
"
9807,source/pymupdf.pdf,"totalcont
"
9808,source/pymupdf.pdf,"Total accumulated command buffer for draws and text insertions. This will be used by Shape.commit().
"
9809,source/pymupdf.pdf,"Type
"
9810,source/pymupdf.pdf,"str
"
9811,source/pymupdf.pdf,"lastPoint
"
9812,source/pymupdf.pdf,"For reference only: the current point of the drawing path. It is None at Shape creation and after each finish()
and commit().
"
9813,source/pymupdf.pdf,"Type
"
9814,source/pymupdf.pdf,"Point
"
9815,source/pymupdf.pdf,"350
Chapter 19. Classes
"
9816,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9817,source/pymupdf.pdf,"19.19.1 Usage
"
9818,source/pymupdf.pdf,"A drawing object is constructed by shape = page.new_shape(). After this, as many draw, finish and text insertions
methods as required may follow. Each sequence of draws must be finished before the drawing is committed. The
overall coding pattern looks like this:
"
9819,source/pymupdf.pdf,">>> shape = page.new_shape()
>>> shape.draw1(...)
>>> shape.draw2(...)
>>> ...
>>> shape.finish(width=..., color=..., fill=..., morph=...)
>>> shape.draw3(...)
>>> shape.draw4(...)
>>> ...
>>> shape.finish(width=..., color=..., fill=..., morph=...)
>>> ...
>>> shape.insert_text*
>>> ...
>>> shape.commit()
>>> ....
"
9820,source/pymupdf.pdf,"Note:
"
9821,source/pymupdf.pdf,"1. Each finish() combines the preceding draws into one logical shape, giving it common colors, line width, morph-
ing, etc. If closePath is specified, it will also connect the end point of the last draw with the starting point of the
first one.
"
9822,source/pymupdf.pdf,"2. To successfully create compound graphics, let each draw method use the end point of the previous one as its
starting point. In the above pseudo code, draw2 should hence use the returned Point of draw1 as its starting
point. Failing to do so, would automatically start a new path and finish() may not work as expected (but it won’t
complain either).
"
9823,source/pymupdf.pdf,"3. Text insertions may occur anywhere before the commit (they neither touch Shape.draw_cont nor Shape.
lastPoint). They are appended to Shape.totalcont directly, whereas draws will be appended by Shape.finish.
"
9824,source/pymupdf.pdf,"4. Each commit takes all text insertions and shapes and places them in foreground or background on the page – thus
providing a way to control graphical layers.
"
9825,source/pymupdf.pdf,"5. Only commit will update the page’s contents, the other methods are basically string manipulations.
"
9826,source/pymupdf.pdf,"19.19.2 Examples
"
9827,source/pymupdf.pdf,"1. Create a full circle of pieces of pie in different colors:
"
9828,source/pymupdf.pdf,"shape = page.new_shape()
# start a new shape
"
9829,source/pymupdf.pdf,"cols = (...)
# a sequence of RGB color triples
"
9830,source/pymupdf.pdf,"pieces = len(cols)
# number of pieces to draw
"
9831,source/pymupdf.pdf,"beta = 360. / pieces
# angle of each piece of pie
"
9832,source/pymupdf.pdf,"center = fitz.Point(...)
# center of the pie
"
9833,source/pymupdf.pdf,"p0 = fitz.Point(...)
# starting point
"
9834,source/pymupdf.pdf,"for i in range(pieces):
p0 = shape.draw_sector(center, p0, beta,
fullSector=True) # draw piece
"
9835,source/pymupdf.pdf,"(continues on next page)
"
9836,source/pymupdf.pdf,"19.19. Shape
351
"
9837,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9838,source/pymupdf.pdf,"(continued from previous page)
"
9839,source/pymupdf.pdf,"# now fill it but do not connect ends of the arc
shape.finish(fill=cols[i], closePath=False)
shape.commit()
# update the page
"
9840,source/pymupdf.pdf,"Here is an example for 5 colors:
"
9841,source/pymupdf.pdf,"2. Create a regular n-edged polygon (fill yellow, red border). We use draw_sector() only to calculate the points on
the circumference, and empty the draw command buffer again before drawing the polygon:
"
9842,source/pymupdf.pdf,"shape = page.new_shape() # start a new shape
beta = -360.0 / n
# our angle, drawn clockwise
"
9843,source/pymupdf.pdf,"center = fitz.Point(...)
# center of circle
"
9844,source/pymupdf.pdf,"p0 = fitz.Point(...)
# start here (1st edge)
"
9845,source/pymupdf.pdf,"points = [p0]
# store polygon edges
"
9846,source/pymupdf.pdf,"for i in range(n):
# calculate the edges
"
9847,source/pymupdf.pdf,"p0 = shape.draw_sector(center, p0, beta)
points.append(p0)
shape.draw_cont = """"
# do not draw the circle sectors
"
9848,source/pymupdf.pdf,"shape.draw_polyline(points)
# draw the polygon
"
9849,source/pymupdf.pdf,"shape.finish(color=(1,0,0), fill=(1,1,0), closePath=False)
shape.commit()
"
9850,source/pymupdf.pdf,"Here is the polygon for n = 7:
"
9851,source/pymupdf.pdf,"352
Chapter 19. Classes
"
9852,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9853,source/pymupdf.pdf,"19.19.3 Common Parameters
"
9854,source/pymupdf.pdf,"fontname (str)
"
9855,source/pymupdf.pdf,"In general, there are three options:
"
9856,source/pymupdf.pdf,"1. Use one of the standard PDF Base 14 Fonts. In this case, fontfile must not be specified and “Hel-
vetica” is used if this parameter is omitted, too.
"
9857,source/pymupdf.pdf,"2. Choose a font already in use by the page. Then specify its reference name prefixed with a slash “/”,
see example below.
"
9858,source/pymupdf.pdf,"3. Specify a font file present on your system. In this case choose an arbitrary, but new name for this
parameter (without “/” prefix).
"
9859,source/pymupdf.pdf,"If inserted text should re-use one of the page’s fonts, use its reference name appearing in Page.
get_fonts() like so:
"
9860,source/pymupdf.pdf,"Suppose the font list has the item [1024, 0, ‘Type1’, ‘NimbusMonL-Bold’, ‘R366’], then specify fontname
= “/R366”, fontfile = None to use font NimbusMonL-Bold.
"
9861,source/pymupdf.pdf,"fontfile (str)
"
9862,source/pymupdf.pdf,"File path of a font existing on your computer. If you specify fontfile, make sure you use a fontname not
occurring in the above list. This new font will be embedded in the PDF upon doc.save(). Similar to new
images, a font file will be embedded only once. A table of MD5 codes for the binary font contents is used
to ensure this.
"
9863,source/pymupdf.pdf,"set_simple (bool)
"
9864,source/pymupdf.pdf,"Fonts installed from files are installed as Type0 fonts by default. If you want to use 1-byte characters only,
set this to true. This setting cannot be reverted. Subsequent changes are ignored.
"
9865,source/pymupdf.pdf,"fontsize (float)
"
9866,source/pymupdf.pdf,"Font size of text, see: fontsize.
"
9867,source/pymupdf.pdf,"dashes (str)
"
9868,source/pymupdf.pdf,"Causes lines to be drawn dashed. The general format is ""[n m] p"" of (up to) 3 floats denoting pixel
lengths. n is the dash length, m (optional) is the subsequent gap length, and p (the “phase” - required,
even if 0!) specifies how many pixels should be skipped before the dashing starts. If m is omitted, it defaults
to n.
"
9869,source/pymupdf.pdf,"A continuous line (no dashes) is drawn with ""[] 0"" or None or """". Examples:
"
9870,source/pymupdf.pdf,"• Specifying ""[3 4] 0"" means dashes of 3 and gaps of 4 pixels following each other.
"
9871,source/pymupdf.pdf,"• ""[3 3] 0"" and ""[3] 0"" do the same thing.
"
9872,source/pymupdf.pdf,"For (the rather complex) details on how to achieve sophisticated dashing effects, see Adobe PDF Refer-
ences, page 217.
"
9873,source/pymupdf.pdf,"color / fill (list, tuple)
"
9874,source/pymupdf.pdf,"19.19. Shape
353
"
9875,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9876,source/pymupdf.pdf,"Stroke and fill colors can be specified as tuples or list of of floats from 0 to 1. These sequences must have a
length of 1 (GRAY), 3 (RGB) or 4 (CMYK). For GRAY colorspace, a single float instead of the unwieldy
(float,) or [float] is also accepted. Accept (default) or use None to not use the parameter.
"
9877,source/pymupdf.pdf,"To simplify color specification, method getColor() in fitz.utils may be used to get predefined RGB color
triples by name. It accepts a string as the name of the color and returns the corresponding triple. The
method knows over 540 color names – see section Color Database.
"
9878,source/pymupdf.pdf,"Please note that the term color usually means “stroke” color when used in conjunction with fill color.
"
9879,source/pymupdf.pdf,"If letting default a color parameter to None, then no resp. color selection command will be generated. If fill
and color are both None, then the drawing will contain no color specification. But it will still be “stroked”,
which causes PDF’s default color “black” be used by Adobe Acrobat and all other viewers.
"
9880,source/pymupdf.pdf,"stroke_opacity / fill_opacity (floats)
"
9881,source/pymupdf.pdf,"Both values are floats in range [0, 1]. Negative values or values > 1 will ignored (in most cases). Both set
the transparency such that a value 0.5 corresponds to 50% transparency, 0 means invisible and 1 means
intransparent. For e.g. a rectangle the stroke opacity applies to its border and fill opacity to its interior.
"
9882,source/pymupdf.pdf,"For text insertions (Shape.insert_text() and Shape.insert_textbox()), use fill_opacity for the
text. At first sight this seems surprising, but it becomes obvious when you look further down to ren-
der_mode: fill_opacity applies to the yellow and stroke_opacity applies to the blue color.
"
9883,source/pymupdf.pdf,"border_width (float)
"
9884,source/pymupdf.pdf,"Set the border width for text insertions. New in v1.14.9. Relevant only if the render mode argument is
used with a value greater zero.
"
9885,source/pymupdf.pdf,"render_mode (int)
"
9886,source/pymupdf.pdf,"New in version 1.14.9: Integer in range(8) which controls the text appearance (Shape.insert_text()
and Shape.insert_textbox()). See page 246 in Adobe PDF References. New in v1.14.9. These
methods now also differentiate between fill and stroke colors.
"
9887,source/pymupdf.pdf,"• For default 0, only the text fill color is used to paint the text. For backward compatibility, using the
color parameter instead also works.
"
9888,source/pymupdf.pdf,"• For render mode 1, only the border of each glyph (i.e. text character) is drawn with a thickness
as set in argument border_width. The color chosen in the color argument is taken for this, the fill
parameter is ignored.
"
9889,source/pymupdf.pdf,"• For render mode 2, the glyphs are filled and stroked, using both color parameters and the specified
border width. You can use this value to simulate bold text without using another font: choose the
same value for fill and color and an appropriate value for border_width.
"
9890,source/pymupdf.pdf,"• For render mode 3, the glyphs are neither stroked nor filled: the text becomes invisible.
"
9891,source/pymupdf.pdf,"The following examples use border_width=0.3, together with a fontsize of 15. Stroke color is blue and fill
color is some yellow.
"
9892,source/pymupdf.pdf,"354
Chapter 19. Classes
"
9893,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9894,source/pymupdf.pdf,"overlay (bool)
"
9895,source/pymupdf.pdf,"Causes the item to appear in foreground (default) or background.
"
9896,source/pymupdf.pdf,"morph (sequence)
"
9897,source/pymupdf.pdf,"Causes “morphing” of either a shape, created by the draw*() methods, or the text inserted by page methods
insert_textbox() / insert_text(). If not None, it must be a pair (fixpoint, matrix), where fixpoint is a Point
and matrix is a Matrix. The matrix can be anything except translations, i.e. matrix.e == matrix.f == 0
must be true. The point is used as a fixed point for the matrix operation. For example, if matrix is a rotation
or scaling, then fixpoint is its center. Similarly, if matrix is a left-right or up-down flip, then the mirroring
axis will be the vertical, respectively horizontal line going through fixpoint, etc.
"
9898,source/pymupdf.pdf,"Note:
Several methods contain checks whether the to be inserted items will actually fit into the page
(like Shape.insert_text(), or Shape.draw_rect()). For the result of a morphing operation there is
however no such guaranty: this is entirely the programmer’s responsibility.
"
9899,source/pymupdf.pdf,"lineCap (deprecated: “roundCap”) (int)
"
9900,source/pymupdf.pdf,"Controls the look of line ends. The default value 0 lets each line end at exactly the given coordinate in a
sharp edge. A value of 1 adds a semi-circle to the ends, whose center is the end point and whose diameter
is the line width. Value 2 adds a semi-square with an edge length of line width and a center of the line end.
"
9901,source/pymupdf.pdf,"Changed in version 1.14.15
"
9902,source/pymupdf.pdf,"lineJoin (int)
"
9903,source/pymupdf.pdf,"New in version 1.14.15: Controls the way how line connections look like. This may be either as a sharp
edge (0), a rounded join (1), or a cut-off edge (2, “butt”).
"
9904,source/pymupdf.pdf,"closePath (bool)
"
9905,source/pymupdf.pdf,"Causes the end point of a drawing to be automatically connected with the starting point (by a straight line).
"
9906,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
9907,source/pymupdf.pdf,"19.19. Shape
355
"
9908,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9909,source/pymupdf.pdf,"19.20 Story
"
9910,source/pymupdf.pdf,"• New in v1.21.0
"
9911,source/pymupdf.pdf,"Method / Attribute
Short Description
"
9912,source/pymupdf.pdf,"Story.reset()
“rewind” story output to its beginning
"
9913,source/pymupdf.pdf,"Story.place()
compute story content to fit in provided rectangle
"
9914,source/pymupdf.pdf,"Story.draw()
write the computed content to current page
"
9915,source/pymupdf.pdf,"Story.element_positions()
callback function logging currently processed story content
"
9916,source/pymupdf.pdf,"Story.body
the story’s underlying body
"
9917,source/pymupdf.pdf,"Story.write()
places and draws Story to a DocumentWriter
"
9918,source/pymupdf.pdf,"Story.write_stabilized()
iterative layout of html content to a DocumentWriter
"
9919,source/pymupdf.pdf,"Story.write_with_links()
like write() but also creates PDF links
"
9920,source/pymupdf.pdf,"Story.write_stabilized_with_links()
like write_stabilized() but also creates PDF links
"
9921,source/pymupdf.pdf,"Story.fit()
Finds optimal rect that contains the story self.
"
9922,source/pymupdf.pdf,"Story.fit_scale()
Story.fit_height()
Story.fit_width()
"
9923,source/pymupdf.pdf,"Class API
"
9924,source/pymupdf.pdf,"class Story
"
9925,source/pymupdf.pdf,"__init__(self, html=None, user_css=None, em=12, archive=None)
"
9926,source/pymupdf.pdf,"Create a story, optionally providing HTML and CSS source. The HTML is parsed, and held within the
Story as a DOM (Document Object Model).
"
9927,source/pymupdf.pdf,"This structure may be modified: content (text, images) may be added, copied, modified or removed by
using methods of the Xml class.
"
9928,source/pymupdf.pdf,"When finished, the story can be written to any device; in typical usage the device may be provided by a
DocumentWriter to make new pages.
"
9929,source/pymupdf.pdf,"Here are some general remarks:
"
9930,source/pymupdf.pdf,"• The Story constructor parses and validates the provided HTML to create the DOM.
"
9931,source/pymupdf.pdf,"• PyMuPDF provides a number of ways to manipulate the HTML source by providing access to the
nodes of the underlying DOM. Documents can be completely built from ground up programmati-
cally, or the existing DOM can be modified pretty arbitrarily. For details of this interface, please see
the Xml class.
"
9932,source/pymupdf.pdf,"• If no (or no more) changes to the DOM are required, the story is ready to be laid out and to be fed
to a series of devices (typically devices provided by a DocumentWriter to produce new pages).
"
9933,source/pymupdf.pdf,"• The next step is to place the story and write it out. This can either be done directly, by looping around
calling place() and draw(), or alternatively, the looping can handled for you using the write()
or write_stabilised() methods. Which method you choose is largely a matter of taste.
"
9934,source/pymupdf.pdf,"– To work in the first of these styles, the following loop should be used:
"
9935,source/pymupdf.pdf,"1. Obtain a suitable device to write to; typically by requesting a new, empty page from a
"
9936,source/pymupdf.pdf,"DocumentWriter.
"
9937,source/pymupdf.pdf,"2. Determine one or more rectangles on the page, that should receive story data. Note that
not every page needs to have the same set of rectangles.
"
9938,source/pymupdf.pdf,"356
Chapter 19. Classes
"
9939,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9940,source/pymupdf.pdf,"3. Pass each rectangle to the story to place it, learning what part of that rectangle has been
filled, and whether there is more story data that did not fit. This step can be repeated
several times with adjusted rectangles until the caller is happy with the results.
"
9941,source/pymupdf.pdf,"4. Optionally, at this point, we can request details of where interesting items have been
placed, by calling the element_positions() method. Items are deemed to be inter-
esting if their integer heading attribute is a non-zero (corresponding to HTML tags h1
- h6), if their id attribute is not None (corresponding to HTML tag id), or if their href
attribute is not None (responding to HTML tag href ). This can conveniently be used for
automatic generation of a Table of Contents, an index of images or the like.
"
9942,source/pymupdf.pdf,"5. Next, draw that rectangle out to the device with the draw() method.
"
9943,source/pymupdf.pdf,"6. If the most recent call to place() indicated that all the story data had fitted, stop now.
"
9944,source/pymupdf.pdf,"7. Otherwise, we can loop back. If there are more rectangles to be placed on the current
device (page), we jump back to step 3 - if not, we jump back to step 1 to get a new device.
"
9945,source/pymupdf.pdf,"– Alternatively, in the case where you are using a DocumentWriter, the write() or
"
9946,source/pymupdf.pdf,"write_stabilized() methods can be used. These handle all the looping for you, in ex-
change for being provided with callbacks that control the behaviour (notably a callback that
enumerates the rectangles/pages to use).
"
9947,source/pymupdf.pdf,"• Which part of the story will land on which rectangle / which page, is fully under control of the Story
"
9948,source/pymupdf.pdf,"object and cannot be predicted.
"
9949,source/pymupdf.pdf,"• Images may be part of a story. They will be placed together with any surrounding text.
"
9950,source/pymupdf.pdf,"• Multiple stories may - independently from each other - write to the same page. For example, one
may have separate stories for page header, page footer, regular text, comment boxes, etc.
"
9951,source/pymupdf.pdf,"Parameters
"
9952,source/pymupdf.pdf,"• html (str) – HTML source code. If omitted, a basic minimum is generated (see
below). If provided, not a complete HTML document is needed. The in-built source
parser will forgive (many / most) HTML syntax errors and also accepts HTML
fragments like ""<b>Hello, <i>World!</i></b>"".
"
9953,source/pymupdf.pdf,"• user_css (str) – CSS source code. If provided, must contain valid CSS specifi-
cations.
"
9954,source/pymupdf.pdf,"• em (float) – the default text font size.
"
9955,source/pymupdf.pdf,"• archive – an Archive from which to load resources for rendering. Currently sup-
ported resource types are images and text fonts. If omitted, the story will not try to
look up any such data and may thus produce incomplete output.
"
9956,source/pymupdf.pdf,"Note:
Instead of an actual archive, valid arguments for creating an Archive can
also be provided – in which case an archive will temporarily be constructed. So, in-
stead of story = fitz.Story(archive=fitz.Archive(""myfolder"")), one
can also shorter write story = fitz.Story(archive=""myfolder"").
"
9957,source/pymupdf.pdf,"place(where)
"
9958,source/pymupdf.pdf,"Calculate that part of the story’s content, that will fit in the provided rectangle. The method maintains a
pointer which part of the story’s content has already been written and upon the next invocation resumes
from that pointer’s position.
"
9959,source/pymupdf.pdf,"19.20. Story
357
"
9960,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9961,source/pymupdf.pdf,"Parameters
"
9962,source/pymupdf.pdf,"where (rect_like) – layout the current part of the content to fit into this rectangle.
This must be a sub-rectangle of the page’s MediaBox.
"
9963,source/pymupdf.pdf,"Return type
"
9964,source/pymupdf.pdf,"tuple[bool, rect_like]
"
9965,source/pymupdf.pdf,"Returns
"
9966,source/pymupdf.pdf,"a bool (int) more and a rectangle filled. If more == 0, all content of the story has
been written, otherwise more is waiting to be written to subsequent rectangles / pages.
Rectangle filled is the part of where that has actually been filled.
"
9967,source/pymupdf.pdf,"draw(dev, matrix=None)
"
9968,source/pymupdf.pdf,"Write the content part prepared by Story.place() to the page.
"
9969,source/pymupdf.pdf,"Parameters
"
9970,source/pymupdf.pdf,"• dev – the Device created by dev = writer.begin_page(mediabox). The de-
vice knows how to call all MuPDF functions needed to write the content.
"
9971,source/pymupdf.pdf,"• matrix (matrix_like) – a matrix for transforming content when writing to the
page. An example may be writing rotated text. The default means no transformation
(i.e. the Identity matrix).
"
9972,source/pymupdf.pdf,"element_positions(function, args=None)
"
9973,source/pymupdf.pdf,"Let the Story provide positioning information about certain HTML elements once their place on the current
page has been computed - i.e. invoke this method directly after Story.place().
"
9974,source/pymupdf.pdf,"Story will pass position information to function. This information can for example be used to generate a
Table of Contents.
"
9975,source/pymupdf.pdf,"Parameters
"
9976,source/pymupdf.pdf,"• function (callable) – a Python function accepting an ElementPosition ob-
ject. It will be invoked by the Story object to process positioning information. The
function must be a callable accepting exactly one argument.
"
9977,source/pymupdf.pdf,"• args (dict) – an optional dictionary with any additional information that should
be added to the ElementPosition instance passed to function. Like for example
the current output page number. Every key in this dictionary must be a string that
conforms to the rules for a valid Python identifier. The complete set of information
is explained below.
"
9978,source/pymupdf.pdf,"reset()
"
9979,source/pymupdf.pdf,"Rewind the story’s document to the beginning for starting over its output.
"
9980,source/pymupdf.pdf,"body
"
9981,source/pymupdf.pdf,"The body part of the story’s DOM. This attribute contains the Xml node of body. All relevant content for
PDF production is contained between “<body>” and “</body>”.
"
9982,source/pymupdf.pdf,"write(writer, rectfn, positionfn=None, pagefn=None)
"
9983,source/pymupdf.pdf,"Places and draws Story to a DocumentWriter. Avoids the need for calling code to implement a loop that
calls Story.place() and Story.draw() etc, at the expense of having to provide at least the rectfn()
callback.
"
9984,source/pymupdf.pdf,"Parameters
"
9985,source/pymupdf.pdf,"• writer – a DocumentWriter or None.
"
9986,source/pymupdf.pdf,"• rectfn – a callable taking (rect_num:
int, filled:
Rect) and returning
(mediabox, rect, ctm):
"
9987,source/pymupdf.pdf,"358
Chapter 19. Classes
"
9988,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
9989,source/pymupdf.pdf,"– mediabox: None or rect for new page.
"
9990,source/pymupdf.pdf,"– rect: The next rect into which content should be placed.
"
9991,source/pymupdf.pdf,"– ctm: None or a Matrix.
"
9992,source/pymupdf.pdf,"• positionfn – None, or a callable taking (position:
ElementPosition):
"
9993,source/pymupdf.pdf,"– position:
"
9994,source/pymupdf.pdf,"An ElementPosition with an extra .page_num member.
"
9995,source/pymupdf.pdf,"Typically called multiple times as we generate elements that are headings or have
an id.
"
9996,source/pymupdf.pdf,"• pagefn – None, or a callable taking (page_num, mediabox, dev, after);
called at start (after=0) and end (after=1) of each page.
"
9997,source/pymupdf.pdf,"static write_stabilized(writer, contentfn, rectfn, user_css=None, em=12, positionfn=None,
pagefn=None, archive=None, add_header_ids=True)
"
9998,source/pymupdf.pdf,"Static method that does iterative layout of html content to a DocumentWriter.
"
9999,source/pymupdf.pdf,"For example this allows one to add a table of contents section while ensuring that page numbers are patched
up until stable.
"
10000,source/pymupdf.pdf,"Repeatedly creates a new Story from (contentfn(), user_css, em, archive) and lays it out with
internal call to Story.write(); uses a None writer and extracts the list of ElementPosition’s which
is passed to the next call of contentfn().
"
10001,source/pymupdf.pdf,"When the html from contentfn() becomes unchanged, we do a final iteration using writer.
"
10002,source/pymupdf.pdf,"Parameters
"
10003,source/pymupdf.pdf,"• writer – A DocumentWriter.
"
10004,source/pymupdf.pdf,"• contentfn – A function taking a list of ElementPositions and returning a string
containing html. The returned html can depend on the list of positions, for example
with a table of contents near the start.
"
10005,source/pymupdf.pdf,"• rectfn – A callable taking (rect_num:
int, filled:
Rect) and returning
(mediabox, rect, ctm):
"
10006,source/pymupdf.pdf,"– mediabox: None or rect for new page.
"
10007,source/pymupdf.pdf,"– rect: The next rect into which content should be placed.
"
10008,source/pymupdf.pdf,"– ctm: A Matrix.
"
10009,source/pymupdf.pdf,"• pagefn – None, or a callable taking (page_num, medibox, dev, after);
called at start (after=0) and end (after=1) of each page.
"
10010,source/pymupdf.pdf,"• archive –
"
10011,source/pymupdf.pdf,"• add_header_ids – If true, we add unique ids to all header tags that don’t already
have an id. This can help automatic generation of tables of contents.
"
10012,source/pymupdf.pdf,"Returns:
"
10013,source/pymupdf.pdf,"None.
"
10014,source/pymupdf.pdf,"write_with_links(rectfn, positionfn=None, pagefn=None)
"
10015,source/pymupdf.pdf,"Similar to write() except that we don’t have a writer arg and we return a PDF Document in which links
have been created for each internal html link.
"
10016,source/pymupdf.pdf,"19.20. Story
359
"
10017,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10018,source/pymupdf.pdf,"static write_stabilized_with_links(contentfn, rectfn, user_css=None, em=12, positionfn=None,
pagefn=None, archive=None, add_header_ids=True)
"
10019,source/pymupdf.pdf,"Similar to write_stabilized() except that we don’t have a writer arg and instead return a PDF Doc-
ument in which links have been created for each internal html link.
"
10020,source/pymupdf.pdf,"class FitResult
"
10021,source/pymupdf.pdf,"The result from a Story.fit*() method.
"
10022,source/pymupdf.pdf,"Members:
"
10023,source/pymupdf.pdf,"big_enough:
"
10024,source/pymupdf.pdf,"True if the fit succeeded.
"
10025,source/pymupdf.pdf,"filled:
"
10026,source/pymupdf.pdf,"From the last call to Story.place().
"
10027,source/pymupdf.pdf,"more:
"
10028,source/pymupdf.pdf,"False if the fit succeeded.
"
10029,source/pymupdf.pdf,"numcalls:
"
10030,source/pymupdf.pdf,"Number of calls made to self.place().
"
10031,source/pymupdf.pdf,"parameter:
"
10032,source/pymupdf.pdf,"The successful parameter value, or the largest failing value.
"
10033,source/pymupdf.pdf,"Rect:
"
10034,source/pymupdf.pdf,"The rect created from parameter.
"
10035,source/pymupdf.pdf,"fit(self, fn, pmin=None, pmax=None, delta=0.001, verbose=False)
"
10036,source/pymupdf.pdf,"Finds optimal rect that contains the story self.
"
10037,source/pymupdf.pdf,"Returns a Story.FitResult instance.
"
10038,source/pymupdf.pdf,"On success, the last call to self.place() will have been with the returned rectangle, so self.draw()
can be used directly.
"
10039,source/pymupdf.pdf,"Parameters
"
10040,source/pymupdf.pdf,"• fn – A callable taking a floating point parameter and returning a fitz.Rect().
If the rect is empty, we assume the story will not fit and do not call self.place().
"
10041,source/pymupdf.pdf,"Must guarantee that self.place() behaves monotonically when given rect
fn(parameter) as parameter increases. This usually means that both width and
height increase or stay unchanged as parameter increases.
"
10042,source/pymupdf.pdf,"• pmin – Minimum parameter to consider; None for -infinity.
"
10043,source/pymupdf.pdf,"• pmax – Maximum parameter to consider; None for +infinity.
"
10044,source/pymupdf.pdf,"• delta – Maximum error in returned parameter.
"
10045,source/pymupdf.pdf,"• verbose – If true we output diagnostics.
"
10046,source/pymupdf.pdf,"fit_scale(self, rect, scale_min=0, scale_max=None, delta=0.001, verbose=False)
"
10047,source/pymupdf.pdf,"Finds smallest value scale in range scale_min..scale_max where scale * rect is large enough to
contain the story self.
"
10048,source/pymupdf.pdf,"Returns a Story.FitResult instance.
"
10049,source/pymupdf.pdf,"Parameters
"
10050,source/pymupdf.pdf,"• width – width of rect.
"
10051,source/pymupdf.pdf,"• height – height of rect.
"
10052,source/pymupdf.pdf,"360
Chapter 19. Classes
"
10053,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10054,source/pymupdf.pdf,"• scale_min – Minimum scale to consider; must be >= 0.
"
10055,source/pymupdf.pdf,"• scale_max – Maximum scale to consider, must be >= scale_min or None for infi-
nite.
"
10056,source/pymupdf.pdf,"• delta – Maximum error in returned scale.
"
10057,source/pymupdf.pdf,"• verbose – If true we output diagnostics.
"
10058,source/pymupdf.pdf,"fit_height(self, width, height_min=0, height_max=None, origin=(0, 0), delta=0.001, verbose=False)
"
10059,source/pymupdf.pdf,"Finds smallest height in range height_min..height_max where a rect with size (width, height) is
large enough to contain the story self.
"
10060,source/pymupdf.pdf,"Returns a Story.FitResult instance.
"
10061,source/pymupdf.pdf,"Parameters
"
10062,source/pymupdf.pdf,"• width – width of rect.
"
10063,source/pymupdf.pdf,"• height_min – Minimum height to consider; must be >= 0.
"
10064,source/pymupdf.pdf,"• height_max – Maximum height to consider, must be >= height_min or None for
infinite.
"
10065,source/pymupdf.pdf,"• origin – (x0, y0) of rect.
"
10066,source/pymupdf.pdf,"• delta – Maximum error in returned height.
"
10067,source/pymupdf.pdf,"• verbose – If true we output diagnostics.
"
10068,source/pymupdf.pdf,"fit_width(self, height, width_min=0, width_max=None, origin=(0, 0), delta=0.001, verbose=False)
"
10069,source/pymupdf.pdf,"Finds smallest width in range width_min..width_max where a rect with size (width, height) is large
enough to contain the story self.
"
10070,source/pymupdf.pdf,"Returns a Story.FitResult instance.
"
10071,source/pymupdf.pdf,"Parameters
"
10072,source/pymupdf.pdf,"• height – height of rect.
"
10073,source/pymupdf.pdf,"• width_min – Minimum width to consider; must be >= 0.
"
10074,source/pymupdf.pdf,"• width_max – Maximum width to consider, must be >= width_min or None for
infinite.
"
10075,source/pymupdf.pdf,"• origin – (x0, y0) of rect.
"
10076,source/pymupdf.pdf,"• delta – Maximum error in returned width.
"
10077,source/pymupdf.pdf,"• verbose – If true we output diagnostics.
"
10078,source/pymupdf.pdf,"19.20.1 Element Positioning CallBack function
"
10079,source/pymupdf.pdf,"The callback function can be used to log information about story output. The function’s access to the information is
read-only: it has no way to influence the story’s output.
"
10080,source/pymupdf.pdf,"A typical loop for executing a story with using this method would look like this:
"
10081,source/pymupdf.pdf,"HTML = """"""
<html>
"
10082,source/pymupdf.pdf,"<head></head>
<body>
"
10083,source/pymupdf.pdf,"<h1>Header level 1</h1>
"
10084,source/pymupdf.pdf,"(continues on next page)
"
10085,source/pymupdf.pdf,"19.20. Story
361
"
10086,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10087,source/pymupdf.pdf,"(continued from previous page)
"
10088,source/pymupdf.pdf,"<h2>Header level 2</h2>
<p>Hello MuPDF!</p>
"
10089,source/pymupdf.pdf,"</body>
"
10090,source/pymupdf.pdf,"</html>
""""""
MEDIABOX = fitz.paper_rect(""letter"")
# size of a page
"
10091,source/pymupdf.pdf,"WHERE = MEDIABOX + (36, 36, -36, -36)
# leave borders of 0.5 inches
"
10092,source/pymupdf.pdf,"story =
fitz.Story(html=HTML)
# make the story
"
10093,source/pymupdf.pdf,"writer = fitz.DocumentWriter(""test.pdf"")
# make the writer
"
10094,source/pymupdf.pdf,"pno = 0 # current page number
more = 1
# will be set to 0 when done
"
10095,source/pymupdf.pdf,"while more:
# loop until all story content is processed
"
10096,source/pymupdf.pdf,"dev = writer.begin_page(MEDIABOX)
# make a device to write on the page
"
10097,source/pymupdf.pdf,"more, filled = story.place(WHERE)
# compute content positions on page
"
10098,source/pymupdf.pdf,"story.element_positions(recorder, {""page"": pno})
# provide page number in addition
"
10099,source/pymupdf.pdf,"story.draw(dev)
writer.end_page()
pno += 1
# increase page number
"
10100,source/pymupdf.pdf,"writer.close()
# close output file
"
10101,source/pymupdf.pdf,"def recorder(elpos):
"
10102,source/pymupdf.pdf,"pass
"
10103,source/pymupdf.pdf,"Attributes of the ElementPosition class
"
10104,source/pymupdf.pdf,"Exactly one parameter must be passed to the function provided by Story.element_positions(). It is an object with
the following attributes:
"
10105,source/pymupdf.pdf,"The parameter passed to the recorder function is an object with the following attributes:
"
10106,source/pymupdf.pdf,"• elpos.depth (int) – depth of this element in the box structure.
"
10107,source/pymupdf.pdf,"• elpos.heading (int) – the header level, 0 if no header, 1-6 for h1 - h6.
"
10108,source/pymupdf.pdf,"• elpos.href (str) – value of the href attribute, or None if not defined.
"
10109,source/pymupdf.pdf,"• elpos.id (str) – value of the id attribute, or None if not defined.
"
10110,source/pymupdf.pdf,"• elpos.rect (tuple) – element position on page.
"
10111,source/pymupdf.pdf,"• elpos.text (str) – immediate text of the element.
"
10112,source/pymupdf.pdf,"• elpos.open_close (int bit field) – bit 0 set: opens element, bit 1 set: closes element. Relevant for elements
that may contain other elements and thus may not immediately be closed after being created / opened.
"
10113,source/pymupdf.pdf,"• elpos.rect_num (int) – count of rectangles filled by the story so far.
"
10114,source/pymupdf.pdf,"• elpos.page_num (int) – page number; only present when using fitz.Story.write*() functions.
"
10115,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
10116,source/pymupdf.pdf,"362
Chapter 19. Classes
"
10117,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10118,source/pymupdf.pdf,"19.21 TextPage
"
10119,source/pymupdf.pdf,"This class represents text and images shown on a document page. All MuPDF document types are supported.
"
10120,source/pymupdf.pdf,"The usual ways to create a textpage are DisplayList.get_textpage() and Page.get_textpage(). Because there
is a limited set of methods in this class, there exist wrappers in Page which are handier to use. The last column of this
table shows these corresponding Page methods.
"
10121,source/pymupdf.pdf,"For a description of what this class is all about, see Appendix 2.
"
10122,source/pymupdf.pdf,"Method
Description
page get_text or search method
"
10123,source/pymupdf.pdf,"extractText()
extract plain text
“text”
"
10124,source/pymupdf.pdf,"extractTEXT()
synonym of previous
“text”
"
10125,source/pymupdf.pdf,"extractBLOCKS()
plain text grouped in blocks
“blocks”
"
10126,source/pymupdf.pdf,"extractWORDS()
all words with their bbox
“words”
"
10127,source/pymupdf.pdf,"extractHTML()
page content in HTML format
“html”
"
10128,source/pymupdf.pdf,"extractXHTML()
page content in XHTML format
“xhtml”
"
10129,source/pymupdf.pdf,"extractXML()
page text in XML format
“xml”
"
10130,source/pymupdf.pdf,"extractDICT()
page content in dict format
“dict”
"
10131,source/pymupdf.pdf,"extractJSON()
page content in JSON format
“json”
"
10132,source/pymupdf.pdf,"extractRAWDICT()
page content in dict format
“rawdict”
"
10133,source/pymupdf.pdf,"extractRAWJSON()
page content in JSON format
“rawjson”
"
10134,source/pymupdf.pdf,"search()
Search for a string in the page
Page.search_for()
"
10135,source/pymupdf.pdf,"Class API
"
10136,source/pymupdf.pdf,"class TextPage
"
10137,source/pymupdf.pdf,"extractText(sort=False)
"
10138,source/pymupdf.pdf,"extractTEXT(sort=False)
"
10139,source/pymupdf.pdf,"Return a string of the page’s complete text. The text is UTF-8 unicode and in the same sequence as specified
at the time of document creation.
"
10140,source/pymupdf.pdf,"Parameters
"
10141,source/pymupdf.pdf,"sort (bool) – (new in v1.19.1) sort the output by vertical, then horizontal coordinates.
In many cases, this should suffice to generate a “natural” reading order.
"
10142,source/pymupdf.pdf,"Return type
"
10143,source/pymupdf.pdf,"str
"
10144,source/pymupdf.pdf,"extractBLOCKS()
"
10145,source/pymupdf.pdf,"Textpage content as a list of text lines grouped by block. Each list items looks like this:
"
10146,source/pymupdf.pdf,"(x0, y0, x1, y1, ""lines in the block"", block_no, block_type)
"
10147,source/pymupdf.pdf,"The first four entries are the block’s bbox coordinates, block_type is 1 for an image block, 0 for text.
block_no is the block sequence number. Multiple text lines are joined via line breaks.
"
10148,source/pymupdf.pdf,"For an image block, its bbox and a text line with some image meta information is included – not the image
content.
"
10149,source/pymupdf.pdf,"This is a high-speed method with just enough information to output plain text in desired reading sequence.
"
10150,source/pymupdf.pdf,"Return type
"
10151,source/pymupdf.pdf,"list
"
10152,source/pymupdf.pdf,"19.21. TextPage
363
"
10153,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10154,source/pymupdf.pdf,"extractWORDS(delimiters=None)
"
10155,source/pymupdf.pdf,"• Changed in v1.23.5: added delimiters parameter
"
10156,source/pymupdf.pdf,"Textpage content as a list of single words with bbox information. An item of this list looks like this:
"
10157,source/pymupdf.pdf,"(x0, y0, x1, y1, ""word"", block_no, line_no, word_no)
"
10158,source/pymupdf.pdf,"Parameters
"
10159,source/pymupdf.pdf,"delimiters (str) – (new in v1.23.5) use these characters as additional word sep-
arators. By default, all white spaces (including the non-breaking space 0xA0) indi-
cate start and end of a word.
Now you can specify more characters causing this.
For instance, the default will return ""john.doe@outlook.com"" as one word.
If
you specify delimiters=""@."" then the four words ""john"", ""doe"", ""outlook"",
""com"" will be returned. Other possible uses include ignoring punctuation characters
delimiters=string.punctuation. The “word” strings will not contain any delim-
iting character.
"
10160,source/pymupdf.pdf,"This is a high-speed method which e.g. allows extracting text from within given areas or recovering the
text reading sequence.
"
10161,source/pymupdf.pdf,"Return type
"
10162,source/pymupdf.pdf,"list
"
10163,source/pymupdf.pdf,"extractHTML()
"
10164,source/pymupdf.pdf,"Textpage content as a string in HTML format. This version contains complete formatting and positioning
information. Images are included (encoded as base64 strings). You need an HTML package to interpret
the output in Python. Your internet browser should be able to adequately display this information, but see
Controlling Quality of HTML Output.
"
10165,source/pymupdf.pdf,"Return type
"
10166,source/pymupdf.pdf,"str
"
10167,source/pymupdf.pdf,"extractDICT(sort=False)
"
10168,source/pymupdf.pdf,"Textpage content as a Python dictionary. Provides same information detail as HTML. See below for the
structure.
"
10169,source/pymupdf.pdf,"Parameters
"
10170,source/pymupdf.pdf,"sort (bool) – (new in v1.19.1) sort the output by vertical, then horizontal coordinates.
In many cases, this should suffice to generate a “natural” reading order.
"
10171,source/pymupdf.pdf,"Return type
"
10172,source/pymupdf.pdf,"dict
"
10173,source/pymupdf.pdf,"extractJSON(sort=False)
"
10174,source/pymupdf.pdf,"Textpage content as a JSON string. Created by json.dumps(TextPage.extractDICT()). It is included
for backlevel compatibility. You will probably use this method ever only for outputting the result to some
file. The method detects binary image data and converts them to base64 encoded strings.
"
10175,source/pymupdf.pdf,"Parameters
"
10176,source/pymupdf.pdf,"sort (bool) – (new in v1.19.1) sort the output by vertical, then horizontal coordinates.
In many cases, this should suffice to generate a “natural” reading order.
"
10177,source/pymupdf.pdf,"Return type
"
10178,source/pymupdf.pdf,"str
"
10179,source/pymupdf.pdf,"364
Chapter 19. Classes
"
10180,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10181,source/pymupdf.pdf,"extractXHTML()
"
10182,source/pymupdf.pdf,"Textpage content as a string in XHTML format.
Text information detail is comparable with
"
10183,source/pymupdf.pdf,"extractTEXT(), but also contains images (base64 encoded). This method makes no attempt to re-create
the original visual appearance.
"
10184,source/pymupdf.pdf,"Return type
"
10185,source/pymupdf.pdf,"str
"
10186,source/pymupdf.pdf,"extractXML()
"
10187,source/pymupdf.pdf,"Textpage content as a string in XML format. This contains complete formatting information about every
single character on the page: font, size, line, paragraph, location, color, etc. Contains no images. You need
an XML package to interpret the output in Python.
"
10188,source/pymupdf.pdf,"Return type
"
10189,source/pymupdf.pdf,"str
"
10190,source/pymupdf.pdf,"extractRAWDICT(sort=False)
"
10191,source/pymupdf.pdf,"Textpage content as a Python dictionary – technically similar to extractDICT(), and it contains that
information as a subset (including any images). It provides additional detail down to each character, which
makes using XML obsolete in many cases. See below for the structure.
"
10192,source/pymupdf.pdf,"Parameters
"
10193,source/pymupdf.pdf,"sort (bool) – (new in v1.19.1) sort the output by vertical, then horizontal coordinates.
In many cases, this should suffice to generate a “natural” reading order.
"
10194,source/pymupdf.pdf,"Return type
"
10195,source/pymupdf.pdf,"dict
"
10196,source/pymupdf.pdf,"extractRAWJSON(sort=False)
"
10197,source/pymupdf.pdf,"Textpage content as a JSON string. Created by json.dumps(TextPage.extractRAWDICT()). You will
probably use this method ever only for outputting the result to some file. The method detects binary image
data and converts them to base64 encoded strings.
"
10198,source/pymupdf.pdf,"Parameters
"
10199,source/pymupdf.pdf,"sort (bool) – (new in v1.19.1) sort the output by vertical, then horizontal coordinates.
In many cases, this should suffice to generate a “natural” reading order.
"
10200,source/pymupdf.pdf,"Return type
"
10201,source/pymupdf.pdf,"str
"
10202,source/pymupdf.pdf,"search(needle, quads=False)
"
10203,source/pymupdf.pdf,"• Changed in v1.18.2
"
10204,source/pymupdf.pdf,"Search for string and return a list of found locations.
"
10205,source/pymupdf.pdf,"Parameters
"
10206,source/pymupdf.pdf,"• needle (str) – the string to search for. Upper and lower cases will all match if
needle consists of ASCII letters only – it does not yet work for “Ä” versus “ä”, etc.
"
10207,source/pymupdf.pdf,"• quads (bool) – return quadrilaterals instead of rectangles.
"
10208,source/pymupdf.pdf,"Return type
"
10209,source/pymupdf.pdf,"list
"
10210,source/pymupdf.pdf,"Returns
"
10211,source/pymupdf.pdf,"a list of Rect or Quad objects, each surrounding a found needle occurrence. As the search
string may contain spaces, its parts may be found on different lines. In this case, more
than one rectangle (resp. quadrilateral) are returned. (Changed in v1.18.2) The method
now supports dehyphenation, so it will find e.g. “method”, even if it was hyphenated
"
10212,source/pymupdf.pdf,"19.21. TextPage
365
"
10213,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10214,source/pymupdf.pdf,"in two parts “meth-” and “od” across two lines. The two returned rectangles will contain
“meth” (no hyphen) and “od”.
"
10215,source/pymupdf.pdf,"Note: Overview of changes in v1.18.2:
"
10216,source/pymupdf.pdf,"1. The hit_max parameter has been removed: all hits are always returned.
"
10217,source/pymupdf.pdf,"2. The Rect parameter of the TextPage is now respected: only text inside this area is examined. Only
characters with fully contained bboxes are considered. The wrapper method Page.search_for()
correspondingly supports a clip parameter.
"
10218,source/pymupdf.pdf,"3. Hyphenated words are now found.
"
10219,source/pymupdf.pdf,"4. Overlapping rectangles in the same line are now automatically joined. We assume that such sepa-
rations are an artifact created by multiple marked content groups, containing parts of the same search
needle.
"
10220,source/pymupdf.pdf,"Example Quad versus Rect: when searching for needle “pymupdf”, then the corresponding entry will either
be the blue rectangle, or, if quads was specified, the quad Quad(ul, ur, ll, lr).
"
10221,source/pymupdf.pdf,"rect
"
10222,source/pymupdf.pdf,"The rectangle associated with the text page. This either equals the rectangle of the creating page or the
clip parameter of Page.get_textpage() and text extraction / searching methods.
"
10223,source/pymupdf.pdf,"Note: The output of text searching and most text extractions is restricted to this rectangle. (X)HTML
and XML output will however always extract the full page.
"
10224,source/pymupdf.pdf,"366
Chapter 19. Classes
"
10225,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10226,source/pymupdf.pdf,"19.21.1 Structure of Dictionary Outputs
"
10227,source/pymupdf.pdf,"Methods
TextPage.extractDICT(),
TextPage.extractJSON(),
TextPage.extractRAWDICT(),
and
"
10228,source/pymupdf.pdf,"TextPage.extractRAWJSON() return dictionaries, containing the page’s text and image content.
The dictio-
nary structures of all four methods are almost equal. They strive to map the text page’s information hierarchy of
blocks, lines, spans and characters as precisely as possible, by representing each of these by its own sub-dictionary:
"
10229,source/pymupdf.pdf,"• A page consists of a list of block dictionaries.
"
10230,source/pymupdf.pdf,"• A (text) block consists of a list of line dictionaries.
"
10231,source/pymupdf.pdf,"• A line consists of a list of span dictionaries.
"
10232,source/pymupdf.pdf,"• A span either consists of the text itself or, for the RAW variants, a list of character dictionaries.
"
10233,source/pymupdf.pdf,"• RAW variants: a character is a dictionary of its origin, bbox and unicode.
"
10234,source/pymupdf.pdf,"All PyMuPDF geometry objects herein (points, rectangles, matrices) are represented by there “like” formats: a
rect_like tuple is used instead of a Rect, etc. The reasons for this are performance and memory considerations:
"
10235,source/pymupdf.pdf,"• This code is written in C, where Python tuples can easily be generated. The geometry objects on the other hand
are defined in Python source only. A conversion of each Python tuple into its corresponding geometry object
would add significant – and largely unnecessary – execution time.
"
10236,source/pymupdf.pdf,"• A 4-tuple needs about 168 bytes, the corresponding Rect 472 bytes - almost three times the size. A “dict”
dictionary for a text-heavy page contains 300+ bbox objects – which thus require about 50 KB storage as 4-
tuples versus 140 KB as Rect objects. A “rawdict” output for such a page will however contain 4 to 5 thousand
bboxes, so in this case we talk about 750 KB versus 2 MB.
"
10237,source/pymupdf.pdf,"Please also note, that only bboxes (= rect_like 4-tuples) are returned, whereas a TextPage actually has the full
position information – in Quad format. The reason for this decision is again a memory consideration: a quad_like
needs 488 bytes (3 times the size of a rect_like). Given the mentioned amounts of generated bboxes, returning
quad_like information would have a significant impact.
"
10238,source/pymupdf.pdf,"In the vast majority of cases, we are dealing with horizontal text only, where bboxes provide entirely sufficient infor-
mation.
"
10239,source/pymupdf.pdf,"In addition, the full quad information is not lost: it can be recovered as needed for lines, spans, and characters by
using the appropriate function from the following list:
"
10240,source/pymupdf.pdf,"• recover_quad() – the quad of a complete span
"
10241,source/pymupdf.pdf,"• recover_span_quad() – the quad of a character subset of a span
"
10242,source/pymupdf.pdf,"• recover_line_quad() – the quad of a line
"
10243,source/pymupdf.pdf,"• recover_char_quad() – the quad of a character
"
10244,source/pymupdf.pdf,"As mentioned, using these functions is ever only needed, if the text is not written horizontally – line[""dir""] !=
(1, 0) – and you need the quad for text marker annotations (Page.add_highlight_annot() and friends).
"
10245,source/pymupdf.pdf,"19.21. TextPage
367
"
10246,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10247,source/pymupdf.pdf,"Page Dictionary
"
10248,source/pymupdf.pdf,"Key
Value
"
10249,source/pymupdf.pdf,"width
width of the clip rectangle (float)
"
10250,source/pymupdf.pdf,"height
height of the clip rectangle (float)
"
10251,source/pymupdf.pdf,"blocks
list of block dictionaries
"
10252,source/pymupdf.pdf,"Block Dictionaries
"
10253,source/pymupdf.pdf,"Block dictionaries come in two different formats for image blocks and for text blocks.
"
10254,source/pymupdf.pdf,"• (Changed in v1.18.0) – new dict key number, the block number.
"
10255,source/pymupdf.pdf,"• (Changed in v1.18.11) – new dict key transform, the image transformation matrix for image blocks.
"
10256,source/pymupdf.pdf,"• (Changed in v1.18.11) – new dict key size, the size of the image in bytes for image blocks.
"
10257,source/pymupdf.pdf,"Image block:
"
10258,source/pymupdf.pdf,"368
Chapter 19. Classes
"
10259,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10260,source/pymupdf.pdf,"Key
Value
"
10261,source/pymupdf.pdf,"type
1 = image (int)
"
10262,source/pymupdf.pdf,"bbox
image bbox on page (rect_like)
"
10263,source/pymupdf.pdf,"number
block count (int)
"
10264,source/pymupdf.pdf,"ext
image type (str), as file extension, see below
"
10265,source/pymupdf.pdf,"width
original image width (int)
"
10266,source/pymupdf.pdf,"height
original image height (int)
"
10267,source/pymupdf.pdf,"colorspace
colorspace component count (int)
"
10268,source/pymupdf.pdf,"xres
resolution in x-direction (int)
"
10269,source/pymupdf.pdf,"yres
resolution in y-direction (int)
"
10270,source/pymupdf.pdf,"bpc
bits per component (int)
"
10271,source/pymupdf.pdf,"transform
matrix transforming image rect to bbox (matrix_like)
"
10272,source/pymupdf.pdf,"size
size of the image in bytes (int)
"
10273,source/pymupdf.pdf,"image
image content (bytes)
"
10274,source/pymupdf.pdf,"Possible values of the “ext” key are “bmp”, “gif”, “jpeg”, “jpx” (JPEG 2000), “jxr” (JPEG XR), “png”, “pnm”, and
“tiff”.
"
10275,source/pymupdf.pdf,"Note:
"
10276,source/pymupdf.pdf,"1. An image block is generated for all and every image occurrence on the page. Hence there may be duplicates,
if an image is shown at different locations.
"
10277,source/pymupdf.pdf,"2. TextPage and corresponding method Page.get_text() are available for all document types. Only for PDF
documents, methods Document.get_page_images() / Page.get_images() offer some overlapping func-
tionality as far as image lists are concerned. But both lists may or may not contain the same items. Any
differences are most probably caused by one of the following:
"
10278,source/pymupdf.pdf,"• “Inline” images (see page 214 of the Adobe PDF References) of a PDF page are contained in a textpage,
but do not appear in Page.get_images().
"
10279,source/pymupdf.pdf,"• Annotations may also contain images – these will not appear in Page.get_images().
"
10280,source/pymupdf.pdf,"• Image blocks in a textpage are generated for every image location – whether or not there are any duplicates.
This is in contrast to Page.get_images(), which will list each image only once (per reference name).
"
10281,source/pymupdf.pdf,"• Images mentioned in the page’s object definition will always appear in Page.get_images()1. But it
may happen, that there is no “display” command in the page’s contents (erroneously or on purpose). In
this case the image will not appear in the textpage.
"
10282,source/pymupdf.pdf,"3. The image’s “transformation matrix” is defined as the matrix, for which the expression bbox / transform ==
fitz.Rect(0, 0, 1, 1) is true, lookup details here: Image Transformation Matrix.
"
10283,source/pymupdf.pdf,"Text block:
"
10284,source/pymupdf.pdf,"Key
Value
"
10285,source/pymupdf.pdf,"type
0 = text (int)
"
10286,source/pymupdf.pdf,"bbox
block rectangle, rect_like
"
10287,source/pymupdf.pdf,"number
block count (int)
"
10288,source/pymupdf.pdf,"lines
list of text line dictionaries
"
10289,source/pymupdf.pdf,"1 Image specifications for a PDF page are done in a page’s (sub-) dictionary, called /Resources. Resource dictionaries can be inherited
from any of the page’s parent objects (usually the catalog – the top-level parent). The PDF creator may e.g. define one /Resources on file level,
naming all images and / or all fonts ever used by any page. In these cases, Page.get_images() and Page.get_fonts() will consequently return
the same lists for all pages. If desired, this situation can be reverted using Page.clean_contents(). After execution, the page’s object definition
will show fonts and images that are actually used.
"
10290,source/pymupdf.pdf,"19.21. TextPage
369
"
10291,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10292,source/pymupdf.pdf,"Line Dictionary
"
10293,source/pymupdf.pdf,"Key
Value
"
10294,source/pymupdf.pdf,"bbox
line rectangle, rect_like
"
10295,source/pymupdf.pdf,"wmode
writing mode (int): 0 = horizontal, 1 = vertical
"
10296,source/pymupdf.pdf,"dir
writing direction, point_like
"
10297,source/pymupdf.pdf,"spans
list of span dictionaries
"
10298,source/pymupdf.pdf,"The value of key “dir” is the unit vector dir = (cosine, -sine) of the angle, which the text has relative to the
x-axis2. See the following picture: The word in each quadrant (counter-clockwise from top-right to bottom-right) is
rotated by 30, 120, 210 and 300 degrees respectively.
"
10299,source/pymupdf.pdf,"Span Dictionary
"
10300,source/pymupdf.pdf,"Spans contain the actual text. A line contains more than one span only, if it contains text with different font properties.
"
10301,source/pymupdf.pdf,"• Changed in version 1.14.17 Spans now also have a bbox key (again).
"
10302,source/pymupdf.pdf,"• Changed in version 1.17.6 Spans now also have an origin key.
"
10303,source/pymupdf.pdf,"2 The coordinate systems of MuPDF and PDF are different in that MuPDF uses the page’s top-left point as (0, 0). In PDF, this is the bottom-left
point. Therefore, the positive direction for MuPDF’s y-axis is from top to bottom. This causes the sign change for the sine value here: a negative
value indicates anti-clockwise rotation of the text.
"
10304,source/pymupdf.pdf,"370
Chapter 19. Classes
"
10305,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10306,source/pymupdf.pdf,"Key
Value
"
10307,source/pymupdf.pdf,"bbox
span rectangle, rect_like
"
10308,source/pymupdf.pdf,"origin
the first character’s origin, point_like
"
10309,source/pymupdf.pdf,"font
font name (str)
"
10310,source/pymupdf.pdf,"ascender
ascender of the font (float)
"
10311,source/pymupdf.pdf,"descender
descender of the font (float)
"
10312,source/pymupdf.pdf,"size
font size (float)
"
10313,source/pymupdf.pdf,"flags
font characteristics (int)
"
10314,source/pymupdf.pdf,"color
text color in sRGB format (int)
"
10315,source/pymupdf.pdf,"text
(only for extractDICT()) text (str)
"
10316,source/pymupdf.pdf,"chars
(only for extractRAWDICT()) list of character dictionaries
"
10317,source/pymupdf.pdf,"(New in version 1.16.0): “color” is the text color encoded in sRGB (int) format, e.g. 0xFF0000 for red. There are
functions for converting this integer back to formats (r, g, b) (PDF with float values from 0 to 1) sRGB_to_pdf(), or
(R, G, B), sRGB_to_rgb() (with integer values from 0 to 255).
"
10318,source/pymupdf.pdf,"(New in v1.18.5): “ascender” and “descender” are font properties, provided relative to fontsize 1. Note that de-
scender is a negative value. The following picture shows the relationship to other values and properties.
"
10319,source/pymupdf.pdf,"These numbers may be used to compute the minimum height of a character (or span) – as opposed to the standard
height provided in the “bbox” values (which actually represents the line height). The following code recalculates the
span bbox to have a height of fontsize exactly fitting the text inside:
"
10320,source/pymupdf.pdf,">>> a = span[""ascender""]
>>> d = span[""descender""]
>>> r = fitz.Rect(span[""bbox""])
>>> o = fitz.Point(span[""origin""])
# its y-value is the baseline
"
10321,source/pymupdf.pdf,">>> r.y1 = o.y - span[""size""] * d / (a - d)
>>> r.y0 = r.y1 - span[""size""]
>>> # r now is a rectangle of height 'fontsize'
"
10322,source/pymupdf.pdf,"Caution: The above calculation may deliver a larger height! This may e.g. happen for OCRed documents, where
the risk of all sorts of text artifacts is high. MuPDF tries to come up with a reasonable bbox height, indepen-
dently from the fontsize found in the PDF. So please ensure that the height of span[""bbox""] is larger than
span[""size""].
"
10323,source/pymupdf.pdf,"19.21. TextPage
371
"
10324,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10325,source/pymupdf.pdf,"Note:
You may request PyMuPDF to do all of the above automatically by executing fitz.TOOLS.
set_small_glyph_heights(True). This sets a global parameter so that all subsequent text searches and text ex-
tractions are based on reduced glyph heights, where meaningful.
"
10326,source/pymupdf.pdf,"The following shows the original span rectangle in red and the rectangle with re-computed height in blue.
"
10327,source/pymupdf.pdf,"“flags” is an integer, which represents font properties except for the first bit 0. They are to be interpreted like this:
"
10328,source/pymupdf.pdf,"• bit 0: superscripted (20) – not a font property, detected by MuPDF code.
"
10329,source/pymupdf.pdf,"• bit 1: italic (21)
"
10330,source/pymupdf.pdf,"• bit 2: serifed (22)
"
10331,source/pymupdf.pdf,"• bit 3: monospaced (23)
"
10332,source/pymupdf.pdf,"• bit 4: bold (24)
"
10333,source/pymupdf.pdf,"Test these characteristics like so:
"
10334,source/pymupdf.pdf,">>> if flags & 2**1: print(""italic"")
>>> # etc.
"
10335,source/pymupdf.pdf,"Bits 1 thru 4 are font properties, i.e. encoded in the font program. Please note, that this information is not necessarily
correct or complete: fonts quite often contain wrong data here.
"
10336,source/pymupdf.pdf,"Character Dictionary for extractRAWDICT()
"
10337,source/pymupdf.pdf,"Key
Value
"
10338,source/pymupdf.pdf,"origin
character’s left baseline point, point_like
"
10339,source/pymupdf.pdf,"bbox
character rectangle, rect_like
"
10340,source/pymupdf.pdf,"c
the character (unicode)
"
10341,source/pymupdf.pdf,"This image shows the relationship between a character’s bbox and its quad:
"
10342,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
10343,source/pymupdf.pdf,"372
Chapter 19. Classes
"
10344,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10345,source/pymupdf.pdf,"19.22 TextWriter
"
10346,source/pymupdf.pdf,"• New in v1.16.18
"
10347,source/pymupdf.pdf,"This class represents a MuPDF text object. The basic idea is to decouple (1) text preparation, and (2) text output to
PDF pages.
"
10348,source/pymupdf.pdf,"During preparation, a text writer stores any number of text pieces (“spans”) together with their positions and individual
font information. The output of the writer’s prepared content may happen multiple times to any PDF page with a
compatible page size.
"
10349,source/pymupdf.pdf,"A text writer is an elegant alternative to methods Page.insert_text() and friends:
"
10350,source/pymupdf.pdf,"• Improved text positioning: Choose any point where insertion of text should start. Storing text returns the
“cursor position” after the last character of the span.
"
10351,source/pymupdf.pdf,"• Free font choice: Each text span has its own font and fontsize. This lets you easily switch when composing
a larger text.
"
10352,source/pymupdf.pdf,"• Automatic fallback fonts: If a character is not supported by the chosen font, alternative fonts are automatically
searched. This significantly reduces the risk of seeing unprintable symbols in the output (“TOFUs” – looking
like a small rectangle). PyMuPDF now also comes with the universal font “Droid Sans Fallback Regular”,
which supports all Latin characters (including Cyrillic and Greek), and all CJK characters (Chinese, Japanese,
Korean).
"
10353,source/pymupdf.pdf,"• Cyrillic and Greek Support: The PDF Base 14 Fonts have integrated support of Cyrillic and Greek characters
without specifying encoding. Your text may be a mixture of Latin, Greek and Cyrillic.
"
10354,source/pymupdf.pdf,"• Transparency support: Parameter opacity is supported. This offers a handy way to create watermark-style text.
"
10355,source/pymupdf.pdf,"• Justified text: Supported for any font – not just simple fonts as in Page.insert_textbox().
"
10356,source/pymupdf.pdf,"• Reusability: A TextWriter object exists independent from PDF pages. It can be written multiple times, either to
the same or to other pages, in the same or in different PDFs, choosing different colors or transparency.
"
10357,source/pymupdf.pdf,"Using this object entails three steps:
"
10358,source/pymupdf.pdf,"1. When created, a TextWriter requires a fixed page rectangle in relation to which it calculates text positions. A
text writer can write to pages of this size only.
"
10359,source/pymupdf.pdf,"2. Store text in the TextWriter using methods TextWriter.append(),
TextWriter.appendv() and
"
10360,source/pymupdf.pdf,"TextWriter.fill_textbox() as often as is desired.
"
10361,source/pymupdf.pdf,"3. Output the TextWriter object on some PDF page(s).
"
10362,source/pymupdf.pdf,"Note:
"
10363,source/pymupdf.pdf,"• Starting with version 1.17.0, TextWriters do support text rotation via the morph parameter of TextWriter.
write_text().
"
10364,source/pymupdf.pdf,"• There also exists Page.write_text() which combines one or more TextWriters and jointly writes them to a
given rectangle and with a given rotation angle – much like Page.show_pdf_page().
"
10365,source/pymupdf.pdf,"19.22. TextWriter
373
"
10366,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10367,source/pymupdf.pdf,"Method / Attribute
Short Description
"
10368,source/pymupdf.pdf,"append()
Add text in horizontal write mode
"
10369,source/pymupdf.pdf,"appendv()
Add text in vertical write mode
"
10370,source/pymupdf.pdf,"fill_textbox()
Fill rectangle (horizontal write mode)
"
10371,source/pymupdf.pdf,"write_text()
Output TextWriter to a PDF page
"
10372,source/pymupdf.pdf,"color
Text color (can be changed)
"
10373,source/pymupdf.pdf,"last_point
Last written character ends here
"
10374,source/pymupdf.pdf,"opacity
Text opacity (can be changed)
"
10375,source/pymupdf.pdf,"rect
Page rectangle used by this TextWriter
"
10376,source/pymupdf.pdf,"text_rect
Area occupied so far
"
10377,source/pymupdf.pdf,"Class API
"
10378,source/pymupdf.pdf,"class TextWriter
"
10379,source/pymupdf.pdf,"__init__(self, rect, opacity=1, color=None)
"
10380,source/pymupdf.pdf,"Parameters
"
10381,source/pymupdf.pdf,"• rect (rect-like) – rectangle internally used for text positioning computations.
"
10382,source/pymupdf.pdf,"• opacity (float) – sets the transparency for the text to store here. Values outside
the interval [0, 1) will be ignored. A value of e.g. 0.5 means 50% transparency.
"
10383,source/pymupdf.pdf,"• color (float,sequ) – the color of the text. All colors are specified as floats 0
<= color <= 1. A single float represents some gray level, a sequence implies the
colorspace via its length.
"
10384,source/pymupdf.pdf,"append(pos, text, font=None, fontsize=11, language=None, right_to_left=False, small_caps=0)
"
10385,source/pymupdf.pdf,"• Changed in v1.18.9
"
10386,source/pymupdf.pdf,"• Changed in v1.18.15
"
10387,source/pymupdf.pdf,"Add some new text in horizontal writing.
"
10388,source/pymupdf.pdf,"Parameters
"
10389,source/pymupdf.pdf,"• pos (point_like) – start position of the text, the bottom left point of the first
character.
"
10390,source/pymupdf.pdf,"• text (str) – a string of arbitrary length. It will be written starting at position “pos”.
"
10391,source/pymupdf.pdf,"• font – a Font. If omitted, fitz.Font(""helv"") will be used.
"
10392,source/pymupdf.pdf,"• fontsize (float) – the fontsize, a positive number, default 11.
"
10393,source/pymupdf.pdf,"• language (str) – the language to use, e.g. “en” for English. Meaningful values
should be compliant with the ISO 639 standards 1, 2, 3 or 5. Reserved for future
use: currently has no effect as far as we know.
"
10394,source/pymupdf.pdf,"• right_to_left (bool) – (New in v1.18.9) whether the text should be written from
right to left. Applicable for languages like Arabian or Hebrew. Default is False.
If True, any Latin parts within the text will automatically converted. There are
no other consequences, i.e. TextWriter.last_point will still be the rightmost
character, and there neither is any alignment taking place. Hence you may want to
use TextWriter.fill_textbox() instead.
"
10395,source/pymupdf.pdf,"• small_caps (bool) – (New in v1.18.15) look for the character’s Small Capital ver-
sion in the font. If present, take that value instead. Otherwise the original character
"
10396,source/pymupdf.pdf,"374
Chapter 19. Classes
"
10397,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10398,source/pymupdf.pdf,"(this font or the fallback font) will be taken. The fallback font will never return small
caps. For example, this snippet:
"
10399,source/pymupdf.pdf,">>> doc = fitz.open()
>>> page = doc.new_page()
>>> text = ""PyMuPDF: the Python bindings for MuPDF""
>>> font = fitz.Font(""figo"")
# choose a font with small caps
"
10400,source/pymupdf.pdf,">>> tw = fitz.TextWriter(page.rect)
>>> tw.append((50,100), text, font=font, small_caps=True)
>>> tw.write_text(page)
>>> doc.ez_save(""x.pdf"")
"
10401,source/pymupdf.pdf,"will produce this PDF text:
"
10402,source/pymupdf.pdf,"Returns
"
10403,source/pymupdf.pdf,"text_rect and last_point. (Changed in v1.18.0:) Raises an exception for an unsup-
ported font – checked via Font.is_writable.
"
10404,source/pymupdf.pdf,"appendv(pos, text, font=None, fontsize=11, language=None, small_caps=0)
"
10405,source/pymupdf.pdf,"Changed in v1.18.15
"
10406,source/pymupdf.pdf,"Add some new text in vertical, top-to-bottom writing.
"
10407,source/pymupdf.pdf,"Parameters
"
10408,source/pymupdf.pdf,"• pos (point_like) – start position of the text, the bottom left point of the first
character.
"
10409,source/pymupdf.pdf,"• text (str) – a string. It will be written starting at position “pos”.
"
10410,source/pymupdf.pdf,"• font – a Font. If omitted, fitz.Font(""helv"") will be used.
"
10411,source/pymupdf.pdf,"• fontsize (float) – the fontsize, a positive float, default 11.
"
10412,source/pymupdf.pdf,"• language (str) – the language to use, e.g. “en” for English. Meaningful values
should be compliant with the ISO 639 standards 1, 2, 3 or 5. Reserved for future
use: currently has no effect as far as we know.
"
10413,source/pymupdf.pdf,"• small_caps (bool) – (New in v1.18.15) see append().
"
10414,source/pymupdf.pdf,"Returns
"
10415,source/pymupdf.pdf,"text_rect and last_point. (Changed in v1.18.0:) Raises an exception for an unsup-
ported font – checked via Font.is_writable.
"
10416,source/pymupdf.pdf,"fill_textbox(rect, text, *, pos=None, font=None, fontsize=11, align=0, right_to_left=False, warn=None,
small_caps=0)
"
10417,source/pymupdf.pdf,"• Changed in 1.17.3: New parameter pos to specify where to start writing within rectangle.
"
10418,source/pymupdf.pdf,"• Changed in v1.18.9: Return list of lines which do not fit in rectangle. Support writing right-to-left
(e.g. Arabian, Hebrew).
"
10419,source/pymupdf.pdf,"• Changed in v1.18.15: Prefer small caps if supported by the font.
"
10420,source/pymupdf.pdf,"Fill a given rectangle with text in horizontal writing mode. This is a convenience method to use as an
alternative for append().
"
10421,source/pymupdf.pdf,"Parameters
"
10422,source/pymupdf.pdf,"• rect (rect_like) – the area to fill. No part of the text will appear outside of this.
"
10423,source/pymupdf.pdf,"19.22. TextWriter
375
"
10424,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10425,source/pymupdf.pdf,"• text (str,sequ) – the text. Can be specified as a (UTF-8) string or a list / tuple
of strings. A string will first be converted to a list using splitlines(). Every list item
will begin on a new line (forced line breaks).
"
10426,source/pymupdf.pdf,"• pos (point_like) – (new in v1.17.3) start storing at this point. Default is a point
near rectangle top-left.
"
10427,source/pymupdf.pdf,"• font – the Font, default fitz.Font(""helv"").
"
10428,source/pymupdf.pdf,"• fontsize (float) – the fontsize.
"
10429,source/pymupdf.pdf,"• align
(int)
–
text
alignment.
Use
one
of
TEXT_ALIGN_LEFT,
TEXT_ALIGN_CENTER, TEXT_ALIGN_RIGHT or TEXT_ALIGN_JUSTIFY.
"
10430,source/pymupdf.pdf,"• right_to_left (bool) – (New in v1.18.9) whether the text should be written from
right to left. Applicable for languages like Arabian or Hebrew. Default is False. If
True, any Latin parts are automatically reverted. You must still set the alignment (if
you want right alignment), it does not happen automatically – the other alignment
options remain available as well.
"
10431,source/pymupdf.pdf,"• warn (bool) – on text overflow do nothing, warn, or raise an exception. Overflow
text will never be written. Changed in v1.18.9:
"
10432,source/pymupdf.pdf,"– Default is None.
"
10433,source/pymupdf.pdf,"– The list of overflow lines will be returned.
"
10434,source/pymupdf.pdf,"• small_caps (bool) – (New in v1.18.15) see append().
"
10435,source/pymupdf.pdf,"Return type
"
10436,source/pymupdf.pdf,"list
"
10437,source/pymupdf.pdf,"Returns
"
10438,source/pymupdf.pdf,"New in v1.18.9 – List of lines that did not fit in the rectangle. Each item is a tuple (text,
length) containing a string and its length (on the page).
"
10439,source/pymupdf.pdf,"Note: Use these methods as often as is required – there is no technical limit (except memory constraints of your
system). You can also mix append() and text boxes and have multiple of both. Text positioning is exclusively
controlled by the insertion point. Therefore there is no need to adhere to any order. (Changed in v1.18.0:) Raise
an exception for an unsupported font – checked via Font.is_writable.
"
10440,source/pymupdf.pdf,"write_text(page, opacity=None, color=None, morph=None, overlay=True, oc=0, render_mode=0)
"
10441,source/pymupdf.pdf,"Write the TextWriter text to a page, which is the only mandatory parameter. The other parameters can be
used to temporarily override the values used when the TextWriter was created.
"
10442,source/pymupdf.pdf,"Parameters
"
10443,source/pymupdf.pdf,"• page – write to this Page.
"
10444,source/pymupdf.pdf,"• opacity (float) – override the value of the TextWriter for this output.
"
10445,source/pymupdf.pdf,"• color (sequ) – override the value of the TextWriter for this output.
"
10446,source/pymupdf.pdf,"• morph (sequ) – modify the text appearance by applying a matrix to it. If provided,
this must be a sequence (fixpoint, matrix) with a point-like fixpoint and a matrix-like
matrix. A typical example is rotating the text around fixpoint.
"
10447,source/pymupdf.pdf,"• overlay (bool) – put in foreground (default) or background.
"
10448,source/pymupdf.pdf,"• oc (int) – (new in v1.18.4) the xref of an OCG or OCMD.
"
10449,source/pymupdf.pdf,"376
Chapter 19. Classes
"
10450,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10451,source/pymupdf.pdf,"• render_mode (int) – The PDF Tr operator value. Values: 0 (default), 1, 2, 3
"
10452,source/pymupdf.pdf,"(invisible).
"
10453,source/pymupdf.pdf,"text_rect
"
10454,source/pymupdf.pdf,"The area currently occupied.
"
10455,source/pymupdf.pdf,"Return type
"
10456,source/pymupdf.pdf,"Rect
"
10457,source/pymupdf.pdf,"last_point
"
10458,source/pymupdf.pdf,"The “cursor position” – a Point – after the last written character (its bottom-right).
"
10459,source/pymupdf.pdf,"Return type
"
10460,source/pymupdf.pdf,"Point
"
10461,source/pymupdf.pdf,"opacity
"
10462,source/pymupdf.pdf,"The text opacity (modifiable).
"
10463,source/pymupdf.pdf,"Return type
"
10464,source/pymupdf.pdf,"float
"
10465,source/pymupdf.pdf,"color
"
10466,source/pymupdf.pdf,"The text color (modifiable).
"
10467,source/pymupdf.pdf,"Return type
"
10468,source/pymupdf.pdf,"float,tuple
"
10469,source/pymupdf.pdf,"rect
"
10470,source/pymupdf.pdf,"The page rectangle for which this TextWriter was created. Must not be modified.
"
10471,source/pymupdf.pdf,"Return type
"
10472,source/pymupdf.pdf,"Rect
"
10473,source/pymupdf.pdf,"Note: To see some demo scripts dealing with TextWriter, have a look at this repository.
"
10474,source/pymupdf.pdf,"1. Opacity and color apply to all the text in this object.
"
10475,source/pymupdf.pdf,"2. If you need different colors / transparency, you must create a separate TextWriter. Whenever you determine
the color should change, simply append the text to the respective TextWriter using the previously returned
last_point as position for the new text span.
"
10476,source/pymupdf.pdf,"3. Appending items or text boxes can occur in arbitrary order: only the position parameter controls where text
appears.
"
10477,source/pymupdf.pdf,"4. Font and fontsize can freely vary within the same TextWriter. This can be used to let text with different
properties appear on the same displayed line: just specify pos accordingly, and e.g. set it to last_point of the
previously added item.
"
10478,source/pymupdf.pdf,"19.22. TextWriter
377
"
10479,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10480,source/pymupdf.pdf,"5. You can use the pos argument of TextWriter.fill_textbox() to set the position of the first text character.
This allows filling the same textbox with contents from different TextWriter objects, thus allowing for multiple
colors, opacities, etc.
"
10481,source/pymupdf.pdf,"6. MuPDF does not support all fonts with this feature, e.g. no Type3 fonts. Starting with v1.18.0 this can be checked
via the font attribute Font.is_writable. This attribute is also checked when using TextWriter methods.
"
10482,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
10483,source/pymupdf.pdf,"19.23 Tools
"
10484,source/pymupdf.pdf,"This class is a collection of utility methods and attributes, mainly around memory management. To simplify and speed
up its use, it is automatically instantiated under the name TOOLS when PyMuPDF is imported.
"
10485,source/pymupdf.pdf,"Method / Attribute
Description
"
10486,source/pymupdf.pdf,"Tools.gen_id()
generate a unique identifier
"
10487,source/pymupdf.pdf,"Tools.store_shrink()
shrink the storables cache1
"
10488,source/pymupdf.pdf,"Tools.mupdf_warnings()
return the accumulated MuPDF warnings
"
10489,source/pymupdf.pdf,"Tools.mupdf_display_errors()
return the accumulated MuPDF warnings
"
10490,source/pymupdf.pdf,"Tools.reset_mupdf_warnings()
empty MuPDF messages on STDOUT
"
10491,source/pymupdf.pdf,"Tools.set_aa_level()
set the anti-aliasing values
"
10492,source/pymupdf.pdf,"Tools.set_annot_stem()
set the prefix of new annotation / link ids
"
10493,source/pymupdf.pdf,"Tools.set_small_glyph_heights()
search and extract using small bbox heights
"
10494,source/pymupdf.pdf,"Tools.set_subset_fontnames()
control suppression of subset fontname tags
"
10495,source/pymupdf.pdf,"Tools.show_aa_level()
return the anti-aliasing values
"
10496,source/pymupdf.pdf,"Tools.unset_quad_corrections()
disable PyMuPDF-specific code
"
10497,source/pymupdf.pdf,"Tools.fitz_config
configuration settings of PyMuPDF
"
10498,source/pymupdf.pdf,"Tools.store_maxsize
maximum storables cache size
"
10499,source/pymupdf.pdf,"Tools.store_size
current storables cache size
"
10500,source/pymupdf.pdf,"Class API
"
10501,source/pymupdf.pdf,"class Tools
"
10502,source/pymupdf.pdf,"gen_id()
"
10503,source/pymupdf.pdf,"A convenience method returning a unique positive integer which will increase by 1 on every invocation.
Example usages include creating unique keys in databases - its creation should be faster than using times-
tamps by an order of magnitude.
"
10504,source/pymupdf.pdf,"Note: MuPDF has dropped support for this in v1.14.0, so we have re-implemented a similar function with
the following differences:
"
10505,source/pymupdf.pdf,"• It is not part of MuPDF’s global context and not threadsafe (not an issue because we do not support
threads in PyMuPDF anyway).
"
10506,source/pymupdf.pdf,"1 This memory area is internally used by MuPDF, and it serves as a cache for objects that have already been read and interpreted, thus improving
performance. The most bulky object types are images and also fonts. When an application starts up the MuPDF library (in our case this happens as
part of import fitz), it must specify a maximum size for this area. PyMuPDF’s uses the default value (256 MB) to limit memory consumption. Use
the methods here to control or investigate store usage. For example: even after a document has been closed and all related objects have been deleted,
the store usage may still not drop down to zero. So you might want to enforce that before opening another document.
"
10507,source/pymupdf.pdf,"378
Chapter 19. Classes
"
10508,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10509,source/pymupdf.pdf,"• It is implemented as int. This means that the maximum number is sys.maxsize. Should this number
ever be exceeded, the counter starts over again at 1.
"
10510,source/pymupdf.pdf,"Return type
"
10511,source/pymupdf.pdf,"int
"
10512,source/pymupdf.pdf,"Returns
"
10513,source/pymupdf.pdf,"a unique positive integer.
"
10514,source/pymupdf.pdf,"set_annot_stem(stem=None)
"
10515,source/pymupdf.pdf,"• New in v1.18.6
"
10516,source/pymupdf.pdf,"Set or inquire the prefix for the id of new annotations, fields or links.
"
10517,source/pymupdf.pdf,"Parameters
"
10518,source/pymupdf.pdf,"stem (str) – if omitted, the current value is returned, default is “fitz”. Annotations,
fields / widgets and links technically are subtypes of the same type of object (/Annot) in
PDF documents. An /Annot object may be given a unique identifier within a page. For
each of the applicable subtypes, PyMuPDF generates identifiers “stem-Annn”, “stem-
Wnnn” or “stem-Lnnn” respectively. The number “nnn” is used to enforce the required
uniqueness.
"
10519,source/pymupdf.pdf,"Return type
"
10520,source/pymupdf.pdf,"str
"
10521,source/pymupdf.pdf,"Returns
"
10522,source/pymupdf.pdf,"the current value.
"
10523,source/pymupdf.pdf,"set_small_glyph_heights(on=None)
"
10524,source/pymupdf.pdf,"• New in v1.18.5
"
10525,source/pymupdf.pdf,"Set or inquire reduced bbox heights in text extract and text search methods.
"
10526,source/pymupdf.pdf,"Parameters
"
10527,source/pymupdf.pdf,"on (bool) – if omitted or None, the current setting is returned. For other values the bool()
function is applied to set a global variable. If True, Page.search_for() and Page.
get_text() methods return character, span, line or block bboxes that have a height of
font size. If False (standard setting when PyMuPDF is imported), bbox height will be
based on font properties and normally equal line height.
"
10528,source/pymupdf.pdf,"Return type
"
10529,source/pymupdf.pdf,"bool
"
10530,source/pymupdf.pdf,"Returns
"
10531,source/pymupdf.pdf,"True or False.
"
10532,source/pymupdf.pdf,"Note:
Text extraction options “xml”, “xhtml” and “html”, which directly wrap MuPDF code, are not
influenced by this.
"
10533,source/pymupdf.pdf,"set_subset_fontnames(on=None)
"
10534,source/pymupdf.pdf,"• New in v1.18.9
"
10535,source/pymupdf.pdf,"Control suppression of subset fontname tags in text extractions.
"
10536,source/pymupdf.pdf,"19.23. Tools
379
"
10537,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10538,source/pymupdf.pdf,"Parameters
"
10539,source/pymupdf.pdf,"on (bool) – if omitted / None, the current setting is returned. Arguments evaluat-
ing to True or False set a global variable. If True, options “dict”, “json”, “raw-
dict” and “rawjson” will return e.g.
""NOHSJV+Calibri-Light"", otherwise only
""Calibri-Light"" (the default). The setting remains in effect until changed again.
"
10540,source/pymupdf.pdf,"Return type
"
10541,source/pymupdf.pdf,"bool
"
10542,source/pymupdf.pdf,"Returns
"
10543,source/pymupdf.pdf,"True or False.
"
10544,source/pymupdf.pdf,"Note: Except mentioned above, no other text extraction variants are influenced by this. This is especially
true for the options “xml”, “xhtml” and “html”, which are based on MuPDF code. They extract the font
name ""Calibri-Light"", or even just the family name – Calibri in this example.
"
10545,source/pymupdf.pdf,"unset_quad_corrections(on=None)
"
10546,source/pymupdf.pdf,"• New in v1.18.10
"
10547,source/pymupdf.pdf,"Enable / disable PyMuPDF-specific code, that tries to rebuild valid character quads when encountering
nonsense in Page.get_text() text extractions. This code depends on certain font properties (ascender
and descender), which do not exist in rare situations and cause segmentation faults when trying to access
them. This method sets a global parameter in PyMuPDF, which suppresses execution of this code.
"
10548,source/pymupdf.pdf,"Parameters
"
10549,source/pymupdf.pdf,"on (bool) – if omitted or None, the current setting is returned. For other values the
bool() function is applied to set a global variable. If True, PyMuPDF will not try to
access the resp. font properties and use values ascender=0.8 and descender=-0.2
instead.
"
10550,source/pymupdf.pdf,"Return type
"
10551,source/pymupdf.pdf,"bool
"
10552,source/pymupdf.pdf,"Returns
"
10553,source/pymupdf.pdf,"True or False.
"
10554,source/pymupdf.pdf,"store_shrink(percent)
"
10555,source/pymupdf.pdf,"Reduce the storables cache by a percentage of its current size.
"
10556,source/pymupdf.pdf,"Parameters
"
10557,source/pymupdf.pdf,"percent (int) – the percentage of current size to free. If 100+ the store will be emptied,
if zero, nothing will happen. MuPDF’s caching strategy is “least recently used”, so low-
usage elements get deleted first.
"
10558,source/pymupdf.pdf,"Return type
"
10559,source/pymupdf.pdf,"int
"
10560,source/pymupdf.pdf,"Returns
"
10561,source/pymupdf.pdf,"the new current store size. Depending on the situation, the size reduction may be larger
than the requested percentage.
"
10562,source/pymupdf.pdf,"show_aa_level()
"
10563,source/pymupdf.pdf,"• New in version 1.16.14
"
10564,source/pymupdf.pdf,"Return the current anti-aliasing values. These values control the rendering quality of graphics and text
elements.
"
10565,source/pymupdf.pdf,"380
Chapter 19. Classes
"
10566,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10567,source/pymupdf.pdf,"Return type
"
10568,source/pymupdf.pdf,"dict
"
10569,source/pymupdf.pdf,"Returns
"
10570,source/pymupdf.pdf,"A dictionary with the following initial content: {'graphics':
8, 'text':
8,
'graphics_min_line_width':
0.0}.
"
10571,source/pymupdf.pdf,"set_aa_level(level)
"
10572,source/pymupdf.pdf,"• New in version 1.16.14
"
10573,source/pymupdf.pdf,"Set the new number of bits to use for anti-aliasing. The same value is taken currently for graphics and text
rendering. This might change in a future MuPDF release.
"
10574,source/pymupdf.pdf,"Parameters
"
10575,source/pymupdf.pdf,"level (int) – an integer ranging between 0 and 8. Value outside this range will be
silently changed to valid values. The value will remain in effect throughout the current
session or until changed again.
"
10576,source/pymupdf.pdf,"reset_mupdf_warnings()
"
10577,source/pymupdf.pdf,"• New in version 1.16.0
"
10578,source/pymupdf.pdf,"Empty MuPDF warnings message buffer.
"
10579,source/pymupdf.pdf,"mupdf_display_errors(value=None)
"
10580,source/pymupdf.pdf,"• New in version 1.16.8
"
10581,source/pymupdf.pdf,"Show or set whether MuPDF errors should be displayed.
"
10582,source/pymupdf.pdf,"Parameters
"
10583,source/pymupdf.pdf,"value (bool) – if not a bool, the current setting is returned. If true, MuPDF errors
will be shown on sys.stderr, otherwise suppressed. In any case, messages continue to be
stored in the warnings store. Upon import of PyMuPDF this value is True.
"
10584,source/pymupdf.pdf,"Returns
"
10585,source/pymupdf.pdf,"True or False
"
10586,source/pymupdf.pdf,"mupdf_warnings(reset=True)
"
10587,source/pymupdf.pdf,"• New in version 1.16.0
"
10588,source/pymupdf.pdf,"Return all stored MuPDF messages as a string with interspersed line-breaks.
"
10589,source/pymupdf.pdf,"Parameters
"
10590,source/pymupdf.pdf,"reset (bool) – (new in version 1.16.7) whether to automatically empty the store.
"
10591,source/pymupdf.pdf,"fitz_config
"
10592,source/pymupdf.pdf,"A dictionary containing the actual values used for configuring PyMuPDF and MuPDF. Also refer to the
installation chapter. This is an overview of the keys, each of which describes the status of a support aspect.
"
10593,source/pymupdf.pdf,"19.23. Tools
381
"
10594,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10595,source/pymupdf.pdf,"Key
Support included for ...
"
10596,source/pymupdf.pdf,"plotter-g
Gray colorspace rendering
"
10597,source/pymupdf.pdf,"plotter-rgb
RGB colorspace rendering
"
10598,source/pymupdf.pdf,"plotter-cmyk
CMYK colorspcae rendering
"
10599,source/pymupdf.pdf,"plotter-n
overprint rendering
"
10600,source/pymupdf.pdf,"pdf
PDF documents
"
10601,source/pymupdf.pdf,"xps
XPS documents
"
10602,source/pymupdf.pdf,"svg
SVG documents
"
10603,source/pymupdf.pdf,"cbz
CBZ documents
"
10604,source/pymupdf.pdf,"img
IMG documents
"
10605,source/pymupdf.pdf,"html
HTML documents
"
10606,source/pymupdf.pdf,"epub
EPUB documents
"
10607,source/pymupdf.pdf,"jpx
JPEG2000 images
"
10608,source/pymupdf.pdf,"js
JavaScript
"
10609,source/pymupdf.pdf,"tofu
all TOFU fonts
"
10610,source/pymupdf.pdf,"tofu-cjk
CJK font subset (China, Japan, Korea)
"
10611,source/pymupdf.pdf,"tofu-cjk-ext
CJK font extensions
"
10612,source/pymupdf.pdf,"tofu-cjk-lang
CJK font language extensions
"
10613,source/pymupdf.pdf,"tofu-emoji
TOFU emoji fonts
"
10614,source/pymupdf.pdf,"tofu-historic
TOFU historic fonts
"
10615,source/pymupdf.pdf,"tofu-symbol
TOFU symbol fonts
"
10616,source/pymupdf.pdf,"tofu-sil
TOFU SIL fonts
"
10617,source/pymupdf.pdf,"icc
ICC profiles
"
10618,source/pymupdf.pdf,"py-memory
using Python memory management2
"
10619,source/pymupdf.pdf,"base14
Base-14 fonts (should always be true)
"
10620,source/pymupdf.pdf,"For an explanation of the term “TOFU” see this Wikipedia article:
"
10621,source/pymupdf.pdf,"In [1]: import fitz
In [2]: TOOLS.fitz_config
Out[2]:
{'plotter-g': True,
"
10622,source/pymupdf.pdf,"'plotter-rgb': True,
'plotter-cmyk': True,
'plotter-n': True,
'pdf': True,
'xps': True,
'svg': True,
'cbz': True,
'img': True,
'html': True,
'epub': True,
'jpx': True,
'js': True,
'tofu': False,
'tofu-cjk': True,
'tofu-cjk-ext': False,
'tofu-cjk-lang': False,
'tofu-emoji': False,
"
10623,source/pymupdf.pdf,"(continues on next page)
"
10624,source/pymupdf.pdf,"2 By default PyMuPDF and MuPDF use malloc()/free() for dynamic memory management. One can instead force them to use the Python
allocation functions PyMem_New()/PyMem_Del(), by modifying fitz/fitz.i to do #define JM_MEMORY 1 and rebuilding PyMuPDF.
"
10625,source/pymupdf.pdf,"382
Chapter 19. Classes
"
10626,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10627,source/pymupdf.pdf,"(continued from previous page)
"
10628,source/pymupdf.pdf,"'tofu-historic': False,
'tofu-symbol': False,
'tofu-sil': False,
'icc': True,
'py-memory': False,
'base14': True}
"
10629,source/pymupdf.pdf,"Return type
"
10630,source/pymupdf.pdf,"dict
"
10631,source/pymupdf.pdf,"store_maxsize
"
10632,source/pymupdf.pdf,"Maximum storables cache size in bytes. PyMuPDF is generated with a value of 268’435’456 (256 MB,
the default value), which you should therefore always see here. If this value is zero, then an “unlimited”
growth is permitted.
"
10633,source/pymupdf.pdf,"Return type
"
10634,source/pymupdf.pdf,"int
"
10635,source/pymupdf.pdf,"store_size
"
10636,source/pymupdf.pdf,"Current storables cache size in bytes. This value may change (and will usually increase) with every use of
a PyMuPDF function. It will (automatically) decrease only when Tools.store_maxsize is going to be
exceeded: in this case, MuPDF will evict low-usage objects until the value is again in range.
"
10637,source/pymupdf.pdf,"Return type
"
10638,source/pymupdf.pdf,"int
"
10639,source/pymupdf.pdf,"19.23.1 Example Session
"
10640,source/pymupdf.pdf,">>> import fitz
# print the maximum and current cache sizes
>>> fitz.TOOLS.store_maxsize
268435456
>>> fitz.TOOLS.store_size
0
>>> doc = fitz.open(""demo1.pdf"")
# pixmap creation puts lots of object in cache (text, images, fonts),
# apart from the pixmap itself
>>> pix = doc[0].get_pixmap(alpha=False)
>>> fitz.TOOLS.store_size
454519
# release (at least) 50% of the storage
>>> fitz.TOOLS.store_shrink(50)
13471
>>> fitz.TOOLS.store_size
13471
# get a few unique numbers
>>> fitz.TOOLS.gen_id()
1
>>> fitz.TOOLS.gen_id()
2
>>> fitz.TOOLS.gen_id()
"
10641,source/pymupdf.pdf,"(continues on next page)
"
10642,source/pymupdf.pdf,"19.23. Tools
383
"
10643,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10644,source/pymupdf.pdf,"(continued from previous page)
"
10645,source/pymupdf.pdf,"3
# close document and see how much cache is still in use
>>> doc.close()
>>> fitz.TOOLS.store_size
0
>>>
"
10646,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
10647,source/pymupdf.pdf,"19.24 Widget
"
10648,source/pymupdf.pdf,"This class represents a PDF Form field, also called a “widget”. Throughout this documentation, we are using these terms
synonymously. Fields technically are a special case of PDF annotations, which allow users with limited permissions to
enter information in a PDF. This is primarily used for filling out forms.
"
10649,source/pymupdf.pdf,"Like annotations, widgets live on PDF pages. Similar to annotations, the first widget on a page is accessible via Page.
first_widget and subsequent widgets can be accessed via the Widget.next property.
"
10650,source/pymupdf.pdf,"(Changed in version 1.16.0) MuPDF no longer treats widgets as a subset of general annotations. Consequently, Page.
first_annot and Annot.next() will deliver non-widget annotations exclusively, and be None if only form fields
exist on a page. Vice versa, Page.first_widget and Widget.next() will only show widgets. This design decision
is purely internal to MuPDF; technically, links, annotations and fields have a lot in common and also continue to share
the better part of their code within (Py-) MuPDF.
"
10651,source/pymupdf.pdf,"Class API
"
10652,source/pymupdf.pdf,"class Widget
"
10653,source/pymupdf.pdf,"button_states()
"
10654,source/pymupdf.pdf,"New in version 1.18.15
"
10655,source/pymupdf.pdf,"Return the names of On / Off (i.e. selected / clicked or not) states a button field may have.
While the ‘Off’ state usually is also named like so, the ‘On’ state is often given a name relating
to the functional context, for example ‘Yes’, ‘Female’, etc.
"
10656,source/pymupdf.pdf,"This method helps finding out the possible values of field_value in these cases.
"
10657,source/pymupdf.pdf,"returns
"
10658,source/pymupdf.pdf,"a dictionary with the names of ‘On’ and ‘Off’ for the normal and the pressed-
down appearance of button widgets. The following example shows that the
“selected” value is “Male”:
"
10659,source/pymupdf.pdf,">>> print(field.field_name, field.button_states())
Gender Second person {'down': ['Male', 'Off'], 'normal': [
"
10660,source/pymupdf.pdf,"˓→'Male', 'Off']}
"
10661,source/pymupdf.pdf,"on_state()
"
10662,source/pymupdf.pdf,"• New in version 1.22.2
"
10663,source/pymupdf.pdf,"Return the value of the “ON” state of check boxes and radio buttons. For check boxes this is
always the value “Yes”. For radio buttons, this is the value to select / activate the button.
"
10664,source/pymupdf.pdf,"384
Chapter 19. Classes
"
10665,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10666,source/pymupdf.pdf,"returns
"
10667,source/pymupdf.pdf,"the value that sets the button to “selected”.
For non-checkbox, non-
radiobutton fields, always None is returned. For check boxes the return is
True. For radio buttons this is the value “Male” in the following example:
"
10668,source/pymupdf.pdf,">>> print(field.field_name, field.button_states())
Gender Second person {'down': ['Male', 'Off'], 'normal': [
"
10669,source/pymupdf.pdf,"˓→'Male', 'Off']}
>>> print(field.on_state())
Male
"
10670,source/pymupdf.pdf,"So for check boxes and radio buttons, the recommended method to set them
to “selected”, or to check the state is the following:
"
10671,source/pymupdf.pdf,">>> field.field_value = field.on_state()
>>> field.field_value == field.on_state()
True
"
10672,source/pymupdf.pdf,"update()
"
10673,source/pymupdf.pdf,"After any changes to a widget, this method must be used to store them in the PDF1.
"
10674,source/pymupdf.pdf,"reset()
"
10675,source/pymupdf.pdf,"Reset the field’s value to its default – if defined – or remove it. Do not forget to issue update() afterwards.
"
10676,source/pymupdf.pdf,"next
"
10677,source/pymupdf.pdf,"Point to the next form field on the page. The last widget returns None.
"
10678,source/pymupdf.pdf,"border_color
"
10679,source/pymupdf.pdf,"A list of up to 4 floats defining the field’s border color. Default value is None which causes border style
and border width to be ignored.
"
10680,source/pymupdf.pdf,"border_style
"
10681,source/pymupdf.pdf,"A string defining the line style of the field’s border. See Annot.border. Default is “s” (“Solid”) – a
continuous line. Only the first character (upper or lower case) will be regarded when creating a widget.
"
10682,source/pymupdf.pdf,"border_width
"
10683,source/pymupdf.pdf,"A float defining the width of the border line. Default is 1.
"
10684,source/pymupdf.pdf,"border_dashes
"
10685,source/pymupdf.pdf,"A list/tuple of integers defining the dash properties of the border line. This is only meaningful if bor-
der_style == “D” and border_color is provided.
"
10686,source/pymupdf.pdf,"choice_values
"
10687,source/pymupdf.pdf,"Python sequence of strings defining the valid choices of list boxes and combo boxes. For these widget
types, this property is mandatory and must contain at least two items. Ignored for other types.
"
10688,source/pymupdf.pdf,"field_name
"
10689,source/pymupdf.pdf,"A mandatory string defining the field’s name. No checking for duplicates takes place.
"
10690,source/pymupdf.pdf,"field_label
"
10691,source/pymupdf.pdf,"An optional string containing an “alternate” field name. Typically used for any notes, help on field usage,
etc. Default is the field name.
"
10692,source/pymupdf.pdf,"1 If you intend to re-access a new or updated field (e.g. for making a pixmap), make sure to reload the page first. Either close and re-open the
document, or load another page first, or simply do page = doc.reload_page(page).
"
10693,source/pymupdf.pdf,"19.24. Widget
385
"
10694,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10695,source/pymupdf.pdf,"field_value
"
10696,source/pymupdf.pdf,"The value of the field.
"
10697,source/pymupdf.pdf,"field_flags
"
10698,source/pymupdf.pdf,"An integer defining a large amount of properties of a field. Be careful when changing this attribute as this
may change the field type.
"
10699,source/pymupdf.pdf,"field_type
"
10700,source/pymupdf.pdf,"A mandatory integer defining the field type. This is a value in the range of 0 to 6. It cannot be changed
when updating the widget.
"
10701,source/pymupdf.pdf,"field_type_string
"
10702,source/pymupdf.pdf,"A string describing (and derived from) the field type.
"
10703,source/pymupdf.pdf,"fill_color
"
10704,source/pymupdf.pdf,"A list of up to 4 floats defining the field’s background color.
"
10705,source/pymupdf.pdf,"button_caption
"
10706,source/pymupdf.pdf,"The caption string of a button-type field.
"
10707,source/pymupdf.pdf,"is_signed
"
10708,source/pymupdf.pdf,"A bool indicating the signing status of a signature field, else None.
"
10709,source/pymupdf.pdf,"rect
"
10710,source/pymupdf.pdf,"The rectangle containing the field.
"
10711,source/pymupdf.pdf,"text_color
"
10712,source/pymupdf.pdf,"A list of 1, 3 or 4 floats defining the text color. Default value is black ([0, 0, 0]).
"
10713,source/pymupdf.pdf,"text_font
"
10714,source/pymupdf.pdf,"A string defining the font to be used. Default and replacement for invalid values is “Helv”. For valid font
reference names see the table below.
"
10715,source/pymupdf.pdf,"text_fontsize
"
10716,source/pymupdf.pdf,"A float defining the text fontsize. Default value is zero, which causes PDF viewer software to dynami-
cally choose a size suitable for the annotation’s rectangle and text amount.
"
10717,source/pymupdf.pdf,"text_maxlen
"
10718,source/pymupdf.pdf,"An integer defining the maximum number of text characters. PDF viewers will (should) not accept a longer
text.
"
10719,source/pymupdf.pdf,"text_type
"
10720,source/pymupdf.pdf,"An integer defining acceptable text types (e.g. numeric, date, time, etc.). For reference only for the time
being – will be ignored when creating or updating widgets.
"
10721,source/pymupdf.pdf,"xref
"
10722,source/pymupdf.pdf,"The PDF xref of the widget.
"
10723,source/pymupdf.pdf,"script
"
10724,source/pymupdf.pdf,"• New in version 1.16.12
"
10725,source/pymupdf.pdf,"JavaScript text (unicode) for an action associated with the widget, or None. This is the only script action
supported for button type widgets.
"
10726,source/pymupdf.pdf,"script_stroke
"
10727,source/pymupdf.pdf,"• New in version 1.16.12
"
10728,source/pymupdf.pdf,"386
Chapter 19. Classes
"
10729,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10730,source/pymupdf.pdf,"JavaScript text (unicode) to be performed when the user types a key-stroke into a text field or combo box
or modifies the selection in a scrollable list box. This action can check the keystroke for validity and reject
or modify it. None if not present.
"
10731,source/pymupdf.pdf,"script_format
"
10732,source/pymupdf.pdf,"• New in version 1.16.12
"
10733,source/pymupdf.pdf,"JavaScript text (unicode) to be performed before the field is formatted to display its current value. This
action can modify the field’s value before formatting. None if not present.
"
10734,source/pymupdf.pdf,"script_change
"
10735,source/pymupdf.pdf,"• New in version 1.16.12
"
10736,source/pymupdf.pdf,"JavaScript text (unicode) to be performed when the field’s value is changed. This action can check the new
value for validity. None if not present.
"
10737,source/pymupdf.pdf,"script_calc
"
10738,source/pymupdf.pdf,"• New in version 1.16.12
"
10739,source/pymupdf.pdf,"JavaScript text (unicode) to be performed to recalculate the value of this field when that of another field
changes. None if not present.
"
10740,source/pymupdf.pdf,"script_blur
"
10741,source/pymupdf.pdf,"• New in version 1.22.6
"
10742,source/pymupdf.pdf,"JavaScript text (unicode) to be performed on losing the focus of this field. None if not present.
"
10743,source/pymupdf.pdf,"script_focus
"
10744,source/pymupdf.pdf,"• New in version 1.22.6
"
10745,source/pymupdf.pdf,"JavaScript text (unicode) to be performed on focusing this field. None if not present.
"
10746,source/pymupdf.pdf,"Note:
"
10747,source/pymupdf.pdf,"1. For adding or changing one of the above scripts,
"
10748,source/pymupdf.pdf,"just put the appropriate JavaScript source code in the widget attribute. To remove a script, set the
respective attribute to None.
"
10749,source/pymupdf.pdf,"2. Button fields only support script.
"
10750,source/pymupdf.pdf,"Other script entries will automatically be set to None.
"
10751,source/pymupdf.pdf,"3. It is worthwhile to look at this manual with lots of information about Adobe’s standard scripts for various
field types. For example, if you want to add a text field representing a date, you may want to store the
following scripts. They will ensure pattern-compatible date formats and display date pickers in supporting
viewers:
"
10752,source/pymupdf.pdf,"widget.script_format = 'AFDate_FormatEx(""mm/dd/yyyy"");'
widget.script_stroke = 'AFDate_KeystrokeEx(""mm/dd/yyyy"");'
"
10753,source/pymupdf.pdf,"19.24. Widget
387
"
10754,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10755,source/pymupdf.pdf,"19.24.1 Standard Fonts for Widgets
"
10756,source/pymupdf.pdf,"Widgets use their own resources object /DR. A widget resources object must at least contain a /Font object. Widget
fonts are independent from page fonts. We currently support the 14 PDF base fonts using the following fixed reference
names, or any name of an already existing field font. When specifying a text font for new or changed widgets, either
choose one in the first table column (upper and lower case supported), or one of the already existing form fonts. In the
latter case, spelling must exactly match.
"
10757,source/pymupdf.pdf,"To find out already existing field fonts, inspect the list Document.FormFonts.
"
10758,source/pymupdf.pdf,"Reference
Base14 Fontname
"
10759,source/pymupdf.pdf,"CoBI
Courier-BoldOblique
"
10760,source/pymupdf.pdf,"CoBo
Courier-Bold
"
10761,source/pymupdf.pdf,"CoIt
Courier-Oblique
"
10762,source/pymupdf.pdf,"Cour
Courier
"
10763,source/pymupdf.pdf,"HeBI
Helvetica-BoldOblique
"
10764,source/pymupdf.pdf,"HeBo
Helvetica-Bold
"
10765,source/pymupdf.pdf,"HeIt
Helvetica-Oblique
"
10766,source/pymupdf.pdf,"Helv
Helvetica (default)
"
10767,source/pymupdf.pdf,"Symb
Symbol
"
10768,source/pymupdf.pdf,"TiBI
Times-BoldItalic
"
10769,source/pymupdf.pdf,"TiBo
Times-Bold
"
10770,source/pymupdf.pdf,"TiIt
Times-Italic
"
10771,source/pymupdf.pdf,"TiRo
Times-Roman
"
10772,source/pymupdf.pdf,"ZaDb
ZapfDingbats
"
10773,source/pymupdf.pdf,"You are generally free to use any font for every widget. However, we recommend using ZaDb (“ZapfDingbats”) and
fontsize 0 for check boxes: typical viewers will put a correctly sized tickmark in the field’s rectangle, when it is
clicked.
"
10774,source/pymupdf.pdf,"19.24.2 Supported Widget Types
"
10775,source/pymupdf.pdf,"PyMuPDF supports the creation and update of many, but not all widget types.
"
10776,source/pymupdf.pdf,"• text (PDF_WIDGET_TYPE_TEXT)
"
10777,source/pymupdf.pdf,"• push button (PDF_WIDGET_TYPE_BUTTON)
"
10778,source/pymupdf.pdf,"• check box (PDF_WIDGET_TYPE_CHECKBOX)
"
10779,source/pymupdf.pdf,"• combo box (PDF_WIDGET_TYPE_COMBOBOX)
"
10780,source/pymupdf.pdf,"• list box (PDF_WIDGET_TYPE_LISTBOX)
"
10781,source/pymupdf.pdf,"• radio button (PDF_WIDGET_TYPE_RADIOBUTTON): PyMuPDF does not currently support the creation of groups
of (interconnected) radio buttons, where setting one automatically unsets the other buttons in the group. The
widget object also does not reflect the presence of a button group. However: consistently selecting (or unse-
lecting) a radio button is supported. This includes correctly setting the value maintained in the owning button
group. Selecting a radio button may be done by either assigning True or field.on_state() to the field value.
De-selecting the button should be done assigning False.
"
10782,source/pymupdf.pdf,"• signature (PDF_WIDGET_TYPE_SIGNATURE) read only.
"
10783,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
10784,source/pymupdf.pdf,"388
Chapter 19. Classes
"
10785,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10786,source/pymupdf.pdf,"19.25 Xml
"
10787,source/pymupdf.pdf,"• New in v1.21.0
"
10788,source/pymupdf.pdf,"This represents an HTML or an XML node. It is a helper class intended to access the DOM (Document Object Model)
content of a Story object.
"
10789,source/pymupdf.pdf,"There is no need to ever directly construct an Xml object: after creating a Story, simply take Story.body – which is
an Xml node – and use it to navigate your way through the story’s DOM.
"
10790,source/pymupdf.pdf,"Method / Attribute
Description
"
10791,source/pymupdf.pdf,"add_bullet_list()
Add a ul tag - bulleted list, context manager.
"
10792,source/pymupdf.pdf,"add_codeblock()
Add a pre tag, context manager.
"
10793,source/pymupdf.pdf,"add_description_list()
Add a dl tag, context manager.
"
10794,source/pymupdf.pdf,"add_division()
add a div tag (renamed from “section”), context manager.
"
10795,source/pymupdf.pdf,"add_header()
Add a header tag (one of h1 to h6), context manager.
"
10796,source/pymupdf.pdf,"add_horizontal_line()
Add a hr tag.
"
10797,source/pymupdf.pdf,"add_image()
Add a img tag.
"
10798,source/pymupdf.pdf,"add_link()
Add a a tag.
"
10799,source/pymupdf.pdf,"add_number_list()
Add a ol tag, context manager.
"
10800,source/pymupdf.pdf,"add_paragraph()
Add a p tag.
"
10801,source/pymupdf.pdf,"add_span()
Add a span tag, context manager.
"
10802,source/pymupdf.pdf,"add_subscript()
Add subscript text(sub tag) - inline element, treated like text.
"
10803,source/pymupdf.pdf,"add_superscript()
Add subscript text (sup tag) - inline element, treated like text.
"
10804,source/pymupdf.pdf,"add_code()
Add code text (code tag) - inline element, treated like text.
"
10805,source/pymupdf.pdf,"add_var()
Add code text (code tag) - inline element, treated like text.
"
10806,source/pymupdf.pdf,"add_samp()
Add code text (code tag) - inline element, treated like text.
"
10807,source/pymupdf.pdf,"add_kbd()
Add code text (code tag) - inline element, treated like text.
"
10808,source/pymupdf.pdf,"add_text()
Add a text string. Line breaks n are honored as br tags.
"
10809,source/pymupdf.pdf,"append_child()
Append a child node.
"
10810,source/pymupdf.pdf,"clone()
Make a copy if this node.
"
10811,source/pymupdf.pdf,"create_element()
Make a new node with a given tag name.
"
10812,source/pymupdf.pdf,"create_text_node()
Create direct text for the current node.
"
10813,source/pymupdf.pdf,"find()
Find a sub-node with given properties.
"
10814,source/pymupdf.pdf,"find_next()
Repeat previous “find” with the same criteria.
"
10815,source/pymupdf.pdf,"insert_after()
Insert an element after current node.
"
10816,source/pymupdf.pdf,"insert_before()
Insert an element before current node.
"
10817,source/pymupdf.pdf,"remove()
Remove this node.
"
10818,source/pymupdf.pdf,"set_align()
Set the alignment using a CSS style spec. Only works for block-level tags.
"
10819,source/pymupdf.pdf,"set_attribute()
Set an arbitrary key to some value (which may be empty).
"
10820,source/pymupdf.pdf,"set_bgcolor()
Set the background color. Only works for block-level tags.
"
10821,source/pymupdf.pdf,"set_bold()
Set bold on or off or to some string value.
"
10822,source/pymupdf.pdf,"set_color()
Set text color.
"
10823,source/pymupdf.pdf,"set_columns()
Set the number of columns. Argument may be any valid number or string.
"
10824,source/pymupdf.pdf,"set_font()
Set the font-family, e.g. “sans-serif”.
"
10825,source/pymupdf.pdf,"set_fontsize()
Set the font size. Either a float or a valid HTML/CSS string.
"
10826,source/pymupdf.pdf,"set_id()
Set a id. A check for uniqueness is performed.
"
10827,source/pymupdf.pdf,"set_italic()
Set italic on or off or to some string value.
"
10828,source/pymupdf.pdf,"set_leading()
Set inter-block text distance (-mupdf-leading), only works on block-level nodes.
"
10829,source/pymupdf.pdf,"set_lineheight()
Set height of a line. Float like 1.5, which sets to 1.5 * fontsize.
"
10830,source/pymupdf.pdf,"set_margins()
Set the margin(s), float or string with up to 4 values.
"
10831,source/pymupdf.pdf,"set_pagebreak_after()
Insert a page break after this node.
"
10832,source/pymupdf.pdf,"continues on next page
"
10833,source/pymupdf.pdf,"19.25. Xml
389
"
10834,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10835,source/pymupdf.pdf,"Table 5 – continued from previous page
"
10836,source/pymupdf.pdf,"Method / Attribute
Description
"
10837,source/pymupdf.pdf,"set_pagebreak_before()
Insert a page break before this node.
"
10838,source/pymupdf.pdf,"set_properties()
Set any or all desired properties in one call.
"
10839,source/pymupdf.pdf,"add_style()
Set (add) a “style” that is not supported by its own set_ method.
"
10840,source/pymupdf.pdf,"add_class()
Set (add) a “class” attribute.
"
10841,source/pymupdf.pdf,"set_text_indent()
Set indentation for first textblock line. Only works for block-level nodes.
"
10842,source/pymupdf.pdf,"tagname
Either the HTML tag name like p or None if a text node.
"
10843,source/pymupdf.pdf,"text
Either the node’s text or None if a tag node.
"
10844,source/pymupdf.pdf,"is_text
Check if the node is a text.
"
10845,source/pymupdf.pdf,"first_child
Contains the first node one level below this one (or None).
"
10846,source/pymupdf.pdf,"last_child
Contains the last node one level below this one (or None).
"
10847,source/pymupdf.pdf,"next
The next node at the same level (or None).
"
10848,source/pymupdf.pdf,"previous
The previous node at the same level.
"
10849,source/pymupdf.pdf,"root
The top node of the DOM, which hence has the tagname html.
"
10850,source/pymupdf.pdf,"Class API
"
10851,source/pymupdf.pdf,"class Xml
"
10852,source/pymupdf.pdf,"add_bullet_list()
"
10853,source/pymupdf.pdf,"Add an ul tag - bulleted list, context manager. See ul.
"
10854,source/pymupdf.pdf,"add_codeblock()
"
10855,source/pymupdf.pdf,"Add a pre tag, context manager. See pre.
"
10856,source/pymupdf.pdf,"add_description_list()
"
10857,source/pymupdf.pdf,"Add a dl tag, context manager. See dl.
"
10858,source/pymupdf.pdf,"add_division()
"
10859,source/pymupdf.pdf,"Add a div tag, context manager. See div.
"
10860,source/pymupdf.pdf,"add_header(value)
"
10861,source/pymupdf.pdf,"Add a header tag (one of h1 to h6), context manager. See headings.
"
10862,source/pymupdf.pdf,"Parameters
"
10863,source/pymupdf.pdf,"value (int) – a value 1 - 6.
"
10864,source/pymupdf.pdf,"add_horizontal_line()
"
10865,source/pymupdf.pdf,"Add a hr tag. See hr.
"
10866,source/pymupdf.pdf,"add_image(name, width=None, height=None)
"
10867,source/pymupdf.pdf,"Add an img tag. This causes the inclusion of the named image in the DOM.
"
10868,source/pymupdf.pdf,"Parameters
"
10869,source/pymupdf.pdf,"• name (str) – the filename of the image. This must be the member name of some
entry of the Archive parameter of the Story constructor.
"
10870,source/pymupdf.pdf,"• width – if provided, either an absolute (int) value, or a percentage string like “30%”.
A percentage value refers to the width of the specified where rectangle in Story.
place(). If this value is provided and height is omitted, the image will be in-
cluded keeping its aspect ratio.
"
10871,source/pymupdf.pdf,"• height – if provided, either an absolute (int) value, or a percentage string like
“30%”. A percentage value refers to the height of the specified where rectangle in
Story.place(). If this value is provided and width is omitted, the image’s aspect
ratio will be honored.
"
10872,source/pymupdf.pdf,"390
Chapter 19. Classes
"
10873,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10874,source/pymupdf.pdf,"add_link(href, text=None)
"
10875,source/pymupdf.pdf,"Add an a tag - inline element, treated like text.
"
10876,source/pymupdf.pdf,"Parameters
"
10877,source/pymupdf.pdf,"• href (str) – the URL target.
"
10878,source/pymupdf.pdf,"• text (str) – the text to display. If omitted, the href text is shown instead.
"
10879,source/pymupdf.pdf,"add_number_list()
"
10880,source/pymupdf.pdf,"Add an ol tag, context manager.
"
10881,source/pymupdf.pdf,"add_paragraph()
"
10882,source/pymupdf.pdf,"Add a p tag, context manager.
"
10883,source/pymupdf.pdf,"add_span()
"
10884,source/pymupdf.pdf,"Add a span tag, context manager. See span
"
10885,source/pymupdf.pdf,"add_subscript(text)
"
10886,source/pymupdf.pdf,"Add “subscript” text(sub tag) - inline element, treated like text.
"
10887,source/pymupdf.pdf,"add_superscript(text)
"
10888,source/pymupdf.pdf,"Add “superscript” text (sup tag) - inline element, treated like text.
"
10889,source/pymupdf.pdf,"add_code(text)
"
10890,source/pymupdf.pdf,"Add “code” text (code tag) - inline element, treated like text.
"
10891,source/pymupdf.pdf,"add_var(text)
"
10892,source/pymupdf.pdf,"Add “variable” text (var tag) - inline element, treated like text.
"
10893,source/pymupdf.pdf,"add_samp(text)
"
10894,source/pymupdf.pdf,"Add “sample output” text (samp tag) - inline element, treated like text.
"
10895,source/pymupdf.pdf,"add_kbd(text)
"
10896,source/pymupdf.pdf,"Add “keyboard input” text (kbd tag) - inline element, treated like text.
"
10897,source/pymupdf.pdf,"add_text(text)
"
10898,source/pymupdf.pdf,"Add a text string. Line breaks n are honored as br tags.
"
10899,source/pymupdf.pdf,"set_align(value)
"
10900,source/pymupdf.pdf,"Set the text alignment. Only works for block-level tags.
"
10901,source/pymupdf.pdf,"Parameters
"
10902,source/pymupdf.pdf,"value – either one of the Text Alignment or the text-align values.
"
10903,source/pymupdf.pdf,"set_attribute(key, value=None)
"
10904,source/pymupdf.pdf,"Set an arbitrary key to some value (which may be empty).
"
10905,source/pymupdf.pdf,"Parameters
"
10906,source/pymupdf.pdf,"• key (str) – the name of the attribute.
"
10907,source/pymupdf.pdf,"• value (str) – the (optional) value of the attribute.
"
10908,source/pymupdf.pdf,"get_attributes()
"
10909,source/pymupdf.pdf,"Retrieve all attributes of the current nodes as a dictionary.
"
10910,source/pymupdf.pdf,"Returns
"
10911,source/pymupdf.pdf,"a dictionary with the attributes and their values of the node.
"
10912,source/pymupdf.pdf,"19.25. Xml
391
"
10913,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10914,source/pymupdf.pdf,"get_attribute_value(key)
"
10915,source/pymupdf.pdf,"Get the attribute value of key.
"
10916,source/pymupdf.pdf,"Parameters
"
10917,source/pymupdf.pdf,"key (str) – the name of the attribute.
"
10918,source/pymupdf.pdf,"Returns
"
10919,source/pymupdf.pdf,"a string with the value of key.
"
10920,source/pymupdf.pdf,"remove_attribute(key)
"
10921,source/pymupdf.pdf,"Remove the attribute key from the node.
"
10922,source/pymupdf.pdf,"Parameters
"
10923,source/pymupdf.pdf,"key (str) – the name of the attribute.
"
10924,source/pymupdf.pdf,"set_bgcolor(value)
"
10925,source/pymupdf.pdf,"Set the background color. Only works for block-level tags.
"
10926,source/pymupdf.pdf,"Parameters
"
10927,source/pymupdf.pdf,"value – either an RGB value like (255, 0, 0) (for “red”) or a valid background-color
value.
"
10928,source/pymupdf.pdf,"set_bold(value)
"
10929,source/pymupdf.pdf,"Set bold on or off or to some string value.
"
10930,source/pymupdf.pdf,"Parameters
"
10931,source/pymupdf.pdf,"value – True, False or a valid font-weight value.
"
10932,source/pymupdf.pdf,"set_color(value)
"
10933,source/pymupdf.pdf,"Set the color of the text following.
"
10934,source/pymupdf.pdf,"Parameters
"
10935,source/pymupdf.pdf,"value – either an RGB value like (255, 0, 0) (for “red”) or a valid color value.
"
10936,source/pymupdf.pdf,"set_columns(value)
"
10937,source/pymupdf.pdf,"Set the number of columns.
"
10938,source/pymupdf.pdf,"Parameters
"
10939,source/pymupdf.pdf,"value – a valid columns value.
"
10940,source/pymupdf.pdf,"Note: Currently ignored - supported in a future MuPDF version.
"
10941,source/pymupdf.pdf,"set_font(value)
"
10942,source/pymupdf.pdf,"Set the font-family.
"
10943,source/pymupdf.pdf,"Parameters
"
10944,source/pymupdf.pdf,"value (str) – e.g. “sans-serif”.
"
10945,source/pymupdf.pdf,"set_fontsize(value)
"
10946,source/pymupdf.pdf,"Set the font size for text following.
"
10947,source/pymupdf.pdf,"Parameters
"
10948,source/pymupdf.pdf,"value – a float or a valid font-size value.
"
10949,source/pymupdf.pdf,"set_id(unqid)
"
10950,source/pymupdf.pdf,"Set a id. This serves as a unique identification of the node within the DOM. Use it to easily locate the node
to inspect or modify it. A check for uniqueness is performed.
"
10951,source/pymupdf.pdf,"Parameters
"
10952,source/pymupdf.pdf,"unqid (str) – id string of the node.
"
10953,source/pymupdf.pdf,"392
Chapter 19. Classes
"
10954,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10955,source/pymupdf.pdf,"set_italic(value)
"
10956,source/pymupdf.pdf,"Set italic on or off or to some string value for the text following it.
"
10957,source/pymupdf.pdf,"Parameters
"
10958,source/pymupdf.pdf,"value – True, False or some valid font-style value.
"
10959,source/pymupdf.pdf,"set_leading(value)
"
10960,source/pymupdf.pdf,"Set inter-block text distance (-mupdf-leading), only works on block-level nodes.
"
10961,source/pymupdf.pdf,"Parameters
"
10962,source/pymupdf.pdf,"value (float) – the distance in points to the previous block.
"
10963,source/pymupdf.pdf,"set_lineheight(value)
"
10964,source/pymupdf.pdf,"Set height of a line.
"
10965,source/pymupdf.pdf,"Parameters
"
10966,source/pymupdf.pdf,"value – a float like 1.5 (which sets to 1.5 * fontsize), or some valid line-height
value.
"
10967,source/pymupdf.pdf,"set_margins(value)
"
10968,source/pymupdf.pdf,"Set the margin(s).
"
10969,source/pymupdf.pdf,"Parameters
"
10970,source/pymupdf.pdf,"value – float or string with up to 4 values. See CSS documentation.
"
10971,source/pymupdf.pdf,"set_pagebreak_after()
"
10972,source/pymupdf.pdf,"Insert a page break after this node.
"
10973,source/pymupdf.pdf,"set_pagebreak_before()
"
10974,source/pymupdf.pdf,"Insert a page break before this node.
"
10975,source/pymupdf.pdf,"set_properties(align=None, bgcolor=None, bold=None, color=None, columns=None, font=None,
fontsize=None, indent=None, italic=None, leading=None, lineheight=None,
margins=None, pagebreak_after=False, pagebreak_before=False, unqid=None,
cls=None)
"
10976,source/pymupdf.pdf,"Set any or all desired properties in one call. The meaning of argument values equal the values of the
corresponding set_ methods.
"
10977,source/pymupdf.pdf,"Note:
The properties set by this method are directly attached to the node, whereas every set_ method
generates a new span below the current node that has the respective property. So to e.g. “globally” set
some property for the body, this method must be used.
"
10978,source/pymupdf.pdf,"add_style(value)
"
10979,source/pymupdf.pdf,"Set (add) some style attribute not supported by its own set_ method.
"
10980,source/pymupdf.pdf,"Parameters
"
10981,source/pymupdf.pdf,"value (str) – any valid CSS style value.
"
10982,source/pymupdf.pdf,"add_class(value)
"
10983,source/pymupdf.pdf,"Set (add) some “class” attribute.
"
10984,source/pymupdf.pdf,"Parameters
"
10985,source/pymupdf.pdf,"value (str) – the name of the class. Must have been defined in either the HTML or the
CSS source of the DOM.
"
10986,source/pymupdf.pdf,"set_text_indent(value)
"
10987,source/pymupdf.pdf,"Set indentation for the first textblock line. Only works for block-level nodes.
"
10988,source/pymupdf.pdf,"19.25. Xml
393
"
10989,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
10990,source/pymupdf.pdf,"Parameters
"
10991,source/pymupdf.pdf,"value – a valid text-indent value. Please note that negative values do not work.
"
10992,source/pymupdf.pdf,"append_child(node)
"
10993,source/pymupdf.pdf,"Append a child node. This is a low-level method used by other methods like Xml.add_paragraph().
"
10994,source/pymupdf.pdf,"Parameters
"
10995,source/pymupdf.pdf,"node – the Xml node to append.
"
10996,source/pymupdf.pdf,"create_text_node(text)
"
10997,source/pymupdf.pdf,"Create direct text for the current node.
"
10998,source/pymupdf.pdf,"Parameters
"
10999,source/pymupdf.pdf,"text (str) – the text to append.
"
11000,source/pymupdf.pdf,"Return type
"
11001,source/pymupdf.pdf,"Xml
"
11002,source/pymupdf.pdf,"Returns
"
11003,source/pymupdf.pdf,"the created element.
"
11004,source/pymupdf.pdf,"create_element(tag)
"
11005,source/pymupdf.pdf,"Create a new node with a given tag.
This a low-level method used by other methods like Xml.
add_paragraph().
"
11006,source/pymupdf.pdf,"Parameters
"
11007,source/pymupdf.pdf,"tag (str) – the element tag.
"
11008,source/pymupdf.pdf,"Return type
"
11009,source/pymupdf.pdf,"Xml
"
11010,source/pymupdf.pdf,"Returns
"
11011,source/pymupdf.pdf,"the created element. To actually bind it to the DOM, use Xml.append_child().
"
11012,source/pymupdf.pdf,"insert_before(elem)
"
11013,source/pymupdf.pdf,"Insert the given element elem before this node.
"
11014,source/pymupdf.pdf,"Parameters
"
11015,source/pymupdf.pdf,"elem – some Xml element.
"
11016,source/pymupdf.pdf,"insert_after(elem)
"
11017,source/pymupdf.pdf,"Insert the given element elem after this node.
"
11018,source/pymupdf.pdf,"Parameters
"
11019,source/pymupdf.pdf,"elem – some Xml element.
"
11020,source/pymupdf.pdf,"clone()
"
11021,source/pymupdf.pdf,"Make a copy of this node, which then may be appended (using Xml.append_child()) or inserted (using
one of Xml.insert_before(), Xml.insert_after()) in this DOM.
"
11022,source/pymupdf.pdf,"Returns
"
11023,source/pymupdf.pdf,"the clone (Xml) of the current node.
"
11024,source/pymupdf.pdf,"remove()
"
11025,source/pymupdf.pdf,"Remove this node from the DOM.
"
11026,source/pymupdf.pdf,"debug()
"
11027,source/pymupdf.pdf,"For debugging purposes, print this node’s structure in a simplified form.
"
11028,source/pymupdf.pdf,"394
Chapter 19. Classes
"
11029,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11030,source/pymupdf.pdf,"find(tag, att, match)
"
11031,source/pymupdf.pdf,"Under the current node, find the first node with the given tag, attribute att and value match.
"
11032,source/pymupdf.pdf,"Parameters
"
11033,source/pymupdf.pdf,"• tag (str) – restrict search to this tag. May be None for unrestricted searches.
"
11034,source/pymupdf.pdf,"• att (str) – check this attribute. May be None.
"
11035,source/pymupdf.pdf,"• match (str) – the desired attribute value to match. May be None.
"
11036,source/pymupdf.pdf,"Return type
"
11037,source/pymupdf.pdf,"Xml.
"
11038,source/pymupdf.pdf,"Returns
"
11039,source/pymupdf.pdf,"None if nothing found, otherwise the first matching node.
"
11040,source/pymupdf.pdf,"find_next(tag, att, match)
"
11041,source/pymupdf.pdf,"Continue a previous Xml.find() (or find_next()) with the same values.
"
11042,source/pymupdf.pdf,"Return type
"
11043,source/pymupdf.pdf,"Xml.
"
11044,source/pymupdf.pdf,"Returns
"
11045,source/pymupdf.pdf,"None if none more found, otherwise the next matching node.
"
11046,source/pymupdf.pdf,"tagname
"
11047,source/pymupdf.pdf,"Either the HTML tag name like p or None if a text node.
"
11048,source/pymupdf.pdf,"text
"
11049,source/pymupdf.pdf,"Either the node’s text or None if a tag node.
"
11050,source/pymupdf.pdf,"is_text
"
11051,source/pymupdf.pdf,"Check if a text node.
"
11052,source/pymupdf.pdf,"first_child
"
11053,source/pymupdf.pdf,"Contains the first node one level below this one (or None).
"
11054,source/pymupdf.pdf,"last_child
"
11055,source/pymupdf.pdf,"Contains the last node one level below this one (or None).
"
11056,source/pymupdf.pdf,"next
"
11057,source/pymupdf.pdf,"The next node at the same level (or None).
"
11058,source/pymupdf.pdf,"previous
"
11059,source/pymupdf.pdf,"The previous node at the same level.
"
11060,source/pymupdf.pdf,"root
"
11061,source/pymupdf.pdf,"The top node of the DOM, which hence has the tagname html.
"
11062,source/pymupdf.pdf,"19.25.1 Setting Text properties
"
11063,source/pymupdf.pdf,"In HTML tags can be nested such that innermost text inherits properties from the tag enveloping its parent tag. For
example <p>.
"
11064,source/pymupdf.pdf,"To achieve the same effect, methods like Xml.set_bold() and Xml.set_italic() each open a temporary span with
the desired property underneath the current node.
"
11065,source/pymupdf.pdf,"In addition, these methods return there parent node, so they can be concatenated with each other.
"
11066,source/pymupdf.pdf,"19.25. Xml
395
"
11067,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11068,source/pymupdf.pdf,"19.25.2 Context Manager support
"
11069,source/pymupdf.pdf,"The standard way to add nodes to a DOM is this:
"
11070,source/pymupdf.pdf,"body = story.body
para = body.add_paragraph()
# add a paragraph
"
11071,source/pymupdf.pdf,"para.set_bold()
# text that follows will be bold
"
11072,source/pymupdf.pdf,"para.add_text(""some bold text"")
para.set_italic()
# text that follows will additionally be italic
"
11073,source/pymupdf.pdf,"para.add_txt(""this is bold and italic"")
para.set_italic(False).set_bold(False)
# all following text will be regular
"
11074,source/pymupdf.pdf,"para.add_text(""regular text"")
"
11075,source/pymupdf.pdf,"Methods that are flagged as “context managers” can conveniently be used in this way:
"
11076,source/pymupdf.pdf,"body = story.body
with body.add_paragraph() as para:
para.set_bold().add_text(""some bold text"")
para.set_italic().add_text(""this is bold and italic"")
para.set_italic(False).set_bold(False).add_text(""regular text"")
para.add_text(""more regular text"")
"
11077,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
11078,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
11079,source/pymupdf.pdf,"396
Chapter 19. Classes
"
11080,source/pymupdf.pdf,"CHAPTER
"
11081,source/pymupdf.pdf,"TWENTY
"
11082,source/pymupdf.pdf,"OPERATOR ALGEBRA FOR GEOMETRY OBJECTS
"
11083,source/pymupdf.pdf,"Instances of classes Point, IRect, Rect, Quad and Matrix are collectively also called “geometry” objects.
"
11084,source/pymupdf.pdf,"They all are special cases of Python sequences, see Using Python Sequences as Arguments in PyMuPDF for more
background.
"
11085,source/pymupdf.pdf,"We have defined operators for these classes that allow dealing with them (almost) like ordinary numbers in terms of
addition, subtraction, multiplication, division, and some others.
"
11086,source/pymupdf.pdf,"This chapter is a synopsis of what is possible.
"
11087,source/pymupdf.pdf,"20.1 General Remarks
"
11088,source/pymupdf.pdf,"1. Operators can be either binary (i.e. involving two objects) or unary.
"
11089,source/pymupdf.pdf,"2. The resulting type of binary operations is either a new object of the left operand’s class or a bool.
"
11090,source/pymupdf.pdf,"3. The result of unary operations is either a new object of the same class, a bool or a float.
"
11091,source/pymupdf.pdf,"4. The binary operators +, -, *, / are defined for all classes. They roughly do what you would expect – except, that
the second operand ...
"
11092,source/pymupdf.pdf,"• may always be a number which then performs the operation on every component of the first one,
"
11093,source/pymupdf.pdf,"• may always be a numeric sequence of the same length (2, 4 or 6) – we call such sequences point_like,
"
11094,source/pymupdf.pdf,"rect_like, quad_like or matrix_like, respectively.
"
11095,source/pymupdf.pdf,"5. Rectangles support additional binary operations: intersection (operator “&”), union (operator “|”) and con-
tainment checking.
"
11096,source/pymupdf.pdf,"6. Binary operators fully support in-place operations, so expressions like a /= b are valid if b is numeric or
“a_like”.
"
11097,source/pymupdf.pdf,"20.2 Unary Operations
"
11098,source/pymupdf.pdf,"Oper.
Result
"
11099,source/pymupdf.pdf,"bool(OBJ)
is false exactly if all components of OBJ are zero
"
11100,source/pymupdf.pdf,"abs(OBJ)
the rectangle area – equal to norm(OBJ) for the other types
"
11101,source/pymupdf.pdf,"norm(OBJ)
square root of the component squares (Euclidean norm)
"
11102,source/pymupdf.pdf,"+OBJ
new copy of OBJ
"
11103,source/pymupdf.pdf,"-OBJ
new copy of OBJ with negated components
"
11104,source/pymupdf.pdf,"~m
inverse of matrix “m”, or the null matrix if not invertible
"
11105,source/pymupdf.pdf,"397
"
11106,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11107,source/pymupdf.pdf,"20.3 Binary Operations
"
11108,source/pymupdf.pdf,"For every geometry object “a” and every number “b”, the operations “a ° b” and “a °= b” are always defined for the
operators +, -, *, /. The respective operation is simply executed for each component of “a”. If the second operand is
not a number, then the following is defined:
"
11109,source/pymupdf.pdf,"Oper. Result
a+b,
a-b
"
11110,source/pymupdf.pdf,"component-wise execution, “b” must be “a-like”.
"
11111,source/pymupdf.pdf,"a*m,
a/m
"
11112,source/pymupdf.pdf,"“a” can be a point, rectangle or matrix, but “m” must be matrix_like. “a/m” is treated as “a*~m” (see
note below for non-invertible matrices). If “a” is a point or a rectangle, then “a.transform(m)” is executed.
If “a” is a matrix, then matrix concatenation takes place.
"
11113,source/pymupdf.pdf,"a&b
intersection rectangle: “a” must be a rectangle and “b” rect_like. Delivers the largest rectangle con-
tained in both operands.
"
11114,source/pymupdf.pdf,"a|b
union rectangle: “a” must be a rectangle, and “b” may be point_like or rect_like. Delivers the smallest
rectangle containing both operands.
"
11115,source/pymupdf.pdf,"b in
a
"
11116,source/pymupdf.pdf,"if “b” is a number, then b in tuple(a) is returned. If “b” is point_like, rect_like or quad_like,
then “a” must be a rectangle, and a.contains(b) is returned.
"
11117,source/pymupdf.pdf,"a
==
b
"
11118,source/pymupdf.pdf,"True if bool(a-b) is False (“b” may be “a-like”).
"
11119,source/pymupdf.pdf,"Note: Please note an important difference to usual arithmetic:
"
11120,source/pymupdf.pdf,"Matrix multiplication is not commutative, i.e. in general we have m*n != n*m for two matrices. Also, there are non-
zero matrices which have no inverse, for example m = Matrix(1, 0, 1, 0, 1, 0). If you try to divide by any of
these, you will receive a ZeroDivisionError exception using operator “/”, e.g. for the expression fitz.Identity
/ m. But if you formulate fitz.Identity * ~m, the result will be fitz.Matrix() (the null matrix).
"
11121,source/pymupdf.pdf,"Admittedly, this represents an inconsistency, and we are considering to remove it. For the time being, you can choose
to avoid an exception and check whether ~m is the null matrix, or accept a potential ZeroDivisionError by using fitz.
Identity / m.
"
11122,source/pymupdf.pdf,"Note:
"
11123,source/pymupdf.pdf,"• With these conventions, all the usual algebra rules apply. For example, arbitrarily using brackets (among objects
of the same class!) is possible: if r1, r2 are rectangles and m1, m2 are matrices, you can do this (r1 + r2) *
m1 * m2.
"
11124,source/pymupdf.pdf,"• For all objects of the same class, a + b + c == (a + b) + c == a + (b + c) is true.
"
11125,source/pymupdf.pdf,"• For matrices in addition the following is true: (m1 + m2) * m3 == m1 * m3 + m2 * m3 (distributivity prop-
erty).
"
11126,source/pymupdf.pdf,"• But the sequence of applying matrices is important: If r is a rectangle and m1, m2 are matrices, then –
caution!:
"
11127,source/pymupdf.pdf,"– r * m1 * m2 == (r * m1) * m2 != r * (m1 * m2)
"
11128,source/pymupdf.pdf,"398
Chapter 20. Operator Algebra for Geometry Objects
"
11129,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11130,source/pymupdf.pdf,"20.4 Some Examples
"
11131,source/pymupdf.pdf,"20.4.1 Manipulation with numbers
"
11132,source/pymupdf.pdf,"For the usual arithmetic operations, numbers are always allowed as second operand. In addition, you can formulate ""x
in OBJ"", where x is a number. It is implemented as ""x in tuple(OBJ)"":
"
11133,source/pymupdf.pdf,">>> fitz.Rect(1, 2, 3, 4) + 5
fitz.Rect(6.0, 7.0, 8.0, 9.0)
>>> 3 in fitz.Rect(1, 2, 3, 4)
True
>>>
"
11134,source/pymupdf.pdf,"The following will create the upper left quarter of a document page rectangle:
"
11135,source/pymupdf.pdf,">>> page.rect
Rect(0.0, 0.0, 595.0, 842.0)
>>> page.rect / 2
Rect(0.0, 0.0, 297.5, 421.0)
>>>
"
11136,source/pymupdf.pdf,"The following will deliver the middle point of a line that connects two points p1 and p2:
"
11137,source/pymupdf.pdf,">>> p1 = fitz.Point(1, 2)
>>> p2 = fitz.Point(4711, 3141)
>>> mp = (p1 + p2) / 2
>>> mp
Point(2356.0, 1571.5)
>>>
"
11138,source/pymupdf.pdf,"20.4.2 Manipulation with “like” Objects
"
11139,source/pymupdf.pdf,"The second operand of a binary operation can always be “like” the left operand. “Like” in this context means “a
sequence of numbers of the same length”. With the above examples:
"
11140,source/pymupdf.pdf,">>> p1 + p2
Point(4712.0, 3143.0)
>>> p1 + (4711, 3141)
Point(4712.0, 3143.0)
>>> p1 += (4711, 3141)
>>> p1
Point(4712.0, 3143.0)
>>>
"
11141,source/pymupdf.pdf,"To shift a rectangle for 5 pixels to the right, do this:
"
11142,source/pymupdf.pdf,">>> fitz.Rect(100, 100, 200, 200) + (5, 0, 5, 0)
# add 5 to the x coordinates
"
11143,source/pymupdf.pdf,"Rect(105.0, 100.0, 205.0, 200.0)
>>>
"
11144,source/pymupdf.pdf,"Points, rectangles and matrices can be transformed with matrices. In PyMuPDF, we treat this like a “multiplication”
(or resp. “division”), where the second operand may be “like” a matrix. Division in this context means “multiplication
with the inverted matrix”:
"
11145,source/pymupdf.pdf,"20.4. Some Examples
399
"
11146,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11147,source/pymupdf.pdf,">>> m = fitz.Matrix(1, 2, 3, 4, 5, 6)
>>> n = fitz.Matrix(6, 5, 4, 3, 2, 1)
>>> p = fitz.Point(1, 2)
>>> p * m
Point(12.0, 16.0)
>>> p * (1, 2, 3, 4, 5, 6)
Point(12.0, 16.0)
>>> p / m
Point(2.0, -2.0)
>>> p / (1, 2, 3, 4, 5, 6)
Point(2.0, -2.0)
>>>
>>> m * n
# matrix multiplication
"
11148,source/pymupdf.pdf,"Matrix(14.0, 11.0, 34.0, 27.0, 56.0, 44.0)
>>> m / n
# matrix division
"
11149,source/pymupdf.pdf,"Matrix(2.5, -3.5, 3.5, -4.5, 5.5, -7.5)
>>>
>>> m / m
# result is equal to the Identity matrix
"
11150,source/pymupdf.pdf,"Matrix(1.0, 0.0, 0.0, 1.0, 0.0, 0.0)
>>>
>>> # look at this non-invertible matrix:
>>> m = fitz.Matrix(1, 0, 1, 0, 1, 0)
>>> ~m
Matrix(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
>>> # we try dividing by it in two ways:
>>> p = fitz.Point(1, 2)
>>> p * ~m
# this delivers point (0, 0):
"
11151,source/pymupdf.pdf,"Point(0.0, 0.0)
>>> p / m
# but this is an exception:
"
11152,source/pymupdf.pdf,"Traceback (most recent call last):
"
11153,source/pymupdf.pdf,"File ""<pyshell#6>"", line 1, in <module>
"
11154,source/pymupdf.pdf,"p / m
File ""... /site-packages/fitz/fitz.py"", line 869, in __truediv__
"
11155,source/pymupdf.pdf,"raise ZeroDivisionError(""matrix not invertible"")
"
11156,source/pymupdf.pdf,"ZeroDivisionError: matrix not invertible
>>>
"
11157,source/pymupdf.pdf,"As a specialty, rectangles support additional binary operations:
"
11158,source/pymupdf.pdf,"• intersection – the common area of rectangle-likes, operator “&”
"
11159,source/pymupdf.pdf,"• inclusion – enlarge to include a point-like or rect-like, operator “|”
"
11160,source/pymupdf.pdf,"• containment check – whether a point-like or rect-like is inside
"
11161,source/pymupdf.pdf,"Here is an example for creating the smallest rectangle enclosing given points:
"
11162,source/pymupdf.pdf,">>> # first define some point-likes
>>> points = []
>>> for i in range(10):
"
11163,source/pymupdf.pdf,"for j in range(10):
"
11164,source/pymupdf.pdf,"points.append((i, j))
"
11165,source/pymupdf.pdf,">>>
>>> # now create a rectangle containing all these 100 points
>>> # start with an empty rectangle
"
11166,source/pymupdf.pdf,"(continues on next page)
"
11167,source/pymupdf.pdf,"400
Chapter 20. Operator Algebra for Geometry Objects
"
11168,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11169,source/pymupdf.pdf,"(continued from previous page)
"
11170,source/pymupdf.pdf,">>> r = fitz.Rect(points[0], points[0])
>>> for p in points[1:]:
# and include remaining points one by one
"
11171,source/pymupdf.pdf,"r |= p
"
11172,source/pymupdf.pdf,">>> r
# here is the to be expected result:
"
11173,source/pymupdf.pdf,"Rect(0.0, 0.0, 9.0, 9.0)
>>> (4, 5) in r
# this point-like lies inside the rectangle
"
11174,source/pymupdf.pdf,"True
>>> # and this rect-like is also inside
>>> (4, 4, 5, 5) in r
True
>>>
"
11175,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
11176,source/pymupdf.pdf,"20.4. Some Examples
401
"
11177,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11178,source/pymupdf.pdf,"402
Chapter 20. Operator Algebra for Geometry Objects
"
11179,source/pymupdf.pdf,"CHAPTER
"
11180,source/pymupdf.pdf,"TWENTYONE
"
11181,source/pymupdf.pdf,"LOW LEVEL FUNCTIONS AND CLASSES
"
11182,source/pymupdf.pdf,"Contains a number of functions and classes for the experienced user. To be used for special needs or performance
requirements.
"
11183,source/pymupdf.pdf,"21.1 Functions
"
11184,source/pymupdf.pdf,"The following are miscellaneous functions and attributes on a fairly low-level technical detail.
"
11185,source/pymupdf.pdf,"Some functions provide detail access to PDF structures. Others are stripped-down, high performance versions of other
functions which provide more information.
"
11186,source/pymupdf.pdf,"Yet others are handy, general-purpose utilities.
"
11187,source/pymupdf.pdf,"Function
Short Description
"
11188,source/pymupdf.pdf,"Annot.apn_bbox
PDF only: bbox of the appearance object
"
11189,source/pymupdf.pdf,"Annot.apn_matrix
PDF only: the matrix of the appearance object
"
11190,source/pymupdf.pdf,"Page.is_wrapped
check whether contents wrapping is present
"
11191,source/pymupdf.pdf,"adobe_glyph_names()
list of glyph names defined in Adobe Glyph List
"
11192,source/pymupdf.pdf,"adobe_glyph_unicodes()
list of unicodes defined in Adobe Glyph List
"
11193,source/pymupdf.pdf,"Annot.clean_contents()
PDF only: clean the annot’s contents object
"
11194,source/pymupdf.pdf,"Annot.set_apn_bbox()
PDF only: set the bbox of the appearance object
"
11195,source/pymupdf.pdf,"Annot.set_apn_matrix()
PDF only: set the matrix of the appearance object
"
11196,source/pymupdf.pdf,"ConversionHeader()
return header string for get_text methods
"
11197,source/pymupdf.pdf,"ConversionTrailer()
return trailer string for get_text methods
"
11198,source/pymupdf.pdf,"Document.del_xml_metadata()
PDF only: remove XML metadata
"
11199,source/pymupdf.pdf,"Document.get_char_widths()
PDF only: return a list of glyph widths of a font
"
11200,source/pymupdf.pdf,"Document.get_new_xref()
PDF only: create and return a new xref entry
"
11201,source/pymupdf.pdf,"Document.is_stream()
PDF only: check whether an xref is a stream object
"
11202,source/pymupdf.pdf,"Document.xml_metadata_xref()
PDF only: return XML metadata xref number
"
11203,source/pymupdf.pdf,"Document.xref_length()
PDF only: return length of xref table
"
11204,source/pymupdf.pdf,"EMPTY_IRECT()
return the (standard) empty / invalid rectangle
"
11205,source/pymupdf.pdf,"EMPTY_QUAD()
return the (standard) empty / invalid quad
"
11206,source/pymupdf.pdf,"EMPTY_RECT()
return the (standard) empty / invalid rectangle
"
11207,source/pymupdf.pdf,"get_pdf_now()
return the current timestamp in PDF format
"
11208,source/pymupdf.pdf,"get_pdf_str()
return PDF-compatible string
"
11209,source/pymupdf.pdf,"get_text_length()
return string length for a given font & fontsize
"
11210,source/pymupdf.pdf,"glyph_name_to_unicode()
return unicode from a glyph name
"
11211,source/pymupdf.pdf,"image_profile()
return a dictionary of basic image properties
"
11212,source/pymupdf.pdf,"INFINITE_IRECT()
return the (only existing) infinite rectangle
"
11213,source/pymupdf.pdf,"continues on next page
"
11214,source/pymupdf.pdf,"403
"
11215,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11216,source/pymupdf.pdf,"Table 1 – continued from previous page
"
11217,source/pymupdf.pdf,"Function
Short Description
"
11218,source/pymupdf.pdf,"INFINITE_QUAD()
return the (only existing) infinite quad
"
11219,source/pymupdf.pdf,"INFINITE_RECT()
return the (only existing) infinite rectangle
"
11220,source/pymupdf.pdf,"make_table()
split rectangle in sub-rectangles
"
11221,source/pymupdf.pdf,"Page.clean_contents()
PDF only: clean the page’s contents objects
"
11222,source/pymupdf.pdf,"Page.get_bboxlog()
list of rectangles that envelop text, drawing or image objects
"
11223,source/pymupdf.pdf,"Page.get_contents()
PDF only: return a list of content xref numbers
"
11224,source/pymupdf.pdf,"Page.get_displaylist()
create the page’s display list
"
11225,source/pymupdf.pdf,"Page.get_text_blocks()
extract text blocks as a Python list
"
11226,source/pymupdf.pdf,"Page.get_text_words()
extract text words as a Python list
"
11227,source/pymupdf.pdf,"Page.get_texttrace()
low-level text information
"
11228,source/pymupdf.pdf,"Page.read_contents()
PDF only: get complete, concatenated /Contents source
"
11229,source/pymupdf.pdf,"Page.run()
run a page through a device
"
11230,source/pymupdf.pdf,"Page.set_contents()
PDF only: set page’s contents to some xref
"
11231,source/pymupdf.pdf,"Page.wrap_contents()
wrap contents with stacking commands
"
11232,source/pymupdf.pdf,"css_for_pymupdf_font()
create CSS source for a font in package pymupdf_fonts
"
11233,source/pymupdf.pdf,"paper_rect()
return rectangle for a known paper format
"
11234,source/pymupdf.pdf,"paper_size()
return width, height for a known paper format
"
11235,source/pymupdf.pdf,"paper_sizes()
dictionary of pre-defined paper formats
"
11236,source/pymupdf.pdf,"planish_line()
matrix to map a line to the x-axis
"
11237,source/pymupdf.pdf,"recover_char_quad()
compute the quad of a char (“rawdict”)
"
11238,source/pymupdf.pdf,"recover_line_quad()
compute the quad of a subset of line spans
"
11239,source/pymupdf.pdf,"recover_quad()
compute the quad of a span (“dict”, “rawdict”)
"
11240,source/pymupdf.pdf,"recover_span_quad()
compute the quad of a subset of span characters
"
11241,source/pymupdf.pdf,"sRGB_to_pdf()
return PDF RGB color tuple from an sRGB integer
"
11242,source/pymupdf.pdf,"sRGB_to_rgb()
return (R, G, B) color tuple from an sRGB integer
"
11243,source/pymupdf.pdf,"unicode_to_glyph_name()
return glyph name from a unicode
"
11244,source/pymupdf.pdf,"get_tessdata()
locates the language support of the Tesseract-OCR installation
"
11245,source/pymupdf.pdf,"fitz_fontdescriptors
dictionary of available supplement fonts
"
11246,source/pymupdf.pdf,"TESSDATA_PREFIX
a copy of os.environ[""TESSDATA_PREFIX""]
"
11247,source/pymupdf.pdf,"pdfcolor
dictionary of almost 500 RGB colors in PDF format.
"
11248,source/pymupdf.pdf,"paper_size(s)
"
11249,source/pymupdf.pdf,"Convenience function to return width and height of a known paper format code. These values are
given in pixels for the standard resolution 72 pixels = 1 inch.
"
11250,source/pymupdf.pdf,"Currently defined formats include ‘A0’ through ‘A10’, ‘B0’ through ‘B10’, ‘C0’ through ‘C10’,
‘Card-4x6’, ‘Card-5x7’, ‘Commercial’, ‘Executive’, ‘Invoice’, ‘Ledger’, ‘Legal’, ‘Legal-13’,
‘Letter’, ‘Monarch’ and ‘Tabloid-Extra’, each in either portrait or landscape format.
"
11251,source/pymupdf.pdf,"A format name must be supplied as a string (case in sensitive), optionally suffixed with “-L” (land-
scape) or “-P” (portrait). No suffix defaults to portrait.
"
11252,source/pymupdf.pdf,"Parameters
"
11253,source/pymupdf.pdf,"s (str) – any format name from above in upper or lower case, like “A4” or “letter-
l”.
"
11254,source/pymupdf.pdf,"Return type
"
11255,source/pymupdf.pdf,"tuple
"
11256,source/pymupdf.pdf,"Returns
"
11257,source/pymupdf.pdf,"(width, height) of the paper format. For an unknown format (-1, -1) is returned.
Examples: fitz.paper_size(“A4”) returns (595, 842) and fitz.paper_size(“letter-l”)
delivers (792, 612).
"
11258,source/pymupdf.pdf,"404
Chapter 21. Low Level Functions and Classes
"
11259,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11260,source/pymupdf.pdf,"paper_rect(s)
"
11261,source/pymupdf.pdf,"Convenience function to return a Rect for a known paper format.
"
11262,source/pymupdf.pdf,"Parameters
"
11263,source/pymupdf.pdf,"s (str) – any format name supported by paper_size().
"
11264,source/pymupdf.pdf,"Return type
"
11265,source/pymupdf.pdf,"Rect
"
11266,source/pymupdf.pdf,"Returns
"
11267,source/pymupdf.pdf,"fitz.Rect(0, 0, width, height) with width, height=fitz.paper_size(s).
"
11268,source/pymupdf.pdf,">>> import fitz
>>> fitz.paper_rect(""letter-l"")
fitz.Rect(0.0, 0.0, 792.0, 612.0)
>>>
"
11269,source/pymupdf.pdf,"sRGB_to_pdf(srgb)
"
11270,source/pymupdf.pdf,"New in v1.17.4
"
11271,source/pymupdf.pdf,"Convenience function returning a PDF color triple (red, green, blue) for a given sRGB color integer
as it occurs in Page.get_text() dictionaries “dict” and “rawdict”.
"
11272,source/pymupdf.pdf,"Parameters
"
11273,source/pymupdf.pdf,"srgb (int) – an integer of format RRGGBB, where each color component is an
integer in range(255).
"
11274,source/pymupdf.pdf,"Returns
"
11275,source/pymupdf.pdf,"a tuple (red, green, blue) with float items in interval 0 <= item <= 1 representing
the same color. Example sRGB_to_pdf(0xff0000) = (1, 0, 0) (red).
"
11276,source/pymupdf.pdf,"sRGB_to_rgb(srgb)
"
11277,source/pymupdf.pdf,"New in v1.17.4
"
11278,source/pymupdf.pdf,"Convenience function returning a color (red, green, blue) for a given sRGB color integer.
"
11279,source/pymupdf.pdf,"Parameters
"
11280,source/pymupdf.pdf,"srgb (int) – an integer of format RRGGBB, where each color component is an
integer in range(255).
"
11281,source/pymupdf.pdf,"Returns
"
11282,source/pymupdf.pdf,"a tuple (red, green, blue) with integer items in range(256) representing the same
color. Example sRGB_to_pdf(0xff0000) = (255, 0, 0) (red).
"
11283,source/pymupdf.pdf,"glyph_name_to_unicode(name)
"
11284,source/pymupdf.pdf,"New in v1.18.0
"
11285,source/pymupdf.pdf,"Return the unicode number of a glyph name based on the Adobe Glyph List.
"
11286,source/pymupdf.pdf,"Parameters
"
11287,source/pymupdf.pdf,"name (str) – the name of some glyph. The function is based on the Adobe Glyph
List.
"
11288,source/pymupdf.pdf,"21.1. Functions
405
"
11289,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11290,source/pymupdf.pdf,"Return type
"
11291,source/pymupdf.pdf,"int
"
11292,source/pymupdf.pdf,"Returns
"
11293,source/pymupdf.pdf,"the unicode. Invalid name entries return 0xfffd (65533).
"
11294,source/pymupdf.pdf,"Note: A similar functionality is provided by package fontTools in its agl sub-package.
"
11295,source/pymupdf.pdf,"unicode_to_glyph_name(ch)
"
11296,source/pymupdf.pdf,"New in v1.18.0
"
11297,source/pymupdf.pdf,"Return the glyph name of a unicode number, based on the Adobe Glyph List.
"
11298,source/pymupdf.pdf,"Parameters
"
11299,source/pymupdf.pdf,"ch (int) – the unicode given by e.g. ord(""ß""). The function is based on the
Adobe Glyph List.
"
11300,source/pymupdf.pdf,"Return type
"
11301,source/pymupdf.pdf,"str
"
11302,source/pymupdf.pdf,"Returns
"
11303,source/pymupdf.pdf,"the glyph name.
E.g.
fitz.unicode_to_glyph_name(ord(""Ä"")) returns
'Adieresis'.
"
11304,source/pymupdf.pdf,"Note: A similar functionality is provided by package fontTools: in its agl sub-package.
"
11305,source/pymupdf.pdf,"adobe_glyph_names()
"
11306,source/pymupdf.pdf,"New in v1.18.0
"
11307,source/pymupdf.pdf,"Return a list of glyph names defined in the Adobe Glyph List.
"
11308,source/pymupdf.pdf,"Return type
"
11309,source/pymupdf.pdf,"list
"
11310,source/pymupdf.pdf,"Returns
"
11311,source/pymupdf.pdf,"list of strings.
"
11312,source/pymupdf.pdf,"Note: A similar functionality is provided by package fontTools in its agl sub-package.
"
11313,source/pymupdf.pdf,"adobe_glyph_unicodes()
"
11314,source/pymupdf.pdf,"New in v1.18.0
"
11315,source/pymupdf.pdf,"Return a list of unicodes for there exists a glyph name in the Adobe Glyph List.
"
11316,source/pymupdf.pdf,"Return type
"
11317,source/pymupdf.pdf,"list
"
11318,source/pymupdf.pdf,"Returns
"
11319,source/pymupdf.pdf,"list of integers.
"
11320,source/pymupdf.pdf,"406
Chapter 21. Low Level Functions and Classes
"
11321,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11322,source/pymupdf.pdf,"Note: A similar functionality is provided by package fontTools in its agl sub-package.
"
11323,source/pymupdf.pdf,"css_for_pymupdf_font(fontcode, *, CSS=None, archive=None, name=None)
"
11324,source/pymupdf.pdf,"New in v1.21.0
"
11325,source/pymupdf.pdf,"Utility function for use with “Story” applications.
"
11326,source/pymupdf.pdf,"Create CSS @font-face items for the given fontcode in pymupdf-fonts. Creates a CSS font-family
for all fonts starting with string “fontcode”.
"
11327,source/pymupdf.pdf,"The font naming convention in package pymupdf-fonts is “fontcode<sf>”, where the suffix “sf” is
one of “” (empty), “it”/”i”, “bo”/”b” or “bi”. These suffixes thus represent the regular, italic, bold
or bold-italic variants of that font.
"
11328,source/pymupdf.pdf,"For example, font code “notos” refers to fonts
"
11329,source/pymupdf.pdf,"• “notos” - “Noto Sans Regular”
"
11330,source/pymupdf.pdf,"• “notosit” - “Noto Sans Italic”
"
11331,source/pymupdf.pdf,"• “notosbo” - “Noto Sans Bold”
"
11332,source/pymupdf.pdf,"• “notosbi” - “Noto Sans Bold Italic”
"
11333,source/pymupdf.pdf,"The function creates (up to) four CSS @font-face definitions and collectively assigns the
font-family name “notos” to them (or the “name” value if provided). Associated font buffers
are placed / added to the provided archive.
"
11334,source/pymupdf.pdf,"To use the font in the Python API for Story, execute .set_font(fontcode) (or “name” if given).
The correct font weight or style will automatically be selected as required.
"
11335,source/pymupdf.pdf,"For example to replace the “sans-serif” HTML standard (i.e. Helvetica) with the above “notos”,
execute the following. Whenever “sans-serif” is used (whether explicitly or implicitly), the Noto
Sans fonts will be selected.
"
11336,source/pymupdf.pdf,"CSS = fitz.css_for_pymupdf_font(""notos"", name=""sans-serif"", archive=...)
"
11337,source/pymupdf.pdf,"Expects and returns the CSS source, with the new CSS definitions appended.
"
11338,source/pymupdf.pdf,"Parameters
"
11339,source/pymupdf.pdf,"• fontcode (str) – one of the font codes present in package pymupdf-fonts
"
11340,source/pymupdf.pdf,"(usually) representing the regular version of the font family.
"
11341,source/pymupdf.pdf,"• CSS (str) – any already existing CSS source, or None. The function will
append its new definitions to this. This is the string that must be used as
user_css when creating the Story.
"
11342,source/pymupdf.pdf,"• archive – Archive, mandatory. All font binaries (i.e. up to four) found for
“fontcode” will be added to the archive. This is the archive that must be used
as Archive when creating the Story.
"
11343,source/pymupdf.pdf,"• name (str) – the name under which the “fontcode” fonts should be found. If
omitted, “fontcode” will be used.
"
11344,source/pymupdf.pdf,"Return type
"
11345,source/pymupdf.pdf,"str
"
11346,source/pymupdf.pdf,"Returns
"
11347,source/pymupdf.pdf,"Modified CSS, with appended @font-face statements for each font variant
of fontcode.
Fontbuffers associated with “fontcode” will have been added
"
11348,source/pymupdf.pdf,"21.1. Functions
407
"
11349,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11350,source/pymupdf.pdf,"to ‘archive’.
The function will automatically find up to 4 font variants.
All pymupdf-fonts (that are no special purpose like math or music, etc.)
have regular, bold, italic and bold-italic variants.
To see currently available
font codes check fitz.fitz_fontdescriptors.keys().
This will show
something like dict_keys(['cascadia', 'cascadiai', 'cascadiab',
'cascadiabi', 'figbo', 'figo', 'figbi', 'figit', 'fimbo',
'fimo', 'spacembo', 'spacembi', 'spacemit', 'spacemo',
'math', 'music', 'symbol1', 'symbol2', 'notosbo', 'notosbi',
'notosit', 'notos', 'ubuntu', 'ubuntubo', 'ubuntubi',
'ubuntuit', 'ubuntm', 'ubuntmbo', 'ubuntmbi', 'ubuntmit']).
"
11351,source/pymupdf.pdf,"Here is a complete snippet for using the “Noto Sans” font instead of “Helvetica”:
"
11352,source/pymupdf.pdf,"arch = fitz.Archive()
CSS = fitz.css_for_pymupdf_font(""notos"", name=""sans-serif"", archive=arch)
story = fitz.Story(user_css=CSS, archive=arch)
"
11353,source/pymupdf.pdf,"make_table(rect, cols=1, rows=1)
"
11354,source/pymupdf.pdf,"New in v1.17.4
"
11355,source/pymupdf.pdf,"Convenience function to split a rectangle into sub-rectangles of equal size. Returns a list of rows
lists, each containing cols Rect items. Each sub-rectangle can then be addressed by its row and
column index.
"
11356,source/pymupdf.pdf,"Parameters
"
11357,source/pymupdf.pdf,"• rect (rect_like) – the rectangle to split.
"
11358,source/pymupdf.pdf,"• cols (int) – the desired number of columns.
"
11359,source/pymupdf.pdf,"• rows (int) – the desired number of rows.
"
11360,source/pymupdf.pdf,"Returns
"
11361,source/pymupdf.pdf,"a list of Rect objects of equal size, whose union equals rect. Here is the layout of
a 3x4 table created by cell = fitz.make_table(rect, cols=4, rows=3):
"
11362,source/pymupdf.pdf,"planish_line(p1, p2)
"
11363,source/pymupdf.pdf,"• New in version 1.16.2)*
"
11364,source/pymupdf.pdf,"Return a matrix which maps the line from p1 to p2 to the x-axis such that p1 will become (0,0) and
p2 a point with the same distance to (0,0).
"
11365,source/pymupdf.pdf,"Parameters
"
11366,source/pymupdf.pdf,"• p1 (point_like) – starting point of the line.
"
11367,source/pymupdf.pdf,"• p2 (point_like) – end point of the line.
"
11368,source/pymupdf.pdf,"Return type
"
11369,source/pymupdf.pdf,"Matrix
"
11370,source/pymupdf.pdf,"408
Chapter 21. Low Level Functions and Classes
"
11371,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11372,source/pymupdf.pdf,"Returns
"
11373,source/pymupdf.pdf,"a matrix which combines a rotation and a translation:
"
11374,source/pymupdf.pdf,">>> p1 = fitz.Point(1, 1)
>>> p2 = fitz.Point(4, 5)
>>> abs(p2 - p1)
# distance of points
"
11375,source/pymupdf.pdf,"5.0
>>> m = fitz.planish_line(p1, p2)
>>> p1 * m
Point(0.0, 0.0)
>>> p2 * m
Point(5.0, -5.960464477539063e-08)
>>> # distance of the resulting points
>>> abs(p2 * m - p1 * m)
5.0
"
11376,source/pymupdf.pdf,"paper_sizes()
"
11377,source/pymupdf.pdf,"A dictionary of pre-defines paper formats. Used as basis for paper_size().
"
11378,source/pymupdf.pdf,"fitz_fontdescriptors
"
11379,source/pymupdf.pdf,"• New in v1.17.5
"
11380,source/pymupdf.pdf,"A dictionary of usable fonts from repository pymupdf-fonts. Items are keyed by their reserved font-
name and provide information like this:
"
11381,source/pymupdf.pdf,"In [2]: fitz.fitz_fontdescriptors.keys()
Out[2]: dict_keys(['figbo', 'figo', 'figbi', 'figit', 'fimbo', 'fimo',
'spacembo', 'spacembi', 'spacemit', 'spacemo', 'math', 'music', 'symbol1',
'symbol2'])
In [3]: fitz.fitz_fontdescriptors[""fimo""]
Out[3]:
{'name': 'Fira Mono Regular',
'size': 125712,
'mono': True,
'bold': False,
'italic': False,
'serif': True,
'glyphs': 1485}
"
11382,source/pymupdf.pdf,"21.1. Functions
409
"
11383,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11384,source/pymupdf.pdf,"If pymupdf-fonts is not installed, the dictionary is empty.
"
11385,source/pymupdf.pdf,"The dictionary keys can be used to define a Font via e.g. font = fitz.Font(""fimo"") – just like
you can do it with the builtin fonts “Helvetica” and friends.
"
11386,source/pymupdf.pdf,"TESSDATA_PREFIX
"
11387,source/pymupdf.pdf,"• New in v1.19.4
"
11388,source/pymupdf.pdf,"Copy of os.environ[""TESSDATA_PREFIX""] for convenient checking whether there is integrated
Tesseract OCR support.
"
11389,source/pymupdf.pdf,"If this attribute is None, Tesseract-OCR is either not installed, or the environment variable is not set
to point to Tesseract’s language support folder.
"
11390,source/pymupdf.pdf,"Note: This variable is now checked before OCR functions are tried. This prevents verbose messages
from MuPDF.
"
11391,source/pymupdf.pdf,"pdfcolor
"
11392,source/pymupdf.pdf,"• New in v1.19.6
"
11393,source/pymupdf.pdf,"Contains about 500 RGB colors in PDF format with the color name as key. To see what is there, you
can obviously look at fitz.pdfcolor.keys().
"
11394,source/pymupdf.pdf,"Examples:
"
11395,source/pymupdf.pdf,"• fitz.pdfcolor[""red""] = (1.0, 0.0, 0.0)
"
11396,source/pymupdf.pdf,"• fitz.pdfcolor[""skyblue""] = (0.5294117647058824, 0.807843137254902,
0.9215686274509803)
"
11397,source/pymupdf.pdf,"• fitz.pdfcolor[""wheat""] = (0.9607843137254902, 0.8705882352941177, 0.
7019607843137254)
"
11398,source/pymupdf.pdf,"get_pdf_now()
"
11399,source/pymupdf.pdf,"Convenience function to return the current local timestamp in PDF compatible format, e.g.
D:20170501121525-04’00’ for local datetime May 1, 2017, 12:15:25 in a timezone 4 hours west-
ward of the UTC meridian.
"
11400,source/pymupdf.pdf,"Return type
"
11401,source/pymupdf.pdf,"str
"
11402,source/pymupdf.pdf,"Returns
"
11403,source/pymupdf.pdf,"current local PDF timestamp.
"
11404,source/pymupdf.pdf,"get_text_length(text, fontname='helv', fontsize=11, encoding=TEXT_ENCODING_LATIN)
"
11405,source/pymupdf.pdf,"• New in version 1.14.7
"
11406,source/pymupdf.pdf,"Calculate the length of text on output with a given builtin font, fontsize and encoding.
"
11407,source/pymupdf.pdf,"Parameters
"
11408,source/pymupdf.pdf,"410
Chapter 21. Low Level Functions and Classes
"
11409,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11410,source/pymupdf.pdf,"• text (str) – the text string.
"
11411,source/pymupdf.pdf,"• fontname (str) – the fontname. Must be one of either the PDF Base 14
Fonts or the CJK fonts, identified by their “reserved” fontnames (see table in
Page.insert_font()).
"
11412,source/pymupdf.pdf,"• fontsize (float) – the fontsize.
"
11413,source/pymupdf.pdf,"• encoding (int) – the encoding to use. Besides 0 = Latin, 1 = Greek and
2 = Cyrillic (Russian) are available. Relevant for Base-14 fonts “Helvetica”,
“Courier” and “Times” and their variants only. Make sure to use the same
value as in the corresponding text insertion.
"
11414,source/pymupdf.pdf,"Return type
"
11415,source/pymupdf.pdf,"float
"
11416,source/pymupdf.pdf,"Returns
"
11417,source/pymupdf.pdf,"the length in points the string will have (e.g.
when used in Page.
insert_text()).
"
11418,source/pymupdf.pdf,"Note: This function will only do the calculation – it won’t insert font nor text.
"
11419,source/pymupdf.pdf,"Note:
The Font class offers a similar method, Font.text_length(), which supports Base-14
fonts and any font with a character map (CMap, Type 0 fonts).
"
11420,source/pymupdf.pdf,"Warning:
If you use this function to determine the required rectangle width for the (Page or
"
11421,source/pymupdf.pdf,"Shape) insert_textbox methods, be aware that they calculate on a by-character level. Because
of rounding effects, this will mostly lead to a slightly larger number: sum([fitz.get_text_length(c)
for c in text]) > fitz.get_text_length(text). So either (1) do the same, or (2) use something like
fitz.get_text_length(text + “’”) for your calculation.
"
11422,source/pymupdf.pdf,"get_pdf_str(text)
"
11423,source/pymupdf.pdf,"Make a PDF-compatible string: if the text contains code points ord(c) > 255, then it will be converted
to UTF-16BE with BOM as a hexadecimal character string enclosed in “<>” brackets like <feff...>.
Otherwise, it will return the string enclosed in (round) brackets, replacing any characters outside the
ASCII range with some special code. Also, every “(”, “)” or backslash is escaped with a backslash.
"
11424,source/pymupdf.pdf,"Parameters
"
11425,source/pymupdf.pdf,"text (str) – the object to convert
"
11426,source/pymupdf.pdf,"Return type
"
11427,source/pymupdf.pdf,"str
"
11428,source/pymupdf.pdf,"Returns
"
11429,source/pymupdf.pdf,"PDF-compatible string enclosed in either () or <>.
"
11430,source/pymupdf.pdf,"image_profile(stream)
"
11431,source/pymupdf.pdf,"• New in v1.16.7
"
11432,source/pymupdf.pdf,"• Changed in v1.19.5: also return natural image orientation extracted from EXIF data if present.
"
11433,source/pymupdf.pdf,"21.1. Functions
411
"
11434,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11435,source/pymupdf.pdf,"• Changed in v1.22.5: always return None in error cases instead of an empty dictionary.
"
11436,source/pymupdf.pdf,"Show important properties of an image provided as a memory area. Its main purpose is to avoid
using other Python packages just to determine them.
"
11437,source/pymupdf.pdf,"Parameters
"
11438,source/pymupdf.pdf,"stream (bytes|bytearray|BytesIO|file) – either an image in memory or an
opened file. An image in memory may be any of the formats bytes, bytearray
or io.BytesIO.
"
11439,source/pymupdf.pdf,"Return type
"
11440,source/pymupdf.pdf,"dict
"
11441,source/pymupdf.pdf,"Returns
"
11442,source/pymupdf.pdf,"No exception is ever raised. In case of an error, None is returned. Otherwise, there
are the following items:
"
11443,source/pymupdf.pdf,"In [2]: fitz.image_profile(open(""nur-ruhig.jpg"", ""rb"").
"
11444,source/pymupdf.pdf,"˓→read())
Out[2]:
{'width': 439,
'height': 501,
'orientation': 0,
# natural orientation (from EXIF)
"
11445,source/pymupdf.pdf,"'transform': (1.0, 0.0, 0.0, 1.0, 0.0, 0.0),
# orientation␣
"
11446,source/pymupdf.pdf,"˓→matrix
'xres': 96,
'yres': 96,
'colorspace': 3,
'bpc': 8,
'ext': 'jpeg',
'cs-name': 'DeviceRGB'}
"
11447,source/pymupdf.pdf,"There is the following relation to Exif information encoded in orientation, and
correspondingly in the transform matrix-like (quoted from MuPDF documen-
tation, ccw = counter-clockwise):
"
11448,source/pymupdf.pdf,"0. Undefined
"
11449,source/pymupdf.pdf,"1. 0 degree ccw rotation. (Exif = 1)
"
11450,source/pymupdf.pdf,"2. 90 degree ccw rotation. (Exif = 8)
"
11451,source/pymupdf.pdf,"3. 180 degree ccw rotation. (Exif = 3)
"
11452,source/pymupdf.pdf,"4. 270 degree ccw rotation. (Exif = 6)
"
11453,source/pymupdf.pdf,"5. flip on X. (Exif = 2)
"
11454,source/pymupdf.pdf,"6. flip on X, then rotate ccw by 90 degrees. (Exif = 5)
"
11455,source/pymupdf.pdf,"7. flip on X, then rotate ccw by 180 degrees. (Exif = 4)
"
11456,source/pymupdf.pdf,"8. flip on X, then rotate ccw by 270 degrees. (Exif = 7)
"
11457,source/pymupdf.pdf,"Note:
"
11458,source/pymupdf.pdf,"• For some “exotic” images (FAX encodings, RAW formats and the like), this
method will not work.
You can however still work with such images in
PyMuPDF, e.g. by using Document.extract_image() or create pixmaps
"
11459,source/pymupdf.pdf,"412
Chapter 21. Low Level Functions and Classes
"
11460,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11461,source/pymupdf.pdf,"via Pixmap(doc, xref). These methods will automatically convert exotic
images to the PNG format before returning results.
"
11462,source/pymupdf.pdf,"• You can also get the properties of images embedded in a PDF, via
their xref.
In this case make sure to extract the raw stream: fitz.
image_profile(doc.xref_stream_raw(xref)).
"
11463,source/pymupdf.pdf,"• Images as returned by the image blocks of Page.get_text() using “dict”
or “rawdict” options are also supported.
"
11464,source/pymupdf.pdf,"ConversionHeader(""text"", filename=""UNKNOWN"")
"
11465,source/pymupdf.pdf,"Return the header string required to make a valid document out of page text outputs.
"
11466,source/pymupdf.pdf,"Parameters
"
11467,source/pymupdf.pdf,"• output (str) – type of document. Use the same as the output parameter of
get_text().
"
11468,source/pymupdf.pdf,"• filename (str) – optional arbitrary name to use in output types “json” and
“xml”.
"
11469,source/pymupdf.pdf,"Return type
"
11470,source/pymupdf.pdf,"str
"
11471,source/pymupdf.pdf,"ConversionTrailer(output)
"
11472,source/pymupdf.pdf,"Return the trailer string required to make a valid document out of page text outputs. See Page.
get_text() for an example.
"
11473,source/pymupdf.pdf,"Parameters
"
11474,source/pymupdf.pdf,"output (str) – type of document. Use the same as the output parameter of
get_text().
"
11475,source/pymupdf.pdf,"Return type
"
11476,source/pymupdf.pdf,"str
"
11477,source/pymupdf.pdf,"Document.del_xml_metadata()
"
11478,source/pymupdf.pdf,"Delete an object containing XML-based metadata from the PDF. (Py-) MuPDF does not support
XML-based metadata. Use this if you want to make sure that the conventional metadata dictionary
will be used exclusively. Many thirdparty PDF programs insert their own metadata in XML format
and thus may override what you store in the conventional dictionary. This method deletes any such
reference, and the corresponding PDF object will be deleted during next garbage collection of the
file.
"
11479,source/pymupdf.pdf,"Document.xml_metadata_xref()
"
11480,source/pymupdf.pdf,"Return the XML-based metadata xref of the PDF if present – also refer to Document.
del_xml_metadata(). You can use it to retrieve the content via Document.xref_stream() and
then work with it using some XML software.
"
11481,source/pymupdf.pdf,"Return type
"
11482,source/pymupdf.pdf,"int
"
11483,source/pymupdf.pdf,"Returns
"
11484,source/pymupdf.pdf,"xref of PDF file level XML metadata – or 0 if none exists.
"
11485,source/pymupdf.pdf,"21.1. Functions
413
"
11486,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11487,source/pymupdf.pdf,"Page.run(dev, transform)
"
11488,source/pymupdf.pdf,"Run a page through a device.
"
11489,source/pymupdf.pdf,"Parameters
"
11490,source/pymupdf.pdf,"• dev (Device) – Device, obtained from one of the Device constructors.
"
11491,source/pymupdf.pdf,"• transform (Matrix) – Transformation to apply to the page. Set it to Identity
"
11492,source/pymupdf.pdf,"if no transformation is desired.
"
11493,source/pymupdf.pdf,"Page.get_bboxlog(layers=False)
"
11494,source/pymupdf.pdf,"• New in v1.19.0
"
11495,source/pymupdf.pdf,"• Changed in v1.22.0: optionally also return the OCG name applicable to the boundary box.
"
11496,source/pymupdf.pdf,"Returns
"
11497,source/pymupdf.pdf,"a list of rectangles that envelop text, image or drawing objects. Each item is a
tuple (type, (x0, y0, x1, y1)) where the second tuple consists of rectangle
coordinates, and type is one of the following values. If layers=True, there is a
third item containing the OCG name or None: (type, (x0, y0, x1, y1),
None).
"
11498,source/pymupdf.pdf,"• ""fill-text"" – normal text (painted without character borders)
"
11499,source/pymupdf.pdf,"• ""stroke-text"" – text showing character borders only
"
11500,source/pymupdf.pdf,"• ""ignore-text"" – text that should not be displayed (e.g. as used by OCR
text layers)
"
11501,source/pymupdf.pdf,"• ""fill-path"" – drawing with fill color (and no border)
"
11502,source/pymupdf.pdf,"• ""stroke-path"" – drawing with border (and no fill color)
"
11503,source/pymupdf.pdf,"• ""fill-image"" – displays an image
"
11504,source/pymupdf.pdf,"• ""fill-shade"" – display a shading
"
11505,source/pymupdf.pdf,"The item sequence represents the sequence in which these commands are exe-
cuted to build the page’s appearance. Therefore, if an item’s bbox intersects or
contains that of a previous item, then the previous item may be (partially) covered
/ hidden.
"
11506,source/pymupdf.pdf,"So this list can be used to detect such situations. An item’s index in this list equals
the value of a ""seqno"" in dictionaries as returned by Page.get_drawings()
and Page.get_texttrace().
"
11507,source/pymupdf.pdf,"Page.get_texttrace()
"
11508,source/pymupdf.pdf,"• New in v1.18.16
"
11509,source/pymupdf.pdf,"• Changed in v1.19.0: added key “seqno”.
"
11510,source/pymupdf.pdf,"• Changed in v1.19.1: stroke and fill colors now always are either RGB or GRAY
"
11511,source/pymupdf.pdf,"• Changed in v1.19.3: span and character bboxes are now also correct if dir != (1, 0).
"
11512,source/pymupdf.pdf,"414
Chapter 21. Low Level Functions and Classes
"
11513,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11514,source/pymupdf.pdf,"• Changed in v1.22.0: add new dictionary key “layer”.
"
11515,source/pymupdf.pdf,"Return low-level text information of the page. The method is available for all document types. The
result is a list of Python dictionaries with the following content:
"
11516,source/pymupdf.pdf,"{
"
11517,source/pymupdf.pdf,"'ascender': 0.83251953125,
# font ascender (1)
"
11518,source/pymupdf.pdf,"'bbox': (458.14019775390625,
# span bbox x0 (7)
"
11519,source/pymupdf.pdf,"749.4671630859375,
# span bbox y0
"
11520,source/pymupdf.pdf,"467.76458740234375,
# span bbox x1
"
11521,source/pymupdf.pdf,"757.5071411132812),
# span bbox y1
"
11522,source/pymupdf.pdf,"'bidi': 0,
# bidirectional level (1)
"
11523,source/pymupdf.pdf,"'chars': (
# char information, tuple[tuple]
"
11524,source/pymupdf.pdf,"(45,
# unicode (4)
"
11525,source/pymupdf.pdf,"16,
# glyph id (font dependent)
"
11526,source/pymupdf.pdf,"(458.14019775390625,
# origin.x (1)
"
11527,source/pymupdf.pdf,"755.3758544921875),
# origin.y (1)
"
11528,source/pymupdf.pdf,"(458.14019775390625,
# char bbox x0 (6)
"
11529,source/pymupdf.pdf,"749.4671630859375,
# char bbox y0
"
11530,source/pymupdf.pdf,"462.9649963378906,
# char bbox x1
"
11531,source/pymupdf.pdf,"757.5071411132812)),
# char bbox y1
"
11532,source/pymupdf.pdf,"( ... ),
# more characters
"
11533,source/pymupdf.pdf,"),
"
11534,source/pymupdf.pdf,"'color': (0.0,),
# text color, tuple[float] (1)
"
11535,source/pymupdf.pdf,"'colorspace': 1,
# number of colorspace components␣
"
11536,source/pymupdf.pdf,"˓→(1)
"
11537,source/pymupdf.pdf,"'descender': -0.30029296875,
# font descender (1)
"
11538,source/pymupdf.pdf,"'dir': (1.0, 0.0),
# writing direction (1)
"
11539,source/pymupdf.pdf,"'flags': 12,
# font flags (1)
"
11540,source/pymupdf.pdf,"'font': 'CourierNewPSMT',
# font name (1)
"
11541,source/pymupdf.pdf,"'linewidth': 0.4019999980926514,
# current line width value (3)
"
11542,source/pymupdf.pdf,"'opacity': 1.0,
# alpha value of the text (5)
"
11543,source/pymupdf.pdf,"'layer': None,
# name of Optional Content Group (9)
"
11544,source/pymupdf.pdf,"'seqno': 246,
# sequence number (8)
"
11545,source/pymupdf.pdf,"'size': 8.039999961853027,
# font size (1)
"
11546,source/pymupdf.pdf,"'spacewidth': 4.824785133358091,
# width of space char
"
11547,source/pymupdf.pdf,"'type': 0,
# span type (2)
"
11548,source/pymupdf.pdf,"'wmode': 0
# writing mode (1)
"
11549,source/pymupdf.pdf,"}
"
11550,source/pymupdf.pdf,"Details:
"
11551,source/pymupdf.pdf,"1. Information above tagged with “(1)” has the same meaning and value as explained in TextPage.
"
11552,source/pymupdf.pdf,"• Please note that the font flags value will never contain a superscript flag bit: the de-
tection of superscripts is done within MuPDF TextPage code – it is not a property of any
font.
"
11553,source/pymupdf.pdf,"• Also note, that the text color is encoded as the usual tuple of floats 0 <= f <= 1 – not in
sRGB format. Depending on span[""type""], interpret this as fill color or stroke color.
"
11554,source/pymupdf.pdf,"2. There are 3 text span types:
"
11555,source/pymupdf.pdf,"• 0: Filled text – equivalent to PDF text rendering mode 0 (0 Tr, the default in PDF), only
each character’s “inside” is shown.
"
11556,source/pymupdf.pdf,"• 1: Stroked text – equivalent to 1 Tr, only the character borders are shown.
"
11557,source/pymupdf.pdf,"21.1. Functions
415
"
11558,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11559,source/pymupdf.pdf,"• 3: Ignored text – equivalent to 3 Tr (hidden text).
"
11560,source/pymupdf.pdf,"3. Line width in this context is important only for processing span[""type""] != 0: it deter-
mines the thickness of the character’s border line. This value may not be provided at all with
the text data. In this case, a value of 5% of the fontsize (span[""size""] * 0,05) is gen-
erated. Often, an “artificial” bold text in PDF is created by 2 Tr. There is no equivalent span
type for this case. Instead, respective text is represented by two consecutive spans – which are
identical in every aspect, except for their types, which are 0, resp 1. It is your responsibility
to handle this type of situation - in Page.get_text(), MuPDF is doing this for you.
"
11561,source/pymupdf.pdf,"4. For data compactness, the character’s unicode is provided here. Use built-in function chr()
for the character itself.
"
11562,source/pymupdf.pdf,"5. The alpha / opacity value of the span’s text, 0 <= opacity <= 1, 0 is invisible text, 1 (100%)
is intransparent. Depending on span[""type""], interpret this value as fill opacity or, resp.
stroke opacity.
"
11563,source/pymupdf.pdf,"6. (Changed in v1.19.0) This value is equal or close to char[""bbox""] of “rawdict”. In particu-
lar, the bbox height value is always computed as if “small glyph heights” had been requested.
"
11564,source/pymupdf.pdf,"7. (New in v1.19.0) This is the union of all character bboxes.
"
11565,source/pymupdf.pdf,"8. (New in v1.19.0) Enumerates the commands that build up the page’s appearance. Can be used
to find out whether text is effectively hidden by objects, which are painted “later”, or over
some object. So if there is a drawing or image with a higher sequence number, whose bbox
overlaps (parts of) this text span, one may assume that such an object hides the resp. text.
Different text spans have identical sequence numbers if they were created in one go.
"
11566,source/pymupdf.pdf,"9. (New in v1.22.0) The name of the Optional Content Group (OCG) if applicable or None.
"
11567,source/pymupdf.pdf,"Here is a list of similarities and differences of page.get_texttrace() compared to page.
get_text(""rawdict""):
"
11568,source/pymupdf.pdf,"• The method is up to twice as fast, compared to “rawdict” extraction. Depends on the amount
of text.
"
11569,source/pymupdf.pdf,"• The returned data is very much smaller in size – although it provides more information.
"
11570,source/pymupdf.pdf,"• Additional types of text invisibility can be detected: opacity = 0 or type > 1 or overlapping
bbox of an object with a higher sequence number.
"
11571,source/pymupdf.pdf,"• If MuPDF returns unicode 0xFFFD (65533) for unrecognized characters, you may still be able
to deduct desired information from the glyph id.
"
11572,source/pymupdf.pdf,"• The span[""chars""] contains no spaces, except the document creator has explicitly coded
them. They will never be generated like it happens in Page.get_text() methods. To
provide some help for doing your own computations here, the width of a space character is
given. This value is derived from the font where possible. Otherwise the value of a fallback
font is taken.
"
11573,source/pymupdf.pdf,"• There is no effort to organize text like it happens for a TextPage (the hierarchy of blocks, lines,
spans, and characters). Characters are simply extracted in sequence, one by one, and put in a
span. Whenever any of the span’s characteristics changes, a new span is started. So you may
find characters with different origin.y values in the same span (which means they would
appear in different lines). You cannot assume, that span characters are sorted in any particular
order – you must make sense of the info yourself, taking span[""dir""], span[""wmode""],
etc. into account.
"
11574,source/pymupdf.pdf,"• Ligatures are represented like this:
"
11575,source/pymupdf.pdf,"416
Chapter 21. Low Level Functions and Classes
"
11576,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11577,source/pymupdf.pdf,"– MuPDF handles the following ligatures: “fi”, “ff”, “fl”, “ft”, “st”, “ffi”, and “ffl”
(only the first 3 are mostly ever used). If the page contains e.g. ligature “fi”, you
will find the following two character items subsequent to each other:
"
11578,source/pymupdf.pdf,"(102, glyph, (x, y), (x0, y0, x1, y1))
# 102 = ord(""f"")
"
11579,source/pymupdf.pdf,"(105, -1, (x, y), (x0, y0, x0, y1))
# 105 = ord(""i""),␣
"
11580,source/pymupdf.pdf,"˓→empty bbox!
"
11581,source/pymupdf.pdf,"– This means that the bbox of the first ligature character is the area containing the
complete, compound glyph. Subsequent ligature components are recognizable by
their glyph value -1 and a bbox of width zero.
"
11582,source/pymupdf.pdf,"– You may want to replace those 2 or 3 char tuples by one, that represents the ligature
itself. Use the following mapping of ligatures to unicodes:
"
11583,source/pymupdf.pdf,"∗ ""ff"" -> 0xFB00
"
11584,source/pymupdf.pdf,"∗ ""fi"" -> 0xFB01
"
11585,source/pymupdf.pdf,"∗ ""fl"" -> 0xFB02
"
11586,source/pymupdf.pdf,"∗ ""ffi"" -> 0xFB03
"
11587,source/pymupdf.pdf,"∗ ""ffl"" -> 0xFB04
"
11588,source/pymupdf.pdf,"∗ ""ft"" -> 0xFB05
"
11589,source/pymupdf.pdf,"∗ ""st"" -> 0xFB06
"
11590,source/pymupdf.pdf,"So you may want to replace the two example tuples above by the following
single one: (0xFB01, glyph, (x, y), (x0, y0, x1, y1)) (there is
usually no need to lookup the correct glyph id for 0xFB01 in the resp. font,
but you may execute font.has_glyph(0xFB01) and use its return value).
"
11591,source/pymupdf.pdf,"• Changed in v1.19.3: Similar to other text extraction methods, the character and span
bboxes envelop the character quads.
To recover the quads, follow the same methods
"
11592,source/pymupdf.pdf,"recover_quad(), recover_char_quad() or recover_span_quad() as explained in
Structure of Dictionary Outputs. Use either None or span[""dir""] for the writing direction.
"
11593,source/pymupdf.pdf,"• Changed in v1.21.1: If applicable, the name of the OCG is shown in ""layer"".
"
11594,source/pymupdf.pdf,"Page.wrap_contents()
"
11595,source/pymupdf.pdf,"Put string pair “q” / “Q” before, resp. after a page’s /Contents object(s) to ensure that any “geometry”
changes are local only.
"
11596,source/pymupdf.pdf,"Use this method as an alternative, minimalist version of Page.clean_contents(). Its advantage
is a small footprint in terms of processing time and impact on the data size of incremental saves.
Multiple executions of this method are no problem and have no functional impact: b""q q contents
Q Q"" is treated like b""q contents Q"".
"
11597,source/pymupdf.pdf,"Page.is_wrapped
"
11598,source/pymupdf.pdf,"Indicate whether Page.wrap_contents() may be required for object insertions in standard PDF
geometry. Note that this is a quick, basic check only: a value of False may still be a false alarm. But
nevertheless executing Page.wrap_contents() will have no negative side effects.
"
11599,source/pymupdf.pdf,"Return type
"
11600,source/pymupdf.pdf,"bool
"
11601,source/pymupdf.pdf,"21.1. Functions
417
"
11602,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11603,source/pymupdf.pdf,"Page.get_text_blocks(flags=None)
"
11604,source/pymupdf.pdf,"Deprecated wrapper for TextPage.extractBLOCKS(). Use Page.get_text() with the “blocks”
option instead.
"
11605,source/pymupdf.pdf,"Return type
"
11606,source/pymupdf.pdf,"list[tuple]
"
11607,source/pymupdf.pdf,"Page.get_text_words(flags=None, delimiters=None)
"
11608,source/pymupdf.pdf,"Deprecated wrapper for TextPage.extractWORDS(). Use Page.get_text() with the “words”
option instead.
"
11609,source/pymupdf.pdf,"Return type
"
11610,source/pymupdf.pdf,"list[tuple]
"
11611,source/pymupdf.pdf,"Page.get_displaylist()
"
11612,source/pymupdf.pdf,"Run a page through a list device and return its display list.
"
11613,source/pymupdf.pdf,"Return type
"
11614,source/pymupdf.pdf,"DisplayList
"
11615,source/pymupdf.pdf,"Returns
"
11616,source/pymupdf.pdf,"the display list of the page.
"
11617,source/pymupdf.pdf,"Page.get_contents()
"
11618,source/pymupdf.pdf,"PDF only: Retrieve a list of xref of contents objects of a page. May be empty or contain multi-
ple integers. If the page is cleaned (Page.clean_contents()), it will be one entry at most. The
“source” of each /Contents object can be individually read by Document.xref_stream() us-
ing an item of this list. Method Page.read_contents() in contrast walks through this list and
concatenates the corresponding sources into one bytes object.
"
11619,source/pymupdf.pdf,"Return type
"
11620,source/pymupdf.pdf,"list[int]
"
11621,source/pymupdf.pdf,"Page.set_contents(xref )
"
11622,source/pymupdf.pdf,"PDF only: Let the page’s /Contents key point to this xref. Any previously used contents objects
will be ignored and can be removed via garbage collection.
"
11623,source/pymupdf.pdf,"Page.clean_contents(sanitize=True)
"
11624,source/pymupdf.pdf,"• Changed in v1.17.6
"
11625,source/pymupdf.pdf,"PDF only: Clean and concatenate all contents objects associated with this page. “Cleaning” in-
cludes syntactical corrections, standardizations and “pretty printing” of the contents stream. Dis-
crepancies between contents and resources objects will also be corrected if sanitize is true. See
Page.get_contents() for more details.
"
11626,source/pymupdf.pdf,"Changed in version 1.16.0 Annotations are no longer implicitly cleaned by this method. Use Annot.
clean_contents() separately.
"
11627,source/pymupdf.pdf,"418
Chapter 21. Low Level Functions and Classes
"
11628,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11629,source/pymupdf.pdf,"Parameters
"
11630,source/pymupdf.pdf,"sanitize (bool) – (new in v1.17.6) if true, synchronization between resources
and their actual use in the contents object is snychronized. For example, if a font
is not actually used for any text of the page, then it will be deleted from the /
Resources/Font object.
"
11631,source/pymupdf.pdf,"Warning:
This is a complex function which may generate large amounts of new data and
render old data unused. It is not recommended using it together with the incremental save
option. Also note that the resulting singleton new /Contents object is uncompressed. So you
should save to a new file using options “deflate=True, garbage=3”.
"
11632,source/pymupdf.pdf,"Page.read_contents()
"
11633,source/pymupdf.pdf,"New in version 1.17.0. Return the concatenation of all contents objects associated with the page
– without cleaning or otherwise modifying them. Use this method whenever you need to parse this
source in its entirety without having to bother how many separate contents objects exist.
"
11634,source/pymupdf.pdf,"Return type
"
11635,source/pymupdf.pdf,"bytes
"
11636,source/pymupdf.pdf,"Annot.clean_contents(sanitize=True)
"
11637,source/pymupdf.pdf,"Clean the contents streams associated with the annotation. This is the same type of action which
Page.clean_contents() performs – just restricted to this annotation.
"
11638,source/pymupdf.pdf,"Document.get_char_widths(xref=0, limit=256)
"
11639,source/pymupdf.pdf,"Return a list of character glyphs and their widths for a font that is present in the document. A font
must be specified by its PDF cross reference number xref. This function is called automatically
from Page.insert_text() and Page.insert_textbox(). So you should rarely need to do this
yourself.
"
11640,source/pymupdf.pdf,"Parameters
"
11641,source/pymupdf.pdf,"• xref (int) – cross reference number of a font embedded in the PDF. To find
a font xref, use e.g. doc.get_page_fonts(pno) of page number pno and take
the first entry of one of the returned list entries.
"
11642,source/pymupdf.pdf,"• limit (int) – limits the number of returned entries. The default of 256 is
enforced for all fonts that only support 1-byte characters, so-called “simple
fonts” (checked by this method). All PDF Base 14 Fonts are simple fonts.
"
11643,source/pymupdf.pdf,"Return type
"
11644,source/pymupdf.pdf,"list
"
11645,source/pymupdf.pdf,"Returns
"
11646,source/pymupdf.pdf,"a list of limit tuples. Each character c has an entry (g, w) in this list with an index
of ord(c). Entry g (integer) of the tuple is the glyph id of the character, and float w
is its normalized width. The actual width for some fontsize can be calculated
as w * fontsize. For simple fonts, the g entry can always be safely ignored. In all
other cases g is the basis for graphically representing c.
"
11647,source/pymupdf.pdf,"This function calculates the pixel width of a string called text:
"
11648,source/pymupdf.pdf,"21.1. Functions
419
"
11649,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11650,source/pymupdf.pdf,"def pixlen(text, widthlist, fontsize):
"
11651,source/pymupdf.pdf,"try:
"
11652,source/pymupdf.pdf,"return sum([widthlist[ord(c)] for c in text]) * fontsize
"
11653,source/pymupdf.pdf,"except IndexError:
"
11654,source/pymupdf.pdf,"raise ValueError:(""max. code point found: %i, increase limit"" %␣
"
11655,source/pymupdf.pdf,"˓→ord(max(text)))
"
11656,source/pymupdf.pdf,"Document.is_stream(xref )
"
11657,source/pymupdf.pdf,"• New in version 1.14.14
"
11658,source/pymupdf.pdf,"PDF only: Check whether the object represented by xref is a stream type. Return is False if not
a PDF or if the number is outside the valid xref range.
"
11659,source/pymupdf.pdf,"Parameters
"
11660,source/pymupdf.pdf,"xref (int) – xref number.
"
11661,source/pymupdf.pdf,"Returns
"
11662,source/pymupdf.pdf,"True if the object definition is followed by data wrapped in keyword pair stream,
endstream.
"
11663,source/pymupdf.pdf,"Document.get_new_xref()
"
11664,source/pymupdf.pdf,"Increase the xref by one entry and return that number. This can then be used to insert a new object.
"
11665,source/pymupdf.pdf,"Return type
"
11666,source/pymupdf.pdf,"int :returns: the number of the new xref entry. Please note, that only a new entry
in the PDF’s cross reference table is created. At this point, there will not yet exist
a PDF object associated with it. To create an (empty) object with this number use
doc.update_xref(xref, ""<<>>"").
"
11667,source/pymupdf.pdf,"Document.xref_length()
"
11668,source/pymupdf.pdf,"Return length of xref table.
"
11669,source/pymupdf.pdf,"Return type
"
11670,source/pymupdf.pdf,"int
"
11671,source/pymupdf.pdf,"Returns
"
11672,source/pymupdf.pdf,"the number of entries in the xref table.
"
11673,source/pymupdf.pdf,"recover_quad(line_dir, span)
"
11674,source/pymupdf.pdf,"Compute the quadrilateral of a text span extracted via options “dict” or “rawdict” of Page.
get_text().
"
11675,source/pymupdf.pdf,"Parameters
"
11676,source/pymupdf.pdf,"• line_dir (tuple) – line[""dir""] of the owning line. Use None for a span
from Page.get_texttrace().
"
11677,source/pymupdf.pdf,"• span (dict) – the span.
"
11678,source/pymupdf.pdf,"Returns
"
11679,source/pymupdf.pdf,"the Quad of the span, usable for text marker annotations (‘Highlight’, etc.).
"
11680,source/pymupdf.pdf,"420
Chapter 21. Low Level Functions and Classes
"
11681,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11682,source/pymupdf.pdf,"recover_char_quad(line_dir, span, char)
"
11683,source/pymupdf.pdf,"Compute the quadrilateral of a text character extracted via option “rawdict” of Page.get_text().
"
11684,source/pymupdf.pdf,"Parameters
"
11685,source/pymupdf.pdf,"• line_dir (tuple) – line[""dir""] of the owning line. Use None for a span
from Page.get_texttrace().
"
11686,source/pymupdf.pdf,"• span (dict) – the span.
"
11687,source/pymupdf.pdf,"• char (dict) – the character.
"
11688,source/pymupdf.pdf,"Returns
"
11689,source/pymupdf.pdf,"the Quad of the character, usable for text marker annotations (‘Highlight’, etc.).
"
11690,source/pymupdf.pdf,"recover_span_quad(line_dir, span, chars=None)
"
11691,source/pymupdf.pdf,"Compute the quadrilateral of a subset of characters of a span extracted via option “rawdict” of Page.
get_text().
"
11692,source/pymupdf.pdf,"Parameters
"
11693,source/pymupdf.pdf,"• line_dir (tuple) – line[""dir""] of the owning line. Use None for a span
from Page.get_texttrace().
"
11694,source/pymupdf.pdf,"• span (dict) – the span.
"
11695,source/pymupdf.pdf,"• chars (list) – the characters to consider. If given, the selected extraction
option must be “rawdict”.
"
11696,source/pymupdf.pdf,"Returns
"
11697,source/pymupdf.pdf,"the Quad of the selected characters, usable for text marker annotations (‘High-
light’, etc.).
"
11698,source/pymupdf.pdf,"recover_line_quad(line, spans=None)
"
11699,source/pymupdf.pdf,"Compute the quadrilateral of a subset of spans of a text line extracted via options “dict” or “rawdict”
of Page.get_text().
"
11700,source/pymupdf.pdf,"Parameters
"
11701,source/pymupdf.pdf,"• line (dict) – the line.
"
11702,source/pymupdf.pdf,"• spans (list) – a sub-list of line[""spans""]. If omitted, the full line quad
will be returned.
"
11703,source/pymupdf.pdf,"Returns
"
11704,source/pymupdf.pdf,"the Quad of the selected line spans, usable for text marker annotations (‘High-
light’, etc.).
"
11705,source/pymupdf.pdf,"get_tessdata()
"
11706,source/pymupdf.pdf,"Return the name of Tesseract’s language support folder. Use this function if the environment variable
TESSDATA_PREFIX has not been set.
"
11707,source/pymupdf.pdf,"Returns
"
11708,source/pymupdf.pdf,"os.getenv(""TESSDATA_PREFIX"") if not None. Otherwise, if Tesseract-OCR is
installed, locate the name of tessdata. If no installation is found, return False.
"
11709,source/pymupdf.pdf,"21.1. Functions
421
"
11710,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11711,source/pymupdf.pdf,"The
folder
name
can
be
used
as
parameter
tessdata
in
methods
"
11712,source/pymupdf.pdf,"Page.get_textpage_ocr(),
Pixmap.pdfocr_save()
and
Pixmap.
pdfocr_tobytes().
"
11713,source/pymupdf.pdf,"INFINITE_QUAD()
"
11714,source/pymupdf.pdf,"INFINITE_RECT()
"
11715,source/pymupdf.pdf,"INFINITE_IRECT()
"
11716,source/pymupdf.pdf,"Return the (unique) infinite rectangle Rect(-2147483648.0, -2147483648.0, 2147483520.
0, 2147483520.0), resp. the IRect and Quad counterparts. It is the largest possible rectangle: all
valid rectangles are contained in it.
"
11717,source/pymupdf.pdf,"EMPTY_QUAD()
"
11718,source/pymupdf.pdf,"EMPTY_RECT()
"
11719,source/pymupdf.pdf,"EMPTY_IRECT()
"
11720,source/pymupdf.pdf,"Return the “standard” empty and invalid rectangle Rect(2147483520.0, 2147483520.0,
-2147483648.0, -2147483648.0) resp. quad. Its top-left and bottom-right point values are
reversed compared to the infinite rectangle. It will e.g. be used to indicate empty bboxes in page.
get_text(""dict"") dictionaries. There are however infinitely many empty or invalid rectangles.
"
11721,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
11722,source/pymupdf.pdf,"21.2 Device
"
11723,source/pymupdf.pdf,"The different format handlers (pdf, xps, etc.) interpret pages to a “device”. Devices are the basis for everything that
can be done with a page: rendering, text extraction and searching. The device type is determined by the selected
construction method.
"
11724,source/pymupdf.pdf,"Class API
"
11725,source/pymupdf.pdf,"class Device
"
11726,source/pymupdf.pdf,"__init__(self, object, clip)
"
11727,source/pymupdf.pdf,"Constructor for either a pixel map or a display list device.
"
11728,source/pymupdf.pdf,"Parameters
"
11729,source/pymupdf.pdf,"• object (Pixmap or DisplayList) – either a Pixmap or a DisplayList.
"
11730,source/pymupdf.pdf,"• clip (IRect) – An optional IRect for Pixmap devices to restrict rendering to a cer-
tain area of the page. If the complete page is required, specify None. For display
list devices, this parameter must be omitted.
"
11731,source/pymupdf.pdf,"422
Chapter 21. Low Level Functions and Classes
"
11732,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11733,source/pymupdf.pdf,"__init__(self, textpage, flags=0)
"
11734,source/pymupdf.pdf,"Constructor for a text page device.
"
11735,source/pymupdf.pdf,"Parameters
"
11736,source/pymupdf.pdf,"• textpage (TextPage) – TextPage object
"
11737,source/pymupdf.pdf,"• flags (int) – control the way how text is parsed into the text page. Currently 3
options can be coded into this parameter, see Text Extraction Flags. To set these
options use something like flags=0 | TEXT_PRESERVE_LIGATURES | ....
"
11738,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
11739,source/pymupdf.pdf,"21.3 Working together: DisplayList and TextPage
"
11740,source/pymupdf.pdf,"Here are some instructions on how to use these classes together.
"
11741,source/pymupdf.pdf,"In some situations, performance improvements may be achievable, when you fall back to the detail level explained here.
"
11742,source/pymupdf.pdf,"21.3.1 Create a DisplayList
"
11743,source/pymupdf.pdf,"A DisplayList represents an interpreted document page. Methods for pixmap creation, text extraction and text search
are – behind the curtain – all using the page’s display list to perform their tasks. If a page must be rendered several
times (e.g. because of changed zoom levels), or if text search and text extraction should both be performed, overhead
can be saved, if the display list is created only once and then used for all other tasks.
"
11744,source/pymupdf.pdf,">>> dl = page.get_displaylist()
# create the display list
"
11745,source/pymupdf.pdf,"You can also create display lists for many pages “on stack” (in a list), may be during document open, during idling
times, or you store it when a page is visited for the first time (e.g. in GUI scripts).
"
11746,source/pymupdf.pdf,"Note, that for everything what follows, only the display list is needed – the corresponding Page object could have been
deleted.
"
11747,source/pymupdf.pdf,"21.3.2 Generate Pixmap
"
11748,source/pymupdf.pdf,"The following creates a Pixmap from a DisplayList. Parameters are the same as for Page.get_pixmap().
"
11749,source/pymupdf.pdf,">>> pix = dl.get_pixmap()
# create the page's pixmap
"
11750,source/pymupdf.pdf,"The execution time of this statement may be up to 50% shorter than that of Page.get_pixmap().
"
11751,source/pymupdf.pdf,"21.3. Working together: DisplayList and TextPage
423
"
11752,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11753,source/pymupdf.pdf,"21.3.3 Perform Text Search
"
11754,source/pymupdf.pdf,"With the display list from above, we can also search for text.
"
11755,source/pymupdf.pdf,"For this we need to create a TextPage.
"
11756,source/pymupdf.pdf,">>> tp = dl.get_textpage()
# display list from above
"
11757,source/pymupdf.pdf,">>> rlist = tp.search(""needle"")
# look up ""needle"" locations
"
11758,source/pymupdf.pdf,">>> for r in rlist:
# work with the found locations, e.g.
"
11759,source/pymupdf.pdf,"pix.invert_irect(r.irect)
# invert colors in the rectangles
"
11760,source/pymupdf.pdf,"21.3.4 Extract Text
"
11761,source/pymupdf.pdf,"With the same TextPage object from above, we can now immediately use any or all of the 5 text extraction methods.
"
11762,source/pymupdf.pdf,"Note: Above, we have created our text page without argument. This leads to a default argument of 3 (ligatures and
white-space are preserved), IAW images will not be extracted – see below.
"
11763,source/pymupdf.pdf,">>> txt
= tp.extractText()
# plain text format
"
11764,source/pymupdf.pdf,">>> json = tp.extractJSON()
# json format
"
11765,source/pymupdf.pdf,">>> html = tp.extractHTML()
# HTML format
"
11766,source/pymupdf.pdf,">>> xml
= tp.extractXML()
# XML format
"
11767,source/pymupdf.pdf,">>> xml
= tp.extractXHTML()
# XHTML format
"
11768,source/pymupdf.pdf,"21.3.5 Further Performance improvements
"
11769,source/pymupdf.pdf,"Pixmap
"
11770,source/pymupdf.pdf,"As explained in the Page chapter:
"
11771,source/pymupdf.pdf,"If you do not need transparency set alpha = 0 when creating pixmaps. This will save 25% memory (if RGB, the most
common case) and possibly 5% execution time (depending on the GUI software).
"
11772,source/pymupdf.pdf,"TextPage
"
11773,source/pymupdf.pdf,"If you do not need images extracted alongside the text of a page, you can set the following option:
"
11774,source/pymupdf.pdf,">>> flags = fitz.TEXT_PRESERVE_LIGATURES | fitz.TEXT_PRESERVE_WHITESPACE
>>> tp = dl.get_textpage(flags)
"
11775,source/pymupdf.pdf,"This will save ca. 25% overall execution time for the HTML, XHTML and JSON text extractions and hugely reduce
the amount of storage (both, memory and disk space) if the document is graphics oriented.
"
11776,source/pymupdf.pdf,"If you however do need images, use a value of 7 for flags:
"
11777,source/pymupdf.pdf,">>> flags = fitz.TEXT_PRESERVE_LIGATURES | fitz.TEXT_PRESERVE_WHITESPACE | fitz.TEXT_
"
11778,source/pymupdf.pdf,"˓→PRESERVE_IMAGES
"
11779,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
11780,source/pymupdf.pdf,"424
Chapter 21. Low Level Functions and Classes
"
11781,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11782,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
11783,source/pymupdf.pdf,"21.3. Working together: DisplayList and TextPage
425
"
11784,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11785,source/pymupdf.pdf,"426
Chapter 21. Low Level Functions and Classes
"
11786,source/pymupdf.pdf,"CHAPTER
"
11787,source/pymupdf.pdf,"TWENTYTWO
"
11788,source/pymupdf.pdf,"GLOSSARY
"
11789,source/pymupdf.pdf,"coordinate
"
11790,source/pymupdf.pdf,"This is an esential general mathematical / geometrical term for understanding this documentation. Please see
this section for a more detailed discussion: Coordinates.
"
11791,source/pymupdf.pdf,"matrix_like
"
11792,source/pymupdf.pdf,"A Python sequence of 6 numbers.
"
11793,source/pymupdf.pdf,"rect_like
"
11794,source/pymupdf.pdf,"A Python sequence of 4 numbers.
"
11795,source/pymupdf.pdf,"irect_like
"
11796,source/pymupdf.pdf,"A Python sequence of 4 integers.
"
11797,source/pymupdf.pdf,"point_like
"
11798,source/pymupdf.pdf,"A Python sequence of 2 numbers.
"
11799,source/pymupdf.pdf,"quad_like
"
11800,source/pymupdf.pdf,"A Python sequence of 4 point_like items.
"
11801,source/pymupdf.pdf,"inheritable
"
11802,source/pymupdf.pdf,"A number of values in a PDF can inherited by objects further down in a parent-child relationship. The mediabox
(physical size) of pages may for example be specified only once or in some node(s) of the pagetree and will
then be taken as value for all kids, that do not specify their own value.
"
11803,source/pymupdf.pdf,"MediaBox
"
11804,source/pymupdf.pdf,"A PDF array of 4 floats specifying a physical page size – (inheritable, mandatory). This rectangle should
contain all other PDF – optional – page rectangles, which may be specified in addition: CropBox, TrimBox,
ArtBox and BleedBox. Please consult Adobe PDF References for details. The MediaBox is the only rectangle,
for which there is no difference between MuPDF and PDF coordinate systems: Page.mediabox will always
show the same coordinates as the /MediaBox key in a page’s object definition. For all other rectangles, MuPDF
transforms y coordinates such that the top border is the point of reference. This can sometimes be confusing –
you may for example encounter a situation like this one:
"
11805,source/pymupdf.pdf,"• The page definition contains the following identical values: /MediaBox [ 36 45 607.5 765 ], /
CropBox [ 36 45 607.5 765 ].
"
11806,source/pymupdf.pdf,"• PyMuPDF accordingly shows page.mediabox = Rect(36.0, 45.0, 607.5, 765.0).
• BUT: page.cropbox = Rect(36.0, 0.0, 607.5, 720.0), because the two y-coordinates have been
transformed (45 subtracted from both of them).
"
11807,source/pymupdf.pdf,"CropBox
"
11808,source/pymupdf.pdf,"A PDF array of 4 floats specifying a page’s visible area – (inheritable, optional). It is the default for TrimBox,
ArtBox and BleedBox. If not present, it defaults to MediaBox. This value is not affected if the page is rotated
– in contrast to Page.rect. Also, other than the page rectangle, the top-left corner of the cropbox may or may
not be (0, 0).
"
11809,source/pymupdf.pdf,"427
"
11810,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11811,source/pymupdf.pdf,"catalog
"
11812,source/pymupdf.pdf,"A central PDF dictionary – also called the “root” – containing document-wide parameters and pointers to
many other information. Its xref is returned by Document.pdf_catalog().
"
11813,source/pymupdf.pdf,"trailer
"
11814,source/pymupdf.pdf,"More precisely, the PDF trailer contains information in dictionary format. It is usually located at the file’s
end. In this dictionary, you will find things like the xrefs of the catalog and the metadata, the number of xref
numbers, etc. Here is the definition of the PDF spec:
"
11815,source/pymupdf.pdf,"“The trailer of a PDF file enables an application reading the file to quickly find the cross-reference table and
certain special objects. Applications should read a PDF file from its end.”
"
11816,source/pymupdf.pdf,"To access the trailer in PyMuPDF, use the usual methods Document.xref_object(), Document.
xref_get_key() and Document.xref_get_keys() with -1 instead of a positive xref number.
"
11817,source/pymupdf.pdf,"contents
"
11818,source/pymupdf.pdf,"A content stream is a PDF object with an attached stream, whose data consists of a sequence of instructions
describing the graphical elements to be painted on a page, see “Stream Objects” on page 19 of Adobe PDF
References. For an overview of the mini-language used in these streams, see chapter “Operator Summary” on
page 643 of the Adobe PDF References. A PDF page can have none to many contents objects. If it has none,
the page is empty (but still may show annotations). If it has several, they will be interpreted in sequence as if
their instructions had been present in one such object (i.e. like in a concatenated string). It should be noted
that there are more stream object types which use the same syntax: e.g. appearance dictionaries associated with
annotations and Form XObjects.
"
11819,source/pymupdf.pdf,"PyMuPDF provides a number of methods to deal with contents of PDF pages:
"
11820,source/pymupdf.pdf,"• Page.read_contents() – reads and concatenates all page contents into one bytes object.
• Page.clean_contents() – a wrapper of a MuPDF function that reads, concatenates and syntax-cleans
all page contents. After this, only one /Contents object will exist. In addition, page resources will
have been synchronized with it such that it will contain exactly those images, fonts and other objects that
the page actually references.
"
11821,source/pymupdf.pdf,"• Page.get_contents() – return a list of xref numbers of a page’s contents objects. May be empty.
Use Document.xref_stream() with one of these xrefs to read the resp. contents section.
"
11822,source/pymupdf.pdf,"• Page.set_contents() – set a page’s /Contents key to the provided xref number.
"
11823,source/pymupdf.pdf,"resources
"
11824,source/pymupdf.pdf,"A dictionary containing references to any resources (like images or fonts) required by a PDF page (required,
inheritable, Adobe PDF References p. 81) and certain other objects (Form XObjects). This dictionary appears
as a sub-dictionary in the object definition under the key /Resources. Being an inheritable object type, there may
exist “parent” resources for all pages or certain subsets of pages.
"
11825,source/pymupdf.pdf,"dictionary
"
11826,source/pymupdf.pdf,"A PDF object type, which is somewhat comparable to the same-named Python notion: “A dictionary object
is an associative table containing pairs of objects, known as the dictionary’s entries. The first element of each
entry is the key and the second element is the value. The key must be a name (...). The value can be any kind
of object, including another dictionary. A dictionary entry whose value is null (...) is equivalent to an absent
entry.” (Adobe PDF References p. 18).
"
11827,source/pymupdf.pdf,"Dictionaries are the most important object type in PDF. Here is an example (describing a page):
"
11828,source/pymupdf.pdf,"<<
/Contents 40 0 R
% value: an indirect object
"
11829,source/pymupdf.pdf,"/Type/Page
% value: a name object
"
11830,source/pymupdf.pdf,"/MediaBox[0 0 595.32 841.92]
% value: an array object
"
11831,source/pymupdf.pdf,"/Rotate 0
% value: a number object
"
11832,source/pymupdf.pdf,"/Parent 12 0 R
% value: an indirect object
"
11833,source/pymupdf.pdf,"(continues on next page)
"
11834,source/pymupdf.pdf,"428
Chapter 22. Glossary
"
11835,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11836,source/pymupdf.pdf,"(continued from previous page)
"
11837,source/pymupdf.pdf,"/Resources<<
% value: a dictionary object
"
11838,source/pymupdf.pdf,"/ExtGState<</R7 26 0 R>>
/Font<<
"
11839,source/pymupdf.pdf,"/R8 27 0 R/R10 21 0 R/R12 24 0 R/R14 15 0 R
/R17 4 0 R/R20 30 0 R/R23 7 0 R /R27 20 0 R
>>
"
11840,source/pymupdf.pdf,"/ProcSet[/PDF/Text]
% value: array of two name objects
"
11841,source/pymupdf.pdf,">>
"
11842,source/pymupdf.pdf,"/Annots[55 0 R]
% value: array, one entry (indirect object)
"
11843,source/pymupdf.pdf,">>
"
11844,source/pymupdf.pdf,"Contents, Type, MediaBox, etc. are keys, 40 0 R, Page, [0 0 595.32 841.92], etc. are the respective values. The
strings “<<” and “>>” are used to enclose object definitions.
"
11845,source/pymupdf.pdf,"This example also shows the syntax of nested dictionary values: Resources has an object as its value, which in
turn is a dictionary with keys like ExtGState (with the value <</R7 26 0 R>>, which is another dictionary), etc.
"
11846,source/pymupdf.pdf,"page
"
11847,source/pymupdf.pdf,"A PDF page is a dictionary object which defines one page in a PDF, see Adobe PDF References p. 71.
"
11848,source/pymupdf.pdf,"pagetree
"
11849,source/pymupdf.pdf,"The pages of a document are accessed through a structure known as the page tree, which defines the ordering
of pages in the document. The tree structure allows PDF consumer applications, using only limited memory,
to quickly open a document containing thousands of pages. The tree contains nodes of two types: intermediate
nodes, called page tree nodes, and leaf nodes, called page objects. (Adobe PDF References p. 75).
"
11850,source/pymupdf.pdf,"While it is possible to list all page references in just one array, PDFs with many pages are often created using
balanced tree structures (“page trees”) for faster access to any single page. In relation to the total number of
pages, this can reduce the average page access time by page number from a linear to some logarithmic order of
magnitude.
"
11851,source/pymupdf.pdf,"For fast page access, MuPDF can use its own array in memory – independently from what may or may not be
present in the document file. This array is indexed by page number and therefore much faster than even the access
via a perfectly balanced page tree.
"
11852,source/pymupdf.pdf,"object
"
11853,source/pymupdf.pdf,"Similar to Python, PDF supports the notion object, which can come in eight basic types: boolean values (“true”
or “false”), integer and real numbers, strings (always enclosed in brackets – either “()”, or “<>” to indicate hex-
adecimal), names (must always start with a “/”, e.g. /Contents), arrays (enclosed in brackets “[]”), dictionaries
(enclosed in brackets “<<>>”), streams (enclosed by keywords “stream” / “endstream”), and the null object
(“null”) (Adobe PDF References p. 13). Objects can be made identifiable by assigning a label. This label is
then called indirect object. PyMuPDF supports retrieving definitions of indirect objects via their cross reference
number via Document.xref_object().
"
11854,source/pymupdf.pdf,"stream
"
11855,source/pymupdf.pdf,"A PDF dictionary object type which is followed by a sequence of bytes, similar to Python bytes. “However,
a PDF application can read a stream incrementally, while a string must be read in its entirety. Furthermore, a
stream can be of unlimited length, whereas a string is subject to an implementation limit. For this reason, objects
with potentially large amounts of data, such as images and page descriptions, are represented as streams.” “A
stream consists of a dictionary followed by zero or more bytes bracketed between the keywords stream and
endstream”:
"
11856,source/pymupdf.pdf,"nnn 0 obj
<<
"
11857,source/pymupdf.pdf,"dictionary definition
"
11858,source/pymupdf.pdf,"(continues on next page)
"
11859,source/pymupdf.pdf,"429
"
11860,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11861,source/pymupdf.pdf,"(continued from previous page)
"
11862,source/pymupdf.pdf,">>
stream
(zero or more bytes)
endstream
endobj
"
11863,source/pymupdf.pdf,"See Adobe PDF References p.
19.
PyMuPDF supports retrieving stream content via Document.
xref_stream(). Use Document.is_stream() to determine whether an object is of stream type.
"
11864,source/pymupdf.pdf,"unitvector
"
11865,source/pymupdf.pdf,"A mathematical notion meaning a vector of norm (“length”) 1 – usually the Euclidean norm is implied. In
PyMuPDF, this term is restricted to Point objects, see Point.unit.
"
11866,source/pymupdf.pdf,"xref
"
11867,source/pymupdf.pdf,"Abbreviation for cross-reference number: this is an integer unique identification for objects in a PDF. There
exists a cross-reference table (which may physically consist of several separate segments) in each PDF, which
stores the relative position of each object for quick lookup. The cross-reference table is one entry longer than
the number of existing object: item zero is reserved and must not be used in any way. Many PyMuPDF classes
have an xref attribute (which is zero for non-PDFs), and one can find out the total number of objects in a PDF
via Document.xref_length() - 1.
"
11868,source/pymupdf.pdf,"fontsize
"
11869,source/pymupdf.pdf,"When referring to font size this metric is measured in points where 1 inch = 72 points.
"
11870,source/pymupdf.pdf,"resolution
"
11871,source/pymupdf.pdf,"Images and Pixmap objects may contain resolution information provided as “dots per inch”, dpi, in each direction
(horizontal and vertical). When MuPDF reads an image from a file or from a PDF object, it will parse this
information and put it in Pixmap.xres, Pixmap.yres, respectively. If it finds no meaningful information in
the input (like non-positive values or values exceeding 4800), it will use “sane” defaults instead. The usual default
value is 96, but it may also be 72 in some cases (e.g. for JPX images).
"
11872,source/pymupdf.pdf,"OCPD
"
11873,source/pymupdf.pdf,"Optional content properties dictionary - a sub dictionary of the PDF catalog. The central place to store op-
tional content information, which is identified by the key /OCProperties. This dictionary has two required and
one optional entry: (1) /OCGs, required, an array listing all optional content groups, (2) /D, required, the default
optional content configuration dictionary (OCCD), (3) /Configs, optional, an array of alternative OCCDs.
"
11874,source/pymupdf.pdf,"OCCD
"
11875,source/pymupdf.pdf,"Optional content configuration dictionary - a PDF dictionary inside the PDF OCPD. It stores a setting of ON
/ OFF states of OCGs and how they are presented to a PDF viewer program. Selecting a configuration is quick
way to achieve temporary mass visibility state changes. After opening a PDF, the /D configuration of the OCPD
is always activated. Viewer should offer a way to switch between the /D, or one of the optional configurations
contained in array /Configs.
"
11876,source/pymupdf.pdf,"OCG
"
11877,source/pymupdf.pdf,"Optional content group – a dictionary object used to control the visibility of other PDF objects like images
or annotations. Independently on which page they are defined, objects with the same OCG can simultaneously
be shown or hidden by setting their OCG to ON or OFF. This can be achieved via the user interface provided by
many PDF viewers (Adobe Acrobat), or programmatically.
"
11878,source/pymupdf.pdf,"OCMD
"
11879,source/pymupdf.pdf,"Optional content membership dictionary – a dictionary object which can be used like an OCG: it has a visibility
state. The visibility of an OCMD is computed: it is a logical expression, which uses the state of one or more
OCGs to produce a boolean value. The expression’s result is interpreted as ON (true) or OFF (false).
"
11880,source/pymupdf.pdf,"430
Chapter 22. Glossary
"
11881,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11882,source/pymupdf.pdf,"ligature
"
11883,source/pymupdf.pdf,"Some frequent character combinations are represented by their own special glyphs in more advanced fonts. Typ-
ical examples are “fi”, “fl”, “ffi” and “ffl”. These compounds are called ligatures. In PyMuPDF text extractions,
there is the option to either return the corresponding unicode unchanged, or split ligatures up into their constituent
parts: “fi” ==> “f” + “i”, etc.
"
11884,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
11885,source/pymupdf.pdf,"431
"
11886,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11887,source/pymupdf.pdf,"432
Chapter 22. Glossary
"
11888,source/pymupdf.pdf,"CHAPTER
"
11889,source/pymupdf.pdf,"TWENTYTHREE
"
11890,source/pymupdf.pdf,"CONSTANTS AND ENUMERATIONS
"
11891,source/pymupdf.pdf,"Constants and enumerations of MuPDF as implemented by PyMuPDF. Each of the following variables is accessible
as fitz.variable.
"
11892,source/pymupdf.pdf,"23.1 Constants
"
11893,source/pymupdf.pdf,"Base14_Fonts
"
11894,source/pymupdf.pdf,"Predefined Python list of valid PDF Base 14 Fonts.
"
11895,source/pymupdf.pdf,"Return type
"
11896,source/pymupdf.pdf,"list
"
11897,source/pymupdf.pdf,"csRGB
"
11898,source/pymupdf.pdf,"Predefined RGB colorspace fitz.Colorspace(fitz.CS_RGB).
"
11899,source/pymupdf.pdf,"Return type
"
11900,source/pymupdf.pdf,"Colorspace
"
11901,source/pymupdf.pdf,"csGRAY
"
11902,source/pymupdf.pdf,"Predefined GRAY colorspace fitz.Colorspace(fitz.CS_GRAY).
"
11903,source/pymupdf.pdf,"Return type
"
11904,source/pymupdf.pdf,"Colorspace
"
11905,source/pymupdf.pdf,"csCMYK
"
11906,source/pymupdf.pdf,"Predefined CMYK colorspace fitz.Colorspace(fitz.CS_CMYK).
"
11907,source/pymupdf.pdf,"Return type
"
11908,source/pymupdf.pdf,"Colorspace
"
11909,source/pymupdf.pdf,"CS_RGB
"
11910,source/pymupdf.pdf,"1 – Type of Colorspace is RGBA
"
11911,source/pymupdf.pdf,"Return type
"
11912,source/pymupdf.pdf,"int
"
11913,source/pymupdf.pdf,"CS_GRAY
"
11914,source/pymupdf.pdf,"2 – Type of Colorspace is GRAY
"
11915,source/pymupdf.pdf,"Return type
"
11916,source/pymupdf.pdf,"int
"
11917,source/pymupdf.pdf,"CS_CMYK
"
11918,source/pymupdf.pdf,"3 – Type of Colorspace is CMYK
"
11919,source/pymupdf.pdf,"Return type
"
11920,source/pymupdf.pdf,"int
"
11921,source/pymupdf.pdf,"433
"
11922,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11923,source/pymupdf.pdf,"VersionBind
"
11924,source/pymupdf.pdf,"‘x.xx.x’ – version of PyMuPDF (these bindings)
"
11925,source/pymupdf.pdf,"Return type
"
11926,source/pymupdf.pdf,"string
"
11927,source/pymupdf.pdf,"VersionFitz
"
11928,source/pymupdf.pdf,"‘x.xxx’ – version of MuPDF
"
11929,source/pymupdf.pdf,"Return type
"
11930,source/pymupdf.pdf,"string
"
11931,source/pymupdf.pdf,"VersionDate
"
11932,source/pymupdf.pdf,"ISO timestamp YYYY-MM-DD HH:MM:SS when these bindings were built.
"
11933,source/pymupdf.pdf,"Return type
"
11934,source/pymupdf.pdf,"string
"
11935,source/pymupdf.pdf,"Note: The docstring of fitz contains information of the above which can be retrieved like so: print(fitz.__doc__), and
should look like: PyMuPDF 1.10.0: Python bindings for the MuPDF 1.10 library, built on 2016-11-30 13:09:13.
"
11936,source/pymupdf.pdf,"version
"
11937,source/pymupdf.pdf,"(VersionBind, VersionFitz, timestamp) – combined version information where timestamp is the generation point
in time formatted as “YYYYMMDDhhmmss”.
"
11938,source/pymupdf.pdf,"Return type
"
11939,source/pymupdf.pdf,"tuple
"
11940,source/pymupdf.pdf,"23.2 Document Permissions
"
11941,source/pymupdf.pdf,"Code
Permitted Action
"
11942,source/pymupdf.pdf,"PDF_PERM_PRINT
Print the document
"
11943,source/pymupdf.pdf,"PDF_PERM_MODIFY
Modify the document’s contents
"
11944,source/pymupdf.pdf,"PDF_PERM_COPY
Copy or otherwise extract text and graphics
"
11945,source/pymupdf.pdf,"PDF_PERM_ANNOTATE
Add or modify text annotations and interactive form fields
"
11946,source/pymupdf.pdf,"PDF_PERM_FORM
Fill in forms and sign the document
"
11947,source/pymupdf.pdf,"PDF_PERM_ACCESSIBILITY
Obsolete, always permitted
"
11948,source/pymupdf.pdf,"PDF_PERM_ASSEMBLE
Insert, rotate, or delete pages, bookmarks, thumbnail images
"
11949,source/pymupdf.pdf,"PDF_PERM_PRINT_HQ
High quality printing
"
11950,source/pymupdf.pdf,"23.3 PDF Optional Content Codes
"
11951,source/pymupdf.pdf,"Code
Meaning
"
11952,source/pymupdf.pdf,"PDF_OC_ON
Set an OCG to ON temporarily
"
11953,source/pymupdf.pdf,"PDF_OC_TOGGLE
Toggle OCG status temporarily
"
11954,source/pymupdf.pdf,"PDF_OC_OFF
Set an OCG to OFF temporarily
"
11955,source/pymupdf.pdf,"434
Chapter 23. Constants and Enumerations
"
11956,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11957,source/pymupdf.pdf,"23.4 PDF encryption method codes
"
11958,source/pymupdf.pdf,"Code
Meaning
"
11959,source/pymupdf.pdf,"PDF_ENCRYPT_KEEP
do not change
"
11960,source/pymupdf.pdf,"PDF_ENCRYPT_NONE
remove any encryption
"
11961,source/pymupdf.pdf,"PDF_ENCRYPT_RC4_40
RC4 40 bit
"
11962,source/pymupdf.pdf,"PDF_ENCRYPT_RC4_128
RC4 128 bit
"
11963,source/pymupdf.pdf,"PDF_ENCRYPT_AES_128
Advanced Encryption Standard 128 bit
"
11964,source/pymupdf.pdf,"PDF_ENCRYPT_AES_256
Advanced Encryption Standard 256 bit
"
11965,source/pymupdf.pdf,"PDF_ENCRYPT_UNKNOWN
unknown
"
11966,source/pymupdf.pdf,"23.5 Font File Extensions
"
11967,source/pymupdf.pdf,"The table show file extensions you should use when saving fontfile buffers extracted from a PDF. This string is returned
by Document.get_page_fonts(), Page.get_fonts() and Document.extract_font().
"
11968,source/pymupdf.pdf,"Ext
Description
"
11969,source/pymupdf.pdf,"ttf
TrueType font
"
11970,source/pymupdf.pdf,"pfa
Postscript for ASCII font (various subtypes)
"
11971,source/pymupdf.pdf,"cff
Type1C font (compressed font equivalent to Type1)
"
11972,source/pymupdf.pdf,"cid
character identifier font (postscript format)
"
11973,source/pymupdf.pdf,"otf
OpenType font
"
11974,source/pymupdf.pdf,"n/a
not extractable, e.g. PDF Base 14 Fonts, Type 3 fonts and others
"
11975,source/pymupdf.pdf,"23.6 Text Alignment
"
11976,source/pymupdf.pdf,"TEXT_ALIGN_LEFT
"
11977,source/pymupdf.pdf,"0 – align left.
"
11978,source/pymupdf.pdf,"TEXT_ALIGN_CENTER
"
11979,source/pymupdf.pdf,"1 – align center.
"
11980,source/pymupdf.pdf,"TEXT_ALIGN_RIGHT
"
11981,source/pymupdf.pdf,"2 – align right.
"
11982,source/pymupdf.pdf,"TEXT_ALIGN_JUSTIFY
"
11983,source/pymupdf.pdf,"3 – align justify.
"
11984,source/pymupdf.pdf,"23.7 Text Extraction Flags
"
11985,source/pymupdf.pdf,"Option bits controlling the amount of data, that are parsed into a TextPage – this class is mainly used only internally in
PyMuPDF.
"
11986,source/pymupdf.pdf,"For the PyMuPDF programmer, some combination (using Python’s | operator, or simply use +) of these values are
aggregated in the flags integer, a parameter of all text search and text extraction methods. Depending on the individual
method, different default combinations of the values are used. Please use a value that meets your situation. Especially
make sure to switch off image extraction unless you really need them. The impact on performance and memory is
significant!
"
11987,source/pymupdf.pdf,"23.4. PDF encryption method codes
435
"
11988,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
11989,source/pymupdf.pdf,"TEXT_PRESERVE_LIGATURES
"
11990,source/pymupdf.pdf,"1 – If set, ligatures are passed through to the application in their original form. Otherwise ligatures are expanded
into their constituent parts, e.g. the ligature “ffi” is expanded into three eparate characters f, f and i. Default is
“on” in PyMuPDF. MuPDF supports the following 7 ligatures: “ff”, “fi”, “fl”, “ffi”, “ffl”, , “ft”, “st”.
"
11991,source/pymupdf.pdf,"TEXT_PRESERVE_WHITESPACE
"
11992,source/pymupdf.pdf,"2 – If set, whitespace is passed through. Otherwise any type of horizontal whitespace (including horizontal tabs)
will be replaced with space characters of variable width. Default is “on” in PyMuPDF.
"
11993,source/pymupdf.pdf,"TEXT_PRESERVE_IMAGES
"
11994,source/pymupdf.pdf,"4 – If set, then images will be stored in the TextPage. This causes the presence of (usually large!) binary image
content in the output of text extractions of types “blocks”, “dict”, “json”, “rawdict”, “rawjson”, “html”, and
“xhtml” and is the default there. If used with “blocks” however, only image metadata will be returned, not the
image itself.
"
11995,source/pymupdf.pdf,"TEXT_INHIBIT_SPACES
"
11996,source/pymupdf.pdf,"8 – If set, Mupdf will not try to add missing space characters where there are large gaps between characters. In
PDF, the creator often does not insert spaces to point to the next character’s position, but will provide the direct
location address. The default in PyMuPDF is “off” – so spaces will be generated.
"
11997,source/pymupdf.pdf,"TEXT_DEHYPHENATE
"
11998,source/pymupdf.pdf,"16 – Ignore hyphens at line ends and join with next line. Used internally with the text search functions. However,
it is generally available: if on, text extractions will return joined text lines (or spans) with the ending hyphen
of the first line eliminated. So two separate spans “first meth-” and “od leads to wrong results” on different
lines will be joined to one span “first method leads to wrong results” and correspondingly updated bboxes:
the characters of the resulting span will no longer have identical y-coordinates.
"
11999,source/pymupdf.pdf,"TEXT_PRESERVE_SPANS
"
12000,source/pymupdf.pdf,"32 – Generate a new line for every span. Not used (“off”) in PyMuPDF, but available for your use. Every line in
“dict”, “json”, “rawdict”, “rawjson” will contain exactly one span.
"
12001,source/pymupdf.pdf,"TEXT_MEDIABOX_CLIP
"
12002,source/pymupdf.pdf,"64 – If set, characters entirely outside a page’s mediabox will be ignored. This is default in PyMuPDF.
"
12003,source/pymupdf.pdf,"The following constants represent the default combinations of the above for text extraction and searching:
"
12004,source/pymupdf.pdf,"TEXTFLAGS_TEXT
"
12005,source/pymupdf.pdf,"TEXT_PRESERVE_LIGATURES | TEXT_PRESERVE_WHITESPACE | TEXT_MEDIABOX_CLIP
"
12006,source/pymupdf.pdf,"TEXTFLAGS_WORDS
"
12007,source/pymupdf.pdf,"TEXT_PRESERVE_LIGATURES | TEXT_PRESERVE_WHITESPACE | TEXT_MEDIABOX_CLIP
"
12008,source/pymupdf.pdf,"TEXTFLAGS_BLOCKS
"
12009,source/pymupdf.pdf,"TEXT_PRESERVE_LIGATURES | TEXT_PRESERVE_WHITESPACE | TEXT_MEDIABOX_CLIP
"
12010,source/pymupdf.pdf,"TEXTFLAGS_DICT
"
12011,source/pymupdf.pdf,"TEXT_PRESERVE_LIGATURES | TEXT_PRESERVE_WHITESPACE | TEXT_MEDIABOX_CLIP |
TEXT_PRESERVE_IMAGES
"
12012,source/pymupdf.pdf,"TEXTFLAGS_RAWDICT
"
12013,source/pymupdf.pdf,"TEXT_PRESERVE_LIGATURES | TEXT_PRESERVE_WHITESPACE | TEXT_MEDIABOX_CLIP |
TEXT_PRESERVE_IMAGES
"
12014,source/pymupdf.pdf,"TEXTFLAGS_HTML
"
12015,source/pymupdf.pdf,"TEXT_PRESERVE_LIGATURES | TEXT_PRESERVE_WHITESPACE | TEXT_MEDIABOX_CLIP |
TEXT_PRESERVE_IMAGES
"
12016,source/pymupdf.pdf,"436
Chapter 23. Constants and Enumerations
"
12017,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12018,source/pymupdf.pdf,"TEXTFLAGS_XHTML
"
12019,source/pymupdf.pdf,"TEXT_PRESERVE_LIGATURES | TEXT_PRESERVE_WHITESPACE | TEXT_MEDIABOX_CLIP |
TEXT_PRESERVE_IMAGES
"
12020,source/pymupdf.pdf,"TEXTFLAGS_XML
"
12021,source/pymupdf.pdf,"TEXT_PRESERVE_LIGATURES | TEXT_PRESERVE_WHITESPACE | TEXT_MEDIABOX_CLIP
"
12022,source/pymupdf.pdf,"TEXTFLAGS_SEARCH
"
12023,source/pymupdf.pdf,"TEXT_PRESERVE_LIGATURES | TEXT_PRESERVE_WHITESPACE | TEXT_MEDIABOX_CLIP |
TEXT_DEHYPHENATE
"
12024,source/pymupdf.pdf,"23.8 Link Destination Kinds
"
12025,source/pymupdf.pdf,"Possible values of linkDest.kind (link destination kind).
"
12026,source/pymupdf.pdf,"LINK_NONE
"
12027,source/pymupdf.pdf,"0 – No destination. Indicates a dummy link.
"
12028,source/pymupdf.pdf,"Return type
"
12029,source/pymupdf.pdf,"int
"
12030,source/pymupdf.pdf,"LINK_GOTO
"
12031,source/pymupdf.pdf,"1 – Points to a place in this document.
"
12032,source/pymupdf.pdf,"Return type
"
12033,source/pymupdf.pdf,"int
"
12034,source/pymupdf.pdf,"LINK_URI
"
12035,source/pymupdf.pdf,"2 – Points to a URI – typically a resource specified with internet syntax.
"
12036,source/pymupdf.pdf,"Return type
"
12037,source/pymupdf.pdf,"int
"
12038,source/pymupdf.pdf,"LINK_LAUNCH
"
12039,source/pymupdf.pdf,"3 – Launch (open) another file (of any “executable” type).
"
12040,source/pymupdf.pdf,"Return type
"
12041,source/pymupdf.pdf,"int
"
12042,source/pymupdf.pdf,"LINK_NAMED
"
12043,source/pymupdf.pdf,"4 – points to a named location.
"
12044,source/pymupdf.pdf,"Return type
"
12045,source/pymupdf.pdf,"int
"
12046,source/pymupdf.pdf,"LINK_GOTOR
"
12047,source/pymupdf.pdf,"5 – Points to a place in another PDF document.
"
12048,source/pymupdf.pdf,"Return type
"
12049,source/pymupdf.pdf,"int
"
12050,source/pymupdf.pdf,"23.8. Link Destination Kinds
437
"
12051,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12052,source/pymupdf.pdf,"23.9 Link Destination Flags
"
12053,source/pymupdf.pdf,"Note: The rightmost byte of this integer is a bit field, so test the truth of these bits with the & operator.
"
12054,source/pymupdf.pdf,"LINK_FLAG_L_VALID
"
12055,source/pymupdf.pdf,"1 (bit 0) Top left x value is valid
"
12056,source/pymupdf.pdf,"Return type
"
12057,source/pymupdf.pdf,"bool
"
12058,source/pymupdf.pdf,"LINK_FLAG_T_VALID
"
12059,source/pymupdf.pdf,"2 (bit 1) Top left y value is valid
"
12060,source/pymupdf.pdf,"Return type
"
12061,source/pymupdf.pdf,"bool
"
12062,source/pymupdf.pdf,"LINK_FLAG_R_VALID
"
12063,source/pymupdf.pdf,"4 (bit 2) Bottom right x value is valid
"
12064,source/pymupdf.pdf,"Return type
"
12065,source/pymupdf.pdf,"bool
"
12066,source/pymupdf.pdf,"LINK_FLAG_B_VALID
"
12067,source/pymupdf.pdf,"8 (bit 3) Bottom right y value is valid
"
12068,source/pymupdf.pdf,"Return type
"
12069,source/pymupdf.pdf,"bool
"
12070,source/pymupdf.pdf,"LINK_FLAG_FIT_H
"
12071,source/pymupdf.pdf,"16 (bit 4) Horizontal fit
"
12072,source/pymupdf.pdf,"Return type
"
12073,source/pymupdf.pdf,"bool
"
12074,source/pymupdf.pdf,"LINK_FLAG_FIT_V
"
12075,source/pymupdf.pdf,"32 (bit 5) Vertical fit
"
12076,source/pymupdf.pdf,"Return type
"
12077,source/pymupdf.pdf,"bool
"
12078,source/pymupdf.pdf,"LINK_FLAG_R_IS_ZOOM
"
12079,source/pymupdf.pdf,"64 (bit 6) Bottom right x is a zoom figure
"
12080,source/pymupdf.pdf,"Return type
"
12081,source/pymupdf.pdf,"bool
"
12082,source/pymupdf.pdf,"23.10 Annotation Related Constants
"
12083,source/pymupdf.pdf,"See chapter 8.4.5, pp. 615 of the Adobe PDF References for details.
"
12084,source/pymupdf.pdf,"438
Chapter 23. Constants and Enumerations
"
12085,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12086,source/pymupdf.pdf,"23.10.1 Annotation Types
"
12087,source/pymupdf.pdf,"These identifiers also cover links and widgets: the PDF specification technically handles them all in the same way,
whereas MuPDF (and PyMuPDF) treats them as three basically different types of objects.
"
12088,source/pymupdf.pdf,"PDF_ANNOT_TEXT 0
PDF_ANNOT_LINK 1
# <=== Link object in PyMuPDF
"
12089,source/pymupdf.pdf,"PDF_ANNOT_FREE_TEXT 2
PDF_ANNOT_LINE 3
PDF_ANNOT_SQUARE 4
PDF_ANNOT_CIRCLE 5
PDF_ANNOT_POLYGON 6
PDF_ANNOT_POLY_LINE 7
PDF_ANNOT_HIGHLIGHT 8
PDF_ANNOT_UNDERLINE 9
PDF_ANNOT_SQUIGGLY 10
PDF_ANNOT_STRIKE_OUT 11
PDF_ANNOT_REDACT 12
PDF_ANNOT_STAMP 13
PDF_ANNOT_CARET 14
PDF_ANNOT_INK 15
PDF_ANNOT_POPUP 16
PDF_ANNOT_FILE_ATTACHMENT 17
PDF_ANNOT_SOUND 18
PDF_ANNOT_MOVIE 19
PDF_ANNOT_RICH_MEDIA 20
PDF_ANNOT_WIDGET 21
# <=== Widget object in PyMuPDF
"
12090,source/pymupdf.pdf,"PDF_ANNOT_SCREEN 22
PDF_ANNOT_PRINTER_MARK 23
PDF_ANNOT_TRAP_NET 24
PDF_ANNOT_WATERMARK 25
PDF_ANNOT_3D 26
PDF_ANNOT_PROJECTION 27
PDF_ANNOT_UNKNOWN -1
"
12091,source/pymupdf.pdf,"23.10.2 Annotation Flag Bits
"
12092,source/pymupdf.pdf,"PDF_ANNOT_IS_INVISIBLE 1 << (1-1)
PDF_ANNOT_IS_HIDDEN 1 << (2-1)
PDF_ANNOT_IS_PRINT 1 << (3-1)
PDF_ANNOT_IS_NO_ZOOM 1 << (4-1)
PDF_ANNOT_IS_NO_ROTATE 1 << (5-1)
PDF_ANNOT_IS_NO_VIEW 1 << (6-1)
PDF_ANNOT_IS_READ_ONLY 1 << (7-1)
PDF_ANNOT_IS_LOCKED 1 << (8-1)
PDF_ANNOT_IS_TOGGLE_NO_VIEW 1 << (9-1)
PDF_ANNOT_IS_LOCKED_CONTENTS 1 << (10-1)
"
12093,source/pymupdf.pdf,"23.10. Annotation Related Constants
439
"
12094,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12095,source/pymupdf.pdf,"23.10.3 Annotation Line Ending Styles
"
12096,source/pymupdf.pdf,"PDF_ANNOT_LE_NONE 0
PDF_ANNOT_LE_SQUARE 1
PDF_ANNOT_LE_CIRCLE 2
PDF_ANNOT_LE_DIAMOND 3
PDF_ANNOT_LE_OPEN_ARROW 4
PDF_ANNOT_LE_CLOSED_ARROW 5
PDF_ANNOT_LE_BUTT 6
PDF_ANNOT_LE_R_OPEN_ARROW 7
PDF_ANNOT_LE_R_CLOSED_ARROW 8
PDF_ANNOT_LE_SLASH 9
"
12097,source/pymupdf.pdf,"23.11 Widget Constants
"
12098,source/pymupdf.pdf,"23.11.1 Widget Types (field_type)
"
12099,source/pymupdf.pdf,"PDF_WIDGET_TYPE_UNKNOWN 0
PDF_WIDGET_TYPE_BUTTON 1
PDF_WIDGET_TYPE_CHECKBOX 2
PDF_WIDGET_TYPE_COMBOBOX 3
PDF_WIDGET_TYPE_LISTBOX 4
PDF_WIDGET_TYPE_RADIOBUTTON 5
PDF_WIDGET_TYPE_SIGNATURE 6
PDF_WIDGET_TYPE_TEXT 7
"
12100,source/pymupdf.pdf,"23.11.2 Text Widget Subtypes (text_format)
"
12101,source/pymupdf.pdf,"PDF_WIDGET_TX_FORMAT_NONE 0
PDF_WIDGET_TX_FORMAT_NUMBER 1
PDF_WIDGET_TX_FORMAT_SPECIAL 2
PDF_WIDGET_TX_FORMAT_DATE 3
PDF_WIDGET_TX_FORMAT_TIME 4
"
12102,source/pymupdf.pdf,"23.11.3 Widget flags (field_flags)
"
12103,source/pymupdf.pdf,"Common to all field types:
"
12104,source/pymupdf.pdf,"PDF_FIELD_IS_READ_ONLY 1
PDF_FIELD_IS_REQUIRED 1 << 1
PDF_FIELD_IS_NO_EXPORT 1 << 2
"
12105,source/pymupdf.pdf,"Text widgets:
"
12106,source/pymupdf.pdf,"PDF_TX_FIELD_IS_MULTILINE
1 << 12
"
12107,source/pymupdf.pdf,"PDF_TX_FIELD_IS_PASSWORD
1 << 13
"
12108,source/pymupdf.pdf,"PDF_TX_FIELD_IS_FILE_SELECT
1 << 20
"
12109,source/pymupdf.pdf,"(continues on next page)
"
12110,source/pymupdf.pdf,"440
Chapter 23. Constants and Enumerations
"
12111,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12112,source/pymupdf.pdf,"(continued from previous page)
"
12113,source/pymupdf.pdf,"PDF_TX_FIELD_IS_DO_NOT_SPELL_CHECK
1 << 22
"
12114,source/pymupdf.pdf,"PDF_TX_FIELD_IS_DO_NOT_SCROLL
1 << 23
"
12115,source/pymupdf.pdf,"PDF_TX_FIELD_IS_COMB
1 << 24
"
12116,source/pymupdf.pdf,"PDF_TX_FIELD_IS_RICH_TEXT
1 << 25
"
12117,source/pymupdf.pdf,"Button widgets:
"
12118,source/pymupdf.pdf,"PDF_BTN_FIELD_IS_NO_TOGGLE_TO_OFF
1 << 14
"
12119,source/pymupdf.pdf,"PDF_BTN_FIELD_IS_RADIO
1 << 15
"
12120,source/pymupdf.pdf,"PDF_BTN_FIELD_IS_PUSHBUTTON
1 << 16
"
12121,source/pymupdf.pdf,"PDF_BTN_FIELD_IS_RADIOS_IN_UNISON
1 << 25
"
12122,source/pymupdf.pdf,"Choice widgets:
"
12123,source/pymupdf.pdf,"PDF_CH_FIELD_IS_COMBO
1 << 17
"
12124,source/pymupdf.pdf,"PDF_CH_FIELD_IS_EDIT
1 << 18
"
12125,source/pymupdf.pdf,"PDF_CH_FIELD_IS_SORT
1 << 19
"
12126,source/pymupdf.pdf,"PDF_CH_FIELD_IS_MULTI_SELECT
1 << 21
"
12127,source/pymupdf.pdf,"PDF_CH_FIELD_IS_DO_NOT_SPELL_CHECK
1 << 22
"
12128,source/pymupdf.pdf,"PDF_CH_FIELD_IS_COMMIT_ON_SEL_CHANGE
1 << 26
"
12129,source/pymupdf.pdf,"23.12 PDF Standard Blend Modes
"
12130,source/pymupdf.pdf,"For an explanation see Adobe PDF References, page 324:
"
12131,source/pymupdf.pdf,"PDF_BM_Color ""Color""
PDF_BM_ColorBurn ""ColorBurn""
PDF_BM_ColorDodge ""ColorDodge""
PDF_BM_Darken ""Darken""
PDF_BM_Difference ""Difference""
PDF_BM_Exclusion ""Exclusion""
PDF_BM_HardLight ""HardLight""
PDF_BM_Hue ""Hue""
PDF_BM_Lighten ""Lighten""
PDF_BM_Luminosity ""Luminosity""
PDF_BM_Multiply ""Multiply""
PDF_BM_Normal ""Normal""
PDF_BM_Overlay ""Overlay""
PDF_BM_Saturation ""Saturation""
PDF_BM_Screen ""Screen""
PDF_BM_SoftLight ""Softlight""
"
12132,source/pymupdf.pdf,"23.12. PDF Standard Blend Modes
441
"
12133,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12134,source/pymupdf.pdf,"23.13 Stamp Annotation Icons
"
12135,source/pymupdf.pdf,"MuPDF has defined the following icons for rubber stamp annotations:
"
12136,source/pymupdf.pdf,"STAMP_Approved 0
STAMP_AsIs 1
STAMP_Confidential 2
STAMP_Departmental 3
STAMP_Experimental 4
STAMP_Expired 5
STAMP_Final 6
STAMP_ForComment 7
STAMP_ForPublicRelease 8
STAMP_NotApproved 9
STAMP_NotForPublicRelease 10
STAMP_Sold 11
STAMP_TopSecret 12
STAMP_Draft 13
"
12137,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
12138,source/pymupdf.pdf,"442
Chapter 23. Constants and Enumerations
"
12139,source/pymupdf.pdf,"CHAPTER
"
12140,source/pymupdf.pdf,"TWENTYFOUR
"
12141,source/pymupdf.pdf,"COLOR DATABASE
"
12142,source/pymupdf.pdf,"Since the introduction of methods involving colors (like Page.draw_circle()), a requirement may be to have access
to predefined colors.
"
12143,source/pymupdf.pdf,"The fabulous GUI package wxPython has a database of over 540 predefined RGB colors, which are given more or less
memorizable names. Among them are not only standard names like “green” or “blue”, but also “turquoise”, “skyblue”,
and 100 (not only 50 ...) shades of “gray”, etc.
"
12144,source/pymupdf.pdf,"We have taken the liberty to copy this database (a list of tuples) modified into PyMuPDF and make its colors available
as PDF compatible float triples: for wxPython’s (“WHITE”, 255, 255, 255) we return (1, 1, 1), which can be directly
used in color and fill parameters. We also accept any mixed case of “wHiTe” to find a color.
"
12145,source/pymupdf.pdf,"24.1 Function getColor()
"
12146,source/pymupdf.pdf,"As the color database may not be needed very often, one additional import statement seems acceptable to get access to
it:
"
12147,source/pymupdf.pdf,">>> # ""getColor"" is the only method you really need
>>> from fitz.utils import getColor
>>> getColor(""aliceblue"")
(0.9411764705882353, 0.9725490196078431, 1.0)
>>> #
>>> # to get a list of all existing names
>>> from fitz.utils import getColorList
>>> cl = getColorList()
>>> cl
['ALICEBLUE', 'ANTIQUEWHITE', 'ANTIQUEWHITE1', 'ANTIQUEWHITE2', 'ANTIQUEWHITE3',
'ANTIQUEWHITE4', 'AQUAMARINE', 'AQUAMARINE1'] ...
>>> #
>>> # to see the full integer color coding
>>> from fitz.utils import getColorInfoList
>>> il = getColorInfoList()
>>> il
[('ALICEBLUE', 240, 248, 255), ('ANTIQUEWHITE', 250, 235, 215),
('ANTIQUEWHITE1', 255, 239, 219), ('ANTIQUEWHITE2', 238, 223, 204),
('ANTIQUEWHITE3', 205, 192, 176), ('ANTIQUEWHITE4', 139, 131, 120),
('AQUAMARINE', 127, 255, 212), ('AQUAMARINE1', 127, 255, 212)] ...
"
12148,source/pymupdf.pdf,"443
"
12149,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12150,source/pymupdf.pdf,"24.2 Printing the Color Database
"
12151,source/pymupdf.pdf,"If you want to actually see how the many available colors look like, use scripts print by RGB or print by HSV in
the examples directory. They create PDFs (already existing in the same directory) with all these colors. Their only
difference is sorting order: one takes the RGB values, the other one the Hue-Saturation-Values as sort criteria. This is
a screen print of what these files look like.
"
12152,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
12153,source/pymupdf.pdf,"444
Chapter 24. Color Database
"
12154,source/pymupdf.pdf,"CHAPTER
"
12155,source/pymupdf.pdf,"TWENTYFIVE
"
12156,source/pymupdf.pdf,"APPENDIX 1: DETAILS ON TEXT EXTRACTION
"
12157,source/pymupdf.pdf,"This chapter provides background on the text extraction methods of PyMuPDF.
"
12158,source/pymupdf.pdf,"Information of interest are
"
12159,source/pymupdf.pdf,"• what do they provide?
"
12160,source/pymupdf.pdf,"• what do they imply (processing time / data sizes)?
"
12161,source/pymupdf.pdf,"25.1 General structure of a TextPage
"
12162,source/pymupdf.pdf,"TextPage is one of (Py-) MuPDF’s classes. It is normally created (and destroyed again) behind the curtain, when Page
text extraction methods are used, but it is also available directly and can be used as a persistent object. Other than its
name suggests, images may optionally also be part of a text page:
"
12163,source/pymupdf.pdf,"<page>
"
12164,source/pymupdf.pdf,"<text block>
"
12165,source/pymupdf.pdf,"<line>
"
12166,source/pymupdf.pdf,"<span>
"
12167,source/pymupdf.pdf,"<char>
"
12168,source/pymupdf.pdf,"<image block>
"
12169,source/pymupdf.pdf,"<img>
"
12170,source/pymupdf.pdf,"A text page consists of blocks (= roughly paragraphs).
"
12171,source/pymupdf.pdf,"A block consists of either lines and their characters, or an image.
"
12172,source/pymupdf.pdf,"A line consists of spans.
"
12173,source/pymupdf.pdf,"A span consists of adjacent characters with identical font properties: name, size, flags and color.
"
12174,source/pymupdf.pdf,"25.2 Plain Text
"
12175,source/pymupdf.pdf,"Function TextPage.extractText() (or Page.get_text(“text”)) extracts a page’s plain text in original order as spec-
ified by the creator of the document.
"
12176,source/pymupdf.pdf,"An example output:
"
12177,source/pymupdf.pdf,">>> print(page.get_text(""text""))
Some text on first page.
"
12178,source/pymupdf.pdf,"445
"
12179,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12180,source/pymupdf.pdf,"Note:
The output may not equal an accustomed “natural” reading order. However, you can request a reordering
following the scheme “top-left to bottom-right” by executing page.get_text(""text"", sort=True).
"
12181,source/pymupdf.pdf,"25.3 BLOCKS
"
12182,source/pymupdf.pdf,"Function TextPage.extractBLOCKS() (or Page.get_text(“blocks”)) extracts a page’s text blocks as a list of items
like:
"
12183,source/pymupdf.pdf,"(x0, y0, x1, y1, ""lines in block"", block_no, block_type)
"
12184,source/pymupdf.pdf,"Where the first 4 items are the float coordinates of the block’s bbox. The lines within each block are concatenated by
a new-line character.
"
12185,source/pymupdf.pdf,"This is a high-speed method, which by default also extracts image meta information: Each image appears as a block
with one text line, which contains meta information. The image itself is not shown.
"
12186,source/pymupdf.pdf,"As with simple text output above, the sort argument can be used as well to obtain a reading order.
"
12187,source/pymupdf.pdf,"Example output:
"
12188,source/pymupdf.pdf,">>> print(page.get_text(""blocks"", sort=False))
[(50.0, 88.17500305175781, 166.1709747314453, 103.28900146484375,
'Some text on first page.', 0, 0)]
"
12189,source/pymupdf.pdf,"25.4 WORDS
"
12190,source/pymupdf.pdf,"Function TextPage.extractWORDS() (or Page.get_text(“words”)) extracts a page’s text words as a list of items like:
"
12191,source/pymupdf.pdf,"(x0, y0, x1, y1, ""word"", block_no, line_no, word_no)
"
12192,source/pymupdf.pdf,"Where the first 4 items are the float coordinates of the words’s bbox. The last three integers provide some more infor-
mation on the word’s whereabouts.
"
12193,source/pymupdf.pdf,"This is a high-speed method. As with the previous methods, argument sort=True will reorder the words.
"
12194,source/pymupdf.pdf,"Example output:
"
12195,source/pymupdf.pdf,">>> for word in page.get_text(""words"", sort=False):
"
12196,source/pymupdf.pdf,"print(word)
"
12197,source/pymupdf.pdf,"(50.0, 88.17500305175781, 78.73200225830078, 103.28900146484375,
'Some', 0, 0, 0)
(81.79000091552734, 88.17500305175781, 99.5219955444336, 103.28900146484375,
'text', 0, 0, 1)
(102.57999420166016, 88.17500305175781, 114.8119888305664, 103.28900146484375,
'on', 0, 0, 2)
(117.86998748779297, 88.17500305175781, 135.5909881591797, 103.28900146484375,
'first', 0, 0, 3)
(138.64898681640625, 88.17500305175781, 166.1709747314453, 103.28900146484375,
'page.', 0, 0, 4)
"
12198,source/pymupdf.pdf,"446
Chapter 25. Appendix 1: Details on Text Extraction
"
12199,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12200,source/pymupdf.pdf,"25.5 HTML
"
12201,source/pymupdf.pdf,"TextPage.extractHTML() (or Page.get_text(“html”) output fully reflects the structure of the page’s TextPage – much
like DICT / JSON below. This includes images, font information and text positions. If wrapped in HTML header and
trailer code, it can readily be displayed by an internet browser. Our above example:
"
12202,source/pymupdf.pdf,">>> for line in page.get_text(""html"").splitlines():
"
12203,source/pymupdf.pdf,"print(line)
"
12204,source/pymupdf.pdf,"<div id=""page0"" style=""position:relative;width:300pt;height:350pt;
background-color:white"">
<p style=""position:absolute;white-space:pre;margin:0;padding:0;top:88pt;
left:50pt""><span style=""font-family:Helvetica,sans-serif;
font-size:11pt"">Some text on first page.</span></p>
</div>
"
12205,source/pymupdf.pdf,"25.6 Controlling Quality of HTML Output
"
12206,source/pymupdf.pdf,"While HTML output has improved a lot in MuPDF v1.12.0, it is not yet bug-free: we have found problems in the areas
font support and image positioning.
"
12207,source/pymupdf.pdf,"• HTML text contains references to the fonts used of the original document. If these are not known to the browser
(a fat chance!), it will replace them with others; the results will probably look awkward. This issue varies greatly
by browser – on my Windows machine, MS Edge worked just fine, whereas Firefox looked horrible.
"
12208,source/pymupdf.pdf,"• For PDFs with a complex structure, images may not be positioned and / or sized correctly. This seems to be the
case for rotated pages and pages, where the various possible page bbox variants do not coincide (e.g. MediaBox
!= CropBox). We do not know yet, how to address this – we filed a bug at MuPDF’s site.
"
12209,source/pymupdf.pdf,"To address the font issue, you can use a simple utility script to scan through the HTML file and replace font references.
Here is a little example that replaces all fonts with one of the PDF Base 14 Fonts: serifed fonts will become “Times”,
non-serifed “Helvetica” and monospaced will become “Courier”. Their respective variations for “bold”, “italic”, etc.
are hopefully done correctly by your browser:
"
12210,source/pymupdf.pdf,"import sys
filename = sys.argv[1]
otext = open(filename).read()
# original html text string
"
12211,source/pymupdf.pdf,"pos1 = 0
# search start poition
"
12212,source/pymupdf.pdf,"font_serif = ""font-family:Times""
# enter ...
"
12213,source/pymupdf.pdf,"font_sans
= ""font-family:Helvetica""
# ... your choices ...
"
12214,source/pymupdf.pdf,"font_mono
= ""font-family:Courier""
# ... here
"
12215,source/pymupdf.pdf,"found_one
= False
# true if search successful
"
12216,source/pymupdf.pdf,"while True:
pos0 = otext.find(""font-family:"", pos1)
# start of a font spec
"
12217,source/pymupdf.pdf,"if pos0 < 0:
# none found - we are done
"
12218,source/pymupdf.pdf,"break
"
12219,source/pymupdf.pdf,"pos1 = otext.find("";"", pos0)
# end of font spec
"
12220,source/pymupdf.pdf,"test = otext[pos0 : pos1]
# complete font spec string
"
12221,source/pymupdf.pdf,"testn = """"
# the new font spec string
"
12222,source/pymupdf.pdf,"if test.endswith("",serif""):
# font with serifs?
"
12223,source/pymupdf.pdf,"testn = font_serif
# use Times instead
"
12224,source/pymupdf.pdf,"(continues on next page)
"
12225,source/pymupdf.pdf,"25.5. HTML
447
"
12226,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12227,source/pymupdf.pdf,"(continued from previous page)
"
12228,source/pymupdf.pdf,"elif test.endswith("",sans-serif""):
# sans serifs font?
"
12229,source/pymupdf.pdf,"testn = font_sans
# use Helvetica
"
12230,source/pymupdf.pdf,"elif test.endswith("",monospace""):
# monospaced font?
"
12231,source/pymupdf.pdf,"testn = font_mono
# becomes Courier
"
12232,source/pymupdf.pdf,"if testn != """":
# any of the above found?
"
12233,source/pymupdf.pdf,"otext = otext.replace(test, testn)
# change the source
"
12234,source/pymupdf.pdf,"found_one = True
pos1 = 0
# start over
"
12235,source/pymupdf.pdf,"if found_one:
ofile = open(filename + "".html"", ""w"")
ofile.write(otext)
ofile.close()
"
12236,source/pymupdf.pdf,"else:
"
12237,source/pymupdf.pdf,"print(""Warning: could not find any font specs!"")
"
12238,source/pymupdf.pdf,"25.7 DICT (or JSON)
"
12239,source/pymupdf.pdf,"TextPage.extractDICT() (or Page.get_text(“dict”, sort=False)) output fully reflects the structure of a TextPage and
provides image content and position detail (bbox – boundary boxes in pixel units) for every block, line and span. Images
are stored as bytes for DICT output and base64 encoded strings for JSON output.
"
12240,source/pymupdf.pdf,"For a visualization of the dictionary structure have a look at Structure of Dictionary Outputs.
"
12241,source/pymupdf.pdf,"Here is how this looks like:
"
12242,source/pymupdf.pdf,"{
"
12243,source/pymupdf.pdf,"""width"": 300.0,
""height"": 350.0,
""blocks"": [{
"
12244,source/pymupdf.pdf,"""type"": 0,
""bbox"": (50.0, 88.17500305175781, 166.1709747314453, 103.28900146484375),
""lines"": ({
"
12245,source/pymupdf.pdf,"""wmode"": 0,
""dir"": (1.0, 0.0),
""bbox"": (50.0, 88.17500305175781, 166.1709747314453, 103.28900146484375),
""spans"": ({
"
12246,source/pymupdf.pdf,"""size"": 11.0,
""flags"": 0,
""font"": ""Helvetica"",
""color"": 0,
""origin"": (50.0, 100.0),
""text"": ""Some text on first page."",
""bbox"": (50.0, 88.17500305175781, 166.1709747314453, 103.28900146484375)
})
}]
}]
}
"
12247,source/pymupdf.pdf,"448
Chapter 25. Appendix 1: Details on Text Extraction
"
12248,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12249,source/pymupdf.pdf,"25.8 RAWDICT (or RAWJSON)
"
12250,source/pymupdf.pdf,"TextPage.extractRAWDICT() (or Page.get_text(“rawdict”, sort=False)) is an information superset of DICT and
takes the detail level one step deeper. It looks exactly like the above, except that the “text” items (string) in the spans
are replaced by the list “chars”. Each “chars” entry is a character dict. For example, here is what you would see in
place of item “text”: “Text in black color.” above:
"
12251,source/pymupdf.pdf,"""chars"": [{
"
12252,source/pymupdf.pdf,"""origin"": (50.0, 100.0),
""bbox"": (50.0, 88.17500305175781, 57.336997985839844, 103.28900146484375),
""c"": ""S""
"
12253,source/pymupdf.pdf,"}, {
"
12254,source/pymupdf.pdf,"""origin"": (57.33700180053711, 100.0),
""bbox"": (57.33700180053711, 88.17500305175781, 63.4530029296875, 103.28900146484375),
""c"": ""o""
"
12255,source/pymupdf.pdf,"}, {
"
12256,source/pymupdf.pdf,"""origin"": (63.4530029296875, 100.0),
""bbox"": (63.4530029296875, 88.17500305175781, 72.61600494384766, 103.28900146484375),
""c"": ""m""
"
12257,source/pymupdf.pdf,"}, {
"
12258,source/pymupdf.pdf,"""origin"": (72.61600494384766, 100.0),
""bbox"": (72.61600494384766, 88.17500305175781, 78.73200225830078, 103.
"
12259,source/pymupdf.pdf,"˓→28900146484375),
"
12260,source/pymupdf.pdf,"""c"": ""e""
"
12261,source/pymupdf.pdf,"}, {
"
12262,source/pymupdf.pdf,"""origin"": (78.73200225830078, 100.0),
""bbox"": (78.73200225830078, 88.17500305175781, 81.79000091552734, 103.
"
12263,source/pymupdf.pdf,"˓→28900146484375),
"
12264,source/pymupdf.pdf,"""c"": "" ""
"
12265,source/pymupdf.pdf,"< ... deleted ... >
}, {
"
12266,source/pymupdf.pdf,"""origin"": (163.11297607421875, 100.0),
""bbox"": (163.11297607421875, 88.17500305175781, 166.1709747314453, 103.
"
12267,source/pymupdf.pdf,"˓→28900146484375),
"
12268,source/pymupdf.pdf,"""c"": "".""
"
12269,source/pymupdf.pdf,"}],
"
12270,source/pymupdf.pdf,"25.9 XML
"
12271,source/pymupdf.pdf,"The TextPage.extractXML() (or Page.get_text(“xml”)) version extracts text (no images) with the detail level of
RAWDICT:
"
12272,source/pymupdf.pdf,">>> for line in page.get_text(""xml"").splitlines():
"
12273,source/pymupdf.pdf,"print(line)
"
12274,source/pymupdf.pdf,"<page id=""page0"" width=""300"" height=""350"">
<block bbox=""50 88.175 166.17098 103.289"">
<line bbox=""50 88.175 166.17098 103.289"" wmode=""0"" dir=""1 0"">
<font name=""Helvetica"" size=""11"">
<char quad=""50 88.175 57.336999 88.175 50 103.289 57.336999 103.289"" x=""50""
y=""100"" color=""#000000"" c=""S""/>
"
12275,source/pymupdf.pdf,"(continues on next page)
"
12276,source/pymupdf.pdf,"25.8. RAWDICT (or RAWJSON)
449
"
12277,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12278,source/pymupdf.pdf,"(continued from previous page)
"
12279,source/pymupdf.pdf,"<char quad=""57.337 88.175 63.453004 88.175 57.337 103.289 63.453004 103.289"" x=""57.337""
y=""100"" color=""#000000"" c=""o""/>
<char quad=""63.453004 88.175 72.616008 88.175 63.453004 103.289 72.616008 103.289"" x=""63.
"
12280,source/pymupdf.pdf,"˓→453004""
y=""100"" color=""#000000"" c=""m""/>
<char quad=""72.616008 88.175 78.732 88.175 72.616008 103.289 78.732 103.289"" x=""72.616008
"
12281,source/pymupdf.pdf,"˓→""
y=""100"" color=""#000000"" c=""e""/>
<char quad=""78.732 88.175 81.79 88.175 78.732 103.289 81.79 103.289"" x=""78.732""
y=""100"" color=""#000000"" c="" ""/>
"
12282,source/pymupdf.pdf,"... deleted ...
"
12283,source/pymupdf.pdf,"<char quad=""163.11298 88.175 166.17098 88.175 163.11298 103.289 166.17098 103.289"" x=
"
12284,source/pymupdf.pdf,"˓→""163.11298""
y=""100"" color=""#000000"" c="".""/>
</font>
</line>
</block>
</page>
"
12285,source/pymupdf.pdf,"Note: We have successfully tested lxml to interpret this output.
"
12286,source/pymupdf.pdf,"25.10 XHTML
"
12287,source/pymupdf.pdf,"TextPage.extractXHTML() (or Page.get_text(“xhtml”)) is a variation of TEXT but in HTML format, containing the
bare text and images (“semantic” output):
"
12288,source/pymupdf.pdf,"<div id=""page0"">
<p>Some text on first page.</p>
</div>
"
12289,source/pymupdf.pdf,"25.11 Text Extraction Flags Defaults
"
12290,source/pymupdf.pdf,"• New in version 1.16.2: Method Page.get_text() supports a keyword parameter flags (int) to control the
amount and the quality of extracted data. The following table shows the defaults settings (flags parameter omitted
or None) for each extraction variant. If you specify flags with a value other than None, be aware that you must
set all desired options. A description of the respective bit settings can be found in Text Extraction Flags.
"
12291,source/pymupdf.pdf,"• New in v1.19.6: The default combinations in the following table are now available as Python constants:
"
12292,source/pymupdf.pdf,"TEXTFLAGS_TEXT, TEXTFLAGS_WORDS, TEXTFLAGS_BLOCKS, TEXTFLAGS_DICT, TEXTFLAGS_RAWDICT,
TEXTFLAGS_HTML, TEXTFLAGS_XHTML, TEXTFLAGS_XML, and TEXTFLAGS_SEARCH. You can now easily mod-
ify a default flag, e.g.
"
12293,source/pymupdf.pdf,"– include images in a “blocks” output:
"
12294,source/pymupdf.pdf,"flags = TEXTFLAGS_BLOCKS | TEXT_PRESERVE_IMAGES
"
12295,source/pymupdf.pdf,"– exclude images from a “dict” output:
"
12296,source/pymupdf.pdf,"450
Chapter 25. Appendix 1: Details on Text Extraction
"
12297,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12298,source/pymupdf.pdf,"flags = TEXTFLAGS_DICT & ~TEXT_PRESERVE_IMAGES
"
12299,source/pymupdf.pdf,"– set dehyphenation off in text searches:
"
12300,source/pymupdf.pdf,"flags = TEXTFLAGS_SEARCH & ~TEXT_DEHYPHENATE
"
12301,source/pymupdf.pdf,"Indicator
text
html
xhtml
xml
dict
rawdict
words
blocks
search
"
12302,source/pymupdf.pdf,"preserve ligatures
1
1
1
1
1
1
1
1
1
"
12303,source/pymupdf.pdf,"preserve whitespace
1
1
1
1
1
1
1
1
1
"
12304,source/pymupdf.pdf,"preserve images
n/a
1
1
n/a
1
1
n/a
0
0
"
12305,source/pymupdf.pdf,"inhibit spaces
0
0
0
0
0
0
0
0
0
"
12306,source/pymupdf.pdf,"dehyphenate
0
0
0
0
0
0
0
0
1
"
12307,source/pymupdf.pdf,"clip to mediabox
1
1
1
1
1
1
1
1
1
"
12308,source/pymupdf.pdf,"• search refers to the text search function.
"
12309,source/pymupdf.pdf,"• “json” is handled exactly like “dict” and is hence left out.
"
12310,source/pymupdf.pdf,"• “rawjson” is handled exactly like “rawdict” and is hence left out.
"
12311,source/pymupdf.pdf,"• An “n/a” specification means a value of 0 and setting this bit never has any effect on the output (but an adverse
effect on performance).
"
12312,source/pymupdf.pdf,"• If you are not interested in images when using an output variant which includes them by default, then by all
means set the respective bit off: You will experience a better performance and much lower space requirements.
"
12313,source/pymupdf.pdf,"To show the effect of TEXT_INHIBIT_SPACES have a look at this example:
"
12314,source/pymupdf.pdf,">>> print(page.get_text(""text""))
H a l l o !
Mo r e
t e x t
"
12315,source/pymupdf.pdf,"i s
f o l l o w i n g
"
12316,source/pymupdf.pdf,"i n
E n g l i s h
"
12317,source/pymupdf.pdf,". . .
l e t ' s
s e e
"
12318,source/pymupdf.pdf,"w h a t
h a p p e n s .
"
12319,source/pymupdf.pdf,">>> print(page.get_text(""text"", flags=fitz.TEXT_INHIBIT_SPACES))
Hallo!
More text
is following
in English
... let's see
what happens.
>>>
"
12320,source/pymupdf.pdf,"25.12 Performance
"
12321,source/pymupdf.pdf,"The text extraction methods differ significantly both: in terms of information they supply, and in terms of resource
requirements and runtimes. Generally, more information of course means, that more processing is required and a
higher data volume is generated.
"
12322,source/pymupdf.pdf,"Note: Especially images have a very significant impact. Make sure to exclude them (via the flags parameter) whenever
you do not need them. To process the below mentioned 2’700 total pages with default flags settings required 160 seconds
across all extraction methods. When all images where excluded, less than 50% of that time (77 seconds) were needed.
"
12323,source/pymupdf.pdf,"25.12. Performance
451
"
12324,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12325,source/pymupdf.pdf,"To begin with, all methods are very fast in relation to other products out there in the market. In terms of processing
speed, we are not aware of a faster (free) tool. Even the most detailed method, RAWDICT, processes all 1’310 pages
of the Adobe PDF References in less than 5 seconds (simple text needs less than 2 seconds here).
"
12326,source/pymupdf.pdf,"The following table shows average relative speeds (“RSpeed”, baseline 1.00 is TEXT), taken across ca. 1400 text-heavy
and 1300 image-heavy pages.
"
12327,source/pymupdf.pdf,"Method
RSpeed
Comments
no images
"
12328,source/pymupdf.pdf,"TEXT
1.00
no images, plain text, line breaks
1.00
"
12329,source/pymupdf.pdf,"BLOCKS
1.00
image bboxes (only), block level text with bboxes, line breaks
1.00
"
12330,source/pymupdf.pdf,"WORDS
1.02
no images, word level text with bboxes
1.02
"
12331,source/pymupdf.pdf,"XML
2.72
no images, char level text, layout and font details
2.72
"
12332,source/pymupdf.pdf,"XHTML
3.32
base64 images, span level text, no layout info
1.00
"
12333,source/pymupdf.pdf,"HTML
3.54
base64 images, span level text, layout and font details
1.01
"
12334,source/pymupdf.pdf,"DICT
3.93
binary images, span level text, layout and font details
1.04
"
12335,source/pymupdf.pdf,"RAWDICT
4.50
binary images, char level text, layout and font details
1.68
"
12336,source/pymupdf.pdf,"As mentioned: when excluding image extraction (last column), the relative speeds are changing drastically: except
RAWDICT and XML, the other methods are almost equally fast, and RAWDICT requires 40% less execution time
than the now slowest XML.
"
12337,source/pymupdf.pdf,"Look at chapter Appendix 1 for more performance information.
"
12338,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
12339,source/pymupdf.pdf,"452
Chapter 25. Appendix 1: Details on Text Extraction
"
12340,source/pymupdf.pdf,"CHAPTER
"
12341,source/pymupdf.pdf,"TWENTYSIX
"
12342,source/pymupdf.pdf,"APPENDIX 2: CONSIDERATIONS ON EMBEDDED FILES
"
12343,source/pymupdf.pdf,"This chapter provides some background on embedded files support in PyMuPDF.
"
12344,source/pymupdf.pdf,"26.1 General
"
12345,source/pymupdf.pdf,"Starting with version 1.4, PDF supports embedding arbitrary files as part (“Embedded File Streams”) of a PDF docu-
ment file (see chapter “7.11.4 Embedded File Streams”, pp. 103 of the Adobe PDF References).
"
12346,source/pymupdf.pdf,"In many aspects, this is comparable to concepts also found in ZIP files or the OLE technique in MS Windows. PDF
embedded files do, however, not support directory structures as does the ZIP format. An embedded file can in turn
contain embedded files itself.
"
12347,source/pymupdf.pdf,"Advantages of this concept are that embedded files are under the PDF umbrella, benefitting from its permissions /
password protection and integrity aspects: all data, which a PDF may reference or even may be dependent on, can be
bundled into it and so form a single, consistent unit of information.
"
12348,source/pymupdf.pdf,"In addition to embedded files, PDF 1.7 adds collections to its support range. This is an advanced way of storing and
presenting meta information (i.e. arbitrary and extensible properties) of embedded files.
"
12349,source/pymupdf.pdf,"26.2 MuPDF Support
"
12350,source/pymupdf.pdf,"After adding initial support for collections (portfolios) and /EmbeddedFiles in MuPDF version 1.11, this support was
dropped again in version 1.15.
"
12351,source/pymupdf.pdf,"As a consequence, the cli utility mutool no longer offers access to embedded files.
"
12352,source/pymupdf.pdf,"PyMuPDF – having implemented an /EmbeddedFiles API in response in its version 1.11.0 – was therefore forced to
change gears starting with its version 1.16.0 (we never published a MuPDF v1.15.x compatible PyMuPDF).
"
12353,source/pymupdf.pdf,"We are now maintaining our own code basis supporting embedded files. This code makes use of basic MuPDF dictio-
nary and array functions only.
"
12354,source/pymupdf.pdf,"453
"
12355,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12356,source/pymupdf.pdf,"26.3 PyMuPDF Support
"
12357,source/pymupdf.pdf,"We continue to support the full old API with respect to embedded files – with only minor, cosmetic changes.
"
12358,source/pymupdf.pdf,"There even also is a new function, which delivers a list of all names under which embedded data are registered in a
PDF, Document.embfile_names().
"
12359,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
12360,source/pymupdf.pdf,"454
Chapter 26. Appendix 2: Considerations on Embedded Files
"
12361,source/pymupdf.pdf,"CHAPTER
"
12362,source/pymupdf.pdf,"TWENTYSEVEN
"
12363,source/pymupdf.pdf,"APPENDIX 3: ASSORTED TECHNICAL INFORMATION
"
12364,source/pymupdf.pdf,"This section deals with various technical topics, that are not necessarily related to each other.
"
12365,source/pymupdf.pdf,"27.1 Image Transformation Matrix
"
12366,source/pymupdf.pdf,"Starting with version 1.18.11, the image transformation matrix is returned by some methods for text and image extrac-
tion: Page.get_text() and Page.get_image_bbox().
"
12367,source/pymupdf.pdf,"The transformation matrix contains information about how an image was transformed to fit into the rectangle (its
“boundary box” = “bbox”) on some document page. By inspecting the image’s bbox on the page and this matrix, one
can determine for example, whether and how the image is displayed scaled or rotated on a page.
"
12368,source/pymupdf.pdf,"The relationship between image dimension and its bbox on a page is the following:
"
12369,source/pymupdf.pdf,"1. Using the original image’s width and height,
"
12370,source/pymupdf.pdf,"• define the image rectangle imgrect = fitz.Rect(0, 0, width, height)
"
12371,source/pymupdf.pdf,"• define the “shrink matrix” shrink = fitz.Matrix(1/width, 0, 0, 1/height, 0, 0).
"
12372,source/pymupdf.pdf,"2. Transforming the image rectangle with its shrink matrix, will result in the unit rectangle: imgrect * shrink
= fitz.Rect(0, 0, 1, 1).
"
12373,source/pymupdf.pdf,"3. Using the image transformation matrix “transform”, the following steps will compute the bbox:
"
12374,source/pymupdf.pdf,"imgrect = fitz.Rect(0, 0, width, height)
shrink = fitz.Matrix(1/width, 0, 0, 1/height, 0, 0)
bbox = imgrect * shrink * transform
"
12375,source/pymupdf.pdf,"4. Inspecting the matrix product shrink * transform will reveal all information about what happened to the
image rectangle to make it fit into the bbox on the page: rotation, scaling of its sides and translation of its origin.
Let us look at an example:
"
12376,source/pymupdf.pdf,">>> imginfo = page.get_images()[0]
# get an image item on a page
"
12377,source/pymupdf.pdf,">>> imginfo
(5, 0, 439, 501, 8, 'DeviceRGB', '', 'fzImg0', 'DCTDecode')
>>> #------------------------------------------------
>>> # define image shrink matrix and rectangle
>>> #------------------------------------------------
>>> shrink = fitz.Matrix(1 / 439, 0, 0, 1 / 501, 0, 0)
>>> imgrect = fitz.Rect(0, 0, 439, 501)
>>> #------------------------------------------------
"
12378,source/pymupdf.pdf,"(continues on next page)
"
12379,source/pymupdf.pdf,"455
"
12380,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12381,source/pymupdf.pdf,"(continued from previous page)
"
12382,source/pymupdf.pdf,">>> # determine image bbox and transformation matrix:
>>> #------------------------------------------------
>>> bbox, transform = page.get_image_bbox(""fzImg0"", transform=True)
>>> #------------------------------------------------
>>> # confirm equality - permitting rounding errors
>>> #------------------------------------------------
>>> bbox
Rect(100.0, 112.37525939941406, 300.0, 287.624755859375)
>>> imgrect * shrink * transform
Rect(100.0, 112.375244140625, 300.0, 287.6247253417969)
>>> #------------------------------------------------
>>> shrink * transform
Matrix(0.0, -0.39920157194137573, 0.3992016017436981, 0.0, 100.0, 287.6247253417969)
>>> #------------------------------------------------
>>> # the above shows:
>>> # image sides are scaled by same factor ~0.4,
>>> # and the image is rotated by 90 degrees clockwise
>>> # compare this with fitz.Matrix(-90) * 0.4
>>> #------------------------------------------------
"
12383,source/pymupdf.pdf,"27.2 PDF Base 14 Fonts
"
12384,source/pymupdf.pdf,"The following 14 builtin font names must be supported by every PDF viewer application. They are available as a
dictionary, which maps their full names amd their abbreviations in lower case to the full font basename. Wherever a
fontname must be provided in PyMuPDF, any key or value from the dictionary may be used:
"
12385,source/pymupdf.pdf,"In [2]: fitz.Base14_fontdict
Out[2]:
{'courier': 'Courier',
'courier-oblique': 'Courier-Oblique',
'courier-bold': 'Courier-Bold',
'courier-boldoblique': 'Courier-BoldOblique',
'helvetica': 'Helvetica',
'helvetica-oblique': 'Helvetica-Oblique',
'helvetica-bold': 'Helvetica-Bold',
'helvetica-boldoblique': 'Helvetica-BoldOblique',
'times-roman': 'Times-Roman',
'times-italic': 'Times-Italic',
'times-bold': 'Times-Bold',
'times-bolditalic': 'Times-BoldItalic',
'symbol': 'Symbol',
'zapfdingbats': 'ZapfDingbats',
'helv': 'Helvetica',
'heit': 'Helvetica-Oblique',
'hebo': 'Helvetica-Bold',
'hebi': 'Helvetica-BoldOblique',
'cour': 'Courier',
'coit': 'Courier-Oblique',
'cobo': 'Courier-Bold',
"
12386,source/pymupdf.pdf,"(continues on next page)
"
12387,source/pymupdf.pdf,"456
Chapter 27. Appendix 3: Assorted Technical Information
"
12388,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12389,source/pymupdf.pdf,"(continued from previous page)
"
12390,source/pymupdf.pdf,"'cobi': 'Courier-BoldOblique',
'tiro': 'Times-Roman',
'tibo': 'Times-Bold',
'tiit': 'Times-Italic',
'tibi': 'Times-BoldItalic',
'symb': 'Symbol',
'zadb': 'ZapfDingbats'}
"
12391,source/pymupdf.pdf,"In contrast to their obligation, not all PDF viewers support these fonts correctly and completely – this is especially true
for Symbol and ZapfDingbats. Also, the glyph (visual) images will be specific to every reader.
"
12392,source/pymupdf.pdf,"To see how these fonts can be used – including the CJK built-in fonts – look at the table in Page.insert_font().
"
12393,source/pymupdf.pdf,"27.3 Adobe PDF References
"
12394,source/pymupdf.pdf,"This PDF Reference manual published by Adobe is frequently quoted throughout this documentation. It can be viewed
and downloaded from here.
"
12395,source/pymupdf.pdf,"Note: For a long time, an older version was also available under this link. It seems to be taken off of the web site in
October 2021. Earlier (pre 1.19.*) versions of the PyMuPDF documentation used to refer to this document. We have
undertaken an effort to replace referrals to the current specification above.
"
12396,source/pymupdf.pdf,"27.4 Using Python Sequences as Arguments in PyMuPDF
"
12397,source/pymupdf.pdf,"When PyMuPDF objects and methods require a Python list of numerical values, other Python sequence types are also
allowed. Python classes are said to implement the sequence protocol, if they have a __getitem__() method.
"
12398,source/pymupdf.pdf,"This basically means, you can interchangeably use Python list or tuple or even array.array, numpy.array and bytearray
types in these cases.
"
12399,source/pymupdf.pdf,"For example, specifying a sequence ""s"" in any of the following ways
"
12400,source/pymupdf.pdf,"• s = [1, 2] – a list
"
12401,source/pymupdf.pdf,"• s = (1, 2) – a tuple
"
12402,source/pymupdf.pdf,"• s = array.array(""i"", (1, 2)) – an array.array
"
12403,source/pymupdf.pdf,"• s = numpy.array((1, 2)) – a numpy array
"
12404,source/pymupdf.pdf,"• s = bytearray((1, 2)) – a bytearray
"
12405,source/pymupdf.pdf,"will make it usable in the following example expressions:
"
12406,source/pymupdf.pdf,"• fitz.Point(s)
"
12407,source/pymupdf.pdf,"• fitz.Point(x, y) + s
"
12408,source/pymupdf.pdf,"• doc.select(s)
"
12409,source/pymupdf.pdf,"27.3. Adobe PDF References
457
"
12410,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12411,source/pymupdf.pdf,"Similarly with all geometry objects Rect, IRect, Matrix and Point.
"
12412,source/pymupdf.pdf,"Because all PyMuPDF geometry classes themselves are special cases of sequences, they (with the exception of Quad
– see below) can be freely used where numerical sequences can be used, e.g. as arguments for functions like list(),
tuple(), array.array() or numpy.array(). Look at the following snippet to see this work.
"
12413,source/pymupdf.pdf,">>> import fitz, array, numpy as np
>>> m = fitz.Matrix(1, 2, 3, 4, 5, 6)
>>>
>>> list(m)
[1.0, 2.0, 3.0, 4.0, 5.0, 6.0]
>>>
>>> tuple(m)
(1.0, 2.0, 3.0, 4.0, 5.0, 6.0)
>>>
>>> array.array(""f"", m)
array('f', [1.0, 2.0, 3.0, 4.0, 5.0, 6.0])
>>>
>>> np.array(m)
array([1., 2., 3., 4., 5., 6.])
"
12414,source/pymupdf.pdf,"Note:
Quad is a Python sequence object as well and has a length of 4. Its items however are point_like – not
numbers. Therefore, the above remarks do not apply.
"
12415,source/pymupdf.pdf,"27.5 Ensuring Consistency of Important Objects in PyMuPDF
"
12416,source/pymupdf.pdf,"PyMuPDF is a Python binding for the C library MuPDF. While a lot of effort has been invested by MuPDF’s creators
to approximate some sort of an object-oriented behavior, they certainly could not overcome basic shortcomings of the
C language in that respect.
"
12417,source/pymupdf.pdf,"Python on the other hand implements the OO-model in a very clean way. The interface code between PyMuPDF and
MuPDF consists of two basic files: fitz.py and fitz_wrap.c. They are created by the excellent SWIG tool for each new
version.
"
12418,source/pymupdf.pdf,"When you use one of PyMuPDF’s objects or methods, this will result in execution of some code in fitz.py, which in
turn will call some C code compiled with fitz_wrap.c.
"
12419,source/pymupdf.pdf,"Because SWIG goes a long way to keep the Python and the C level in sync, everything works fine, if a certain set of
rules is being strictly followed. For example: never access a Page object, after you have closed (or deleted or set to
None) the owning Document. Or, less obvious: never access a page or any of its children (links or annotations) after
you have executed one of the document methods select(), delete_page(), insert_page() ... and more.
"
12420,source/pymupdf.pdf,"But just no longer accessing invalidated objects is actually not enough: They should rather be actively deleted entirely,
to also free C-level resources (meaning allocated memory).
"
12421,source/pymupdf.pdf,"The reason for these rules lies in the fact that there is a hierarchical 2-level one-to-many relationship between a document
and its pages and also between a page and its links / annotations. To maintain a consistent situation, any of the above
actions must lead to a complete reset – in Python and, synchronously, in C.
"
12422,source/pymupdf.pdf,"SWIG cannot know about this and consequently does not do it.
"
12423,source/pymupdf.pdf,"The required logic has therefore been built into PyMuPDF itself in the following way.
"
12424,source/pymupdf.pdf,"458
Chapter 27. Appendix 3: Assorted Technical Information
"
12425,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12426,source/pymupdf.pdf,"1. If a page “loses” its owning document or is being deleted itself, all of its currently existing annotations and links
will be made unusable in Python, and their C-level counterparts will be deleted and deallocated.
"
12427,source/pymupdf.pdf,"2. If a document is closed (or deleted or set to None) or if its structure has changed, then similarly all currently
existing pages and their children will be made unusable, and corresponding C-level deletions will take place.
“Structure changes” include methods like select(), delePage(), insert_page(), insert_pdf() and so on: all of these
will result in a cascade of object deletions.
"
12428,source/pymupdf.pdf,"The programmer will normally not realize any of this. If he, however, tries to access invalidated objects, exceptions
will be raised.
"
12429,source/pymupdf.pdf,"Invalidated objects cannot be directly deleted as with Python statements like del page or page = None, etc. Instead,
their __del__ method must be invoked.
"
12430,source/pymupdf.pdf,"All pages, links and annotations have the property parent, which points to the owning object. This is the property that
can be checked on the application level: if obj.parent == None then the object’s parent is gone, and any reference to
its properties or methods will raise an exception informing about this “orphaned” state.
"
12431,source/pymupdf.pdf,"A sample session:
"
12432,source/pymupdf.pdf,">>> page = doc[n]
>>> annot = page.first_annot
>>> annot.type
# everything works fine
"
12433,source/pymupdf.pdf,"[5, 'Circle']
>>> page = None
# this turns 'annot' into an orphan
"
12434,source/pymupdf.pdf,">>> annot.type
<... omitted lines ...>
RuntimeError: orphaned object: parent is None
>>>
>>> # same happens, if you do this:
>>> annot = doc[n].first_annot
# deletes the page again immediately!
"
12435,source/pymupdf.pdf,">>> annot.type
# so, 'annot' is 'born' orphaned
"
12436,source/pymupdf.pdf,"<... omitted lines ...>
RuntimeError: orphaned object: parent is None
"
12437,source/pymupdf.pdf,"This shows the cascading effect:
"
12438,source/pymupdf.pdf,">>> doc = fitz.open(""some.pdf"")
>>> page = doc[n]
>>> annot = page.first_annot
>>> page.rect
fitz.Rect(0.0, 0.0, 595.0, 842.0)
>>> annot.type
[5, 'Circle']
>>> del doc
# or doc = None or doc.close()
"
12439,source/pymupdf.pdf,">>> page.rect
<... omitted lines ...>
RuntimeError: orphaned object: parent is None
>>> annot.type
<... omitted lines ...>
RuntimeError: orphaned object: parent is None
"
12440,source/pymupdf.pdf,"Note: Objects outside the above relationship are not included in this mechanism. If you e.g. created a table of contents
by toc = doc.get_toc(), and later close or change the document, then this cannot and does not change variable toc in
any way. It is your responsibility to refresh such variables as required.
"
12441,source/pymupdf.pdf,"27.5. Ensuring Consistency of Important Objects in PyMuPDF
459
"
12442,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12443,source/pymupdf.pdf,"27.6 Design of Method Page.show_pdf_page()
"
12444,source/pymupdf.pdf,"27.6.1 Purpose and Capabilities
"
12445,source/pymupdf.pdf,"The method displays an image of a (“source”) page of another PDF document within a specified rectangle of the current
(“containing”, “target”) page.
"
12446,source/pymupdf.pdf,"• In contrast to Page.insert_image(), this display is vector-based and hence remains accurate across zooming
levels.
"
12447,source/pymupdf.pdf,"• Just like Page.insert_image(), the size of the display is adjusted to the given rectangle.
"
12448,source/pymupdf.pdf,"The following variations of the display are currently supported:
"
12449,source/pymupdf.pdf,"• Bool parameter ""keep_proportion"" controls whether to maintain the aspect ratio (default) or not.
"
12450,source/pymupdf.pdf,"– Rectangle parameter ""clip"" restricts the visible part of the source page rectangle. Default is the
full page.
"
12451,source/pymupdf.pdf,"• float ""rotation"" rotates the display by an arbitrary angle (degrees). If the angle is not an integer multiple of
90, only 2 of the 4 corners may be positioned on the target border if also ""keep_proportion"" is true.
"
12452,source/pymupdf.pdf,"• Bool parameter ""overlay"" controls whether to put the image on top (foreground, default) of current page content
or not (background).
"
12453,source/pymupdf.pdf,"Use cases include (but are not limited to) the following:
"
12454,source/pymupdf.pdf,"1. “Stamp” a series of pages of the current document with the same image, like a company logo or a watermark.
"
12455,source/pymupdf.pdf,"2. Combine arbitrary input pages into one output page to support “booklet” or double-sided printing (known as
“4-up”, “n-up”).
"
12456,source/pymupdf.pdf,"3. Split up (large) input pages into several arbitrary pieces. This is also called “posterization”, because you e.g. can
split an A4 page horizontally and vertically, print the 4 pieces enlarged to separate A4 pages, and end up with an
A2 version of your original page.
"
12457,source/pymupdf.pdf,"27.6.2 Technical Implementation
"
12458,source/pymupdf.pdf,"This is done using PDF “Form XObjects”, see section 8.10 on page 217 of Adobe PDF References. On execution of
a Page.show_pdf_page(), the following things happen:
"
12459,source/pymupdf.pdf,"1. The resources and contents objects of source page in source document are copied over to the target document,
jointly creating a new Form XObject with the following properties. The PDF xref number of this object is
returned by the method.
"
12460,source/pymupdf.pdf,"a. /BBox equals /Mediabox of the source page
"
12461,source/pymupdf.pdf,"b. /Matrix equals the identity matrix.
"
12462,source/pymupdf.pdf,"c. /Resources equals that of the source page. This involves a “deep-copy” of hierarchically
nested other objects (including fonts, images, etc.). The complexity involved here is covered
by MuPDF’s grafting1 technique functions.
"
12463,source/pymupdf.pdf,"1 MuPDF supports “deep-copying” objects between PDF documents. To avoid duplicate data in the target, it uses so-called “graftmaps”, like a
form of scratchpad: for each object to be copied, its xref number is looked up in the graftmap. If found, copying is skipped. Otherwise, the new
xref is recorded and the copy takes place. PyMuPDF makes use of this technique in two places so far: Document.insert_pdf() and Page.
show_pdf_page(). This process is fast and very efficient, because it prevents multiple copies of typically large and frequently referenced data, like
"
12464,source/pymupdf.pdf,"460
Chapter 27. Appendix 3: Assorted Technical Information
"
12465,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12466,source/pymupdf.pdf,"d. This is a stream object type, and its stream is an exact copy of the combined data of the source
page’s contents objects.
"
12467,source/pymupdf.pdf,"This Form XObject is only executed once per shown source page. Subsequent displays of the same
source page will skip this step and only create “pointer” Form XObjects (done in next step) to this
object.
"
12468,source/pymupdf.pdf,"2. A second Form XObject is then created which the target page uses to invoke the display. This object has the
following properties:
"
12469,source/pymupdf.pdf,"a. /BBox equals the /CropBox of the source page (or ""clip"").
"
12470,source/pymupdf.pdf,"b. /Matrix represents the mapping of /BBox to the target rectangle.
"
12471,source/pymupdf.pdf,"c. /XObject references the previous Form XObject via the fixed name fullpage.
"
12472,source/pymupdf.pdf,"d. The stream of this object contains exactly one fixed statement: /fullpage Do.
"
12473,source/pymupdf.pdf,"e. If the method’s ""oc"" argument is given, its value is assigned to this Form XObject as /OC.
"
12474,source/pymupdf.pdf,"3. The resources and contents objects of the target page are now modified as follows.
"
12475,source/pymupdf.pdf,"a. Add an entry to the /XObject dictionary of /Resources with the name fzFrm (with n chosen such that
this entry is unique on the page).
"
12476,source/pymupdf.pdf,"b. Depending on ""overlay"", prepend or append a new object to the page’s /Contents array, containing the
statement q /fzFrm<n> Do Q.
"
12477,source/pymupdf.pdf,"This design approach ensures that:
"
12478,source/pymupdf.pdf,"1. The (potentially large) source page is only copied once to the target PDF. Only small “pointer” Form XObjects
objects are created per each target page to show the source page.
"
12479,source/pymupdf.pdf,"2. Each referring target page can have its own ""oc"" parameter to control the source page’s visibility individually.
"
12480,source/pymupdf.pdf,"27.7 Redirecting Error and Warning Messages
"
12481,source/pymupdf.pdf,"Since MuPDF version 1.16 error and warning messages can be redirected via an official plugin.
"
12482,source/pymupdf.pdf,"PyMuPDF will put error messages to sys.stderr prefixed with the string “mupdf:”. Warnings are internally stored
and can be accessed via fitz.TOOLS.mupdf_warnings(). There also is a function to empty this store.
"
12483,source/pymupdf.pdf,"27.8 Coordinates
"
12484,source/pymupdf.pdf,"This is one of the most frequently used terms in this documentation. A coordinate generally means a pair of numbers
(x, y) referring to some location, like a corner of a rectangle (Rect), a Point and so forth. The two values usually are
floats, but there a objects like images which only allow them to be integers.
"
12485,source/pymupdf.pdf,"To actually find a coordinate’s location, we also need to know the reference point for x and y - in other words, we must
know where location (0, 0) is positioned. Once (0, 0) (the “origin”) is known, we speak of a “coordinate system”.
"
12486,source/pymupdf.pdf,"Several coordinate systems exist in document processing. For instance, the coordinate systems of a PDF page and the
image created from it are different. We therefore need ways to transform coordinates from one system to another (and
"
12487,source/pymupdf.pdf,"images and fonts. However, you may still want to consider using garbage collection (option 4) in any of the following cases:
"
12488,source/pymupdf.pdf,"1. The target PDF is not new / empty: grafting does not check for resources that already existed (e.g. images, fonts) in the target document before
opening it.
"
12489,source/pymupdf.pdf,"2. Using Page.show_pdf_page() for more than one source document: each grafting occurs within one source PDF only, not across multiple.
So if e.g. the same image exists in pages from different source PDFs, then this will not be detected until garbage collection.
"
12490,source/pymupdf.pdf,"27.7. Redirecting Error and Warning Messages
461
"
12491,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12492,source/pymupdf.pdf,"also back occasionally). This is the task of a Matrix. It is a mathematical function which works much like a factor
that can be “multiplied” with a point or rectangle to give us the corresponding point / rectangle in another coordinate
system. The inverse of a transformation matrix can be used to revert the transformation. Much like multiplying by
some factor, say 3, can be reverted by dividing the result by 3 (or multiplying it with 1/3).
"
12493,source/pymupdf.pdf,"27.8.1 Coordinates and Images
"
12494,source/pymupdf.pdf,"Images have a coordinate system with integer coordinates. Origin (0, 0) is the top-left point. x values must be in
range(width), and y values in range(height). Therefore, y values increase if we go downwards. For every image,
there is only a finite number of coordinates, namely width * height. A location in an image is also called a “pixel”.
"
12495,source/pymupdf.pdf,"• How large an image will be (in centimeters or inches) when e.g. printed, depends on additional information: the
“resolution”. This is measured in DPI (dots per inch, or pixels per inch). To find the printed size of some image,
we therefore must divide its width and its height by the corresponding DPI values (there may separate ones for
width and for height) and will get the respective number of inches.
"
12496,source/pymupdf.pdf,"27.8.2 Origin Point, Point Size and Y-Axis
"
12497,source/pymupdf.pdf,"In PDF, the origin (0, 0) of a page is located at its bottom-left point. In MuPDF, the origin (0, 0) of a page is
located at its top-left point.
"
12498,source/pymupdf.pdf,"Coordinates are float numbers and measured in points, where:
"
12499,source/pymupdf.pdf,"• one point equals 1/72 inches.
"
12500,source/pymupdf.pdf,"Typical document page sizes are ISO A4 and Letter. A Letter page has a size of 8.5 x 11 inches, corresponding to
612 x 792 points. In the PDF coordinate system, the top-left point of a Letter page hence has the coordinate (0,
792) as the y-axis points upwards. Now we know our document size the MuPDF coordinate system for the bottom
right would be coordinate (612, 792) (and for PDF this coordinate would then be (612,0)).
"
12501,source/pymupdf.pdf,"• Theoretically, there are infinitely many coordinate positions on a PDF page. In practice however, at most the
first 5 decimal places are sufficient for a reasonable precision.
"
12502,source/pymupdf.pdf,"462
Chapter 27. Appendix 3: Assorted Technical Information
"
12503,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12504,source/pymupdf.pdf,"• In MuPDF, multiple document formats are supported - PDF just being one among over a dozen others. Images
are also supported as documents in MuPDF (therefore having one page usually). This is one of the reasons why
MuPDF uses a coordinate system with the origin (0, 0) being the top-left point of any document page. The
y-axis points downwards, like with images. Coordinates in MuPDF in any case are floats, like in PDF.
"
12505,source/pymupdf.pdf,"• A rectangle Rect(0, 0, 100, 100) for instance in MuPDF (and thus PyMuPDF) therefore is a square with
edges of length 100 points (= 1.39 inches or 3.53 centimeters). Its top-left corner is the origin. To switch between
the two coordinate systems PDF to MuPDF, every Page object has a Page.transformation_matrix. Its
inverse can be used to compute a rectangle’s PDF coordinates. In this way we can conveniently find that Rect(0,
0, 100, 100) in MuPDF is the same as Rect(0, 692, 100, 792) in PDF. See this code snippet:
"
12506,source/pymupdf.pdf,">>> page = doc.new_page(width=612, height=792)
# make new Letter page
"
12507,source/pymupdf.pdf,">>> ptm = page.transformation_matrix
>>> # the inverse matrix of ptm is ~ptm
>>> fitz.Rect(0, 0, 100, 100) * ~ptm
Rect(0.0, 692.0, 100.0, 792.0)
"
12508,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
12509,source/pymupdf.pdf,"27.8. Coordinates
463
"
12510,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12511,source/pymupdf.pdf,"464
Chapter 27. Appendix 3: Assorted Technical Information
"
12512,source/pymupdf.pdf,"CHAPTER
"
12513,source/pymupdf.pdf,"TWENTYEIGHT
"
12514,source/pymupdf.pdf,"APPENDIX 4: PERFORMANCE COMPARISON METHODOLOGY
"
12515,source/pymupdf.pdf,"This article documents the approach to measure PyMuPDF’s performance and the tools and example files used to do
comparisons.
"
12516,source/pymupdf.pdf,"The following three sections deal with different performance aspects:
"
12517,source/pymupdf.pdf,"• Document Copying - This includes opening and parsing PDFs, then writing them to an output file. Because the
same basic activities are also used for joining (merging) PDFs, the results also apply to these use cases.
"
12518,source/pymupdf.pdf,"• Text Extraction - This extracts plain text from PDFs and writes it to an output text file.
"
12519,source/pymupdf.pdf,"• Page Rendering - This converts PDF pages to image files looking identical to the pages. This ability is the basic
prerequisite for using a tool in Python GUI scripts to scroll through documents. We have chosen a medium-
quality (resolution 150 DPI) version.
"
12520,source/pymupdf.pdf,"Please note that in all cases the actual speed in dealing with PDF structures is not directly measured: instead, the
timings also include the durations of writing files to the operating system’s file system. This cannot be avoided because
tools other than PyMuPDF do not offer the option to e.g., separate the image creation step from the following step,
which writes the image into a file.
"
12521,source/pymupdf.pdf,"So all timings documented include a common, OS-oriented base effort. Therefore, performance differences per tool
are actually larger than the numbers suggest.
"
12522,source/pymupdf.pdf,"28.1 Files used
"
12523,source/pymupdf.pdf,"A set of eight files is used for the performance testing. With each file we have the following information:
"
12524,source/pymupdf.pdf,"• Name of the file and download link.
"
12525,source/pymupdf.pdf,"• Size in bytes.
"
12526,source/pymupdf.pdf,"• Total number of pages in file.
"
12527,source/pymupdf.pdf,"• Total number of bookmarks (Table of Contents entries).
"
12528,source/pymupdf.pdf,"• Total number of links.
"
12529,source/pymupdf.pdf,"• KB size per page.
"
12530,source/pymupdf.pdf,"• Textsize per page is the amount text in the whole file in KB, divided by the number of pages.
"
12531,source/pymupdf.pdf,"• Any notes to generally describe the type of file.
"
12532,source/pymupdf.pdf,"465
"
12533,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12534,source/pymupdf.pdf,"Name
Size
(bytes)
"
12535,source/pymupdf.pdf,"Pages TOC
size
"
12536,source/pymupdf.pdf,"Links KB/pageText-
size/page
"
12537,source/pymupdf.pdf,"Notes
"
12538,source/pymupdf.pdf,"adobe.pdf
32,472,771 1,310
794
32,096 24
1,942
linearized, many links / book-
marks
"
12539,source/pymupdf.pdf,"artifex-
website.pdf
"
12540,source/pymupdf.pdf,"31,570,732 47
46
2,035
656
3,538
graphics oriented
"
12541,source/pymupdf.pdf,"db-systems.pdf
29,326,355 1,241
0
0
23
2,142
"
12542,source/pymupdf.pdf,"fontforge.pdf
8,222,384
214
31
242
38
1,058
mix of text & graphics
"
12543,source/pymupdf.pdf,"pandas.pdf
10,585,962 3,071
536
16,554 3
1,539
many pages
"
12544,source/pymupdf.pdf,"pymupdf.pdf
6,805,176
478
276
5,277
14
1,937
text oriented
"
12545,source/pymupdf.pdf,"pythonbook.pdf
9,983,856
669
198
1,953
15
1,929
"
12546,source/pymupdf.pdf,"sample-50-MB-
pdf-file.pdf
"
12547,source/pymupdf.pdf,"52,521,850 1
0
0
51,291
23,860
single page, graphics oriented,
large file size
"
12548,source/pymupdf.pdf,"Note:
adobe.pdf and pymupdf.pdf are clearly text oriented, artifex-website.pdf and sample-50-MB-pdf-file.pdf
are graphics oriented. Other files are a mix of both.
"
12549,source/pymupdf.pdf,"28.2 Tools used
"
12550,source/pymupdf.pdf,"In each section, the same fixed set of PDF files is being processed by a set of tools. The set of tools used per performance
aspect however varies, depending on the supported tool features.
"
12551,source/pymupdf.pdf,"All tools are either platform independent, or at least can run on both, Windows and Unix / Linux.
"
12552,source/pymupdf.pdf,"Tool
Description
"
12553,source/pymupdf.pdf,"PyMuPDF
The tool of this manual.
"
12554,source/pymupdf.pdf,"PDFrw
A pure Python tool, being used by rst2pdf, has interface to ReportLab.
"
12555,source/pymupdf.pdf,"PyPDF2
A pure Python tool with a large function set.
"
12556,source/pymupdf.pdf,"PDFMiner
A pure Python to extract text and other data from PDF.
"
12557,source/pymupdf.pdf,"XPDF
A command line utility with multiple functions.
"
12558,source/pymupdf.pdf,"PikePDF
A Python package similar to PDFrw, but based on C++ library QPDF.
"
12559,source/pymupdf.pdf,"PDF2JPG
A Python package specialized on rendering PDF pages to JPG images.
"
12560,source/pymupdf.pdf,"28.3 Copying / Joining / Merging
"
12561,source/pymupdf.pdf,"How fast is a PDF file read and its content parsed for further processing? The sheer parsing performance cannot directly
be compared, because batch utilities always execute a requested task completely, in one go, front to end. PDFrw too,
has a lazy strategy for parsing, meaning it only parses those parts of a document that are required in any moment.
"
12562,source/pymupdf.pdf,"To find an answer to the question, we therefore measure the time to copy a PDF file to an output file with each tool,
and do nothing else.
"
12563,source/pymupdf.pdf,"These are the Python commands for how each tool is used:
"
12564,source/pymupdf.pdf,"PyMuPDF
"
12565,source/pymupdf.pdf,"466
Chapter 28. Appendix 4: Performance Comparison Methodology
"
12566,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12567,source/pymupdf.pdf,"import fitz
doc = fitz.open(""input.pdf"")
doc.save(""output.pdf"")
"
12568,source/pymupdf.pdf,"PDFrw
"
12569,source/pymupdf.pdf,"doc = PdfReader(""input.pdf"")
writer = PdfWriter()
writer.trailer = doc
writer.write(""output.pdf"")
"
12570,source/pymupdf.pdf,"PikePDF
"
12571,source/pymupdf.pdf,"from pikepdf import Pdf
doc = Pdf.open(""input.pdf"")
doc.save(""output.pdf"")
"
12572,source/pymupdf.pdf,"PyPDF2
"
12573,source/pymupdf.pdf,"pdfmerge = PyPDF2.PdfMerger()
pdfmerge.append(""input.pdf"")
pdfmerge.write(""output.pdf"")
pdfmerge.close()
"
12574,source/pymupdf.pdf,"Observations
"
12575,source/pymupdf.pdf,"These are our run time findings in seconds along with a base rate summary compared to PyMuPDF:
"
12576,source/pymupdf.pdf,"Name
PyMuPDF
PDFrw
PikePDF
PyPDF2
"
12577,source/pymupdf.pdf,"adobe.pdf
1.75
5.15
22.37
374.05
"
12578,source/pymupdf.pdf,"artifex-website.pdf
0.26
0.38
1.41
2.81
"
12579,source/pymupdf.pdf,"db-systems.pdf
0.15
0.8
1.68
2.46
"
12580,source/pymupdf.pdf,"fontforge.pdf
0.09
0.14
0.28
1.1
"
12581,source/pymupdf.pdf,"pandas.pdf
0.38
2.21
2.73
70.3
"
12582,source/pymupdf.pdf,"pymupdf.pdf
0.11
0.56
0.83
6.05
"
12583,source/pymupdf.pdf,"pythonbook.pdf
0.19
1.2
1.34
37.19
"
12584,source/pymupdf.pdf,"sample-50-MB-pdf-file.pdf
0.12
0.1
2.93
0.08
"
12585,source/pymupdf.pdf,"Total
3.05
10.54
33.57
494.04
"
12586,source/pymupdf.pdf,"Rate compared to PyMuPDF
1.0
3.5
11.0
162
"
12587,source/pymupdf.pdf,"28.4 Text Extraction
"
12588,source/pymupdf.pdf,"The following table shows plain text extraction durations. All tools have been used with their most basic functionality
- i.e. no layout re-arrangements, etc.
"
12589,source/pymupdf.pdf,"Observations
"
12590,source/pymupdf.pdf,"These are our run time findings in seconds along with a base rate summary compared to PyMuPDF:
"
12591,source/pymupdf.pdf,"28.4. Text Extraction
467
"
12592,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12593,source/pymupdf.pdf,"Name
PyMuPDF
XPDF
PyPDF2
PDFMiner
"
12594,source/pymupdf.pdf,"adobe.pdf
2.01
6.19
22.2
49.15
"
12595,source/pymupdf.pdf,"artifex-website.pdf
0.18
0.3
1.1
4.06
"
12596,source/pymupdf.pdf,"db-systems.pdf
1.57
4.26
25.75
42.19
"
12597,source/pymupdf.pdf,"fontforge.pdf
0.24
0.47
2.69
4.2
"
12598,source/pymupdf.pdf,"pandas.pdf
2.41
10.54
25.38
76.56
"
12599,source/pymupdf.pdf,"pymupdf.pdf
0.49
2.34
6.44
13.55
"
12600,source/pymupdf.pdf,"pythonbook.pdf
0.84
2.88
9.28
24.27
"
12601,source/pymupdf.pdf,"sample-50-MB-pdf-file.pdf
0.27
0.44
8.8
13.29
"
12602,source/pymupdf.pdf,"Total
8.01
27.42
101.64
227.27
"
12603,source/pymupdf.pdf,"Rate compared to PyMuPDF
1.0
3.42
12.69
28.37
"
12604,source/pymupdf.pdf,"28.5 Page Rendering
"
12605,source/pymupdf.pdf,"We have tested rendering speed of PyMuPDF against pdf2jpg and XPDF at a resolution of 150 DPI,
"
12606,source/pymupdf.pdf,"These are the Python commands for how each tool is used:
"
12607,source/pymupdf.pdf,"PyMuPDF
"
12608,source/pymupdf.pdf,"def ProcessFile(datei):
print ""processing:"", datei
doc=fitz.open(datei)
for p in fitz.Pages(doc):
pix = p.get_pixmap(dpi=150)
pix.save(""t-%s.png"" % p.number)
pix = None
"
12609,source/pymupdf.pdf,"doc.close()
return
"
12610,source/pymupdf.pdf,"XPDF
"
12611,source/pymupdf.pdf,"pdftopng.exe -r 150 file.pdf ./
"
12612,source/pymupdf.pdf,"PDF2JPG
"
12613,source/pymupdf.pdf,"def ProcessFile(datei):
"
12614,source/pymupdf.pdf,"print(""processing:"", datei)
pdf2jpg.convert_pdf2jpg(datei, ""images"", pages=""ALL"", dpi=150)
return
"
12615,source/pymupdf.pdf,"Observations
"
12616,source/pymupdf.pdf,"These are our run time findings in seconds along with a base rate summary compared to PyMuPDF:
"
12617,source/pymupdf.pdf,"468
Chapter 28. Appendix 4: Performance Comparison Methodology
"
12618,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12619,source/pymupdf.pdf,"Name
PyMuPDF
XPDF
PDF2JPG
"
12620,source/pymupdf.pdf,"adobe.pdf
51.33
98.16
75.71
"
12621,source/pymupdf.pdf,"artifex-website.pdf
26.35
51.28
54.11
"
12622,source/pymupdf.pdf,"db-systems.pdf
84.59
143.16
405.22
"
12623,source/pymupdf.pdf,"fontforge.pdf
12.23
22.18
20.14
"
12624,source/pymupdf.pdf,"pandas.pdf
138.74
241.67
202.06
"
12625,source/pymupdf.pdf,"pymupdf.pdf
22.35
39.11
33.38
"
12626,source/pymupdf.pdf,"pythonbook.pdf
30.44
49.12
55.68
"
12627,source/pymupdf.pdf,"sample-50-MB-pdf-file.pdf
1.01
1.32
5.22
"
12628,source/pymupdf.pdf,"Total
367.04
646
851.52
"
12629,source/pymupdf.pdf,"Rate compared to PyMuPDF
1.0
1.76
2.32
"
12630,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
12631,source/pymupdf.pdf,"28.5. Page Rendering
469
"
12632,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12633,source/pymupdf.pdf,"470
Chapter 28. Appendix 4: Performance Comparison Methodology
"
12634,source/pymupdf.pdf,"CHAPTER
"
12635,source/pymupdf.pdf,"TWENTYNINE
"
12636,source/pymupdf.pdf,"CHANGE LOG
"
12637,source/pymupdf.pdf,"Changes in version 1.23.25 (2024-02-20)
"
12638,source/pymupdf.pdf,"• Fixed issues:
"
12639,source/pymupdf.pdf,"– Fixed 3182: Pixmap.invert_irect argument type error
"
12640,source/pymupdf.pdf,"– Fixed 3186: extractText() extracts broken text from pdf
"
12641,source/pymupdf.pdf,"– Fixed 3191: Error on .find_tables()
"
12642,source/pymupdf.pdf,"• Other:
"
12643,source/pymupdf.pdf,"– When
building,
be
able
to
specify
python-config
directly,
with
environment
variable
PIPCL_PYTHON_CONFIG.
"
12644,source/pymupdf.pdf,"Changes in version 1.23.24 (2024-02-19)
"
12645,source/pymupdf.pdf,"• Fixed issues:
"
12646,source/pymupdf.pdf,"– Fixed 3148: Table extraction - vertical text not handled correctly
"
12647,source/pymupdf.pdf,"– Fixed 3179: Table Detection: Incorrect Separation of Vector Graphics Clusters
"
12648,source/pymupdf.pdf,"– Fixed 3180: Cannot show optional content group: AttributeError: module ‘fitz.mupdf’ has no attribute
‘pdf_array_push_drop’
"
12649,source/pymupdf.pdf,"• Other:
"
12650,source/pymupdf.pdf,"– Be able to test system install using sudo pip install instead of a venv.
"
12651,source/pymupdf.pdf,"Changes in version 1.23.23 (2024-02-18)
"
12652,source/pymupdf.pdf,"• Fixed issues:
"
12653,source/pymupdf.pdf,"– Fixed 3126: Initialising Archive with a pathlib.Path fails.
"
12654,source/pymupdf.pdf,"– Fixed 3131: Calling the next attribute of an Annot raises a “No attribute .parent” warning
"
12655,source/pymupdf.pdf,"– Fixed 3134: Using an IRect as clip parameter in Page.get_pixmap no longer works since 1.23.9
"
12656,source/pymupdf.pdf,"– Fixed 3140: PDF document stays in use after closing
"
12657,source/pymupdf.pdf,"– Fixed 3150: doc.select() hangs on this doc.
"
12658,source/pymupdf.pdf,"– Fixed 3163: AssertionError on using fitz.IRect
"
12659,source/pymupdf.pdf,"– Fixed 3177: fitz.Pixmap(None, pix) Unrecognised args for constructing Pixmap
"
12660,source/pymupdf.pdf,"• Other:
"
12661,source/pymupdf.pdf,"– Improved
Document.select() by using new MuPDF function �pdf_rearrange_pages().
This is a more complete (and faster) implementation of what needs to be done here in that not only pages
"
12662,source/pymupdf.pdf,"471
"
12663,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12664,source/pymupdf.pdf,"will be rearranged, but also consequential changes will be made to the table of contents, links to removed
pages and affected entries in the Optional Content definitions.
"
12665,source/pymupdf.pdf,"– TextWriter.appendv(): added small_caps arg.
"
12666,source/pymupdf.pdf,"– Fixed some valgrind errors with MuPDF master.
"
12667,source/pymupdf.pdf,"– Fixed Document.insert_image() when build with MuPDF master.
"
12668,source/pymupdf.pdf,"Changes in version 1.23.22 (2024-02-12)
"
12669,source/pymupdf.pdf,"• Fixed issues:
"
12670,source/pymupdf.pdf,"– Fixed 3143: Difference in decoding of OCGs names between doc.get_ocgs() and page.get_drawings()
"
12671,source/pymupdf.pdf,"– Fixed 3139: Pixmap resizing needs positional arg “clip” - even if None.
"
12672,source/pymupdf.pdf,"• Other:
"
12673,source/pymupdf.pdf,"– Removed the use of MuPDF function fz_image_size() from PyMuPDF.
"
12674,source/pymupdf.pdf,"Changes in version 1.23.21 (2024-02-01)
"
12675,source/pymupdf.pdf,"• Fixed issues:
"
12676,source/pymupdf.pdf,"• Other:
"
12677,source/pymupdf.pdf,"– Fixed bug in set_xml_metadata(), PR `3112 https://github.com/pymupdf/PyMuPDF/pull/3112>`_: Fix
pdf_add_stream metadata error
"
12678,source/pymupdf.pdf,"– Fixed lack of .parent member in TextPage from Annot.get_textpage().
"
12679,source/pymupdf.pdf,"– Fixed bug in Page.add_widget().
"
12680,source/pymupdf.pdf,"Changes in version 1.23.20 (2024-01-29)
"
12681,source/pymupdf.pdf,"• Bug fixes:
"
12682,source/pymupdf.pdf,"– Fixed 3100: Wrong internal property accessed in get_xml_metadata
"
12683,source/pymupdf.pdf,"• Other:
"
12684,source/pymupdf.pdf,"– Significantly improved speed of Document.get_toc().
"
12685,source/pymupdf.pdf,"Changes in version 1.23.19 (2024-01-25)
"
12686,source/pymupdf.pdf,"• Bug fixes:
"
12687,source/pymupdf.pdf,"– Fixed 3087: Exception in insert_image with mask specified
"
12688,source/pymupdf.pdf,"– Fixed 3094: TypeError: ‘<’ not supported between instances of ‘FzLocation’ and ‘int’ in doc.delete_pages
"
12689,source/pymupdf.pdf,"• Other:
"
12690,source/pymupdf.pdf,"– When finding tables:
"
12691,source/pymupdf.pdf,"∗ Allow addition of user-defined “virtual” vector graphics when finding tables.
"
12692,source/pymupdf.pdf,"∗ Confirm that the enveloping bboxes of vector graphics are inside the clip rectangle.
"
12693,source/pymupdf.pdf,"∗ Avoid slow finding of rectangle intersections.
"
12694,source/pymupdf.pdf,"– Added Font.bbox property.
"
12695,source/pymupdf.pdf,"Changes in version 1.23.18 (2024-01-23)
"
12696,source/pymupdf.pdf,"• Bug fixes:
"
12697,source/pymupdf.pdf,"– Fixed 3081: doc.close() not closing the document
"
12698,source/pymupdf.pdf,"• Other:
"
12699,source/pymupdf.pdf,"472
Chapter 29. Change Log
"
12700,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12701,source/pymupdf.pdf,"– Reduced size of sdist to fit on pypi.org (by reducing size of two test files).
"
12702,source/pymupdf.pdf,"– Fix Annot.file_info() if no Desc item.
"
12703,source/pymupdf.pdf,"Changes in version 1.23.17 (2024-01-22)
"
12704,source/pymupdf.pdf,"• Bug fixes:
"
12705,source/pymupdf.pdf,"– Fixed 3062: page_rotation_reset does not return page to original rotation
"
12706,source/pymupdf.pdf,"– Fixed 3070: update_link(): AttributeError: ‘Page’ object has no attribute ‘super’
"
12707,source/pymupdf.pdf,"• Other:
"
12708,source/pymupdf.pdf,"– Fixed bug in Page.links() (PR #3075).
"
12709,source/pymupdf.pdf,"– Fixed bug in Page.get_bboxlog() with layers.
"
12710,source/pymupdf.pdf,"– Add support for timeouts in scripts/ and tests/run_compound.py.
"
12711,source/pymupdf.pdf,"Changes in version 1.23.16 (2024-01-18)
"
12712,source/pymupdf.pdf,"• Bug fixes:
"
12713,source/pymupdf.pdf,"– Fixed 3058: Pixmap created from CMYK JPEG delivers RGB format
"
12714,source/pymupdf.pdf,"• Other:
"
12715,source/pymupdf.pdf,"– In table detection strategy “lines_strict”, exclude fill-only vector graphics.
"
12716,source/pymupdf.pdf,"– Fixed sysinstall test failure.
"
12717,source/pymupdf.pdf,"– In documentation, update feature matrix with item about text writing.
"
12718,source/pymupdf.pdf,"Changes in version 1.23.15 (2024-01-16)
"
12719,source/pymupdf.pdf,"• Bug fixes:
"
12720,source/pymupdf.pdf,"– Fixed 3050: python3.9 pix.set_pixel has something wrong in c.append( ord(i))
"
12721,source/pymupdf.pdf,"• Other:
"
12722,source/pymupdf.pdf,"– Improved docs for Page.find_tables().
"
12723,source/pymupdf.pdf,"Changes in version 1.23.14 (2024-01-15)
"
12724,source/pymupdf.pdf,"• Bug fixes:
"
12725,source/pymupdf.pdf,"– Fixed 3038: JM_pixmap_from_display_list > Assertion Error : Checking for wrong type
"
12726,source/pymupdf.pdf,"– Fixed 3039: Issue with doc.close() not closing the document in PyMuPDF
"
12727,source/pymupdf.pdf,"• Other:
"
12728,source/pymupdf.pdf,"– Ensure valid “re” rectangles in Page.get_drawings() with derotated pages.
"
12729,source/pymupdf.pdf,"Changes in version 1.23.13 (2024-01-15)
"
12730,source/pymupdf.pdf,"• Bug fixes:
"
12731,source/pymupdf.pdf,"– Fixed 2979: list index out of range in to_pandas()
"
12732,source/pymupdf.pdf,"– Fixed 3001: Calling find_tables() on one document alters the bounding boxes of a subsequent document
"
12733,source/pymupdf.pdf,"• Other:
"
12734,source/pymupdf.pdf,"– Fixed Rect.height and Rect.width to never return negative values.
"
12735,source/pymupdf.pdf,"– Fixed TextPage.extractIMGINFO()’s returned dictkey_yres value.
"
12736,source/pymupdf.pdf,"Changes in version 1.23.12 (2024-01-12)
"
12737,source/pymupdf.pdf,"473
"
12738,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12739,source/pymupdf.pdf,"•
– Fixed 3027: Page.get_text throws Attribute Error for ‘parent’
"
12740,source/pymupdf.pdf,"Changes in version 1.23.11 (2024-01-12)
"
12741,source/pymupdf.pdf,"• Fixed some Pixmap construction bugs.
"
12742,source/pymupdf.pdf,"• Fixed Pixmap.yres().
"
12743,source/pymupdf.pdf,"Changes in version 1.23.10 (2024-01-12)
"
12744,source/pymupdf.pdf,"• Bug fixes:
"
12745,source/pymupdf.pdf,"– Fixed 3020: Can’t resize a PixMap
"
12746,source/pymupdf.pdf,"• Other:
"
12747,source/pymupdf.pdf,"– Fixed Page.delete_image().
"
12748,source/pymupdf.pdf,"Changes in version 1.23.9 (2024-01-11)
"
12749,source/pymupdf.pdf,"• Default to new “rebased” implementation.
"
12750,source/pymupdf.pdf,"– The old “classic” implementation is available with import fitz_old as fitz.
"
12751,source/pymupdf.pdf,"– For more information about why we are changing to the rebased implementation, see: https://github.com/
pymupdf/PyMuPDF/discussions/2680
"
12752,source/pymupdf.pdf,"• Use MuPDF-1.23.9.
"
12753,source/pymupdf.pdf,"• Bug fixes (rebased implementation only):
"
12754,source/pymupdf.pdf,"– Fixed 2911: Page.derotation_matrix returns a tuple instead of a Matrix with rebased implementation
"
12755,source/pymupdf.pdf,"– Fixed 2919: Rebased version: KeyError in resolve_names when merging pdfs
"
12756,source/pymupdf.pdf,"– Fixed 2922: New feature that allows inserting named-destination links doesn’t work
"
12757,source/pymupdf.pdf,"– Fixed 2943: ZeroDivisionError: float division by zero when use apply_redactions()
"
12758,source/pymupdf.pdf,"– Fixed 2950: Shelling out to pip during tests is problematic
"
12759,source/pymupdf.pdf,"– Fixed 2954: Replacement unicode character in text extraction
"
12760,source/pymupdf.pdf,"– Fixed 2957: apply_redactions() moving text
"
12761,source/pymupdf.pdf,"– Fixed 2961: Passing a string as a page number raises IndexError instead of TypeError.
"
12762,source/pymupdf.pdf,"– Fixed 2969: annot.next throws AttributeError
"
12763,source/pymupdf.pdf,"– Fixed 2978: 1.23.9rc1: module ‘fitz.mupdf’ has no attribute ‘fz_copy_pixmap_rect’
"
12764,source/pymupdf.pdf,"– Fixed 2907: segfault trying to call clean_contents on certain pdfs with python 3.12
"
12765,source/pymupdf.pdf,"– Fixed 2905: SystemError: <built-in function TextPage_extractIMGINFO> returned a result with an ex-
ception set
"
12766,source/pymupdf.pdf,"– Fixed 2742: Segmentation Fault when inserting three (but not two) copies of the same source page into
one destination page
"
12767,source/pymupdf.pdf,"• Other:
"
12768,source/pymupdf.pdf,"– Add optional setting of opacity to Page.insert_htmlbox().
"
12769,source/pymupdf.pdf,"– Fixed issue with add_redact_annot() mentioned in #2934.
"
12770,source/pymupdf.pdf,"– Fixed Page.rotation() to return 0 for non-PDF documents instead of raising an exception.
"
12771,source/pymupdf.pdf,"– Fixed internal quad detection to cope with any Python sequence.
"
12772,source/pymupdf.pdf,"– Fixed rebased fitz.pymupdf_version_tuple - was previously set to mupdf version.
"
12773,source/pymupdf.pdf,"474
Chapter 29. Change Log
"
12774,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12775,source/pymupdf.pdf,"– Improved support for Linux system installs, including adding regular testing on Github.
"
12776,source/pymupdf.pdf,"– Add missing flake8 to scripts/gh_release.py:test_packages.
"
12777,source/pymupdf.pdf,"– Use newly public functions in MuPDF-1.23.8.
"
12778,source/pymupdf.pdf,"– Improved scripts/test.py to help investigation of MuPDF issues.
"
12779,source/pymupdf.pdf,"Changes in version 1.23.8 (2023-12-19)
"
12780,source/pymupdf.pdf,"• Bug fixes (rebased implementation only):
"
12781,source/pymupdf.pdf,"– Fixed 2634: get_toc and set_toc do not behave consistently for rotated pages
"
12782,source/pymupdf.pdf,"– Fixed 2861: AttributeError in getLinkDict during PDF Merge
"
12783,source/pymupdf.pdf,"– Fixed 2871: KeyError in getLinkDict during PDF merge
"
12784,source/pymupdf.pdf,"– Fixed 2886: Error in Skeleton for Named Link Destinations
"
12785,source/pymupdf.pdf,"• Bug fixes (rebased and classic implementations):
"
12786,source/pymupdf.pdf,"– Fixed 2885: pymupdf find tables too slow
"
12787,source/pymupdf.pdf,"• Other:
"
12788,source/pymupdf.pdf,"– Rebased implementation:
"
12789,source/pymupdf.pdf,"∗ Page.insert_htmlbox(): new, much more powerful alternative to Page.insert_textbox() or
"
12790,source/pymupdf.pdf,"TextWriter.fill_textbox(), using Story.
"
12791,source/pymupdf.pdf,"∗ Story.fit*(): new methods for fitting a Story into an expanded rect.
"
12792,source/pymupdf.pdf,"∗ Story.write_with_links(): add support for external links.
"
12793,source/pymupdf.pdf,"∗ Document.language():
fixed
to
use
MuPDF’s
new
mupdf.
fz_string_from_text_language2().
"
12794,source/pymupdf.pdf,"∗ Document.subset_fonts() - fixed.
"
12795,source/pymupdf.pdf,"∗ Fixed internal Archive._add_treeitem() method.
"
12796,source/pymupdf.pdf,"∗ Fixed fitz_new.__doc__ to contain PyMuPDF and Python version information, and OS name.
"
12797,source/pymupdf.pdf,"∗ Removed use of (*args, **kwargs) in API, we now specify keyword args explicitly.
"
12798,source/pymupdf.pdf,"∗ Work with new MuPDF Python exception classes.
"
12799,source/pymupdf.pdf,"– Fixed bug where button_states() returns None when /AP points to an indirect object.
"
12800,source/pymupdf.pdf,"– Fixed pillow test to not ignore all errors, and install pillow when testing.
"
12801,source/pymupdf.pdf,"– Added test for fitz.css_for_pymupdf_font() (uses package pymupdf-fonts).
"
12802,source/pymupdf.pdf,"– Simplified Github Actions test specifications.
"
12803,source/pymupdf.pdf,"– Updated tests/README.md.
"
12804,source/pymupdf.pdf,"Changes in version 1.23.7 (2023-11-30)
"
12805,source/pymupdf.pdf,"• Bug fixes in rebased implementation, not fixed in classic implementation:
"
12806,source/pymupdf.pdf,"– Fixed 2232: Geometry helper classes should support keyword arguments
"
12807,source/pymupdf.pdf,"– Fixed 2788: Problem with get_toc in pymupdf 1.23.6
"
12808,source/pymupdf.pdf,"– Fixed 2791: Experiencing small memory leak in save()
"
12809,source/pymupdf.pdf,"• Bug fixes (rebased and classic implementations):
"
12810,source/pymupdf.pdf,"– Fixed 2736: Failure when set cropbox with mediabox negative value
"
12811,source/pymupdf.pdf,"475
"
12812,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12813,source/pymupdf.pdf,"– Fixed 2749: RuntimeError: cycle in structure tree
"
12814,source/pymupdf.pdf,"– Fixed 2753: Story.write_with_links will ignore everything after the first “page break” in the HTML.
"
12815,source/pymupdf.pdf,"– Fixed 2812: find_tables on landscape page generates reversed text
"
12816,source/pymupdf.pdf,"– Fixed 2829: [cannot create /Annot for kind] is still printed despite #2345 is closed.
"
12817,source/pymupdf.pdf,"– Fixed 2841: Unexpected KeyError when using scrub with fitz_new
"
12818,source/pymupdf.pdf,"• Use MuPDF-1.23.7.
"
12819,source/pymupdf.pdf,"• Other:
"
12820,source/pymupdf.pdf,"– Rebased implementation:
"
12821,source/pymupdf.pdf,"∗ Added flake8 code checking to test suite, and made various fixes.
"
12822,source/pymupdf.pdf,"∗ Disable diagnostics during Document constructor to match classic implementation.
"
12823,source/pymupdf.pdf,"– Additional fix to 2553: Invalid characters in versions >= 1.22
"
12824,source/pymupdf.pdf,"– Fixed MuPDF Bug 707324: Story: HTML table row background color repeated incorrectly
"
12825,source/pymupdf.pdf,"– Added scripts/test.py, for simple build+test of PyMuPDF git checkout.
"
12826,source/pymupdf.pdf,"– Added fitz.pymupdf_version_tuple, e.g. (1, 23, 6).
"
12827,source/pymupdf.pdf,"– Restored mistakenly-reverted fix for 2345: Turn off print statements in utils.py
"
12828,source/pymupdf.pdf,"– Include any trailing ... repeated <N> times... text in warnings returned by mupdf_warnings()
"
12829,source/pymupdf.pdf,"(rebased only).
"
12830,source/pymupdf.pdf,"Changes in version 1.23.6 (2023-11-06)
"
12831,source/pymupdf.pdf,"• Bug fixes:
"
12832,source/pymupdf.pdf,"– Fixed 2553: Invalid characters in versions >= 1.22
"
12833,source/pymupdf.pdf,"– Fixed 2608: Incorrect utf32 text extraction (high & low surrogates are split)
"
12834,source/pymupdf.pdf,"– Fixed 2710: page.rect and text location wrong / differing from older version
"
12835,source/pymupdf.pdf,"– Fixed 2774: wrong encoding for “?” character when sort=True
"
12836,source/pymupdf.pdf,"– Fixed 2775: fitz_new does not work with python3.10 or earlier
"
12837,source/pymupdf.pdf,"– Fixed 2777: With fitz_new, wrong type for Page.mediabox
"
12838,source/pymupdf.pdf,"• Other:
"
12839,source/pymupdf.pdf,"– Use MuPDF-1.23.5.
"
12840,source/pymupdf.pdf,"– Added Document.resolve_names() (rebased implementation only).
"
12841,source/pymupdf.pdf,"Changes in version 1.23.5 (2023-10-11)
"
12842,source/pymupdf.pdf,"• Bug fixes:
"
12843,source/pymupdf.pdf,"– Fixed 2341: Handling negative values in the zoom section for LINK_GOTO in linkDest
"
12844,source/pymupdf.pdf,"– Fixed 2522: Typo in set_layer() - NameError: name ‘f’ is not defined
"
12845,source/pymupdf.pdf,"– Fixed 2548: Fitz freezes on some PDFs when calling the fitz.Page.get_text_blocks method.
"
12846,source/pymupdf.pdf,"– Fixed 2596: save(garbage=3) breaks get_pixmap() with side effect
"
12847,source/pymupdf.pdf,"– Fixed 2635: “clean=True” makes objects invisible in the pdf
"
12848,source/pymupdf.pdf,"– Fixed 2637: Page.insert_textbox incorrectly handles the last word if it starts a new line
"
12849,source/pymupdf.pdf,"476
Chapter 29. Change Log
"
12850,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12851,source/pymupdf.pdf,"– Fixed 2699: extract paragraph with below table
"
12852,source/pymupdf.pdf,"– Fixed 2703: Wrong fontsize calculation in corner cases (“page.get_texttrace()”)
"
12853,source/pymupdf.pdf,"– Fixed 2710: page.rect and text location wrong / differing from older version
"
12854,source/pymupdf.pdf,"– Fixed 2723: When will a Python 3.12 wheel be available?
"
12855,source/pymupdf.pdf,"– Fixed 2730: persistent get_text() formatting
"
12856,source/pymupdf.pdf,"• Other:
"
12857,source/pymupdf.pdf,"– Use MuPDF-1.23.4.
"
12858,source/pymupdf.pdf,"– Fix optimisation flags with system installs.
"
12859,source/pymupdf.pdf,"– Fixed the problem that the clip parameter does not take effect during table recognition
"
12860,source/pymupdf.pdf,"– Support Pillow mode “RGBa”
"
12861,source/pymupdf.pdf,"– Support extra word delimiters
"
12862,source/pymupdf.pdf,"– Support checking valid PDF name objects
"
12863,source/pymupdf.pdf,"Changes in version 1.23.4 (2023-09-26)
"
12864,source/pymupdf.pdf,"• Improved build instructions.
"
12865,source/pymupdf.pdf,"• Fixed Tesseract in rebased implementation.
"
12866,source/pymupdf.pdf,"• Improvements to build/install with system MuPDF.
"
12867,source/pymupdf.pdf,"• Fixed Pyodide builds.
"
12868,source/pymupdf.pdf,"• Fixed rebased bug in _insert_image().
"
12869,source/pymupdf.pdf,"• Bug fixes:
"
12870,source/pymupdf.pdf,"– Fixed 2556: Segmentation fault at caling get_cdrawings(extended=True)
"
12871,source/pymupdf.pdf,"– Fixed 2637: Page.insert_textbox incorrectly handles the last word if it starts a new line
"
12872,source/pymupdf.pdf,"– Fixed 2683: Windows sdist build failure - non-quoting of path and using UNIX which command
"
12873,source/pymupdf.pdf,"– Fixed 2691: Page.get_textpage_ocr() bug in rebased fitz_new version
"
12874,source/pymupdf.pdf,"– Fixed 2692: Page.get_pixmap(clip=Rect()) bug in rebased fitz_new version
"
12875,source/pymupdf.pdf,"Changes in version 1.23.3 (2023-08-31)
"
12876,source/pymupdf.pdf,"• Fixed use of Tesseract for OCR.
"
12877,source/pymupdf.pdf,"Changes in version 1.23.2 (2023-08-28)
"
12878,source/pymupdf.pdf,"• Fixed #2613: release 1.23.0 not MacOS-arm64 compatible
"
12879,source/pymupdf.pdf,"Changes in version 1.23.1 (2023-08-24)
"
12880,source/pymupdf.pdf,"• Updated README and package summary description.
"
12881,source/pymupdf.pdf,"• Fixed a problem on some Linux installations with Python-3.10 (and possibly earlier versions) where import
fitz failed with ImportError:
libcrypt.so.2:
cannot open shared object file:
No such
file or directory.
"
12882,source/pymupdf.pdf,"• Fixed incompatible architecture error on MacOS arm64.
"
12883,source/pymupdf.pdf,"• Fixed installation warning from Poetry about missing entry in wheels’ RECORD files.
"
12884,source/pymupdf.pdf,"Changes in version 1.23.0 (2023-08-22)
"
12885,source/pymupdf.pdf,"477
"
12886,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12887,source/pymupdf.pdf,"• Add method find_tables() to the Page object.
"
12888,source/pymupdf.pdf,"This allows locating tables on any supported document page, and extracting table content by cell.
"
12889,source/pymupdf.pdf,"• New “rebased” implementation of PyMuPDF.
"
12890,source/pymupdf.pdf,"The rebased implementation is available as Python module fitz_new. It can be used as a drop-in replacement
with import fitz_new as fitz.
"
12891,source/pymupdf.pdf,"• Python-independent MuPDF libraries are now in a second wheel called PyMuPDFb that will be automatically
installed by pip.
"
12892,source/pymupdf.pdf,"This is to save space on pypi.org - a full release only needs one PyMuPDFb wheel for each OS.
"
12893,source/pymupdf.pdf,"• Bug fixes:
"
12894,source/pymupdf.pdf,"– Fixed #2542: fitz.utils.scrub AttributeError Annot object has no attribute fileUpd inside
"
12895,source/pymupdf.pdf,"– Fixed #2533: get_texttrace returned a incorrect character bbox
"
12896,source/pymupdf.pdf,"– Fixed #2537: Validation when setting a grouped RadioButton throws a RuntimeError: path to ‘V’ has
indirects
"
12897,source/pymupdf.pdf,"• Other changes:
"
12898,source/pymupdf.pdf,"– Dropped support for Python-3.7.
"
12899,source/pymupdf.pdf,"– Fix for wrong page / annot /Contents cleaning.
"
12900,source/pymupdf.pdf,"We need to set pdf_filter_options::no_update to zero.
"
12901,source/pymupdf.pdf,"– Added new function get_tessdata().
"
12902,source/pymupdf.pdf,"– Cope with problem /Annot arrays.
"
12903,source/pymupdf.pdf,"When copying page annotations in method Document.insert_pdf we previously did not check the validity
of members of the /Annots array. For faulty members (like null or non-dictionary items) this could cause
unnecessary exceptions. This fix implements more checks and skips such array items.
"
12904,source/pymupdf.pdf,"– Additional annotation type checks.
"
12905,source/pymupdf.pdf,"We did not previously check for annotation type when getting / setting annotation border properties. This
is now checked in accordance with MuPDF.
"
12906,source/pymupdf.pdf,"– Increase fault tolerance.
"
12907,source/pymupdf.pdf,"Avoid exceptions in method insert_pdf() when source pages contains invalid items in the /Annots
array.
"
12908,source/pymupdf.pdf,"– Return empty border dict for applicable annots.
"
12909,source/pymupdf.pdf,"We previously were returning a non-empty border dictionary even for non-applicable annotation types.
We now return the empty dictionary {} in these cases. This requires some corresponding changes in the
annotation .update() method, namely for dashes and border width.
"
12910,source/pymupdf.pdf,"– Restrict set_rect to applicable annot types.
"
12911,source/pymupdf.pdf,"We were insufficiently excluding non-applicable annotation types from set_rect() method. We now let
MuPDF catch unsupported annotations and return False in these cases.
"
12912,source/pymupdf.pdf,"– Wrong fontsize computation in page.get_texttrace().
"
12913,source/pymupdf.pdf,"When computing the font size we were using the final text transformation matrix, where we should have
taken span->trm instead. This is corrected here.
"
12914,source/pymupdf.pdf,"– Updates to cope with changes to latest MuPDF.
"
12915,source/pymupdf.pdf,"pdf_lookup_anchor() has been removed.
"
12916,source/pymupdf.pdf,"478
Chapter 29. Change Log
"
12917,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12918,source/pymupdf.pdf,"– Update fill_textbox to better respect rect.width
"
12919,source/pymupdf.pdf,"The function norm_words in fill_textbox had a bug in its last loop, appending n+1 characters when actually
measuring width of n characters. It led to a bug in fill_texbox when you tried to write a single word mostly
composed of “wide” letters (M,m, W, w...), causing the written text to exceed the given rect.
"
12920,source/pymupdf.pdf,"The fix was just to replace n+1 by n.
"
12921,source/pymupdf.pdf,"– Add script_focus and script_blur options to widget.
"
12922,source/pymupdf.pdf,"Changes in version 1.22.5 (2023-06-21)
"
12923,source/pymupdf.pdf,"• This release uses MuPDF-1.22.2.
"
12924,source/pymupdf.pdf,"• Bug fixes:
"
12925,source/pymupdf.pdf,"– Fixed #2365: Incorrect dictionary values for type “fs” drawings.
"
12926,source/pymupdf.pdf,"– Fixed #2391: Check box automatically uncheck when we update same checkbox more than 1 times.
"
12927,source/pymupdf.pdf,"– Fixed #2400: Gaps within text of same line not filled with spaces.
"
12928,source/pymupdf.pdf,"– Fixed #2404: Blacklining an image in PDF won’t remove underlying content in version 1.22.X.
"
12929,source/pymupdf.pdf,"– Fixed #2430: Incorrectly reducing ref count of Py_None.
"
12930,source/pymupdf.pdf,"– Fixed #2450: Empty fill color and fill opacity for paths with fill and stroke operations with 1.22.*
"
12931,source/pymupdf.pdf,"– Fixed #2462: Error at “get_drawing(extended=True )”
"
12932,source/pymupdf.pdf,"– Fixed #2468: Decode error when trying to get drawings
"
12933,source/pymupdf.pdf,"– Fixed #2710: page.rect and text location wrong / differing from older version
"
12934,source/pymupdf.pdf,"– Fixed #2723: When will a Python 3.12 wheel be available?
"
12935,source/pymupdf.pdf,"• New features:
"
12936,source/pymupdf.pdf,"– Changed Annotations now support “cloudy” borders. The Annot.border property has the new item
clouds, and method Annot.set_border() supports the corresponding clouds argument.
"
12937,source/pymupdf.pdf,"– Changed Radio button widgets in the same RB group are now consistently updated if the group is defined
in the standard way.
"
12938,source/pymupdf.pdf,"– Added Support for the /Locked key in PDF Optional Content. This array inside the catalog entry /
OCProperties can now be extracted and set.
"
12939,source/pymupdf.pdf,"– Added Support for new parameter tessdata in OCR functions. New function get_tessdata() locates
the language support folder if Tesseract is installed.
"
12940,source/pymupdf.pdf,"Changes in version 1.22.3 (2023-05-10)
"
12941,source/pymupdf.pdf,"• This release uses MuPDF-1.22.0.
"
12942,source/pymupdf.pdf,"• Bug fixes:
"
12943,source/pymupdf.pdf,"– Fixed #2333: Unable to set any of button radio group in form
"
12944,source/pymupdf.pdf,"Changes in version 1.22.2 (2023-04-26)
"
12945,source/pymupdf.pdf,"• This release uses MuPDF-1.22.0.
"
12946,source/pymupdf.pdf,"• Bug fixes:
"
12947,source/pymupdf.pdf,"– Fixed #2369: Image extraction bugs with newer versions
"
12948,source/pymupdf.pdf,"Changes in version 1.22.1 (2023-04-18)
"
12949,source/pymupdf.pdf,"• This release uses MuPDF-1.22.0.
"
12950,source/pymupdf.pdf,"479
"
12951,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12952,source/pymupdf.pdf,"• Bug fixes:
"
12953,source/pymupdf.pdf,"– Fixed #2345: Turn off print statements in utils.py
"
12954,source/pymupdf.pdf,"– Fixed #2348: extract_image returns an extension “flate” instead of “png”
"
12955,source/pymupdf.pdf,"– Fixed
#2350:
Can
not
make
widget
(checkbox)
to
read-only
by
adding
flags
PDF_FIELD_IS_READ_ONLY
"
12956,source/pymupdf.pdf,"– Fixed #2355: 1.22.0 error when using get_toc (AttributeError: ‘SwigPyObject’ object has no attribute)
"
12957,source/pymupdf.pdf,"Changes in version 1.22.0 (2023-04-14)
"
12958,source/pymupdf.pdf,"• This release uses MuPDF-1.22.0.
"
12959,source/pymupdf.pdf,"• Behavioural changes:
"
12960,source/pymupdf.pdf,"– Text extraction now includes glyphs that overlap with clip rect; previously they were included only if they
were entirely contained within the clip rect.
"
12961,source/pymupdf.pdf,"• Bug fixes:
"
12962,source/pymupdf.pdf,"– Fixed #1763: Interactive(smartform) form PDF calculation not working in pymupdf
"
12963,source/pymupdf.pdf,"– Fixed #1995: RuntimeError: image is too high for a long paged pdf file when trying
"
12964,source/pymupdf.pdf,"– Fixed #2093: Image in pdf changes color after applying redactions
"
12965,source/pymupdf.pdf,"– Fixed #2108: Redaction removing more text than expected
"
12966,source/pymupdf.pdf,"– Fixed #2141: Failed to read JPX header when trying to get blocks
"
12967,source/pymupdf.pdf,"– Fixed #2144: Replace image throws an error
"
12968,source/pymupdf.pdf,"– Fixed #2146: Wrong Handling of Reference Count of “None” Object
"
12969,source/pymupdf.pdf,"– Fixed #2161: Support adding images as pages directly
"
12970,source/pymupdf.pdf,"– Fixed #2168: page.add_highlight_annot(start=pointa, stop=pointb) not working
"
12971,source/pymupdf.pdf,"– Fixed #2173: Double free of Colorspace used in Pixmap
"
12972,source/pymupdf.pdf,"– Fixed #2179: Incorrect documentation for pixmap.tint_with()
"
12973,source/pymupdf.pdf,"– Fixed #2208: Pushbutton widget appears as check box
"
12974,source/pymupdf.pdf,"– Fixed #2210: apply_redactions() move pdf text to right after redaction
"
12975,source/pymupdf.pdf,"– Fixed #2220: Page.delete_image() | object has no attribute is_image
"
12976,source/pymupdf.pdf,"– Fixed #2228: open some pdf cost too much time
"
12977,source/pymupdf.pdf,"– Fixed #2238: Bug - can not extract data from file in the newest version 1.21.1
"
12978,source/pymupdf.pdf,"– Fixed #2242: Python quits silently in Story.element_positions() if callback function prototype is
wrong
"
12979,source/pymupdf.pdf,"– Fixed #2246: TextWriter write text in a wrong position
"
12980,source/pymupdf.pdf,"– Fixed #2248: After redacting the content, the position of the remaining text changes
"
12981,source/pymupdf.pdf,"– Fixed #2250: docs: unclear or broken link in page.rst
"
12982,source/pymupdf.pdf,"– Fixed #2251: mupdf_display_errors does not apply to Pixmap when loading broken image
"
12983,source/pymupdf.pdf,"– Fixed #2270: Annot.get_text(""words"") - doesn’t return the first line of words
"
12984,source/pymupdf.pdf,"– Fixed #2275: insert_image: document that rotations are counterclockwise
"
12985,source/pymupdf.pdf,"480
Chapter 29. Change Log
"
12986,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
12987,source/pymupdf.pdf,"– Fixed
#2278:
Can
not
make
widget
(checkbox)
to
read-only
by
adding
flags
PDF_FIELD_IS_READ_ONLY
"
12988,source/pymupdf.pdf,"– Fixed #2290: Different image format/data from Page.get_text(“dict”) and Fitz.get_page_images()
"
12989,source/pymupdf.pdf,"– Fixed #2293: 68 failed tests when installing from sdist on my box
"
12990,source/pymupdf.pdf,"– Fixed #2300: Too much recursion in tree (parents), makes program terminate
"
12991,source/pymupdf.pdf,"– Fixed #2322: add_highlight_annot using clip generates “A Number is Out of Range” error in PDF
"
12992,source/pymupdf.pdf,"• Other:
"
12993,source/pymupdf.pdf,"– Add key “/AS (Yes)” to the underlying annot object of a selected button form field.
"
12994,source/pymupdf.pdf,"– Remove unused Document methods has_xref_streams() and has_old_style_xrefs() as MuPDF
equivalents have been removed.
"
12995,source/pymupdf.pdf,"– Add new Document methods and properties for getting/setting /PageMode, /PageLayout and /
MarkInfo.
"
12996,source/pymupdf.pdf,"– New Document property version_count, which contains the number of incremental saves plus one.
"
12997,source/pymupdf.pdf,"– New Document property is_fast_webaccess which tells whether the document is linearized.
"
12998,source/pymupdf.pdf,"– DocumentWriter is now a context manager.
"
12999,source/pymupdf.pdf,"– Add support for Pixmap JPEG output.
"
13000,source/pymupdf.pdf,"– Add support for drawing rectangles with rounded corners.
"
13001,source/pymupdf.pdf,"– get_drawings(): added optional extended arg.
"
13002,source/pymupdf.pdf,"– Fixed issue where trace devices’ state was not being initialised correctly; data returned from things like
fitz.Page.get_texttrace() might be slightly altered, e.g. linewidth values.
"
13003,source/pymupdf.pdf,"– Output warning to stderr if it looks like we are being used with current directory containing an invalid
fitz/ directory, because this can break import of fitz module. For example this happens if one attempts
to use fitz when current directory is a PyMuPDF checkout.
"
13004,source/pymupdf.pdf,"• Documentation:
"
13005,source/pymupdf.pdf,"– General rework:
"
13006,source/pymupdf.pdf,"∗ Introduces a new home page and new table of contents.
"
13007,source/pymupdf.pdf,"∗ Structural update to include new About section.
"
13008,source/pymupdf.pdf,"∗ Comparison & performance graphing.
"
13009,source/pymupdf.pdf,"∗ Includes performance methodology in appendix.
"
13010,source/pymupdf.pdf,"∗ Updates conf.py to understand single back-ticks as code.
"
13011,source/pymupdf.pdf,"∗ Converts double back-ticks to single back-ticks.
"
13012,source/pymupdf.pdf,"∗ Removes redundant files.
"
13013,source/pymupdf.pdf,"– Improve insert_file() documentation.
"
13014,source/pymupdf.pdf,"– get_bboxlog(): aded optional layers to get_bboxlog().
"
13015,source/pymupdf.pdf,"– Page.get_texttrace(): add new dictionary key layer, name of Optional Content Group.
"
13016,source/pymupdf.pdf,"– Mention use of Python venv in installation documentation.
"
13017,source/pymupdf.pdf,"– Added missing fix for #2057 to release 1.21.1’s changelog.
"
13018,source/pymupdf.pdf,"– Fixes many links to the PyMuPDF-Utilities repo scripts.
"
13019,source/pymupdf.pdf,"481
"
13020,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13021,source/pymupdf.pdf,"– Avoid duplication of changes.txt and docs/changes.rst.
"
13022,source/pymupdf.pdf,"• Build
"
13023,source/pymupdf.pdf,"– Added pyproject.toml file to improve builds using pip etc.
"
13024,source/pymupdf.pdf,"Changes in Version 1.21.1 (2022-12-13)
"
13025,source/pymupdf.pdf,"• This release uses MuPDF-1.21.1.
"
13026,source/pymupdf.pdf,"• Bug fixes:
"
13027,source/pymupdf.pdf,"– Fixed #2110: Fully embedded font is extracted only partially if it occupies more than one object
"
13028,source/pymupdf.pdf,"– Fixed #2094: Rectangle Detection Logic
"
13029,source/pymupdf.pdf,"– Fixed #2088: Destination point not set for named links in toc
"
13030,source/pymupdf.pdf,"– Fixed #2087: Image with Filter “[/FlateDecode/JPXDecode]” not extracted
"
13031,source/pymupdf.pdf,"– Fixed #2086: Document.save() owner_pw & user_pw has buffer overflow bug
"
13032,source/pymupdf.pdf,"– Fixed #2076: Segfault in fitz.py
"
13033,source/pymupdf.pdf,"– Fixed #2057: Document.save garbage parameter not working in PyMuPDF 1.21.0
"
13034,source/pymupdf.pdf,"– Fixed #2051: Missing DPI Parameter
"
13035,source/pymupdf.pdf,"– Fixed #2048: Invalid size of TextPage and bbox with newest version 1.21.0
"
13036,source/pymupdf.pdf,"– Fixed #2045: SystemError: <built-in function Page_get_texttrace> returned a result with an error set
"
13037,source/pymupdf.pdf,"– Fixed #2039: 1.21.0 fails to build against system libmupdf
"
13038,source/pymupdf.pdf,"– Fixed #2036: Archive::Archive defined twice
"
13039,source/pymupdf.pdf,"• Other
"
13040,source/pymupdf.pdf,"– Swallow “&zoom=nan” in link uri strings.
"
13041,source/pymupdf.pdf,"– Add new Page utility methods Page.replace_image() and Page.delete_image().
"
13042,source/pymupdf.pdf,"• Documentation:
"
13043,source/pymupdf.pdf,"– #2040: Added note about test failure with non-default build of MuPDF, to tests/README.md.
"
13044,source/pymupdf.pdf,"– #2037: In docs/installation.rst, mention incompatibility with chocolatey.org on Windows.
"
13045,source/pymupdf.pdf,"– #2061: Fixed description of Annot.file_info.
"
13046,source/pymupdf.pdf,"– #2065: Show how to insert internal PDF link.
"
13047,source/pymupdf.pdf,"– Improved description of building from source without an sdist.
"
13048,source/pymupdf.pdf,"– Added information about running tests.
"
13049,source/pymupdf.pdf,"– #2084: Fixed broken link to PyMuPDF-Utilities.
"
13050,source/pymupdf.pdf,"Changes in Version 1.21.0 (2022-11-8)
"
13051,source/pymupdf.pdf,"• This release uses MuPDF-1.21.0.
"
13052,source/pymupdf.pdf,"• New feature: Stories.
"
13053,source/pymupdf.pdf,"• Added wheels for Python-3.11.
"
13054,source/pymupdf.pdf,"• Bug fixes:
"
13055,source/pymupdf.pdf,"– Fixed #1701: Broken custom image insertion.
"
13056,source/pymupdf.pdf,"– Fixed #1854: Document.delete_pages() declines keyword arguments.
"
13057,source/pymupdf.pdf,"482
Chapter 29. Change Log
"
13058,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13059,source/pymupdf.pdf,"– Fixed #1868: Access Violation Error at page.apply_redactions().
"
13060,source/pymupdf.pdf,"– Fixed #1909: Adding text with fontname=""Helvetica"" can silently fail.
"
13061,source/pymupdf.pdf,"– Fixed #1913: draw_rect(): does not respect width if color is not specified.
"
13062,source/pymupdf.pdf,"– Fixed #1917: subset_fonts(): make it possible to silence the stdout.
"
13063,source/pymupdf.pdf,"– Fixed #1936: Rectangle detection can be incorrect producing wrong output.
"
13064,source/pymupdf.pdf,"– Fixed #1945: Segmentation fault when saving with clean=True.
"
13065,source/pymupdf.pdf,"– Fixed #1965: pdfocr_save() Hard Crash.
"
13066,source/pymupdf.pdf,"– Fixed #1971: Segmentation fault when using get_drawings().
"
13067,source/pymupdf.pdf,"– Fixed #1946: block_no and block_type switched in get_text() docs.
"
13068,source/pymupdf.pdf,"– Fixed #2013: AttributeError: ‘Widget’ object has no attribute ‘_annot’ in delete widget.
"
13069,source/pymupdf.pdf,"• Misc changes to core code:
"
13070,source/pymupdf.pdf,"– Fixed various compiler warnings and a sequence-point bug.
"
13071,source/pymupdf.pdf,"– Added support for Memento builds.
"
13072,source/pymupdf.pdf,"– Fixed leaks detected by Memento in test suite.
"
13073,source/pymupdf.pdf,"– Fixed handling of exceptions in set_name() and set_rect().
"
13074,source/pymupdf.pdf,"– Allow build with latest MuPDF, for regular testing of PyMuPDF master.
"
13075,source/pymupdf.pdf,"– Cope with new MuPDF exceptions when setting rect for some Annot types.
"
13076,source/pymupdf.pdf,"– Reduced cosmetic differences between MuPDF’s config.h and PyMuPDF’s _config.h.
"
13077,source/pymupdf.pdf,"– Cope with various changes to MuPDF API.
"
13078,source/pymupdf.pdf,"• Other:
"
13079,source/pymupdf.pdf,"– Fixed various broken links and typos in docs.
"
13080,source/pymupdf.pdf,"– Mention install of swig-python on MacOS for #875.
"
13081,source/pymupdf.pdf,"– Added (untested) wheels for macos-arm64.
"
13082,source/pymupdf.pdf,"Changes in Version 1.20.2
"
13083,source/pymupdf.pdf,"• This release uses MuPDF-1.20.3.
"
13084,source/pymupdf.pdf,"• Fixed #1787. Fix linking issues on Unix systems.
"
13085,source/pymupdf.pdf,"• Fixed #1824. SegFault when applying redactions overlapping a transparent image. (Fixed in MuPDF-1.20.3.)
"
13086,source/pymupdf.pdf,"• Improvements to documentation:
"
13087,source/pymupdf.pdf,"– Improved information about building from source in docs/installation.rst.
"
13088,source/pymupdf.pdf,"– Clarified memory allocation setting JM_MEMORY� in ��docs/tools.rst.
"
13089,source/pymupdf.pdf,"– Fixed link to PDF Reference manual in docs/app3.rst.
"
13090,source/pymupdf.pdf,"– Fixed building of html documentation on OpenBSD.
"
13091,source/pymupdf.pdf,"– Moved old docs/faq.rst into separate docs/recipes-* files.
"
13092,source/pymupdf.pdf,"• Removed some unused files and directories:
"
13093,source/pymupdf.pdf,"– installation/
"
13094,source/pymupdf.pdf,"– docs/wheelnames.txt
"
13095,source/pymupdf.pdf,"483
"
13096,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13097,source/pymupdf.pdf,"Changes in Version 1.20.1
"
13098,source/pymupdf.pdf,"• Fixed #1724. Fix for building on FreeBSD.
"
13099,source/pymupdf.pdf,"• Fixed #1771. linkDest() had a broken call to re.match(), introduced in 1.20.0.
"
13100,source/pymupdf.pdf,"• Fixed #1751. get_drawings() and get_cdrawings() previously always returned with closePath=False.
"
13101,source/pymupdf.pdf,"• Fixed #1645. Default FreeText annotation text color is now black.
"
13102,source/pymupdf.pdf,"• Improvements to sphinx-generated documentation:
"
13103,source/pymupdf.pdf,"– Use readthedocs theme with enhancements.
"
13104,source/pymupdf.pdf,"– Renamed the .txt files to have .rst suffixes.
"
13105,source/pymupdf.pdf,"Changes in Version 1.20.0
"
13106,source/pymupdf.pdf,"This release uses MuPDF-1.20.0, released 2022-06-15.
"
13107,source/pymupdf.pdf,"• Cope
with
new
MuPDF
link
uri
format,
changed
from
#<int>,<int>,<int>
to
#page=<int>&zoom=<float>,<float>,<float>.
"
13108,source/pymupdf.pdf,"• In tests/test_insertpdf.py, use new reference output joined-1.20.pdf. We also check that new output
values are approximately the same as the old ones.
"
13109,source/pymupdf.pdf,"• Fixed #1738. Leak of pdf_graft_map. Also fixed a SEGV issue that this seemed to expose, caused by incorrect
freeing of underlying fz_document.
"
13110,source/pymupdf.pdf,"• Fixed #1733. Fixed ownership of Annotation.get_pixmap().
"
13111,source/pymupdf.pdf,"Changes to build/release process:
"
13112,source/pymupdf.pdf,"• If pip builds from source because an appropriate wheel is not available, we no longer require MuPDF to be pre-
installed. Instead the required MuPDF source is embedded in the sdist and automatically built into PyMuPDF.
"
13113,source/pymupdf.pdf,"• Various changes to setup.py to download the required MuPDF release as required. See comments at start of
setup.py for details.
"
13114,source/pymupdf.pdf,"• Added .github/workflows/build_wheels.yml to control building of wheels on Github.
"
13115,source/pymupdf.pdf,"Changes in Version 1.19.6
"
13116,source/pymupdf.pdf,"• Fixed #1620. The TextPage created by Page.get_textpage() will now be freed correctly (removed memory
leak).
"
13117,source/pymupdf.pdf,"• Fixed #1601. Document open errors should now be more concise and easier to interpret. In the course of this,
two PyMuPDF-specific Python exceptions have been added:
"
13118,source/pymupdf.pdf,"– EmptyFileError – raised when trying to create a Document (fitz.open()) from an empty file or zero-
length memory.
"
13119,source/pymupdf.pdf,"– FileDataError – raised when MuPDF encounters irrecoverable document structure issues.
"
13120,source/pymupdf.pdf,"• Added Page.load_widget() given a PDF field’s xref.
"
13121,source/pymupdf.pdf,"• Added Dictionary pdfcolor which provide the about 500 colors defined as PDF color values with the lower
case color name as key.
"
13122,source/pymupdf.pdf,"• Added algebra functionality to the Quad class. These objects can now also be added and subtracted among
themselves, and be multiplied by numbers and matrices.
"
13123,source/pymupdf.pdf,"• Added new constants defining the default text extraction flags for more comfortable handling. Their naming
convention is like TEXTFLAGS_WORDS for page.get_text(""words""). See Text Extraction Flags Defaults.
"
13124,source/pymupdf.pdf,"484
Chapter 29. Change Log
"
13125,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13126,source/pymupdf.pdf,"• Changed Page.annots() and Page.widgets() to detect and prevent reloading the page (illegally) inside the
iterator loops via Document.reload_page(). Doing this brings down the interpretor. Documented clean ways
to do annotation and widget mass updates within properly designed loops.
"
13127,source/pymupdf.pdf,"• Changed several internal utility functions to become standalone (“SWIG inline”) as opposed to be part of the
"
13128,source/pymupdf.pdf,"Tools class. This, among other things, increases the performance of geometry object creation.
"
13129,source/pymupdf.pdf,"• Changed Document.update_stream() to always accept stream updates - whether or not the dictionary object
behind the xref already is a stream. Thus the former new parameter is now ignored and will be removed in
v1.20.0.
"
13130,source/pymupdf.pdf,"Changes in Version 1.19.5
"
13131,source/pymupdf.pdf,"• Fixed #1518. A limited “fix”: in some cases, rectangles and quadrupels were not correctly encoded to support
re-drawing by Shape.
"
13132,source/pymupdf.pdf,"• Fixed #1521. This had the same ultimate reason behind issue #1510.
"
13133,source/pymupdf.pdf,"• Fixed #1513. Some Optional Content functions did not support non-ASCII characters.
"
13134,source/pymupdf.pdf,"• Fixed #1510. Support more soft-mask image subtypes.
"
13135,source/pymupdf.pdf,"• Fixed #1507. Immunize against items in the outlines chain, that are ""null"" objects.
"
13136,source/pymupdf.pdf,"• Fixed re-opened #1417.
(“too many open files”).
This was due to insufficient calls to MuPDF’s
fz_drop_document(). This also fixes #1550.
"
13137,source/pymupdf.pdf,"• Fixed several undocumented issues in relation to incorrectly setting the text span origin point_like.
"
13138,source/pymupdf.pdf,"• Fixed undocumented error computing the character bbox in method Page.get_texttrace() when text is
flipped (as opposed to just rotated).
"
13139,source/pymupdf.pdf,"• Added items to the dictionary returned by image_properties(): orientation and transform report the
natural image orientation (EXIF data).
"
13140,source/pymupdf.pdf,"• Added method Document.xref_copy(). It will make a given target PDF object an exact copy of a source
object.
"
13141,source/pymupdf.pdf,"Changes in Version 1.19.4
"
13142,source/pymupdf.pdf,"• Fixed #1505. Immunize against circular outline items.
"
13143,source/pymupdf.pdf,"• Fixed #1484. Correct CropBox coordinates are now returned in all situations.
"
13144,source/pymupdf.pdf,"• Fixed #1479.
"
13145,source/pymupdf.pdf,"• Fixed #1474. TextPage objects are now properly deleted again.
"
13146,source/pymupdf.pdf,"• Added Page methods and attributes for PDF /ArtBox, /BleedBox, /TrimBox.
"
13147,source/pymupdf.pdf,"• Added global attribute TESSDATA_PREFIX for easy checking of OCR support.
"
13148,source/pymupdf.pdf,"• Changed Document.xref_set_key() such that dictionary keys will physically be removed if set to value
""null"".
"
13149,source/pymupdf.pdf,"• Changed Document.extract_font() to optionally return a dictionary (instead of a tuple).
"
13150,source/pymupdf.pdf,"Changes in Version 1.19.3
"
13151,source/pymupdf.pdf,"This patch version implements minor improvements for Pixmap and also some important fixes.
"
13152,source/pymupdf.pdf,"• Fixed #1351. Reverted code that introduced the memory growth in v1.18.15.
"
13153,source/pymupdf.pdf,"485
"
13154,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13155,source/pymupdf.pdf,"• Fixed #1417. Developped circumvention for growth of open file handles using Document.insert_pdf().
"
13156,source/pymupdf.pdf,"• Fixed #1418. Developped circumvention for memory growth using Document.insert_pdf().
"
13157,source/pymupdf.pdf,"• Fixed #1430. Developped circumvention for mass pixmap generations of document pages.
"
13158,source/pymupdf.pdf,"• Fixed #1433. Solves a bbox error for some Type 3 font in PyMuPDF text processing.
"
13159,source/pymupdf.pdf,"• Added Pixmap.color_topusage() to determine the share of the most frequently used color. Solves #1397.
"
13160,source/pymupdf.pdf,"• Added Pixmap.warp() which makes a new pixmap from a given arbitrary convex quad inside the pixmap.
"
13161,source/pymupdf.pdf,"• Added Annot.irt_xref and Annot.set_irt_xref() to inquire or set the /IRT (“In Responde To”) property
of an annotation. Implements #1450.
"
13162,source/pymupdf.pdf,"• Added Rect.torect() and IRect.torect() which compute a matrix that transforms to a given other rect-
angle.
"
13163,source/pymupdf.pdf,"• Changed Pixmap.color_count() to also return the count of each color.
"
13164,source/pymupdf.pdf,"• Changed Page.get_texttrace() to also return correct span and character bboxes if span[""dir""] != (1,
0).
"
13165,source/pymupdf.pdf,"Changes in Version 1.19.2
"
13166,source/pymupdf.pdf,"This patch version implements minor improvements for Page.get_drawings() and also some important fixes.
"
13167,source/pymupdf.pdf,"• Fixed #1388. Fixed intermittent memory corruption when insert or updating annotations.
"
13168,source/pymupdf.pdf,"• Fixed #1375. Inconsistencies between line numbers as returned by the “words” and the “dict” options of Page.
get_text() have been corrected.
"
13169,source/pymupdf.pdf,"• Fixed #1364. The check for being a ""rawdict"" span in recover_span_quad() now works correctly.
"
13170,source/pymupdf.pdf,"• Fixed #1342. Corrected the check for rectangle infiniteness in Page.show_pdf_page().
"
13171,source/pymupdf.pdf,"• Changed Page.get_drawings(), Page.get_cdrawings() to return an indicator on the area orientation cov-
ered by a rectangle. This implements #1355. Also, the recognition rate for rectangles and quads has been sig-
nificantly improved.
"
13172,source/pymupdf.pdf,"• Changed all text search and extraction methods to set the new flags option TEXT_MEDIABOX_CLIP to ON by
default. That bit causes the automatic suppression of all characters that are completely outside a page’s mediabox
(in as far as that notion is supported for a document type). This eliminates the need for using clip=page.rect
or similar for omitting text outside the visible area.
"
13173,source/pymupdf.pdf,"• Added parameter ""dpi"" to Page.get_pixmap() and Annot.get_pixmap().
When given, parameter
""matrix"" is ignored, and a Pixmap with the desired dots per inch is created.
"
13174,source/pymupdf.pdf,"• Added attributes Pixmap.is_monochrome and Pixmap.is_unicolor allowing fast checks of pixmap prop-
erties. Addresses #1397.
"
13175,source/pymupdf.pdf,"• Added method Pixmap.color_count() to determine the unique colors in the pixmap.
"
13176,source/pymupdf.pdf,"• Added boolean parameter ""compress"" to PDF document method Document.update_stream(). Addresses /
enables solution for #1408.
"
13177,source/pymupdf.pdf,"Changes in Version 1.19.1
"
13178,source/pymupdf.pdf,"This is the first patch version to support MuPDF v1.19.0. Apart from one bug fix, it includes important improvements
for OCR support and the option to sort extracted text to the standard reading order “from top-left to bottom-right”.
"
13179,source/pymupdf.pdf,"• Fixed #1328. “words” text extraction again returns correct (x0, y0) coordinates.
"
13180,source/pymupdf.pdf,"486
Chapter 29. Change Log
"
13181,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13182,source/pymupdf.pdf,"• Changed Page.get_textpage_ocr(): it now supports parameter dpi to control OCR quality. It is also pos-
sible to choose whether the full page should be OCRed or only the images displayed by the page.
"
13183,source/pymupdf.pdf,"• Changed Page.get_drawings() and Page.get_cdrawings() to automatically convert colors to RGB color
tuples. Implements #1332. Similar change was applied to Page.get_texttrace().
"
13184,source/pymupdf.pdf,"• Changed Page.get_text() to support a parameter sort. If set to True the output is conveniently sorted.
"
13185,source/pymupdf.pdf,"Changes in Version 1.19.0
"
13186,source/pymupdf.pdf,"This is the first version supporting MuPDF 1.19.*, published 2021-10-05. It introduces many new features compared
to the previous version 1.18.*.
"
13187,source/pymupdf.pdf,"PyMuPDF has now picked up integrated Tesseract OCR support, which was already present in MuPDF v1.18.0.
"
13188,source/pymupdf.pdf,"• Supported images can be OCRed via their Pixmap which results in a 1-page PDF with a text layer.
"
13189,source/pymupdf.pdf,"• All supported document pages (i.e. not only PDFs), can be OCRed using specialized text extraction methods.
The result is a mixture of standard and OCR text (depending on which part of the page was deemed to require
OCRing) that can be searched and extracted without restrictions.
"
13190,source/pymupdf.pdf,"• All this requires an independent installation of Tesseract. MuPDF actually (only) needs the location of Tesseract’s
""tessdata"" folder, where its language support data are stored. This location must be available as environment
variable TESSDATA_PREFIX.
"
13191,source/pymupdf.pdf,"A new MuPDF feature is journalling PDF updates, which is also supported by this PyMuPDF version. Changes may
be logged, rolled back or replayed, allowing to implement a whole new level of control over PDF document integrity –
similar to functions present in modern database systems.
"
13192,source/pymupdf.pdf,"A third feature (unrelated to the new MuPDF version) includes the ability to detect when page objects cover or hide
each other. It is now e.g. possible to see that text is covered by a drawing or an image.
"
13193,source/pymupdf.pdf,"• Changed terminology and meaning of important geometry concepts: Rectangles are now characterized as finite,
valid or empty, while the definitions of these terms have also changed. Rectangles specifically are now thought
of being “open”: not all corners and sides are considered part of the retangle. Please do read the Rect section for
details.
"
13194,source/pymupdf.pdf,"• Added new parameter ""no_new_id"" to Document.save() / Document.tobytes() methods. Use it to sup-
press updating the second item of the document /ID which in PDF indicates that the original file has been
updated. If the PDF has no /ID at all yet, then no new one will be created either.
"
13195,source/pymupdf.pdf,"• Added a journalling facility for PDF updates. This allows logging changes, undoing or redoing them, or saving
the journal for later use. Refer to Document.journal_enable() and friends.
"
13196,source/pymupdf.pdf,"• Added new Pixmap methods Pixmap.pdfocr_save() and Pixmap.pdfocr_tobytes(), which generate a
1-page PDF containing the pixmap as PNG image with OCR text layer.
"
13197,source/pymupdf.pdf,"• Added Page.get_textpage_ocr() which executes optical character recognition for the page, then extracts the
results and stores them together with “normal” page content in a TextPage. Use or reuse this object in subsequent
text extractions and text searches to avoid multiple efforts. The existing text search and text extraction methods
have been extended to support a separately created textpage – see next item.
"
13198,source/pymupdf.pdf,"• Added a new parameter textpage to text extraction and text search methods. This allows reuse of a previously
created TextPage and thus achieves significant runtime benefits – which is especially important for the new OCR
features. But “normal” text extractions can definitely also benefit.
"
13199,source/pymupdf.pdf,"• Added Page.get_texttrace(), a technical method delivering low-level text character properties. It was
present before as a private method, but the author felt it now is mature enough to be officially available. It
specifically includes a “sequence number” which indicates the page appearance build operation that painted the
text.
"
13200,source/pymupdf.pdf,"487
"
13201,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13202,source/pymupdf.pdf,"• Added Page.get_bboxlog() which delivers the list of rectangles of page objects like text, images or drawings.
Its significance lies in its sequence: rectangles intersecting areas with a lower index are covering or hiding them.
"
13203,source/pymupdf.pdf,"• Changed methods Page.get_drawings() and Page.get_cdrawings() to include a “sequence number” in-
dicating the page appearance build operation that created the drawing.
"
13204,source/pymupdf.pdf,"• Fixed #1311. Field values in comboboxes should now be handled correctly.
"
13205,source/pymupdf.pdf,"• Fixed #1290. Error was caused by incorrect rectangle emptiness check, which is fixed due to new geometry logic
of this version.
"
13206,source/pymupdf.pdf,"• Fixed #1286. Text alignment for redact annotations is working again.
"
13207,source/pymupdf.pdf,"• Fixed #1287. Infinite loop issue for non-Windows systems when applying some redactions has been resolved.
"
13208,source/pymupdf.pdf,"• Fixed #1284. Text layout destruction after applying redactions in some cases has been resolved.
"
13209,source/pymupdf.pdf,"Changes in Version 1.18.18 / 1.18.19
"
13210,source/pymupdf.pdf,"• Fixed issue #1266. Failure to set Pixmap.samples in important cases, was hotfixed in a new version 1.18.19.
"
13211,source/pymupdf.pdf,"• Fixed issue #1257. Removing the read-only flag from PDF fields is now possible.
"
13212,source/pymupdf.pdf,"• Fixed issue #1252. Now correctly specifying the zoom value for PDF link annotations.
"
13213,source/pymupdf.pdf,"• Fixed issue #1244. Now correctly computing the transform matrix in Page.get_image__bbox().
"
13214,source/pymupdf.pdf,"• Fixed issue #1241. Prevent returning artifact characters in Page.get_textbox(), which happened in certain
constellations.
"
13215,source/pymupdf.pdf,"• Fixed issue #1234.
Avoid creating infinite rectangles in corner cases – Page.get_drawings(), Page.
get_cdrawings().
"
13216,source/pymupdf.pdf,"• Added test data and test scripts to the source PyPI source distribution.
"
13217,source/pymupdf.pdf,"Changes in Version 1.18.17
"
13218,source/pymupdf.pdf,"Focus of this version are major performance improvements of selected functions.
"
13219,source/pymupdf.pdf,"• Fixed issue #1199. Using a non-existing page number in Document.get_page_images() and friends will no
longer lead to segfaults.
"
13220,source/pymupdf.pdf,"• Changed Page.get_drawings() to now differentiate between “stroke”, “fill” and combined paths. Paths con-
taining more than one rectangle (i.e. “re” items) are now supported. Extracting “clipped” paths is now available
as an option.
"
13221,source/pymupdf.pdf,"• Added Page.get_cdrawings(), performance-optimized version of Page.get_drawings().
"
13222,source/pymupdf.pdf,"• Added Pixmap.samples_mv, memoryview of a pixmap’s pixel area. Does not copy and thus always accesses
the current state of that area.
"
13223,source/pymupdf.pdf,"• Added Pixmap.samples_ptr, Python “pointer” to a pixmap’s pixel area. Allows much faster creation (factor
800+) of Qt images.
"
13224,source/pymupdf.pdf,"Changes in Version 1.18.16
"
13225,source/pymupdf.pdf,"• Fixed issue #1184. Existing PDF widget fonts in a PDF are now accepted (i.e. not forcedly changed to a Base-14
font).
"
13226,source/pymupdf.pdf,"• Fixed issue #1154. Text search hits should now be correct when clip is specified.
"
13227,source/pymupdf.pdf,"488
Chapter 29. Change Log
"
13228,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13229,source/pymupdf.pdf,"• Fixed issue #1152.
"
13230,source/pymupdf.pdf,"• Fixed issue #1146.
"
13231,source/pymupdf.pdf,"• Added Link.flags and Link.set_flags() to the Link class. Implements enhancement requests #1187.
"
13232,source/pymupdf.pdf,"• Added option to simulate TextWriter.fill_textbox() output for predicting the number of lines, that a given
text would occupy in the textbox.
"
13233,source/pymupdf.pdf,"• Added text output support as subcommand gettext to the fitz CLI module. Most importantly, original phys-
ical text layout reproduction is now supported.
"
13234,source/pymupdf.pdf,"Changes in Version 1.18.15
"
13235,source/pymupdf.pdf,"• Fixed issue #1088.
Removing an annotation’s fill color should now work again both ways, using the
fill_color=[] argument in Annot.update() as well as fill=[] in Annot.set_colors().
"
13236,source/pymupdf.pdf,"• Fixed issue #1081. Document.subset_fonts(): fixed an error which created wrong character widths for some
fonts.
"
13237,source/pymupdf.pdf,"• Fixed issue #1078. Page.get_text() and other methods related to text extraction: changed the default value
of the TextPage flags parameter. All whitespace and ligatures are now preserved.
"
13238,source/pymupdf.pdf,"• Fixed issue #1085. The old snake_cased alias of fitz.detTextlength is now defined correctly.
"
13239,source/pymupdf.pdf,"• Changed Document.subset_fonts() will now correctly prefix font subsets with an appropriate six letter
uppercase tag, complying with the PDF specification.
"
13240,source/pymupdf.pdf,"• Added new method Widget.button_states() which returns the possible values that a button-type field can
have when being set to “on” or “off”.
"
13241,source/pymupdf.pdf,"• Added support of text with Small Capital letters to the Font and TextWriter classes. This is reflected by an
additional bool parameter small_caps in various of their methods.
"
13242,source/pymupdf.pdf,"Changes in Version 1.18.14
"
13243,source/pymupdf.pdf,"• Finished implementing new, “snake_cased” names for methods and properties, that were “camelCased” and
awkward in many aspects. At the end of this documentation, there is section Deprecated Names with more
background and a mapping of old to new names.
"
13244,source/pymupdf.pdf,"• Fixed issue #1053. Page.insert_image(): when given, include image mask in the hash computation.
"
13245,source/pymupdf.pdf,"• Fixed issue #1043. Added Pixmap.getPNGdata to the aliases of Pixmap.tobytes().
"
13246,source/pymupdf.pdf,"• Fixed an internal error when computing the enveloping rectangle of drawn paths as returned by Page.
get_drawings().
"
13247,source/pymupdf.pdf,"• Fixed an internal error occasionally causing loops when outputting text via TextWriter.fill_textbox().
"
13248,source/pymupdf.pdf,"• Added Font.char_lengths(), which returns a tuple of character widths of a string.
"
13249,source/pymupdf.pdf,"• Added more ways to specify pages in Document.delete_pages(). Now a sequence (list, tuple or range) can
be specified, and the Python del statement can be used. In the latter case, Python slices are also accepted.
"
13250,source/pymupdf.pdf,"• Changed Document.del_toc_item(), which disables a single item of the TOC: previously, the title text was
removed. Instead, now the complete item will be shown grayed-out by supporting viewers.
"
13251,source/pymupdf.pdf,"Changes in Version 1.18.13
"
13252,source/pymupdf.pdf,"• Fixed issue #1014.
"
13253,source/pymupdf.pdf,"489
"
13254,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13255,source/pymupdf.pdf,"• Fixed an internal memory leak when computing image bboxes – Page.get_image_bbox().
"
13256,source/pymupdf.pdf,"• Added support for low-level access and modification of the PDF trailer.
Applies to Document.
xref_get_keys(), Document.xref_get_key(), and Document.xref_set_key().
"
13257,source/pymupdf.pdf,"• Added documentation for maintaining private entries in PDF metadata.
"
13258,source/pymupdf.pdf,"• Added documentation for handling transparent image insertions, Page.insert_image().
"
13259,source/pymupdf.pdf,"• Added Page.get_image_rects(), an improved version of Page.get_image_bbox().
"
13260,source/pymupdf.pdf,"• Changed Document.delete_pages() to support various ways of specifying pages to delete. Implements
"
13261,source/pymupdf.pdf,"#1042.
"
13262,source/pymupdf.pdf,"• Changed Page.insert_image() to also accept the xref of an existing image in the file. This allows “copying”
images between pages, and extremely fast mutiple insertions.
"
13263,source/pymupdf.pdf,"• Changed Page.insert_image() to also accept the integer parameter alpha. To be used for performance
improvements.
"
13264,source/pymupdf.pdf,"• Changed Pixmap.set_alpha() to support new parameters for pre-multiplying colors with their alpha values
and setting a specific color to fully transparent (e.g. white).
"
13265,source/pymupdf.pdf,"• Changed Document.embfile_add() to automatically set creation and modification date-time. Correspond-
ingly, Document.embfile_upd() automatically maintains modification date-time (/ModDate PDF key), and
Document.embfile_info() correspondingly reports these data. In addition, the embedded file’s associated
“collection item” is included via its xref. This supports the development of PDF portfolio applications.
"
13266,source/pymupdf.pdf,"Changes in Version 1.18.11 / 1.18.12
"
13267,source/pymupdf.pdf,"• Fixed issue #972. Improved layout of source distribution material.
"
13268,source/pymupdf.pdf,"• Fixed issue #962. Stabilized Linux distribution detection for generating PyMuPDF from sources.
"
13269,source/pymupdf.pdf,"• Added: Page.get_xobjects() delivers the result of Document.get_page_xobjects().
"
13270,source/pymupdf.pdf,"• Added: Page.get_image_info() delivers meta information for all images shown on the page.
"
13271,source/pymupdf.pdf,"• Added: Tools.mupdf_display_warnings() allows setting on / off the display of MuPDF-generated warn-
ings. The default is off.
"
13272,source/pymupdf.pdf,"• Added: Document.ez_save() convenience alias of Document.save() with some different defaults.
"
13273,source/pymupdf.pdf,"• Changed: Image extractions of document pages now also contain the image’s transformation matrix. This
concerns Page.get_image_bbox() and the DICT, JSON, RAWDICT, and RAWJSON variants of Page.
get_text().
"
13274,source/pymupdf.pdf,"Changes in Version 1.18.10
"
13275,source/pymupdf.pdf,"• Fixed issue #941. Added old aliases for DisplayList.get_pixmap() and DisplayList.get_textpage().
"
13276,source/pymupdf.pdf,"• Fixed issue #929. Stabilized removal of JavaScript objects with Document.scrub().
"
13277,source/pymupdf.pdf,"• Fixed issue #927. Removed a loop in the reworked TextWriter.fill_textbox().
"
13278,source/pymupdf.pdf,"• Changed Document.xref_get_keys() and Document.xref_get_key() to also allow accessing the PDF
trailer dictionary. This can be done by using -1 as the xref number argument.
"
13279,source/pymupdf.pdf,"• Added a number of functions for reconstructing the quads for text lines, spans and characters extracted by Page.
get_text() options “dict” and “rawdict”. See recover_quad() and friends.
"
13280,source/pymupdf.pdf,"• Added Tools.unset_quad_corrections() to suppress character quad corrections (occasionally required for
erroneous fonts).
"
13281,source/pymupdf.pdf,"490
Chapter 29. Change Log
"
13282,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13283,source/pymupdf.pdf,"Changes in Version 1.18.9
"
13284,source/pymupdf.pdf,"• Fixed issue #888. Removed ambiguous statements concerning PyMuPDF’s license, which is now clearly stated
to be GNU AGPL V3.
"
13285,source/pymupdf.pdf,"• Fixed issue #895.
"
13286,source/pymupdf.pdf,"• Fixed issue #896. Since v1.17.6 PyMuPDF suppresses the font subset tags and only reports the base fontname
in text extraction outputs “dict” / “json” / “rawdict” / “rawjson”. Now a new global parameter can request the
old behaviour, Tools.set_subset_fontnames().
"
13287,source/pymupdf.pdf,"• Fixed issue #885. Pixmap creation now also works with filenames given as pathlib.Paths.
"
13288,source/pymupdf.pdf,"• Changed Document.subset_fonts(): Text is not rewritten any more and should therefore retain all its
origial properties – like being hidden or being controlled by Optional Content mechanisms.
"
13289,source/pymupdf.pdf,"• Changed TextWriter output to also accept text in right to left mode (Arabian, Hebrew): TextWriter.
fill_textbox(),
TextWriter.append().
These methods now accept a new boolean parameter
right_to_left, which is False by default. Implements #897.
"
13290,source/pymupdf.pdf,"• Changed TextWriter.fill_textbox() to return all lines of text, that did not fit in the given rectangle. Also
changed the default of the warn parameter to no longer print a warning message in overflow situations.
"
13291,source/pymupdf.pdf,"• Added a utility function recover_quad(), which computes the quadrilateral of a span. This function can be
used for correctly marking text extracted with the “dict” or “rawdict” options of Page.get_text().
"
13292,source/pymupdf.pdf,"Changes in Version 1.18.8
"
13293,source/pymupdf.pdf,"This is a bug fix version only. We are publishing early because of the potentially widely used functions.
"
13294,source/pymupdf.pdf,"• Fixed issue #881. Fixed a memory leak in Page.insert_image() when inserting images from files or memory.
"
13295,source/pymupdf.pdf,"• Fixed issue #878. pathlib.Path objects should now correctly handle file path hierarchies.
"
13296,source/pymupdf.pdf,"Changes in Version 1.18.7
"
13297,source/pymupdf.pdf,"• Added an experimental Document.subset_fonts() which reduces the size of eligible fonts based on their use
by text in the PDF. Implements #855.
"
13298,source/pymupdf.pdf,"• Implemented request #870: Document.convert_to_pdf() now also supports PDF documents.
"
13299,source/pymupdf.pdf,"• Renamed Document.write to Document.tobytes() for greater clarity. But the deprecated name remains
available for some time.
"
13300,source/pymupdf.pdf,"• Implemented request #843: Document.tobytes() now supports linearized PDF output. Document.save()
"
13301,source/pymupdf.pdf,"now also supports writing to Python file objects. In addition, the open function now also supports Python file
objects.
"
13302,source/pymupdf.pdf,"• Fixed issue #844.
"
13303,source/pymupdf.pdf,"• Fixed issue #838.
"
13304,source/pymupdf.pdf,"• Fixed issue #823. More logic for better support of OCRed text output (Tesseract, ABBYY).
"
13305,source/pymupdf.pdf,"• Fixed issue #818.
"
13306,source/pymupdf.pdf,"• Fixed issue #814.
"
13307,source/pymupdf.pdf,"• Added Document.get_page_labels() which returns a list of page label definitions of a PDF.
"
13308,source/pymupdf.pdf,"491
"
13309,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13310,source/pymupdf.pdf,"• Added Document.has_annots() and Document.has_links() to check whether these object types are
present anywhere in a PDF.
"
13311,source/pymupdf.pdf,"• Added expert low-level functions to simplify inquiry and modification of PDF object sources: Document.
xref_get_keys() lists the keys of object xref, Document.xref_get_key() returns type and content of
a key, and Document.xref_set_key() modifies the key’s value.
"
13312,source/pymupdf.pdf,"• Added parameter thumbnails to Document.scrub() to also allow removing page thumbnail images.
"
13313,source/pymupdf.pdf,"• Improved documentation for how to add valid text marker annotations for non-horizontal text.
"
13314,source/pymupdf.pdf,"We continued the process of renaming methods and properties from “mixedCase” to “snake_case”. Documentation
usually mentions the new names only, but old, deprecated names remain available for some time.
"
13315,source/pymupdf.pdf,"Changes in Version 1.18.6
"
13316,source/pymupdf.pdf,"• Fixed issue #812.
"
13317,source/pymupdf.pdf,"• Fixed issue #793. Invalid document metadata previously prevented opening some documents at all. This error
has been removed.
"
13318,source/pymupdf.pdf,"• Fixed issue #792. Text search and text extraction will make no rectangle containment checks at all if the default
clip=None is used.
"
13319,source/pymupdf.pdf,"• Fixed issue #785.
"
13320,source/pymupdf.pdf,"• Fixed issue #780. Corrected a parameter check error.
"
13321,source/pymupdf.pdf,"• Fixed issue #779. Fixed typo
"
13322,source/pymupdf.pdf,"• Added an option to set the desired line height for text boxes. Implements #804.
"
13323,source/pymupdf.pdf,"• Changed text position retrieval to better cope with Tesseract’s glyphless font. Implements #803.
"
13324,source/pymupdf.pdf,"• Added an option to choose the prefix of new annotations, fields and links for providing unique annotation ids.
Implements request #807.
"
13325,source/pymupdf.pdf,"• Added getting and setting color and text properties for Table of Contents items for PDFs. Implements #779.
"
13326,source/pymupdf.pdf,"• Added
PDF
page
label
handling:
Page.get_label()
returns
the
page
label,
Document.
get_page_numbers() return all page numbers having a specified label, and Document.set_page_labels()
adds or updates a PDF’s page label definition.
"
13327,source/pymupdf.pdf,"Note:
This version introduces Python type hinting. The goal is to provide each parameter and the return value of
all functions and methods with type information. This still is work in progress although the majority of functions has
already been handled.
"
13328,source/pymupdf.pdf,"Changes in Version 1.18.5
"
13329,source/pymupdf.pdf,"Apart from several fixes, this version also focusses on several minor, but important feature improvements. Among the
latter is a more precise computation of proper line heights and insertion points for writing / inserting text. As opposed
to using font-agnostic constants, these values are now taken from the font’s properties.
"
13330,source/pymupdf.pdf,"Also note that this is the first version which does no longer provide pregenerated wheels for Python versions older than
3.6. PIP also discontinues support for these by end of this year 2020.
"
13331,source/pymupdf.pdf,"• Fixed issue #771. By using “small glyph heights” option, the full page text can be extracted.
"
13332,source/pymupdf.pdf,"• Fixed issue #768.
"
13333,source/pymupdf.pdf,"492
Chapter 29. Change Log
"
13334,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13335,source/pymupdf.pdf,"• Fixed issue #750.
"
13336,source/pymupdf.pdf,"• Fixed issue #739. The “dict”, “rawdict” and corresponding JSON output variants now have two new span keys:
""ascender"" and ""descender"". These floats represent special font properties which can be used to compute
bboxes of spans or characters of exactly fontsize height (as opposed to the default line height). An example
algorithm is shown in section “Span Dictionary” here. Also improved the detection and correction of ill-specified
ascender / descender values encountered in some fonts.
"
13337,source/pymupdf.pdf,"• Added a new, experimental Tools.set_small_glyph_heights() – also in response to issue #739. This
method sets or unsets a global parameter to always compute bboxes with fontsize height. If “on”, text searching
and all text extractions will returned rectangles, bboxes and quads with a smaller height.
"
13338,source/pymupdf.pdf,"• Fixed issue #728.
"
13339,source/pymupdf.pdf,"• Changed fill color logic of ‘Polyline’ annotations: this parameter now only pertains to line end symbols – the
annotation itself can no longer have a fill color. Also addresses issue #727.
"
13340,source/pymupdf.pdf,"• Changed Page.getImageBbox() to also compute the bbox if the image is contained in an XObject.
"
13341,source/pymupdf.pdf,"• Changed Shape.insertTextbox(), resp. Page.insertTextbox(), resp. TextWriter.fillTextbox() to
respect font’s properties “ascender” / “descender” when computing line height and insertion point. This should
no longer lead to line overlaps for multi-line output. These methods used to ignore font specifics and used constant
values instead.
"
13342,source/pymupdf.pdf,"Changes in Version 1.18.4
"
13343,source/pymupdf.pdf,"This version adds several features to support PDF Optional Content. Among other things, this includes OCMDs (Op-
tional Content Membership Dictionaries) with the full scope of “visibility expressions” (PDF key /VE), text insertions
(including the TextWriter class) and drawings.
"
13344,source/pymupdf.pdf,"• Fixed issue #727. Freetext annotations now support an uncolored rectangle when fill_color=None.
"
13345,source/pymupdf.pdf,"• Fixed issue #726. UTF-8 encoding errors are now handled for HTML / XML Page.getText() output.
"
13346,source/pymupdf.pdf,"• Fixed issue #724. Empty values are no longer stored in the PDF /Info metadata dictionary.
"
13347,source/pymupdf.pdf,"• Added new methods Document.set_oc() and Document.get_oc() to set or get optional content references
for existing image and form XObjects. These methods are similar to the same-named methods of Annot.
"
13348,source/pymupdf.pdf,"• Added Document.set_ocmd(), Document.get_ocmd() for handling OCMDs.
"
13349,source/pymupdf.pdf,"• Added Optional Content support for text insertion and drawing.
"
13350,source/pymupdf.pdf,"• Added new method Page.deleteWidget(), which deletes a form field from a page. This is analogous to
deleting annotations.
"
13351,source/pymupdf.pdf,"• Added support for Popup annotations. This includes defining the Popup rectangle and setting the Popup to
open or closed. Methods / attributes Annot.set_popup(), Annot.set_open(), Annot.has_popup, Annot.
is_open, Annot.popup_rect, Annot.popup_xref.
"
13352,source/pymupdf.pdf,"Other changes:
"
13353,source/pymupdf.pdf,"• The naming of methods and attributes in PyMuPDF is far from being satisfactory: we have CamelCases,
mixedCases and lower_case_with_underscores all over the place. With the Annot as the first candidate, we
have started an activity to clean this up step by step, converting to lower case with underscores for methods and
attributes while keeping UPPERCASE for the constants.
"
13354,source/pymupdf.pdf,"– Old names will remain available to prevent code breaks, but they will no longer be mentioned in the
documentation.
"
13355,source/pymupdf.pdf,"– New methods and attributes of all classes will be named according to the new standard.
"
13356,source/pymupdf.pdf,"493
"
13357,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13358,source/pymupdf.pdf,"Changes in Version 1.18.3
"
13359,source/pymupdf.pdf,"As a major new feature, this version introduces support for PDF’s Optional Content concept.
"
13360,source/pymupdf.pdf,"• Fixed issue #714.
"
13361,source/pymupdf.pdf,"• Fixed issue #711.
"
13362,source/pymupdf.pdf,"• Fixed issue #707: if a PDF user password, but no owner password is supplied nor present, then the user password
is also used as the owner password.
"
13363,source/pymupdf.pdf,"• Fixed expand and deflate parameters of methods Document.save() and Document.write(). Individual
image and font compression should now finally work. Addresses issue #713.
"
13364,source/pymupdf.pdf,"• Added a support of PDF optional content. This includes several new Document methods for inquiring and
setting optional content status and adding optional content configurations and groups. In addition, images, form
XObjects and annotations now can be bound to optional content specifications. Resolved issue #709.
"
13365,source/pymupdf.pdf,"Changes in Version 1.18.2
"
13366,source/pymupdf.pdf,"This version contains some interesting improvements for text searching: any number of search hits is now returned and
the hit_max parameter was removed. The new clip parameter in addition allows to restrict the search area. Searching
now detects hyphenations at line breaks and accordingly finds hyphenated words.
"
13367,source/pymupdf.pdf,"• Fixed issue #575: if using quads=False in text searching, then overlapping rectangles on the same line are
joined. Previously, parts of the search string, which belonged to different “marked content” items, each generated
their own rectangle – just as if occurring on separate lines.
"
13368,source/pymupdf.pdf,"• Added Document.isRepaired, which is true if the PDF was repaired on open.
"
13369,source/pymupdf.pdf,"• Added Document.setXmlMetadata() which either updates or creates PDF XML metadata. Implements issue
"
13370,source/pymupdf.pdf,"#691.
"
13371,source/pymupdf.pdf,"• Added Document.getXmlMetadata() returns PDF XML metadata.
"
13372,source/pymupdf.pdf,"• Changed creation of PDF documents: they will now always carry a PDF identification (/ID field) in the docu-
ment trailer. Implements issue #691.
"
13373,source/pymupdf.pdf,"• Changed Page.searchFor(): a new parameter clip is accepted to restrict the search to this rectangle. Cor-
respondingly, the attribute TextPage.rect is now respected by TextPage.search().
"
13374,source/pymupdf.pdf,"• Changed parameter hit_max in Page.searchFor() and TextPage.search() is now obsolete: methods will
return all hits.
"
13375,source/pymupdf.pdf,"• Changed character selection criteria in Page.getText(): a character is now considered to be part of a clip
if its bbox is fully contained. Before this, a non-empty intersection was sufficient.
"
13376,source/pymupdf.pdf,"• Changed Document.scrub() to support a new option redact_images. This addresses issue #697.
"
13377,source/pymupdf.pdf,"Changes in Version 1.18.1
"
13378,source/pymupdf.pdf,"• Fixed issue #692. PyMuPDF now detects and recovers from more cyclic resource dependencies in PDF pages
and for the first time reports them in the MuPDF warnings store.
"
13379,source/pymupdf.pdf,"• Fixed issue #686.
"
13380,source/pymupdf.pdf,"• Added opacity options for the Shape class: Stroke and fill colors can now be set to some transparency
value. This means that all Page draw methods, methods Page.insertText(), Page.insertTextbox(),
Shape.finish(), Shape.insertText(), and Shape.insertTextbox() support two new parameters:
stroke_opacity and fill_opacity.
"
13381,source/pymupdf.pdf,"494
Chapter 29. Change Log
"
13382,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13383,source/pymupdf.pdf,"• Added new parameter mask to Page.insertImage() for optionally providing an external image mask. Re-
solves issue #685.
"
13384,source/pymupdf.pdf,"• Added Annot.soundGet() for extracting the sound of an audio annotation.
"
13385,source/pymupdf.pdf,"Changes in Version 1.18.0
"
13386,source/pymupdf.pdf,"This is the first PyMuPDF version supporting MuPDF v1.18. The focus here is on extending PyMuPDF’s own func-
tionality – apart from bug fixing. Subsequent PyMuPDF patches may address features new in MuPDF.
"
13387,source/pymupdf.pdf,"• Fixed issue #519. This upstream bug occurred occasionally for some pages only and seems to be fixed now:
page layout should no longer be ruined in these cases.
"
13388,source/pymupdf.pdf,"• Fixed issue #675.
"
13389,source/pymupdf.pdf,"– Unsuccessful storage allocations should now always lead to exceptions (circumvention of an upstream bug
intermittently crashing the interpreter).
"
13390,source/pymupdf.pdf,"– Pixmap size is now based on size_t instead of int in C and should be correct even for extremely large
pixmaps.
"
13391,source/pymupdf.pdf,"• Fixed issue #668. Specification of dashes for PDF drawing insertion should now correctly reflect the PDF spec.
"
13392,source/pymupdf.pdf,"• Fixed issue #669. A major source of memory leakage in Page.insert_pdf() has been removed.
"
13393,source/pymupdf.pdf,"• Added keyword “images” to Page.apply_redactions() for fine-controlling the handling of images.
"
13394,source/pymupdf.pdf,"• Added Annot.getText() and Annot.getTextbox(), which offer the same functionality as the Page versions.
"
13395,source/pymupdf.pdf,"• Added key “number” to the block dictionaries of Page.getText() / Annot.getText() for options “dict” and
“rawdict”.
"
13396,source/pymupdf.pdf,"• Added glyph_name_to_unicode() and unicode_to_glyph_name(). Both functions do not really connect
to a specific font and are now independently available, too. The data are now based on the Adobe Glyph List.
"
13397,source/pymupdf.pdf,"• Added convenience functions adobe_glyph_names() and adobe_glyph_unicodes() which return the re-
spective available data.
"
13398,source/pymupdf.pdf,"• Added Page.getDrawings() which returns details of drawing operations on a document page. Works for all
document types.
"
13399,source/pymupdf.pdf,"• Improved performance of Document.insert_pdf(). Multiple object copies are now also suppressed across
multiple separate insertions from the same source. This saves time, memory and target file size. Previously this
mechanism was only active within each single method execution. The feature can also be suppressed with the
new method bool parameter final=1, which is the default.
"
13400,source/pymupdf.pdf,"• For PNG images created from pixmaps, the resolution (dpi) is now automatically set from the respective Pixmap.
xres and Pixmap.yres values.
"
13401,source/pymupdf.pdf,"Changes in Version 1.17.7
"
13402,source/pymupdf.pdf,"• Fixed issue #651. An upstream bug causing interpreter crashes in corner case redaction processings was fixed
by backporting MuPDF changes from their development repo.
"
13403,source/pymupdf.pdf,"• Fixed issue #645. Pixmap top-left coordinates can be set (again) by their own method, Pixmap.set_origin().
"
13404,source/pymupdf.pdf,"• Fixed issue #622. Page.insertImage() again accepts a rect_like parameter.
"
13405,source/pymupdf.pdf,"• Added severeal new methods to improve and speed-up table of contents (TOC) handling. Among other things,
TOC items can now changed or deleted individually – without always replacing the complete TOC. Furthermore,
access to some PDF page attributes is now possible without first loading the page. This has a very significant
impact on the performance of TOC manipulation.
"
13406,source/pymupdf.pdf,"495
"
13407,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13408,source/pymupdf.pdf,"• Added an option to Document.insert_pdf() which allows displaying progress messages. Adresses #640.
"
13409,source/pymupdf.pdf,"• Added Page.getTextbox() which extracts text contained in a rectangle. In many cases, this should obsolete
writing your own script for this type of thing.
"
13410,source/pymupdf.pdf,"• Added new clip parameter to Page.getText() to simplify and speed up text extraction of page sub areas.
"
13411,source/pymupdf.pdf,"• Added TextWriter.appendv() to add text in vertical write mode. Addresses issue #653
"
13412,source/pymupdf.pdf,"Changes in Version 1.17.6
"
13413,source/pymupdf.pdf,"• Fixed issue #605
"
13414,source/pymupdf.pdf,"• Fixed issue #600 – text should now be correctly positioned also for pages with a CropBox smaller than MediaBox.
"
13415,source/pymupdf.pdf,"• Added text span dictionary key origin which contains the lower left coordinate of the first character in that
span.
"
13416,source/pymupdf.pdf,"• Added attribute Font.buffer, a bytes copy of the font file.
"
13417,source/pymupdf.pdf,"• Added parameter sanitize to Page.cleanContents(). Allows switching of sanitization, so only syntax clean-
ing will be done.
"
13418,source/pymupdf.pdf,"Changes in Version 1.17.5
"
13419,source/pymupdf.pdf,"• Fixed issue #561 – second go: certain TextWriter usages with many alternating fonts did not work correctly.
"
13420,source/pymupdf.pdf,"• Fixed issue #566.
"
13421,source/pymupdf.pdf,"• Fixed issue #568.
"
13422,source/pymupdf.pdf,"• Fixed – opacity is now correctly taken from the TextWriter object, if not given in TextWriter.writeText().
"
13423,source/pymupdf.pdf,"• Added a new global attribute fitz_fontdescriptors. Contains information about usable fonts from reposi-
tory pymupdf-fonts.
"
13424,source/pymupdf.pdf,"• Added Font.valid_codepoints() which returns an array of unicode codepoints for which the font has a
glyph.
"
13425,source/pymupdf.pdf,"• Added option text_as_path to Page.getSVGimage(). this implements #580. Generates much smaller SVG
files with parseable text if set to False.
"
13426,source/pymupdf.pdf,"Changes in Version 1.17.4
"
13427,source/pymupdf.pdf,"• Fixed issue #561. Handling of more than 10 Font objects on one page should now work correctly.
"
13428,source/pymupdf.pdf,"• Fixed issue #562. Annotation pixmaps are no longer derived from the page pixmap, thus avoiding unintended
inclusion of page content.
"
13429,source/pymupdf.pdf,"• Fixed issue #559. This MuPDF bug is being temporarily fixed with a pre-version of MuPDF’s next release.
"
13430,source/pymupdf.pdf,"• Added utility function repair_mono_font() for correcting displayed character spacing for some mono-spaced
fonts.
"
13431,source/pymupdf.pdf,"• Added utility method Document.need_appearances() for fine-controlling Form PDF behavior. Addresses
issue #563.
"
13432,source/pymupdf.pdf,"• Added utility function sRGB_to_pdf() to recover the PDF color triple for a given color integer in sRGB format.
"
13433,source/pymupdf.pdf,"• Added utility function sRGB_to_rgb() to recover the (R, G, B) color triple for a given color integer in sRGB
format.
"
13434,source/pymupdf.pdf,"496
Chapter 29. Change Log
"
13435,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13436,source/pymupdf.pdf,"• Added utility function make_table() which delivers table cells for a given rectangle and desired numbers of
columns and rows.
"
13437,source/pymupdf.pdf,"• Added support for optional fonts in repository pymupdf-fonts.
"
13438,source/pymupdf.pdf,"Changes in Version 1.17.3
"
13439,source/pymupdf.pdf,"• Fixed an undocumented issue, which prevented fully cleaning a PDF page when using Page.cleanContents().
"
13440,source/pymupdf.pdf,"• Fixed issue #540. Text extraction for EPUB should again work correctly.
"
13441,source/pymupdf.pdf,"• Fixed issue #548. Documentation now includes LINK_NAMED.
"
13442,source/pymupdf.pdf,"• Added new parameter to control start of text in TextWriter.fillTextbox(). Implements #549.
"
13443,source/pymupdf.pdf,"• Changed documentation of Page.add_redact_annot() to explain the usage of non-builtin fonts.
"
13444,source/pymupdf.pdf,"Changes in Version 1.17.2
"
13445,source/pymupdf.pdf,"• Fixed issue #533.
"
13446,source/pymupdf.pdf,"• Added options to modify ‘Redact’ annotation appearance. Implements #535.
"
13447,source/pymupdf.pdf,"Changes in Version 1.17.1
"
13448,source/pymupdf.pdf,"• Fixed issue #520.
"
13449,source/pymupdf.pdf,"• Fixed issue #525. Vertices for ‘Ink’ annots should now be correct.
"
13450,source/pymupdf.pdf,"• Fixed issue #524. It is now possible to query and set rotation for applicable annotation types.
"
13451,source/pymupdf.pdf,"Also significantly improved inline documentation for better support of interactive help.
"
13452,source/pymupdf.pdf,"Changes in Version 1.17.0
"
13453,source/pymupdf.pdf,"This version is based on MuPDF v1.17. Following are highlights of new and changed features:
"
13454,source/pymupdf.pdf,"• Added extended language support for annotations and widgets: a mixture of Latin, Greece, Russian, Chinese,
Japanese and Korean characters can now be used in ‘FreeText’ annotations and text widgets. No special arrange-
ment is required to use it.
"
13455,source/pymupdf.pdf,"• Faster page access is implemented for documents supporting a “chapter” structure. This applies to EPUB docu-
ments currently. This comes with several new Document methods and changes for Document.loadPage() and
the “indexed” page access doc[n]: In addition to specifying a page number as before, a tuple (chaper, pno) can
be specified to identify the desired page.
"
13456,source/pymupdf.pdf,"• Changed: Improved support of redaction annotations: images overlapped by redactions are permanantly mod-
ified by erasing the overlap areas. Also links are removed if overlapped by redactions. This is now fully in sync
with PDF specifications.
"
13457,source/pymupdf.pdf,"Other changes:
"
13458,source/pymupdf.pdf,"• Changed TextWriter.writeText() to support the “morph” parameter.
"
13459,source/pymupdf.pdf,"• Added methods Rect.morph(), IRect.morph(), and Quad.morph(), which return a new Quad.
"
13460,source/pymupdf.pdf,"• Changed Page.add_freetext_annot() to support text alignment via a new “align” parameter.
"
13461,source/pymupdf.pdf,"• Fixed issue #508. Improved image rectangle calculation to hopefully deliver correct values in most if not all
cases.
"
13462,source/pymupdf.pdf,"497
"
13463,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13464,source/pymupdf.pdf,"• Fixed issue #502.
"
13465,source/pymupdf.pdf,"• Fixed issue #500. Document.convertToPDF() should no longer cause memory leaks.
"
13466,source/pymupdf.pdf,"• Fixed issue #496. Annotations and widgets / fields are now added or modified using the coordinates of the
unrotated page. This behavior is now in sync with other methods modifying PDF pages.
"
13467,source/pymupdf.pdf,"• Added Page.rotationMatrix and Page.derotationMatrix to support coordinate transformations between
the rotated and the original versions of a PDF page.
"
13468,source/pymupdf.pdf,"Potential code breaking changes:
"
13469,source/pymupdf.pdf,"• The
private
method
Page._getTransformation()
has
been
removed.
Use
the
public
Page.
transformationMattrix instead.
"
13470,source/pymupdf.pdf,"Changes in Version 1.16.18
"
13471,source/pymupdf.pdf,"This version introduces several new features around PDF text output. The motivation is to simplify this task, while at
the same time offering extending features.
"
13472,source/pymupdf.pdf,"One major achievement is using MuPDF’s capabilities to dynamically choosing fallback fonts whenever a character can-
not be found in the current one. This seemlessly works for Base-14 fonts in combination with CJK fonts (China, Japan,
Korea). So a text may contain any combination of characters from the Latin, Greek, Russian, Chinese, Japanese and
Korean languages.
"
13473,source/pymupdf.pdf,"• Fixed issue #493. Pixmap(doc, xref) should now again correctly resemble the loaded image object.
"
13474,source/pymupdf.pdf,"• Fixed issue #488. Widget names are now modifiable.
"
13475,source/pymupdf.pdf,"• Added new class Font which represents a font.
"
13476,source/pymupdf.pdf,"• Added new class TextWriter which serves as a container for text to be written on a page.
"
13477,source/pymupdf.pdf,"• Added Page.writeText() to write one or more TextWriter objects to the page.
"
13478,source/pymupdf.pdf,"Changes in Version 1.16.17
"
13479,source/pymupdf.pdf,"• Fixed issue #479. PyMuPDF should now more correctly report image resolutions. This applies to both, images
(either from images files or extracted from PDF documents) and pixmaps created from images.
"
13480,source/pymupdf.pdf,"• Added Pixmap.set_dpi() which sets the image resolution in x and y directions.
"
13481,source/pymupdf.pdf,"Changes in Version 1.16.16
"
13482,source/pymupdf.pdf,"• Fixed issue #477.
"
13483,source/pymupdf.pdf,"• Fixed issue #476.
"
13484,source/pymupdf.pdf,"• Changed annotation line end symbol coloring and fixed an error coloring the interior of ‘Polyline’ /’Polygon’
annotations.
"
13485,source/pymupdf.pdf,"Changes in Version 1.16.14
"
13486,source/pymupdf.pdf,"• Changed text marker annotations to accept parameters beyond just quadrilaterals such that now text lines be-
tween two given points can be marked.
"
13487,source/pymupdf.pdf,"• Added Document.scrub() which removes potentially sensitive data from a PDF. Implements #453.
"
13488,source/pymupdf.pdf,"• Added Annot.blendMode() which returns the blend mode of annotations.
"
13489,source/pymupdf.pdf,"498
Chapter 29. Change Log
"
13490,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13491,source/pymupdf.pdf,"• Added Annot.setBlendMode() to set the annotation’s blend mode. This resolves issue #416.
"
13492,source/pymupdf.pdf,"• Changed Annot.update() to accept additional parameters for setting blend mode and opacity.
"
13493,source/pymupdf.pdf,"• Added advanced graphics features to control the anti-aliasing values, Tools.set_aa_level(). Resolves
"
13494,source/pymupdf.pdf,"#467
"
13495,source/pymupdf.pdf,"• Fixed issue #474.
"
13496,source/pymupdf.pdf,"• Fixed issue #466.
"
13497,source/pymupdf.pdf,"Changes in Version 1.16.13
"
13498,source/pymupdf.pdf,"• Added Document.getPageXObjectList() which returns a list of Form XObjects of the page.
"
13499,source/pymupdf.pdf,"• Added Page.setMediaBox() for changing the physical PDF page size.
"
13500,source/pymupdf.pdf,"• Added
Page
methods
which
have
been
internal
before:
Page.cleanContents()
(=
Page.
_cleanContents()), Page.getContents() (= Page._getContents()), Page.getTransformation()
(= Page._getTransformation()).
"
13501,source/pymupdf.pdf,"Changes in Version 1.16.12
"
13502,source/pymupdf.pdf,"• Fixed issue #447
"
13503,source/pymupdf.pdf,"• Fixed issue #461.
"
13504,source/pymupdf.pdf,"• Fixed issue #397.
"
13505,source/pymupdf.pdf,"• Fixed issue #463.
"
13506,source/pymupdf.pdf,"• Added JavaScript support to PDF form fields, thereby fixing #454.
"
13507,source/pymupdf.pdf,"• Added a new annotation method Annot.delete_responses(), which removes ‘Popup’ and response annota-
tions referring to the current one. Mainly serves data protection purposes.
"
13508,source/pymupdf.pdf,"• Added a new form field method Widget.reset(), which resets the field value to its default.
"
13509,source/pymupdf.pdf,"• Changed and extended handling of redactions: images and XObjects are removed if contained in a redaction
rectangle. Any partial only overlaps will just be covered by the redaction background color. Now an overlay text
can be specified to be inserted in the rectangle area to take the place the deleted original text. This resolves
#434.
"
13510,source/pymupdf.pdf,"Changes in Version 1.16.11
"
13511,source/pymupdf.pdf,"• Added
Support
for
redaction
annotations
via
method
Page.add_redact_annot()
and
Page.
apply_redactions().
"
13512,source/pymupdf.pdf,"• Fixed issue #426 (“PolygonAnnotation in 1.16.10 version”).
"
13513,source/pymupdf.pdf,"• Fixed documentation only issues #443 and #444.
"
13514,source/pymupdf.pdf,"Changes in Version 1.16.10
"
13515,source/pymupdf.pdf,"• Fixed issue #421 (“annot.set_rect(rect) has no effect on text Annotation”)
"
13516,source/pymupdf.pdf,"• Fixed issue #417 (“Strange behavior for page.deleteAnnot on 1.16.9 compare to 1.13.20”)
"
13517,source/pymupdf.pdf,"• Fixed issue #415 (“Annot.setOpacity throws mupdf warnings”)
"
13518,source/pymupdf.pdf,"• Changed all “add annotation / widget” methods to store a unique name in the /NM PDF key.
"
13519,source/pymupdf.pdf,"499
"
13520,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13521,source/pymupdf.pdf,"• Changed Annot.setInfo() to also accept direct parameters in addition to a dictionary.
"
13522,source/pymupdf.pdf,"• Changed Annot.info to now also show the annotation’s unique id (/NM PDF key) if present.
"
13523,source/pymupdf.pdf,"• Added Page.annot_names() which returns a list of all annotation names (/NM keys).
"
13524,source/pymupdf.pdf,"• Added Page.load_annot() which loads an annotation given its unique id (/NM key).
"
13525,source/pymupdf.pdf,"• Added Document.reload_page() which provides a new copy of a page after finishing any pending updates to
it.
"
13526,source/pymupdf.pdf,"Changes in Version 1.16.9
"
13527,source/pymupdf.pdf,"• Fixed #412 (“Feature Request: Allow controlling whether TOC entries should be collapsed”)
"
13528,source/pymupdf.pdf,"• Fixed #411 (“Seg Fault with page.firstWidget”)
"
13529,source/pymupdf.pdf,"• Fixed #407 (“Annot.setOpacity trouble”)
"
13530,source/pymupdf.pdf,"• Changed
methods
Annot.setBorder(),
Annot.setColors(),
Link.setBorder(),
and
Link.
setColors() to also accept direct parameters, and not just cumbersome dictionaries.
"
13531,source/pymupdf.pdf,"Changes in Version 1.16.8
"
13532,source/pymupdf.pdf,"• Added several new methods to the Document class, which make dealing with PDF low-level struc-
tures easier.
I also decided to provide them as “normal” methods (as opposed to private ones starting
with an underscore “_”).
These are Document.xrefObject(), Document.xrefStream(), Document.
xrefStreamRaw(), Document.PDFTrailer(), Document.PDFCatalog(), Document.metadataXML(),
Document.updateObject(), Document.updateStream().
"
13533,source/pymupdf.pdf,"• Added Tools.mupdf_disply_errors() which sets the display of mupdf errors on sys.stderr.
"
13534,source/pymupdf.pdf,"• Added a commandline facility. This a major new feature: you can now invoke several utility functions via
“python -m fitz ...”. It should obsolete the need for many of the most trivial scripts. Please refer to Module fitz.
"
13535,source/pymupdf.pdf,"Changes in Version 1.16.7
"
13536,source/pymupdf.pdf,"Minor changes to better synchronize the binary image streams of TextPage image blocks and Document.
extractImage() images.
"
13537,source/pymupdf.pdf,"• Fixed issue #394 (“PyMuPDF Segfaults when using TOOLS.mupdf_warnings()”).
"
13538,source/pymupdf.pdf,"• Changed redirection of MuPDF error messages: apart from writing them to Python sys.stderr, they are now also
stored with the MuPDF warnings.
"
13539,source/pymupdf.pdf,"• Changed Tools.mupdf_warnings() to automatically empty the store (if not deactivated via a parameter).
"
13540,source/pymupdf.pdf,"• Changed Page.getImageBbox() to return an infinite rectangle if the image could not be located on the page
– instead of raising an exception.
"
13541,source/pymupdf.pdf,"Changes in Version 1.16.6
"
13542,source/pymupdf.pdf,"• Fixed issue #390 (“Incomplete deletion of annotations”).
"
13543,source/pymupdf.pdf,"• Changed Page.searchFor() / Document.searchPageFor() to also support the flags parameter, which con-
trols the data included in a TextPage.
"
13544,source/pymupdf.pdf,"500
Chapter 29. Change Log
"
13545,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13546,source/pymupdf.pdf,"• Changed Document.getPageImageList(), Document.getPageFontList() and their Page counterparts to
support a new parameter full. If true, the returned items will contain the xref of the Form XObject where the
font or image is referenced.
"
13547,source/pymupdf.pdf,"Changes in Version 1.16.5
"
13548,source/pymupdf.pdf,"More performance improvements for text extraction.
"
13549,source/pymupdf.pdf,"• Fixed second part of issue #381 (see item in v1.16.4).
"
13550,source/pymupdf.pdf,"• Added Page.getTextPage(), so it is no longer required to create an intermediate display list for text extrac-
tions. Page level wrappers for text extraction and text searching are now based on this, which should improve
performance by ca. 5%.
"
13551,source/pymupdf.pdf,"Changes in Version 1.16.4
"
13552,source/pymupdf.pdf,"• Fixed issue #381 (“TextPage.extractDICT ... failed ... after upgrading ... to 1.16.3”)
"
13553,source/pymupdf.pdf,"• Added method Document.pages() which delivers a generator iterator over a page range.
"
13554,source/pymupdf.pdf,"• Added method Page.links() which delivers a generator iterator over the links of a page.
"
13555,source/pymupdf.pdf,"• Added method Page.annots() which delivers a generator iterator over the annotations of a page.
"
13556,source/pymupdf.pdf,"• Added method Page.widgets() which delivers a generator iterator over the form fields of a page.
"
13557,source/pymupdf.pdf,"• Changed Document.is_form_pdf to now contain the number of widgets, and False if not a PDF or this number
is zero.
"
13558,source/pymupdf.pdf,"Changes in Version 1.16.3
"
13559,source/pymupdf.pdf,"Minor changes compared to version 1.16.2. The code of the “dict” and “rawdict” variants of Page.getText() has been
ported to C which has greatly improved their performance. This improvement is mostly noticeable with text-oriented
documents, where they now should execute almost two times faster.
"
13560,source/pymupdf.pdf,"• Fixed issue #369 (“mupdf: cmsCreateTransform failed”) by removing ICC colorspace support.
"
13561,source/pymupdf.pdf,"• Changed Page.getText() to accept additional keywords “blocks” and “words”. These will deliver the results
of Page.getTextBlocks() and Page.getTextWords(), respectively. So all text extraction methods are now
available via a uniform API. Correspondingly, there are now new methods TextPage.extractBLOCKS() and
TextPage.extractWords().
"
13562,source/pymupdf.pdf,"• Changed Page.getText() to default bit indicator TEXT_INHIBIT_SPACES to off. Insertion of additional
spaces is not suppressed by default.
"
13563,source/pymupdf.pdf,"Changes in Version 1.16.2
"
13564,source/pymupdf.pdf,"• Changed text extraction methods of Page to allow detail control of the amount of extracted data.
"
13565,source/pymupdf.pdf,"• Added planish_line() which maps a given line (defined as a pair of points) to the x-axis.
"
13566,source/pymupdf.pdf,"• Fixed an issue (w/o Github number) which brought down the interpreter when encountering certain non-UTF-8
encodable characters while using Page.getText() with te “dict” option.
"
13567,source/pymupdf.pdf,"• Fixed issue #362 (“Memory Leak with getText(‘rawDICT’)”).
"
13568,source/pymupdf.pdf,"Changes in Version 1.16.1
"
13569,source/pymupdf.pdf,"501
"
13570,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13571,source/pymupdf.pdf,"• Added property Quad.is_convex which checks whether a line is contained in the quad if it connects two points
of it.
"
13572,source/pymupdf.pdf,"• Changed Document.insert_pdf() to now allow dropping or including links and annotations independently
during the copy. Fixes issue #352 (“Corrupt PDF data and ...”), which seemed to intermittently occur when
using the method for some problematic PDF files.
"
13573,source/pymupdf.pdf,"• Fixed a bug which, in matrix division using the syntax “m1/m2”, caused matrix “m1” to be replaced by the
result instead of delivering a new matrix.
"
13574,source/pymupdf.pdf,"• Fixed issue #354 (“SyntaxWarning with Python 3.8”). We now always use “==” for literals (instead of the “is”
Python keyword).
"
13575,source/pymupdf.pdf,"• Fixed issue #353 (“mupdf version check”), to no longer refuse the import when there are only patch level devi-
ations from MuPDF.
"
13576,source/pymupdf.pdf,"Changes in Version 1.16.0
"
13577,source/pymupdf.pdf,"This major new version of MuPDF comes with several nice new or changed features. Some of them imply programming
API changes, however. This is a synopsis of what has changed:
"
13578,source/pymupdf.pdf,"• PDF document encryption and decryption is now fully supported. This includes setting permissions, pass-
words (user and owner passwords) and the desired encryption method.
"
13579,source/pymupdf.pdf,"• In response to the new encryption features, PyMuPDF returns an integer (ie. a combination of bits) for document
permissions, and no longer a dictionary.
"
13580,source/pymupdf.pdf,"• Redirection of MuPDF errors and warnings is now natively supported. PyMuPDF redirects error messages from
MuPDF to sys.stderr and no longer buffers them. Warnings continue to be buffered and will not be displayed.
Functions exist to access and reset the warnings buffer.
"
13581,source/pymupdf.pdf,"• Annotations are now only supported for PDF.
"
13582,source/pymupdf.pdf,"• Annotations and widgets (form fields) are now separate object chains on a page (although widgets technically
still are PDF annotations). This means, that you will never encounter widgets when using Page.firstAnnot
or Annot.next(). You must use Page.firstWidget and Widget.next() to access form fields.
"
13583,source/pymupdf.pdf,"• As part of MuPDF’s changes regarding widgets, only the following four fonts are supported, when adding or
changing form fields: Courier, Helvetica, Times-Roman and ZapfDingBats.
"
13584,source/pymupdf.pdf,"List of change details:
"
13585,source/pymupdf.pdf,"• Added Document.can_save_incrementally() which checks conditions that are preventing use of option
incremental=True of Document.save().
"
13586,source/pymupdf.pdf,"• Added Page.firstWidget which points to the first field on a page.
"
13587,source/pymupdf.pdf,"• Added Page.getImageBbox() which returns the rectangle occupied by an image shown on the page.
"
13588,source/pymupdf.pdf,"• Added Annot.setName() which lets you change the (icon) name field.
"
13589,source/pymupdf.pdf,"• Added outputting the text color in Page.getText(): the “dict”, “rawdict” and “xml” options now also show
the color in sRGB format.
"
13590,source/pymupdf.pdf,"• Changed Document.permissions to now contain an integer of bool indicators – was a dictionary before.
"
13591,source/pymupdf.pdf,"• Changed Document.save(), Document.write(), which now fully support password-based decryption and
encryption of PDF files.
"
13592,source/pymupdf.pdf,"• Changed the names of all Python constants related to annotations and widgets. Please make sure to consult the
Constants and Enumerations chapter if your script is dealing with these two classes. This decision goes back
to the dropped support for non-PDF annotations. The old names (starting with “ANNOT_*” or “WIDGET_*”)
will be available as deprecated synonyms.
"
13593,source/pymupdf.pdf,"502
Chapter 29. Change Log
"
13594,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13595,source/pymupdf.pdf,"• Changed font support for widgets: only Cour (Courier), Helv (Helvetica, default), TiRo (Times-Roman) and
ZaDb (ZapfDingBats) are accepted when adding or changing form fields. Only the plain versions are possible
– not their italic or bold variations. Reading widgets, however will show its original font.
"
13596,source/pymupdf.pdf,"• Changed the name of the warnings buffer to Tools.mupdf_warnings() and the function to empty this buffer
is now called Tools.reset_mupdf_warnings().
"
13597,source/pymupdf.pdf,"• Changed Page.getPixmap(), Document.get_page_pixmap(): a new bool argument annots can now be
used to suppress the rendering of annotations on the page.
"
13598,source/pymupdf.pdf,"• Changed Page.add_file_annot() and Page.add_text_annot() to enable setting an icon.
"
13599,source/pymupdf.pdf,"• Removed widget-related methods and attributes from the Annot object.
"
13600,source/pymupdf.pdf,"• Removed Document attributes openErrCode, openErrMsg, and Tools attributes / methods stderr, reset_stderr,
stdout, and reset_stdout.
"
13601,source/pymupdf.pdf,"• Removed thirdparty zlib dependency in PyMuPDF: there are now compression functions available in MuPDF.
Source installers of PyMuPDF may now omit this extra installation step.
"
13602,source/pymupdf.pdf,"No version published for MuPDF v1.15.0
"
13603,source/pymupdf.pdf,"Changes in Version 1.14.20 / 1.14.21
"
13604,source/pymupdf.pdf,"• Changed text marker annotations to support multiple rectangles / quadrilaterals. This fixes issue #341 (“Question
: How to addhighlight so that a string spread across more than a line is covered by one highlight?”) and similar
(#285).
"
13605,source/pymupdf.pdf,"• Fixed issue #331 (“Importing PyMuPDF changes warning filtering behaviour globally”).
"
13606,source/pymupdf.pdf,"Changes in Version 1.14.19
"
13607,source/pymupdf.pdf,"• Fixed issue #319 (“InsertText function error when use custom font”).
"
13608,source/pymupdf.pdf,"• Added new method Document.get_sigflags() which returns information on whether a PDF is signed. Re-
solves issue #326 (“How to detect signature in a form pdf?”).
"
13609,source/pymupdf.pdf,"Changes in Version 1.14.17
"
13610,source/pymupdf.pdf,"• Added Document.fullcopyPage() to make full page copies within a PDF (not just copied references as
Document.copyPage() does).
"
13611,source/pymupdf.pdf,"• Changed Page.getPixmap(), Document.get_page_pixmap() now use alpha=False as default.
"
13612,source/pymupdf.pdf,"• Changed text extraction: the span dictionary now (again) contains its rectangle under the bbox key.
"
13613,source/pymupdf.pdf,"• Changed Document.movePage() and Document.copyPage() to use direct functions instead of wrapping
"
13614,source/pymupdf.pdf,"Document.select() – similar to Document.delete_page() in v1.14.16.
"
13615,source/pymupdf.pdf,"Changes in Version 1.14.16
"
13616,source/pymupdf.pdf,"• Changed Document methods around PDF /EmbeddedFiles to no longer use MuPDF’s “portfolio” functions.
That support will be dropped in MuPDF v1.15 – therefore another solution was required.
"
13617,source/pymupdf.pdf,"• Changed Document.embfile_Count() to be a function (was an attribute).
"
13618,source/pymupdf.pdf,"• Added new method Document.embfile_Names() which returns a list of names of embedded files.
"
13619,source/pymupdf.pdf,"503
"
13620,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13621,source/pymupdf.pdf,"• Changed Document.delete_page() and Document.delete_pages() to internally no longer use
"
13622,source/pymupdf.pdf,"Document.select(), but instead use functions to perform the deletion directly. As it has turned out, the
Document.select() method yields invalid outline trees (tables of content) for very complex PDFs and so-
phisticated use of annotations.
"
13623,source/pymupdf.pdf,"Changes in Version 1.14.15
"
13624,source/pymupdf.pdf,"• Fixed issues #301 (“Line cap and Line join”), #300 (“How to draw a shape without outlines”) and #298
(“utils.updateRect exception”). These bugs pertain to drawing shapes with PyMuPDF. Drawing shapes with-
out any border is fully supported. Line cap styles and line line join style are now differentiated and support all
possible PDF values (0, 1, 2) instead of just being a bool. The previous parameter roundCap is deprecated in
favor of lineCap and lineJoin and will be deleted in the next release.
"
13625,source/pymupdf.pdf,"• Fixed issue #290 (“Memory Leak with getText(‘rawDICT’)”). This bug caused memory not being (completely)
freed after invoking the “dict”, “rawdict” and “json” versions of Page.getText().
"
13626,source/pymupdf.pdf,"Changes in Version 1.14.14
"
13627,source/pymupdf.pdf,"• Added new low-level function ImageProperties() to determine a number of characteristics for an image.
"
13628,source/pymupdf.pdf,"• Added new low-level function Document.is_stream(), which checks whether an object is of stream type.
"
13629,source/pymupdf.pdf,"• Changed low-level functions Document._getXrefString() and Document._getTrailerString() now by
default return object definitions in a formatted form which makes parsing easy.
"
13630,source/pymupdf.pdf,"Changes in Version 1.14.13
"
13631,source/pymupdf.pdf,"• Changed methods working with binary input: while ever supporting bytes and bytearray objects, they now also
accept io.BytesIO input, using their getvalue() method. This pertains to document creation, embedded files,
FileAttachment annotations, pixmap creation and others. Fixes issue #274 (“Segfault when using BytesIO as a
stream for insertImage”).
"
13632,source/pymupdf.pdf,"• Fixed issue #278 (“Is insertImage(keep_proportion=True) broken?”). Images are now correctly presented when
keeping aspect ratio.
"
13633,source/pymupdf.pdf,"Changes in Version 1.14.12
"
13634,source/pymupdf.pdf,"• Changed the draw methods of Page and Shape to support not only RGB, but also GRAY and CMYK colorspaces.
This solves issue #270 (“Is there a way to use CMYK color to draw shapes?”). This change also applies to text
insertion methods of Shape, resp. Page.
"
13635,source/pymupdf.pdf,"• Fixed issue #269 (“AttributeError in Document.insert_page()”), which occurred when using Document.
insert_page() with text insertion.
"
13636,source/pymupdf.pdf,"Changes in Version 1.14.11
"
13637,source/pymupdf.pdf,"• Changed Page.show_pdf_page() to always position the source rectangle centered in the target. This method
now also supports rotation by arbitrary angles. The argument reuse_xref has been deprecated: prevention of
duplicates is now handled internally.
"
13638,source/pymupdf.pdf,"• Changed Page.insertImage() to support rotated display of the image and keeping the aspect ratio. Only
rotations by multiples of 90 degrees are supported here.
"
13639,source/pymupdf.pdf,"504
Chapter 29. Change Log
"
13640,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13641,source/pymupdf.pdf,"• Fixed issue #265 (“TypeError: insertText() got an unexpected keyword argument ‘idx’”). This issue only oc-
curred when using Document.insert_page() with also inserting text.
"
13642,source/pymupdf.pdf,"Changes in Version 1.14.10
"
13643,source/pymupdf.pdf,"• Changed Page.show_pdf_page() to support rotation of the source rectangle. Fixes #261 (“Cannot rotate
insterted pages”).
"
13644,source/pymupdf.pdf,"• Fixed a bug in Page.insertImage() which prevented insertion of multiple images provided as streams.
"
13645,source/pymupdf.pdf,"Changes in Version 1.14.9
"
13646,source/pymupdf.pdf,"• Added new low-level method Document._getTrailerString(), which returns the trailer object of a PDF.
This is much like Document._getXrefString() except that the PDF trailer has no / needs no xref to identify
it.
"
13647,source/pymupdf.pdf,"• Added new parameters for text insertion methods. You can now set stroke and fill colors of glyphs (text charac-
ters) independently, as well as the thickness of the glyph border. A new parameter render_mode controls the use
of these colors, and whether the text should be visible at all.
"
13648,source/pymupdf.pdf,"• Fixed issue #258 (“Copying image streams to new PDF without size increase”): For JPX images embedded in a
PDF, Document.extractImage() will now return them in their original format. Previously, the MuPDF base
library was used, which returns them in PNG format (entailing a massive size increase).
"
13649,source/pymupdf.pdf,"• Fixed issue #259 (“Morphing text to fit inside rect”). Clarified use of get_text_length() and removed extra
line breaks for long words.
"
13650,source/pymupdf.pdf,"Changes in Version 1.14.8
"
13651,source/pymupdf.pdf,"• Added Pixmap.set_rect() to change the pixel values in a rectangle. This is also an alternative to setting the
color of a complete pixmap (Pixmap.clear_with()).
"
13652,source/pymupdf.pdf,"• Fixed an image extraction issue with JBIG2 (monochrome) encoded PDF images. The issue occurred in Page.
getText() (parameters “dict” and “rawdict”) and in Document.extractImage() methods.
"
13653,source/pymupdf.pdf,"• Fixed an issue with not correctly clearing a non-alpha Pixmap (Pixmap.clear_with()).
"
13654,source/pymupdf.pdf,"• Fixed an issue with not correctly inverting colors of a non-alpha Pixmap (Pixmap.invert_irect()).
"
13655,source/pymupdf.pdf,"Changes in Version 1.14.7
"
13656,source/pymupdf.pdf,"• Added Pixmap.set_pixel() to change one pixel value.
"
13657,source/pymupdf.pdf,"• Added documentation for image conversion in the FAQ.
"
13658,source/pymupdf.pdf,"• Added new function get_text_length() to determine the string length for a given font.
"
13659,source/pymupdf.pdf,"• Added Postscript image output (changed Pixmap.save() and Pixmap.tobytes()).
"
13660,source/pymupdf.pdf,"• Changed Pixmap.save() and Pixmap.tobytes() to ensure valid combinations of colorspace, alpha and out-
put format.
"
13661,source/pymupdf.pdf,"• Changed Pixmap.save(): the desired format is now inferred from the filename.
"
13662,source/pymupdf.pdf,"• Changed FreeText annotations can now have a transparent background - see Annot.update().
"
13663,source/pymupdf.pdf,"Changes in Version 1.14.5
"
13664,source/pymupdf.pdf,"505
"
13665,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13666,source/pymupdf.pdf,"• Changed: Shape methods now strictly use the transformation matrix of the Page – instead of “manually” calcu-
lating locations.
"
13667,source/pymupdf.pdf,"• Added method Pixmap.pixel() which returns the pixel value (a list) for given pixel coordinates.
"
13668,source/pymupdf.pdf,"• Added method Pixmap.tobytes() which returns a bytes object representing the pixmap in a variety of formats.
Previously, this could be done for PNG outputs only (Pixmap.tobytes()).
"
13669,source/pymupdf.pdf,"• Changed: output of methods Pixmap.save() and (the new) Pixmap.tobytes() may now also be PSD (Adobe
Photoshop Document).
"
13670,source/pymupdf.pdf,"• Added method Shape.drawQuad() which draws a Quad.
This actually is a shorthand for a Shape.
drawPolyline() with the edges of the quad.
"
13671,source/pymupdf.pdf,"• Changed method Shape.drawOval(): the argument can now be either a rectangle (rect_like) or a quadri-
lateral (quad_like).
"
13672,source/pymupdf.pdf,"Changes in Version 1.14.4
"
13673,source/pymupdf.pdf,"• Fixes issue #239 “Annotation coordinate consistency”.
"
13674,source/pymupdf.pdf,"Changes in Version 1.14.3
"
13675,source/pymupdf.pdf,"This patch version contains minor bug fixes and CJK font output support.
"
13676,source/pymupdf.pdf,"• Added support for the four CJK fonts as PyMuPDF generated text output. This pertains to methods Page.
insertFont(), Shape.insertText(), Shape.insertTextbox(), and corresponding Page methods. The
new fonts are available under “reserved” fontnames “china-t” (traditional Chinese), “china-s” (simplified Chi-
nese), “japan” (Japanese), and “korea” (Korean).
"
13677,source/pymupdf.pdf,"• Added full support for the built-in fonts ‘Symbol’ and ‘Zapfdingbats’.
"
13678,source/pymupdf.pdf,"• Changed: The 14 standard fonts can now each be referenced by a 4-letter abbreviation.
"
13679,source/pymupdf.pdf,"Changes in Version 1.14.1
"
13680,source/pymupdf.pdf,"This patch version contains minor performance improvements.
"
13681,source/pymupdf.pdf,"• Added support for Document filenames given as pathlib object by using the Python str() function.
"
13682,source/pymupdf.pdf,"Changes in Version 1.14.0
"
13683,source/pymupdf.pdf,"To support MuPDF v1.14.0, massive changes were required in PyMuPDF – most of them purely technical, with little
visibility to developers. But there are also quite a lot of interesting new and improved features. Following are the
details:
"
13684,source/pymupdf.pdf,"• Added “ink” annotation.
"
13685,source/pymupdf.pdf,"• Added “rubber stamp” annotation.
"
13686,source/pymupdf.pdf,"• Added “squiggly” text marker annotation.
"
13687,source/pymupdf.pdf,"• Added new class Quad (quadrilateral or tetragon) – which represents a general four-sided shape in the plane. The
special subtype of rectangular, non-empty tetragons is used in text marker annotations and as returned objects in
text search methods.
"
13688,source/pymupdf.pdf,"• Added a new option “decrypt” to Document.save() and Document.write(). Now you can keep encryption
when saving a password protected PDF.
"
13689,source/pymupdf.pdf,"506
Chapter 29. Change Log
"
13690,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13691,source/pymupdf.pdf,"• Added suppression and redirection of unsolicited messages issued by the underlying C-library MuPDF. Consult
"
13692,source/pymupdf.pdf,"Redirecting Error and Warning Messages for details.
"
13693,source/pymupdf.pdf,"• Changed: Changes to annotations now always require Annot.update() to become effective.
"
13694,source/pymupdf.pdf,"• Changed free text annotations to support the full Latin character set and range of appearance options.
"
13695,source/pymupdf.pdf,"• Changed text searching, Page.searchFor(), to optionally return Quad instead Rect objects surrounding each
search hit.
"
13696,source/pymupdf.pdf,"• Changed plain text output: we now add a n to each line if it does not itself end with this character.
"
13697,source/pymupdf.pdf,"• Fixed issue 211 (“Something wrong in the doc”).
"
13698,source/pymupdf.pdf,"• Fixed issue 213 (“Rewritten outline is displayed only by mupdf-based applications”).
"
13699,source/pymupdf.pdf,"• Fixed issue 214 (“PDF decryption GONE!”).
"
13700,source/pymupdf.pdf,"• Fixed issue 215 (“Formatting of links added with pyMuPDF”).
"
13701,source/pymupdf.pdf,"• Fixed issue 217 (“extraction through json is failing for my pdf”).
"
13702,source/pymupdf.pdf,"Behind the curtain, we have changed the implementation of geometry objects: they now purely exist in Python and no
longer have “shadow” twins on the C-level (in MuPDF). This has improved processing speed in that area by more than
a factor of two.
"
13703,source/pymupdf.pdf,"Because of the same reason, most methods involving geometry parameters now also accept the corresponding Python
sequence. For example, in method “page.show_pdf_page(rect, ...)” parameter rect may now be any rect_like
sequence.
"
13704,source/pymupdf.pdf,"We also invested considerable effort to further extend and improve the FAQ chapter.
"
13705,source/pymupdf.pdf,"Changes in Version 1.13.19
"
13706,source/pymupdf.pdf,"This version contains some technical / performance improvements and bug fixes.
"
13707,source/pymupdf.pdf,"• Changed memory management: for Python 3 builds, Python memory management is exclusively used across
all C-level code (i.e. no more native malloc() in MuPDF code or PyMuPDF interface code). This leads to
improved memory usage profiles and also some runtime improvements: we have seen > 2% shorter runtimes for
text extractions and pixmap creations (on Windows machines only to date).
"
13708,source/pymupdf.pdf,"• Fixed an error occurring in Python 2.7,
which crashed the interpreter when using TextPage.
extractRAWDICT() (= Page.getText(“rawdict”)).
"
13709,source/pymupdf.pdf,"• Fixed an error occurring in Python 2.7, when creating link destinations.
"
13710,source/pymupdf.pdf,"• Extended the FAQ chapter with more examples.
"
13711,source/pymupdf.pdf,"Changes in Version 1.13.18
"
13712,source/pymupdf.pdf,"• Added method TextPage.extractRAWDICT(), and a corresponding new string parameter “rawdict” to method
Page.getText(). It extracts text and images from a page in Python dict form like TextPage.extractDICT(),
but with the detail level of TextPage.extractXML(), which is position information down to each single char-
acter.
"
13713,source/pymupdf.pdf,"Changes in Version 1.13.17
"
13714,source/pymupdf.pdf,"• Fixed an error that intermittently caused an exception in Page.show_pdf_page(), when pages from many
different source PDFs were shown.
"
13715,source/pymupdf.pdf,"507
"
13716,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13717,source/pymupdf.pdf,"• Changed method Document.extractImage() to now return more meta information about the extracted im-
gage. Also, its performance has been greatly improved. Several demo scripts have been changed to make use of
this method.
"
13718,source/pymupdf.pdf,"• Changed method Document._getXrefStream() to now return None if the object is no stream and no longer
raise an exception if otherwise.
"
13719,source/pymupdf.pdf,"• Added method Document._deleteObject() which deletes a PDF object identified by its xref. Only to be
used by the experienced PDF expert.
"
13720,source/pymupdf.pdf,"• Added a method paper_rect() which returns a Rect for a supplied paper format string.
Example:
fitz.paper_rect(“letter”) = fitz.Rect(0.0, 0.0, 612.0, 792.0).
"
13721,source/pymupdf.pdf,"• Added a FAQ chapter to this document.
"
13722,source/pymupdf.pdf,"Changes in Version 1.13.16
"
13723,source/pymupdf.pdf,"• Added support for correctly setting transparency (opacity) for certain annotation types.
"
13724,source/pymupdf.pdf,"• Added a tool property (Tools.fitz_config) showing the configuration of this PyMuPDF version.
"
13725,source/pymupdf.pdf,"• Fixed issue #193 (‘insertText(overlay=False) gives “cannot resize a buffer with shared storage” error’) by avoid-
ing read-only buffers.
"
13726,source/pymupdf.pdf,"Changes in Version 1.13.15
"
13727,source/pymupdf.pdf,"• Fixed issue #189 (“cannot find builtin CJK font”), so we are supporting builtin CJK fonts now (CJK = China,
Japan, Korea). This should lead to correctly generated pixmaps for documents using these languages. This
change has consequences for our binary file size: it will now range between 8 and 10 MB, depending on the OS.
"
13728,source/pymupdf.pdf,"• Fixed issue #191 (“Jupyter notebook kernel dies after ca. 40 pages”), which occurred when modifying the
contents of an annotation.
"
13729,source/pymupdf.pdf,"Changes in Version 1.13.14
"
13730,source/pymupdf.pdf,"This patch version contains several improvements, mainly for annotations.
"
13731,source/pymupdf.pdf,"• Changed Annot.lineEnds is now a list of two integers representing the line end symbols. Previously was a
dict of strings.
"
13732,source/pymupdf.pdf,"• Added support of line end symbols for applicable annotations. PyMuPDF now can generate these annotations
including the line end symbols.
"
13733,source/pymupdf.pdf,"• Added Annot.setLineEnds() adds line end symbols to applicable annotation types (‘Line’, ‘PolyLine’, ‘Poly-
gon’).
"
13734,source/pymupdf.pdf,"• Changed technical implementation of Page.insertImage() and Page.show_pdf_page(): they now create
there own contents objects, thereby avoiding changes of potentially large streams with consequential compression
/ decompression efforts and high change volumes with incremental updates.
"
13735,source/pymupdf.pdf,"Changes in Version 1.13.13
"
13736,source/pymupdf.pdf,"This patch version contains several improvements for embedded files and file attachment annotations.
"
13737,source/pymupdf.pdf,"• Added Document.embfile_Upd() which allows changing file content and metadata of an embedded file. It
supersedes the old method Document.embfile_SetInfo() (which will be deleted in a future version). Content
is automatically compressed and metadata may be unicode.
"
13738,source/pymupdf.pdf,"508
Chapter 29. Change Log
"
13739,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13740,source/pymupdf.pdf,"• Changed Document.embfile_Add() to now automatically compress file content. Accompanying metadata
can now be unicode (had to be ASCII in the past).
"
13741,source/pymupdf.pdf,"• Changed Document.embfile_Del() to now automatically delete all entries having the supplied identifying
name. The return code is now an integer count of the removed entries (was None previously).
"
13742,source/pymupdf.pdf,"• Changed embedded file methods to now also accept or show the PDF unicode filename as additional parameter
ufilename.
"
13743,source/pymupdf.pdf,"• Added Page.add_file_annot() which adds a new file attachment annotation.
"
13744,source/pymupdf.pdf,"• Changed Annot.fileUpd() (file attachment annot) to now also accept the PDF unicode ufilename parameter.
The description parameter desc correctly works with unicode. Furthermore, all parameters are optional, so
metadata may be changed without also replacing the file content.
"
13745,source/pymupdf.pdf,"• Changed Annot.fileInfo() (file attachment annot) to now also show the PDF unicode filename as parameter
ufilename.
"
13746,source/pymupdf.pdf,"• Fixed issue #180 (“page.getText(output=’dict’) return invalid bbox”) to now also work for vertical text.
"
13747,source/pymupdf.pdf,"• Fixed issue #185 (“Can’t render the annotations created by PyMuPDF”). The issue’s cause was the minimalistic
MuPDF approach when creating annotations. Several annotation types have no /AP (“appearance”) object when
created by MuPDF functions. MuPDF, SumatraPDF and hence also PyMuPDF cannot render annotations with-
out such an object. This fix now ensures, that an appearance object is always created together with the annotation
itself. We still do not support line end styles.
"
13748,source/pymupdf.pdf,"Changes in Version 1.13.12
"
13749,source/pymupdf.pdf,"• Fixed issue #180 (“page.getText(output=’dict’) return invalid bbox”). Note that this is a circumvention of an
MuPDF error, which generates zero-height character rectangles in some cases. When this happens, this fix
ensures a bbox height of at least fontsize.
"
13750,source/pymupdf.pdf,"• Changed for ListBox and ComboBox widgets, the attribute list of selectable values has been renamed to Widget.
choice_values.
"
13751,source/pymupdf.pdf,"• Changed when adding widgets, any missing of the PDF Base 14 Fonts is automatically added to the PDF. Widget
text fonts can now also be chosen from existing widget fonts. Any specified field values are now honored and
lead to a field with a preset value.
"
13752,source/pymupdf.pdf,"• Added Annot.updateWidget() which allows changing existing form fields – including the field value.
"
13753,source/pymupdf.pdf,"Changes in Version 1.13.11
"
13754,source/pymupdf.pdf,"While the preceeding patch subversions only contained various fixes, this version again introduces major new features:
"
13755,source/pymupdf.pdf,"• Added basic support for PDF widget annotations. You can now add PDF form fields of types Text, CheckBox,
ListBox and ComboBox. Where necessary, the PDF is tranformed to a Form PDF with the first added widget.
"
13756,source/pymupdf.pdf,"• Fixed issues #176 (“wrong file embedding”), #177 (“segment fault when invoking page.getText()”)and #179
(“Segmentation fault using page.getLinks() on encrypted PDF”).
"
13757,source/pymupdf.pdf,"Changes in Version 1.13.7
"
13758,source/pymupdf.pdf,"• Added support of variable page sizes for reflowable documents (e-books, HTML, etc.): new parameters rect and
fontsize in Document creation (open), and as a separate method Document.layout().
"
13759,source/pymupdf.pdf,"• Added Annot creation of many annotations types: sticky notes, free text, circle, rectangle, line, polygon, polyline
and text markers.
"
13760,source/pymupdf.pdf,"509
"
13761,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13762,source/pymupdf.pdf,"• Added support of annotation transparency (Annot.opacity, Annot.setOpacity()).
"
13763,source/pymupdf.pdf,"• Changed Annot.vertices: point coordinates are now grouped as pairs of floats (no longer as separate floats).
"
13764,source/pymupdf.pdf,"• Changed annotation colors dictionary: the two keys are now named “stroke” (formerly “common”) and “fill”.
"
13765,source/pymupdf.pdf,"• Added Document.isDirty which is True if a PDF has been changed in this session. Reset to False on each
"
13766,source/pymupdf.pdf,"Document.save() or Document.write().
"
13767,source/pymupdf.pdf,"Changes in Version 1.13.6
"
13768,source/pymupdf.pdf,"• Fix #173: for memory-resident documents, ensure the stream object will not be garbage-collected by Python
before document is closed.
"
13769,source/pymupdf.pdf,"Changes in Version 1.13.5
"
13770,source/pymupdf.pdf,"• New low-level method Page._setContents() defines an object given by its xref to serve as the contents
"
13771,source/pymupdf.pdf,"object.
"
13772,source/pymupdf.pdf,"• Changed and extended PDF form field support:
the attribute widget_text has been renamed to Annot.
widget_value. Values of all form field types (except signatures) are now supported. A new attribute Annot.
widget_choices contains the selectable values of listboxes and comboboxes. All these attributes now contain
None if no value is present.
"
13773,source/pymupdf.pdf,"Changes in Version 1.13.4
"
13774,source/pymupdf.pdf,"• Document.convertToPDF() now supports page ranges, reverted page sequences and page rotation. If the doc-
ument already is a PDF, an exception is raised.
"
13775,source/pymupdf.pdf,"• Fixed a bug (introduced with v1.13.0) that prevented Page.insertImage() for transparent images.
"
13776,source/pymupdf.pdf,"Changes in Version 1.13.3
"
13777,source/pymupdf.pdf,"Introduces a way to convert any MuPDF supported document to a PDF. If you ever wanted PDF versions of your
XPS, EPUB, CBZ or FB2 files – here is a way to do this.
"
13778,source/pymupdf.pdf,"• Document.convertToPDF() returns a Python bytes object in PDF format. Can be opened like normal in
PyMuPDF, or be written to disk with the “.pdf” extension.
"
13779,source/pymupdf.pdf,"Changes in Version 1.13.2
"
13780,source/pymupdf.pdf,"The major enhancement is PDF form field support. Form fields are annotations of type (19, ‘Widget’). There is a new
document method to check whether a PDF is a form. The Annot class has new properties describing field details.
"
13781,source/pymupdf.pdf,"• Document.is_form_pdf is true if object type /AcroForm and at least one form field exists.
"
13782,source/pymupdf.pdf,"• Annot.widget_type, Annot.widget_text and Annot.widget_name contain the details of a form field (i.e.
a “Widget” annotation).
"
13783,source/pymupdf.pdf,"Changes in Version 1.13.1
"
13784,source/pymupdf.pdf,"510
Chapter 29. Change Log
"
13785,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13786,source/pymupdf.pdf,"• TextPage.extractDICT() is a new method to extract the contents of a document page (text and images). All
document types are supported as with the other TextPage extract*() methods. The returned object is a dictio-
nary of nested lists and other dictionaries, and exactly equal to the JSON-deserialization of the old TextPage.
extractJSON(). The difference is that the result is created directly – no JSON module is used. Because the user
needs no JSON module to interpet the information, it should be easier to use, and also have a better performance,
because it contains images in their original binary format – they need not be base64-decoded.
"
13787,source/pymupdf.pdf,"• Page.getText() correspondingly supports the new parameter value “dict” to invoke the above method.
"
13788,source/pymupdf.pdf,"• TextPage.extractJSON() (resp. Page.getText(“json”)) is still supported for convenience, but its use is ex-
pected to decline.
"
13789,source/pymupdf.pdf,"Changes in Version 1.13.0
"
13790,source/pymupdf.pdf,"This version is based on MuPDF v1.13.0. This release is “primarily a bug fix release”.
"
13791,source/pymupdf.pdf,"In PyMuPDF, we are also doing some bug fixes while introducing minor enhancements. There only very minimal
changes to the user’s API.
"
13792,source/pymupdf.pdf,"• Document construction is more flexible: the new filetype parameter allows setting the document type. If specified,
any extension in the filename will be ignored. More completely addresses issue #156. As part of this, the
documentation has been reworked.
"
13793,source/pymupdf.pdf,"• Changes to Pixmap constructors:
"
13794,source/pymupdf.pdf,"– Colorspace conversion no longer allows dropping the alpha channel: source and target alpha will
now always be the same. We have seen exceptions and even interpreter crashes when using alpha
= 0.
"
13795,source/pymupdf.pdf,"– As a replacement, the simple pixmap copy lets you choose the target alpha.
"
13796,source/pymupdf.pdf,"• Document.save() again offers the full garbage collection range 0 thru 4. Because of a bug in xref maintenance,
we had to temporarily enforce garbage > 1. Finally resolves issue #148.
"
13797,source/pymupdf.pdf,"• Document.save() now offers to “prettify” PDF source via an additional argument.
"
13798,source/pymupdf.pdf,"• Page.insertImage() has the additional stream -parameter, specifying a memory area holding an image.
"
13799,source/pymupdf.pdf,"• Issue with garbled PNGs on Linux systems has been resolved (“Problem writing PNG” #133).
"
13800,source/pymupdf.pdf,"Changes in Version 1.12.4
"
13801,source/pymupdf.pdf,"This is an extension of 1.12.3.
"
13802,source/pymupdf.pdf,"• Fix of issue #147: methods Document.getPageFontlist() and Document.getPageImagelist() now also
show fonts and images contained in resources nested via “Form XObjects”.
"
13803,source/pymupdf.pdf,"• Temporary fix of issue #148: Saving to new PDF files will now automatically use garbage = 2 if a lower value is
given. Final fix is to be expected with MuPDF’s next version. At that point we will remove this circumvention.
"
13804,source/pymupdf.pdf,"• Preventive fix of illegally using stencil / image mask pixmaps in some methods.
"
13805,source/pymupdf.pdf,"• Method Document.getPageFontlist() now includes the encoding name for each font in the list.
"
13806,source/pymupdf.pdf,"• Method Document.getPageImagelist() now includes the decode method name for each image in the list.
"
13807,source/pymupdf.pdf,"Changes in Version 1.12.3
"
13808,source/pymupdf.pdf,"This is an extension of 1.12.2.
"
13809,source/pymupdf.pdf,"511
"
13810,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13811,source/pymupdf.pdf,"• Many functions now return None instead of 0, if the result has no other meaning than just indicating successful
execution (Document.close(), Document.save(), Document.select(), Pixmap.save() and many oth-
ers).
"
13812,source/pymupdf.pdf,"Changes in Version 1.12.2
"
13813,source/pymupdf.pdf,"This is an extension of 1.12.1.
"
13814,source/pymupdf.pdf,"• Method Page.show_pdf_page() now accepts the new clip argument. This specifies an area of the source page
to which the display should be restricted.
"
13815,source/pymupdf.pdf,"• New Page.CropBox and Page.MediaBox have been included for convenience.
"
13816,source/pymupdf.pdf,"Changes in Version 1.12.1
"
13817,source/pymupdf.pdf,"This is an extension of version 1.12.0.
"
13818,source/pymupdf.pdf,"• New method Page.show_pdf_page() displays another’s PDF page. This is a vector image and therefore re-
mains precise across zooming. Both involved documents must be PDF.
"
13819,source/pymupdf.pdf,"• New method Page.getSVGimage() creates an SVG image from the page. In contrast to the raster image of a
pixmap, this is a vector image format. The return is a unicode text string, which can be saved in a .svg file.
"
13820,source/pymupdf.pdf,"• Method Page.getTextBlocks() now accepts an additional bool parameter “images”. If set to true (default
is false), image blocks (metadata only) are included in the produced list and thus allow detecting areas with
rendered images.
"
13821,source/pymupdf.pdf,"• Minor bug fixes.
"
13822,source/pymupdf.pdf,"• “text” result of Page.getText() concatenates all lines within a block using a single space character. MuPDF’s
original uses “\\n” instead, producing a rather ragged output.
"
13823,source/pymupdf.pdf,"• New properties of Page objects Page.MediaBoxSize and Page.CropBoxPosition provide more information
about a page’s dimensions. For non-PDF files (and for most PDF files, too) these will be equal to Page.rect.
bottom_right, resp. Page.rect.top_left. For example, class Shape makes use of them to correctly position
its items.
"
13824,source/pymupdf.pdf,"Changes in Version 1.12.0
"
13825,source/pymupdf.pdf,"This version is based on and requires MuPDF v1.12.0. The new MuPDF version contains quite a number of changes –
most of them around text extraction. Some of the changes impact the programmer’s API.
"
13826,source/pymupdf.pdf,"• Outline.saveText() and Outline.saveXML() have been deleted without replacement. You probably haven’t
used them much anyway. But if you are looking for a replacement: the output of Document.get_toc() can
easily be used to produce something equivalent.
"
13827,source/pymupdf.pdf,"• Class TextSheet does no longer exist.
"
13828,source/pymupdf.pdf,"• Text “spans” (one of the hierarchy levels of TextPage) no longer contain positioning information (i.e. no “bbox”
key). Instead, spans now provide the font information for its text. This impacts our JSON output variant.
"
13829,source/pymupdf.pdf,"• HTML output has improved very much: it now creates valid documents which can be displayed by browsers to
produce a similar view as the original document.
"
13830,source/pymupdf.pdf,"• There is a new output format XHTML, which provides text and images in a browser-readable format. The
difference to HTML output is, that no effort is made to reproduce the original layout.
"
13831,source/pymupdf.pdf,"• All output formats of Page.getText() now support creating complete, valid documents, by wrapping them
with appropriate header and trailer information. If you are interested in using the HTML output, please make
sure to read Controlling Quality of HTML Output.
"
13832,source/pymupdf.pdf,"512
Chapter 29. Change Log
"
13833,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13834,source/pymupdf.pdf,"• To support finding text positions,
we have added special methods that don’t need detours like
"
13835,source/pymupdf.pdf,"TextPage.extractJSON() or TextPage.extractXML(): use Page.getTextBlocks() or resp.
Page.
getTextWords() to create lists of text blocks or resp. words, which are accompanied by their rectangles. This
should be much faster than the standard text extraction methods and also avoids using additional packages for
interpreting their output.
"
13836,source/pymupdf.pdf,"Changes in Version 1.11.2
"
13837,source/pymupdf.pdf,"This is an extension of v1.11.1.
"
13838,source/pymupdf.pdf,"• New Page.insertFont() creates a PDF /Font object and returns its object number.
"
13839,source/pymupdf.pdf,"• New Document.extractFont() extracts the content of an embedded font given its object number.
"
13840,source/pymupdf.pdf,"• Methods FontList(...) items no longer contain the PDF generation number. This value never had any signifi-
cance. Instead, the font file extension is included (e.g. “pfa” for a “PostScript Font for ASCII”), which is more
valuable information.
"
13841,source/pymupdf.pdf,"• Fonts other than “simple fonts” (Type1) are now also supported.
"
13842,source/pymupdf.pdf,"• New options to change Pixmap size:
"
13843,source/pymupdf.pdf,"– Method Pixmap.shrink() reduces the pixmap proportionally in place.
"
13844,source/pymupdf.pdf,"– A new Pixmap copy constructor allows scaling via setting target width and height.
"
13845,source/pymupdf.pdf,"Changes in Version 1.11.1
"
13846,source/pymupdf.pdf,"This is an extension of v1.11.0.
"
13847,source/pymupdf.pdf,"• New class Shape. It facilitates and extends the creation of image shapes on PDF pages. It contains multiple
methods for creating elementary shapes like lines, rectangles or circles, which can be combined into more com-
plex ones and be given common properties like line width or colors. Combined shapes are handled as a unit and
e.g. be “morphed” together. The class can accumulate multiple complex shapes and put them all in the page’s
foreground or background – thus also reducing the number of updates to the page’s contents object.
"
13848,source/pymupdf.pdf,"• All Page draw methods now use the new Shape class.
"
13849,source/pymupdf.pdf,"• Text insertion methods insertText() and insertTextBox() now support morphing in addition to text rotation. They
have become part of the Shape class and thus allow text to be freely combined with graphics.
"
13850,source/pymupdf.pdf,"• A new Pixmap constructor allows creating pixmap copies with an added alpha channel. A new method also
allows directly manipulating alpha values.
"
13851,source/pymupdf.pdf,"• Binary algebraic operations with geometry objects (matrices, rectangles and points) now generally also support
lists or tuples as the second operand. You can add a tuple (x, y) of numbers to a Point. In this context, such
sequences are called “point_like” (resp. matrix_like, rect_like).
"
13852,source/pymupdf.pdf,"• Geometry objects now fully support in-place operators. For example, p /= m replaces point p with p * 1/m for a
number, or p * ~m for a matrix_like object m. Similarly, if r is a rectangle, then r |= (3, 4) is the new rectangle
that also includes fitz.Point(3, 4), and r &= (1, 2, 3, 4) is its intersection with fitz.Rect(1, 2, 3, 4).
"
13853,source/pymupdf.pdf,"Changes in Version 1.11.0
"
13854,source/pymupdf.pdf,"This version is based on and requires MuPDF v1.11.
"
13855,source/pymupdf.pdf,"Though MuPDF has declared it as being mostly a bug fix version, one major new feature is indeed contained: support
of embedded files – also called portfolios or collections. We have extended PyMuPDF functionality to embrace this up
to an extent just a little beyond the mutool utility as follows.
"
13856,source/pymupdf.pdf,"513
"
13857,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13858,source/pymupdf.pdf,"• The Document class now support embedded files with several new methods and one new property:
"
13859,source/pymupdf.pdf,"– embfile_Info() returns metadata information about an entry in the list of embedded files. This is more than
mutool currently provides: it shows all the information that was used to embed the file (not just the entry’s
name).
"
13860,source/pymupdf.pdf,"– embfile_Get() retrieves the (decompressed) content of an entry into a bytes buffer.
"
13861,source/pymupdf.pdf,"– embfile_Add(...) inserts new content into the PDF portfolio. We (in contrast to mutool) restrict this to
entries with a new name (no duplicate names allowed).
"
13862,source/pymupdf.pdf,"– embfile_Del(...) deletes an entry from the portfolio (function not offered in MuPDF).
"
13863,source/pymupdf.pdf,"– embfile_SetInfo() – changes filename or description of an embedded file.
"
13864,source/pymupdf.pdf,"– embfile_Count – contains the number of embedded files.
"
13865,source/pymupdf.pdf,"• Several enhancements deal with streamlining geometry objects. These are not connected to the new MuPDF
version and most of them are also reflected in PyMuPDF v1.10.0. Among them are new properties to identify
the corners of rectangles by name (e.g. Rect.bottom_right) and new methods to deal with set-theoretic questions
like Rect.contains(x) or IRect.intersects(x). Special effort focussed on supporting more “Pythonic” language
constructs: if x in rect ... is equivalent to rect.contains(x).
"
13866,source/pymupdf.pdf,"• The Rect chapter now has more background on empty amd infinite rectangles and how we handle them. The
handling itself was also updated for more consistency in this area.
"
13867,source/pymupdf.pdf,"• We have started basic support for generation of PDF content:
"
13868,source/pymupdf.pdf,"– Document.insert_page() adds a new page into a PDF, optionally containing some text.
"
13869,source/pymupdf.pdf,"– Page.insertImage() places a new image on a PDF page.
"
13870,source/pymupdf.pdf,"– Page.insertText() puts new text on an existing page
"
13871,source/pymupdf.pdf,"• For FileAttachment annotations, content and name of the attached file can extracted and changed.
"
13872,source/pymupdf.pdf,"Changes in Version 1.10.0
"
13873,source/pymupdf.pdf,"MuPDF v1.10 Impact
"
13874,source/pymupdf.pdf,"MuPDF version 1.10 has a significant impact on our bindings. Some of the changes also affect the API – in other words,
you as a PyMuPDF user.
"
13875,source/pymupdf.pdf,"• Link destination information has been reduced. Several properties of the linkDest class no longer contain valuable
information. In fact, this class as a whole has been deleted from MuPDF’s library and we in PyMuPDF only
maintain it to provide compatibilty to existing code.
"
13876,source/pymupdf.pdf,"• In an effort to minimize memory requirements, several improvements have been built into MuPDF v1.10:
"
13877,source/pymupdf.pdf,"– A new config.h file can be used to de-select unwanted features in the C base code. Using this feature we
have been able to reduce the size of our binary _fitz.o / _fitz.pyd by about 50% (from 9 MB to 4.5 MB).
When UPX-ing this, the size goes even further down to a very handy 2.3 MB.
"
13878,source/pymupdf.pdf,"– The alpha (transparency) channel for pixmaps is now optional. Letting alpha default to False significantly
reduces pixmap sizes (by 20% – CMYK, 25% – RGB, 50% – GRAY). Many Pixmap constructors therefore
now accept an alpha boolean to control inclusion of this channel. Other pixmap constructors (e.g. those for
file and image input) create pixmaps with no alpha alltogether. On the downside, save methods for pixmaps
no longer accept a savealpha option: this channel will always be saved when present. To minimize code
breaks, we have left this parameter in the call patterns – it will just be ignored.
"
13879,source/pymupdf.pdf,"• DisplayList and TextPage class constructors now require the mediabox of the page they are referring to (i.e. the
page.bound() rectangle). There is no way to construct this information from other sources, therefore a source
"
13880,source/pymupdf.pdf,"514
Chapter 29. Change Log
"
13881,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13882,source/pymupdf.pdf,"code change cannot be avoided in these cases. We assume however, that not many users are actually employing
these rather low level classes explixitely. So the impact of that change should be minor.
"
13883,source/pymupdf.pdf,"Other Changes compared to Version 1.9.3
"
13884,source/pymupdf.pdf,"• The new Document method write() writes an opened PDF to memory (as opposed to a file, like save() does).
"
13885,source/pymupdf.pdf,"• An annotation can now be scaled and moved around on its page. This is done by modifying its rectangle.
"
13886,source/pymupdf.pdf,"• Annotations can now be deleted. Page contains the new method deleteAnnot().
"
13887,source/pymupdf.pdf,"• Various annotation attributes can now be modified, e.g. content, dates, title (= author), border, colors.
"
13888,source/pymupdf.pdf,"• Method Document.insert_pdf() now also copies annotations of source pages.
"
13889,source/pymupdf.pdf,"• The Pages class has been deleted. As documents can now be accessed with page numbers as indices (like doc[n]
= doc.loadPage(n)), and document object can be used as iterators, the benefit of this class was too low to maintain
it. See the following comments.
"
13890,source/pymupdf.pdf,"• loadPage(n) / doc[n] now accept arbitrary integers to specify a page number, as long as n < pageCount. So, e.g.
doc[-500] is always valid and will load page (-500) % pageCount.
"
13891,source/pymupdf.pdf,"• A document can now also be used as an iterator like this: for page in doc: ...<do something with “page”> ....
This will yield all pages of doc as page.
"
13892,source/pymupdf.pdf,"• The Pixmap method getSize() has been replaced with property size. As before Pixmap.size == len(Pixmap) is
true.
"
13893,source/pymupdf.pdf,"• In response to transparency (alpha) being optional, several new parameters and properties have been added to
"
13894,source/pymupdf.pdf,"Pixmap and Colorspace classes to support determining their characteristics.
"
13895,source/pymupdf.pdf,"• The Page class now contains new properties firstAnnot and firstLink to provide starting points to the respec-
tive class chains, where firstLink is just a mnemonic synonym to method loadLinks() which continues to exist.
Similarly, the new property rect is a synonym for method bound(), which also continues to exist.
"
13896,source/pymupdf.pdf,"• Pixmap methods samplesRGB() and samplesAlpha() have been deleted because pixmaps can now be created
without transparency.
"
13897,source/pymupdf.pdf,"• Rect now has a property irect which is a synonym of method round(). Likewise, IRect now has property rect to
deliver a Rect which has the same coordinates as floats values.
"
13898,source/pymupdf.pdf,"• Document has the new method searchPageFor() to search for a text string. It works exactly like the corresponding
Page.searchFor() with page number as additional parameter.
"
13899,source/pymupdf.pdf,"Changes in Version 1.9.3
"
13900,source/pymupdf.pdf,"This version is also based on MuPDF v1.9a. Changes compared to version 1.9.2:
"
13901,source/pymupdf.pdf,"• As a major enhancement, annotations are now supported in a similar way as links. Annotations can be displayed
(as pixmaps) and their properties can be accessed.
"
13902,source/pymupdf.pdf,"• In addition to the document select() method, some simpler methods can now be used to manipulate a PDF:
"
13903,source/pymupdf.pdf,"– copyPage() copies a page within a document.
"
13904,source/pymupdf.pdf,"– movePage() is similar, but deletes the original.
"
13905,source/pymupdf.pdf,"– delete_page() deletes a page
"
13906,source/pymupdf.pdf,"– delete_pages() deletes a page range
"
13907,source/pymupdf.pdf,"• rotation or setRotation() access or change a PDF page’s rotation, respectively.
"
13908,source/pymupdf.pdf,"• Available but undocumented before, IRect, Rect, Point and Matrix support the len() method and their coordinate
properties can be accessed via indices, e.g. IRect.x1 == IRect[2].
"
13909,source/pymupdf.pdf,"515
"
13910,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13911,source/pymupdf.pdf,"• For convenience, documents now support simple indexing: doc.loadPage(n) == doc[n]. The index may however
be in range -pageCount < n < pageCount, such that doc[-1] is the last page of the document.
"
13912,source/pymupdf.pdf,"Changes in Version 1.9.2
"
13913,source/pymupdf.pdf,"This version is also based on MuPDF v1.9a. Changes compared to version 1.9.1:
"
13914,source/pymupdf.pdf,"• fitz.open() (no parameters) creates a new empty PDF document, i.e. if saved afterwards, it must be given a .pdf
extension.
"
13915,source/pymupdf.pdf,"• Document now accepts all of the following formats (Document and open are synonyms):
"
13916,source/pymupdf.pdf,"– open(),
"
13917,source/pymupdf.pdf,"– open(filename) (equivalent to open(filename, None)),
"
13918,source/pymupdf.pdf,"– open(filetype, area) (equivalent to open(filetype, stream = area)).
"
13919,source/pymupdf.pdf,"Type of memory area stream may be bytes or bytearray. Thus, e.g. area = open(“file.pdf”, “rb”).read() may be
used directly (without first converting it to bytearray).
"
13920,source/pymupdf.pdf,"• New method Document.insert_pdf() (PDFs only) inserts a range of pages from another PDF.
"
13921,source/pymupdf.pdf,"• Document objects doc now support the len() function: len(doc) == doc.pageCount.
"
13922,source/pymupdf.pdf,"• New method Document.getPageImageList() creates a list of images used on a page.
"
13923,source/pymupdf.pdf,"• New method Document.getPageFontList() creates a list of fonts referenced by a page.
"
13924,source/pymupdf.pdf,"• New pixmap constructor fitz.Pixmap(doc, xref) creates a pixmap based on an opened PDF document and an xref
"
13925,source/pymupdf.pdf,"number of the image.
"
13926,source/pymupdf.pdf,"• New pixmap constructor fitz.Pixmap(cspace, spix) creates a pixmap as a copy of another one spix with the col-
orspace converted to cspace. This works for all colorspace combinations.
"
13927,source/pymupdf.pdf,"• Pixmap constructor fitz.Pixmap(colorspace, width, height, samples) now allows samples to also be bytes, not
only bytearray.
"
13928,source/pymupdf.pdf,"Changes in Version 1.9.1
"
13929,source/pymupdf.pdf,"This version of PyMuPDF is based on MuPDF library source code version 1.9a published on April 21, 2016.
"
13930,source/pymupdf.pdf,"Please have a look at MuPDF’s website to see which changes and enhancements are contained herein.
"
13931,source/pymupdf.pdf,"Changes in version 1.9.1 compared to version 1.8.0 are the following:
"
13932,source/pymupdf.pdf,"• New methods get_area() for both fitz.Rect and fitz.IRect
"
13933,source/pymupdf.pdf,"• Pixmaps can now be created directly from files using the new constructor fitz.Pixmap(filename).
"
13934,source/pymupdf.pdf,"• The Pixmap constructor fitz.Pixmap(image) has been extended accordingly.
"
13935,source/pymupdf.pdf,"• fitz.Rect can now be created with all possible combinations of points and coordinates.
"
13936,source/pymupdf.pdf,"• PyMuPDF classes and methods now all contain __doc__ strings, most of them created by SWIG automatically.
While the PyMuPDF documentation certainly is more detailed, this feature should help a lot when programming
in Python-aware IDEs.
"
13937,source/pymupdf.pdf,"• A new document method of getPermits() returns the permissions associated with the current access to the docu-
ment (print, edit, annotate, copy), as a Python dictionary.
"
13938,source/pymupdf.pdf,"• The identity matrix fitz.Identity is now immutable.
"
13939,source/pymupdf.pdf,"516
Chapter 29. Change Log
"
13940,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13941,source/pymupdf.pdf,"• The new document method select(list) removes all pages from a document that are not contained in the list. Pages
can also be duplicated and re-arranged.
"
13942,source/pymupdf.pdf,"• Various improvements and new members in our demo and examples collections. Perhaps most prominently:
PDF_display now supports scrolling with the mouse wheel, and there is a new example program wxTableExtract
which allows to graphically identify and extract table data in documents.
"
13943,source/pymupdf.pdf,"• fitz.open() is now an alias of fitz.Document().
"
13944,source/pymupdf.pdf,"• New pixmap method tobytes() which will return a bytearray formatted as a PNG image of the pixmap.
"
13945,source/pymupdf.pdf,"• New pixmap method samplesRGB() providing a samples version with alpha bytes stripped off (RGB colorspaces
only).
"
13946,source/pymupdf.pdf,"• New pixmap method samplesAlpha() providing the alpha bytes only of the samples area.
"
13947,source/pymupdf.pdf,"• New iterator fitz.Pages(doc) over a document’s set of pages.
"
13948,source/pymupdf.pdf,"• New matrix methods invert() (calculate inverted matrix), concat() (calculate matrix product), pretranslate() (per-
form a shift operation).
"
13949,source/pymupdf.pdf,"• New IRect methods intersect() (intersection with another rectangle), translate() (perform a shift operation).
"
13950,source/pymupdf.pdf,"• New Rect methods intersect() (intersection with another rectangle), transform() (transformation with a matrix),
include_point() (enlarge rectangle to also contain a point), include_rect() (enlarge rectangle to also contain an-
other one).
"
13951,source/pymupdf.pdf,"• Documented Point.transform() (transform a point with a matrix).
"
13952,source/pymupdf.pdf,"• Matrix, IRect, Rect and Point classes now support compact, algebraic formulations for manipulating such objects.
"
13953,source/pymupdf.pdf,"• Incremental saves for changes are possible now using the call pattern doc.save(doc.name, incremental=True).
"
13954,source/pymupdf.pdf,"• A PDF’s metadata can now be deleted, set or changed by document method set_metadata(). Supports incremental
saves.
"
13955,source/pymupdf.pdf,"• A PDF’s bookmarks (or table of contents) can now be deleted, set or changed with the entries of a list using
document method set_toc(list). Supports incremental saves.
"
13956,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
13957,source/pymupdf.pdf,"517
"
13958,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13959,source/pymupdf.pdf,"518
Chapter 29. Change Log
"
13960,source/pymupdf.pdf,"CHAPTER
"
13961,source/pymupdf.pdf,"THIRTY
"
13962,source/pymupdf.pdf,"DEPRECATED NAMES
"
13963,source/pymupdf.pdf,"The original naming convention for methods and properties has been “camelCase”. Since its creation around 2013,
a tremendous increase of functionality has happened in PyMuPDF – and with it a corresponding increase in classes,
methods and properties. In too many cases, this has led to non-intuitive, illogical and ugly names, difficult to memorize
or guess.
"
13964,source/pymupdf.pdf,"A few versions ago, I therefore decided to shift gears and switch to a “snake_cased” naming standard. This was a major
effort, which needed a step-wise approach. I think am done with it now (version 1.18.14).
"
13965,source/pymupdf.pdf,"The following list maps deprecated names to their new versions.
For example, property pageCount became
"
13966,source/pymupdf.pdf,"page_count in the Document class. There also are less obvious name changes, e.g. method getPNGdata was re-
named to tobytes in the Pixmap class.
"
13967,source/pymupdf.pdf,"Names of classes (camel case) and package-wide constants (the majority is upper case) remain untouched.
"
13968,source/pymupdf.pdf,"Old names will remain available as deprecated aliases through MuPDF version 1.19.0 and be removed in the version
that follows it - probably version 1.20.0, but this depends on upstream decisions (MuPDF).
"
13969,source/pymupdf.pdf,"Starting with version 1.19.0, we will issue deprecation warnings on sys.stderr like Deprecation:
'newPage'
removed from class 'Document' after v1.19.0 - use 'new_page'. when aliased methods are being used.
Using a deprecated property will not cause this type of warning.
"
13970,source/pymupdf.pdf,"Starting immediately, all deprecated objects (methods and properties) will show a copy of the original’s docstring,
prefixed with the deprecation message, for example:
"
13971,source/pymupdf.pdf,">>> print(fitz.Document.pageCount.__doc__)
*** Deprecated and removed in version following 1.19.0 - use 'page_count'. ***
Number of pages.
>>> print(fitz.Document.newPage.__doc__)
*** Deprecated and removed in version following 1.19.0 - use 'new_page'. ***
Create and return a new page object.
"
13972,source/pymupdf.pdf,"Args:
"
13973,source/pymupdf.pdf,"pno: (int) insert before this page. Default: after last page.
width: (float) page width in points. Default: 595 (ISO A4 width).
height: (float) page height in points. Default 842 (ISO A4 height).
"
13974,source/pymupdf.pdf,"Returns:
"
13975,source/pymupdf.pdf,"A Page object.
"
13976,source/pymupdf.pdf,"There is a utility script alias-changer.py which can be used to do mass-renames in your scripts. It accepts either a
single file or a folder as argument. If a folder is supplied, all its Python files and those of its subfolders are changed.
Optionally, backups of the scripts can be taken.
"
13977,source/pymupdf.pdf,"Deprecated names are not separately documented. The following list will help you find the documentation of the
original.
"
13978,source/pymupdf.pdf,"519
"
13979,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
13980,source/pymupdf.pdf,"Note: This is automatically generated. One or two items refer to yet undocumented methods - please simply ignore
them.
"
13981,source/pymupdf.pdf,"• _isWrapped – Page.is_wrapped
"
13982,source/pymupdf.pdf,"• addCaretAnnot – Page.add_caret_annot()
"
13983,source/pymupdf.pdf,"• addCircleAnnot – Page.add_circle_annot()
"
13984,source/pymupdf.pdf,"• addFileAnnot – Page.add_file_annot()
"
13985,source/pymupdf.pdf,"• addFreetextAnnot – Page.add_freetext_annot()
"
13986,source/pymupdf.pdf,"• addHighlightAnnot – Page.add_highlight_annot()
"
13987,source/pymupdf.pdf,"• addInkAnnot – Page.add_ink_annot()
"
13988,source/pymupdf.pdf,"• addLineAnnot – Page.add_line_annot()
"
13989,source/pymupdf.pdf,"• addPolygonAnnot – Page.add_polygon_annot()
"
13990,source/pymupdf.pdf,"• addPolylineAnnot – Page.add_polyline_annot()
"
13991,source/pymupdf.pdf,"• addRectAnnot – Page.add_rect_annot()
"
13992,source/pymupdf.pdf,"• addRedactAnnot – Page.add_redact_annot()
"
13993,source/pymupdf.pdf,"• addSquigglyAnnot – Page.add_squiggly_annot()
"
13994,source/pymupdf.pdf,"• addStampAnnot – Page.add_stamp_annot()
"
13995,source/pymupdf.pdf,"• addStrikeoutAnnot – Page.add_strikeout_annot()
"
13996,source/pymupdf.pdf,"• addTextAnnot – Page.add_text_annot()
"
13997,source/pymupdf.pdf,"• addUnderlineAnnot – Page.add_underline_annot()
"
13998,source/pymupdf.pdf,"• addWidget – Page.add_widget()
"
13999,source/pymupdf.pdf,"• chapterCount – Document.chapter_count
"
14000,source/pymupdf.pdf,"• chapterPageCount – Document.chapter_page_count()
"
14001,source/pymupdf.pdf,"• cleanContents – Page.clean_contents()
"
14002,source/pymupdf.pdf,"• clearWith – Pixmap.clear_with()
"
14003,source/pymupdf.pdf,"• convertToPDF – Document.convert_to_pdf()
"
14004,source/pymupdf.pdf,"• copyPage – Document.copy_page()
"
14005,source/pymupdf.pdf,"• copyPixmap – Pixmap.copy()
"
14006,source/pymupdf.pdf,"• CropBox – Page.cropbox
"
14007,source/pymupdf.pdf,"• CropBoxPosition – Page.cropbox_position
"
14008,source/pymupdf.pdf,"• deleteAnnot – Page.delete_annot()
"
14009,source/pymupdf.pdf,"• deleteLink – Page.delete_link()
"
14010,source/pymupdf.pdf,"• deletePage – Document.delete_page()
"
14011,source/pymupdf.pdf,"• deletePageRange – Document.delete_pages()
"
14012,source/pymupdf.pdf,"• deleteWidget – Page.delete_widget()
"
14013,source/pymupdf.pdf,"• derotationMatrix – Page.derotation_matrix
"
14014,source/pymupdf.pdf,"520
Chapter 30. Deprecated Names
"
14015,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14016,source/pymupdf.pdf,"• drawBezier – Page.draw_bezier()
"
14017,source/pymupdf.pdf,"• drawBezier – Shape.draw_bezier()
"
14018,source/pymupdf.pdf,"• drawCircle – Page.draw_circle()
"
14019,source/pymupdf.pdf,"• drawCircle – Shape.draw_circle()
"
14020,source/pymupdf.pdf,"• drawCurve – Page.draw_curve()
"
14021,source/pymupdf.pdf,"• drawCurve – Shape.draw_curve()
"
14022,source/pymupdf.pdf,"• drawLine – Page.draw_line()
"
14023,source/pymupdf.pdf,"• drawLine – Shape.draw_line()
"
14024,source/pymupdf.pdf,"• drawOval – Page.draw_oval()
"
14025,source/pymupdf.pdf,"• drawOval – Shape.draw_oval()
"
14026,source/pymupdf.pdf,"• drawPolyline – Page.draw_polyline()
"
14027,source/pymupdf.pdf,"• drawPolyline – Shape.draw_polyline()
"
14028,source/pymupdf.pdf,"• drawQuad – Page.draw_quad()
"
14029,source/pymupdf.pdf,"• drawQuad – Shape.draw_quad()
"
14030,source/pymupdf.pdf,"• drawRect – Page.draw_rect()
"
14031,source/pymupdf.pdf,"• drawRect – Shape.draw_rect()
"
14032,source/pymupdf.pdf,"• drawSector – Page.draw_sector()
"
14033,source/pymupdf.pdf,"• drawSector – Shape.draw_sector()
"
14034,source/pymupdf.pdf,"• drawSquiggle – Page.draw_squiggle()
"
14035,source/pymupdf.pdf,"• drawSquiggle – Shape.draw_squiggle()
"
14036,source/pymupdf.pdf,"• drawZigzag – Page.draw_zigzag()
"
14037,source/pymupdf.pdf,"• drawZigzag – Shape.draw_zigzag()
"
14038,source/pymupdf.pdf,"• embeddedFileAdd – Document.embfile_add()
"
14039,source/pymupdf.pdf,"• embeddedFileCount – Document.embfile_count()
"
14040,source/pymupdf.pdf,"• embeddedFileDel – Document.embfile_del()
"
14041,source/pymupdf.pdf,"• embeddedFileGet – Document.embfile_get()
"
14042,source/pymupdf.pdf,"• embeddedFileInfo – Document.embfile_info()
"
14043,source/pymupdf.pdf,"• embeddedFileNames – Document.embfile_names()
"
14044,source/pymupdf.pdf,"• embeddedFileUpd – Document.embfile_upd()
"
14045,source/pymupdf.pdf,"• extractFont – Document.extract_font()
"
14046,source/pymupdf.pdf,"• extractImage – Document.extract_image()
"
14047,source/pymupdf.pdf,"• fileGet – Annot.get_file()
"
14048,source/pymupdf.pdf,"• fileUpd – Annot.update_file()
"
14049,source/pymupdf.pdf,"• fillTextbox – TextWriter.fill_textbox()
"
14050,source/pymupdf.pdf,"• findBookmark – Document.find_bookmark()
"
14051,source/pymupdf.pdf,"• firstAnnot – Page.first_annot
"
14052,source/pymupdf.pdf,"521
"
14053,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14054,source/pymupdf.pdf,"• firstLink – Page.first_link
"
14055,source/pymupdf.pdf,"• firstWidget – Page.first_widget
"
14056,source/pymupdf.pdf,"• fullcopyPage – Document.fullcopy_page()
"
14057,source/pymupdf.pdf,"• gammaWith – Pixmap.gamma_with()
"
14058,source/pymupdf.pdf,"• getArea – Rect.get_area()
"
14059,source/pymupdf.pdf,"• getArea – IRect.get_area()
"
14060,source/pymupdf.pdf,"• getCharWidths – Document.get_char_widths()
"
14061,source/pymupdf.pdf,"• getContents – Page.get_contents()
"
14062,source/pymupdf.pdf,"• getDisplayList – Page.get_displaylist()
"
14063,source/pymupdf.pdf,"• getDrawings – Page.get_drawings()
"
14064,source/pymupdf.pdf,"• getFontList – Page.get_fonts()
"
14065,source/pymupdf.pdf,"• getImageBbox – Page.get_image_bbox()
"
14066,source/pymupdf.pdf,"• getImageData – Pixmap.tobytes()
"
14067,source/pymupdf.pdf,"• getImageList – Page.get_images()
"
14068,source/pymupdf.pdf,"• getLinks – Page.get_links()
"
14069,source/pymupdf.pdf,"• getOCGs – Document.get_ocgs()
"
14070,source/pymupdf.pdf,"• getPageFontList – Document.get_page_fonts()
"
14071,source/pymupdf.pdf,"• getPageImageList – Document.get_page_images()
"
14072,source/pymupdf.pdf,"• getPagePixmap – Document.get_page_pixmap()
"
14073,source/pymupdf.pdf,"• getPageText – Document.get_page_text()
"
14074,source/pymupdf.pdf,"• getPageXObjectList – Document.get_page_xobjects()
"
14075,source/pymupdf.pdf,"• getPDFnow – get_pdf_now()
"
14076,source/pymupdf.pdf,"• getPDFstr – get_pdf_str()
"
14077,source/pymupdf.pdf,"• getPixmap – Page.get_pixmap()
"
14078,source/pymupdf.pdf,"• getPixmap – Annot.get_pixmap()
"
14079,source/pymupdf.pdf,"• getPixmap – DisplayList.get_pixmap()
"
14080,source/pymupdf.pdf,"• getPNGData – Pixmap.tobytes()
"
14081,source/pymupdf.pdf,"• getPNGdata – Pixmap.tobytes()
"
14082,source/pymupdf.pdf,"• getRectArea – Rect.get_area()
"
14083,source/pymupdf.pdf,"• getRectArea – IRect.get_area()
"
14084,source/pymupdf.pdf,"• getSigFlags – Document.get_sigflags()
"
14085,source/pymupdf.pdf,"• getSVGimage – Page.get_svg_image()
"
14086,source/pymupdf.pdf,"• getText – Page.get_text()
"
14087,source/pymupdf.pdf,"• getText – Annot.get_text()
"
14088,source/pymupdf.pdf,"• getTextBlocks – Page.get_text_blocks()
"
14089,source/pymupdf.pdf,"• getTextbox – Page.get_textbox()
"
14090,source/pymupdf.pdf,"522
Chapter 30. Deprecated Names
"
14091,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14092,source/pymupdf.pdf,"• getTextbox – Annot.get_textbox()
"
14093,source/pymupdf.pdf,"• getTextLength – get_text_length()
"
14094,source/pymupdf.pdf,"• getTextPage – Page.get_textpage()
"
14095,source/pymupdf.pdf,"• getTextPage – Annot.get_textpage()
"
14096,source/pymupdf.pdf,"• getTextPage – DisplayList.get_textpage()
"
14097,source/pymupdf.pdf,"• getTextWords – Page.get_text_words()
"
14098,source/pymupdf.pdf,"• getToC – Document.get_toc()
"
14099,source/pymupdf.pdf,"• getXmlMetadata – Document.get_xml_metadata()
"
14100,source/pymupdf.pdf,"• ImageProperties – image_properties()
"
14101,source/pymupdf.pdf,"• includePoint – Rect.include_point()
"
14102,source/pymupdf.pdf,"• includePoint – IRect.include_point()
"
14103,source/pymupdf.pdf,"• includeRect – Rect.include_rect()
"
14104,source/pymupdf.pdf,"• includeRect – IRect.include_rect()
"
14105,source/pymupdf.pdf,"• insertFont – Page.insert_font()
"
14106,source/pymupdf.pdf,"• insertImage – Page.insert_image()
"
14107,source/pymupdf.pdf,"• insertLink – Page.insert_link()
"
14108,source/pymupdf.pdf,"• insertPage – Document.insert_page()
"
14109,source/pymupdf.pdf,"• insertPDF – Document.insert_pdf()
"
14110,source/pymupdf.pdf,"• insertText – Page.insert_text()
"
14111,source/pymupdf.pdf,"• insertText – Shape.insert_text()
"
14112,source/pymupdf.pdf,"• insertTextbox – Page.insert_textbox()
"
14113,source/pymupdf.pdf,"• insertTextbox – Shape.insert_textbox()
"
14114,source/pymupdf.pdf,"• invertIRect – Pixmap.invert_irect()
"
14115,source/pymupdf.pdf,"• isConvex – Quad.is_convex
"
14116,source/pymupdf.pdf,"• isDirty – Document.is_dirty
"
14117,source/pymupdf.pdf,"• isEmpty – Rect.is_empty
"
14118,source/pymupdf.pdf,"• isEmpty – IRect.is_empty
"
14119,source/pymupdf.pdf,"• isEmpty – Quad.is_empty
"
14120,source/pymupdf.pdf,"• isFormPDF – Document.is_form_pdf
"
14121,source/pymupdf.pdf,"• isInfinite – Rect.is_infinite
"
14122,source/pymupdf.pdf,"• isInfinite – IRect.is_infinite
"
14123,source/pymupdf.pdf,"• isPDF – Document.is_pdf
"
14124,source/pymupdf.pdf,"• isRectangular – Quad.is_rectangular
"
14125,source/pymupdf.pdf,"• isRectilinear – Matrix.is_rectilinear
"
14126,source/pymupdf.pdf,"• isReflowable – Document.is_reflowable
"
14127,source/pymupdf.pdf,"• isRepaired – Document.is_repaired
"
14128,source/pymupdf.pdf,"523
"
14129,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14130,source/pymupdf.pdf,"• isStream – Document.is_stream()
"
14131,source/pymupdf.pdf,"• lastLocation – Document.last_location
"
14132,source/pymupdf.pdf,"• lineEnds – Annot.line_ends
"
14133,source/pymupdf.pdf,"• loadAnnot – Page.load_annot()
"
14134,source/pymupdf.pdf,"• loadLinks – Page.load_links()
"
14135,source/pymupdf.pdf,"• loadPage – Document.load_page()
"
14136,source/pymupdf.pdf,"• makeBookmark – Document.make_bookmark()
"
14137,source/pymupdf.pdf,"• MediaBox – Page.mediabox
"
14138,source/pymupdf.pdf,"• MediaBoxSize – Page.mediabox_size
"
14139,source/pymupdf.pdf,"• metadataXML – Document.xref_xml_metadata()
"
14140,source/pymupdf.pdf,"• movePage – Document.move_page()
"
14141,source/pymupdf.pdf,"• needsPass – Document.needs_pass
"
14142,source/pymupdf.pdf,"• newPage – Document.new_page()
"
14143,source/pymupdf.pdf,"• newShape – Page.new_shape()
"
14144,source/pymupdf.pdf,"• nextLocation – Document.next_location()
"
14145,source/pymupdf.pdf,"• pageCount – Document.page_count
"
14146,source/pymupdf.pdf,"• pageCropBox – Document.page_cropbox()
"
14147,source/pymupdf.pdf,"• pageXref – Document.page_xref()
"
14148,source/pymupdf.pdf,"• PaperRect – paper_rect()
"
14149,source/pymupdf.pdf,"• PaperSize – paper_size()
"
14150,source/pymupdf.pdf,"• paperSizes – paper_sizes
"
14151,source/pymupdf.pdf,"• PDFCatalog – Document.pdf_catalog()
"
14152,source/pymupdf.pdf,"• PDFTrailer – Document.pdf_trailer()
"
14153,source/pymupdf.pdf,"• pillowData – Pixmap.pil_tobytes()
"
14154,source/pymupdf.pdf,"• pillowWrite – Pixmap.pil_save()
"
14155,source/pymupdf.pdf,"• planishLine – planish_line()
"
14156,source/pymupdf.pdf,"• preRotate – Matrix.prerotate()
"
14157,source/pymupdf.pdf,"• preScale – Matrix.prescale()
"
14158,source/pymupdf.pdf,"• preShear – Matrix.preshear()
"
14159,source/pymupdf.pdf,"• preTranslate – Matrix.pretranslate()
"
14160,source/pymupdf.pdf,"• previousLocation – Document.prev_location()
"
14161,source/pymupdf.pdf,"• readContents – Page.read_contents()
"
14162,source/pymupdf.pdf,"• resolveLink – Document.resolve_link()
"
14163,source/pymupdf.pdf,"• rotationMatrix – Page.rotation_matrix
"
14164,source/pymupdf.pdf,"• searchFor – Page.search_for()
"
14165,source/pymupdf.pdf,"• searchPageFor – Document.search_page_for()
"
14166,source/pymupdf.pdf,"524
Chapter 30. Deprecated Names
"
14167,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14168,source/pymupdf.pdf,"• setAlpha – Pixmap.set_alpha()
"
14169,source/pymupdf.pdf,"• setBlendMode – Annot.set_blendmode()
"
14170,source/pymupdf.pdf,"• setBorder – Annot.set_border()
"
14171,source/pymupdf.pdf,"• setColors – Annot.set_colors()
"
14172,source/pymupdf.pdf,"• setCropBox – Page.set_cropbox()
"
14173,source/pymupdf.pdf,"• setFlags – Annot.set_flags()
"
14174,source/pymupdf.pdf,"• setInfo – Annot.set_info()
"
14175,source/pymupdf.pdf,"• setLanguage – Document.set_language()
"
14176,source/pymupdf.pdf,"• setLineEnds – Annot.set_line_ends()
"
14177,source/pymupdf.pdf,"• setMediaBox – Page.set_mediabox()
"
14178,source/pymupdf.pdf,"• setMetadata – Document.set_metadata()
"
14179,source/pymupdf.pdf,"• setName – Annot.set_name()
"
14180,source/pymupdf.pdf,"• setOC – Annot.set_oc()
"
14181,source/pymupdf.pdf,"• setOpacity – Annot.set_opacity()
"
14182,source/pymupdf.pdf,"• setOrigin – Pixmap.set_origin()
"
14183,source/pymupdf.pdf,"• setPixel – Pixmap.set_pixel()
"
14184,source/pymupdf.pdf,"• setRect – Annot.set_rect()
"
14185,source/pymupdf.pdf,"• setRect – Pixmap.set_rect()
"
14186,source/pymupdf.pdf,"• setResolution – Pixmap.set_dpi()
"
14187,source/pymupdf.pdf,"• setRotation – Page.set_rotation()
"
14188,source/pymupdf.pdf,"• setToC – Document.set_toc()
"
14189,source/pymupdf.pdf,"• setXmlMetadata – Document.set_xml_metadata()
"
14190,source/pymupdf.pdf,"• showPDFpage – Page.show_pdf_page()
"
14191,source/pymupdf.pdf,"• soundGet – Annot.get_sound()
"
14192,source/pymupdf.pdf,"• tintWith – Pixmap.tint_with()
"
14193,source/pymupdf.pdf,"• transformationMatrix – Page.transformation_matrix
"
14194,source/pymupdf.pdf,"• updateLink – Page.update_link()
"
14195,source/pymupdf.pdf,"• updateObject – Document.update_object()
"
14196,source/pymupdf.pdf,"• updateStream – Document.update_stream()
"
14197,source/pymupdf.pdf,"• wrapContents – Page.wrap_contents()
"
14198,source/pymupdf.pdf,"• writeImage – Pixmap.save()
"
14199,source/pymupdf.pdf,"• writePNG – Pixmap.save()
"
14200,source/pymupdf.pdf,"• writeText – Page.write_text()
"
14201,source/pymupdf.pdf,"• writeText – TextWriter.write_text()
"
14202,source/pymupdf.pdf,"• xrefLength – Document.xref_length()
"
14203,source/pymupdf.pdf,"• xrefObject – Document.xref_object()
"
14204,source/pymupdf.pdf,"525
"
14205,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14206,source/pymupdf.pdf,"• xrefStream – Document.xref_stream()
"
14207,source/pymupdf.pdf,"• xrefStreamRaw – Document.xref_stream_raw()
"
14208,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
14209,source/pymupdf.pdf,"526
Chapter 30. Deprecated Names
"
14210,source/pymupdf.pdf,"CHAPTER
"
14211,source/pymupdf.pdf,"THIRTYONE
"
14212,source/pymupdf.pdf,"FIND OUT ABOUT PYMUPDF UTILITIES
"
14213,source/pymupdf.pdf,"The GitHub repository PyMuPDF-Utilities contains a full range of examples, demonstrations and use cases.
"
14214,source/pymupdf.pdf,"527
"
14215,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14216,source/pymupdf.pdf,"528
Chapter 31. Find out about PyMuPDF Utilities
"
14217,source/pymupdf.pdf,"CHAPTER
"
14218,source/pymupdf.pdf,"THIRTYTWO
"
14219,source/pymupdf.pdf,"DO YOU NEED PDF TO DOCX CONVERSION?
"
14220,source/pymupdf.pdf,"We recommend the pdf2docx library which uses PyMuPDF and the python-docx library to provide simple document
conversion from PDF to DOCX format.
"
14221,source/pymupdf.pdf,"This documentation covers all versions up to 1.23.25.
"
14222,source/pymupdf.pdf,"529
"
14223,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14224,source/pymupdf.pdf,"530
Chapter 32. Do you need PDF to DOCX conversion?
"
14225,source/pymupdf.pdf,"INDEX
"
14226,source/pymupdf.pdf,"Symbols
__init__() (Archive method), 186
__init__() (Colorspace method), 188
__init__() (Device method), 422
__init__() (DisplayList method), 189
__init__() (Document method), 193
__init__() (DocumentWriter method), 239
__init__() (IRect method), 248
__init__() (Matrix method), 257
__init__() (Pixmap method), 312–314
__init__() (Point method), 326
__init__() (Quad method), 329
__init__() (Rect method), 333, 334
__init__() (Shape method), 339
__init__() (Story method), 356
__init__() (TextWriter method), 374
_isWrapped, 520
"
14227,source/pymupdf.pdf,"A
a (Matrix attribute), 259
abs_unit (Point attribute), 327
add() (Archive method), 187
add_bullet_list() (Xml method), 390
add_caret_annot() (Page method), 267
add_circle_annot() (Page method), 269
add_class() (Xml method), 393
add_code() (Xml method), 391
add_codeblock() (Xml method), 390
add_description_list() (Xml method), 390
add_division() (Xml method), 390
add_file_annot
examples, 60
"
14228,source/pymupdf.pdf,"add_file_annot() (Page method), 268
add_freetext_annot
align, 267
border_color, 267
color, 267
fill_color, 267
fontname, 267
fontsize, 267
rect, 267
rotate, 267
"
14229,source/pymupdf.pdf,"text_color, 267
"
14230,source/pymupdf.pdf,"add_freetext_annot() (Page method), 267
add_header() (Xml method), 390
add_highlight_annot() (Page method), 271
add_horizontal_line() (Xml method), 390
add_image() (Xml method), 390
add_ink_annot() (Page method), 269
add_kbd() (Xml method), 391
add_layer() (Document method), 196
add_line_annot() (Page method), 269
add_link() (Xml method), 390
add_number_list() (Xml method), 391
add_ocg() (Document method), 196
add_paragraph() (Xml method), 391
add_polygon_annot() (Page method), 271
add_polyline_annot() (Page method), 271
add_rect_annot() (Page method), 269
add_redact_annot() (Page method), 270
add_samp() (Xml method), 391
add_span() (Xml method), 391
add_squiggly_annot() (Page method), 271
add_stamp_annot() (Page method), 275
add_strikeout_annot() (Page method), 271
add_style() (Xml method), 393
add_subscript() (Xml method), 391
add_superscript() (Xml method), 391
add_text() (Xml method), 391
add_text_annot() (Page method), 267
add_underline_annot() (Page method), 271
add_var() (Xml method), 391
add_widget() (Page method), 276
addCaretAnnot, 520
addCircleAnnot, 520
addFileAnnot, 520
addFreetextAnnot, 520
addHighlightAnnot, 520
addInkAnnot, 520
addLineAnnot, 520
addPolygonAnnot, 520
addPolylineAnnot, 520
addRectAnnot, 520
addRedactAnnot, 520
"
14231,source/pymupdf.pdf,"531
"
14232,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14233,source/pymupdf.pdf,"addSquigglyAnnot, 520
addStampAnnot, 520
addStrikeoutAnnot, 520
addTextAnnot, 520
addUnderlineAnnot, 520
addWidget, 520
adjust
insert_htmlbox, 281
"
14234,source/pymupdf.pdf,"adobe_glyph_names(), 406
adobe_glyph_unicodes(), 406
align
add_freetext_annot, 267
insert_textbox, 281, 347
"
14235,source/pymupdf.pdf,"alpha
Annot.get_pixmap, 174
DisplayList.get_pixmap, 190
get_pixmap, 298
"
14236,source/pymupdf.pdf,"alpha (Pixmap attribute), 322
Annot (built-in class), 174
Annot.get_pixmap
alpha, 174
colorspace, 174
dpi, 174
matrix, 174
"
14237,source/pymupdf.pdf,"Annot.get_text
blocks, 174
clip, 174
dict, 174
flags, 174
html, 174
json, 174
rawdict, 174
text, 174
words, 174
xhtml, 174
xml, 174
"
14238,source/pymupdf.pdf,"Annot.update
blend_mode, 179
border_color, 179
cross_out, 179
fill_color, 179
fontsize, 179
rotate, 179
text_color, 179
"
14239,source/pymupdf.pdf,"Annot.update_file
buffer, 181
desc, 181
filename, 181
ufilename, 181
"
14240,source/pymupdf.pdf,"annot_names() (Page method), 300
annot_xrefs() (Page method), 300
annots
Document.insert_file, 220
Document.insert_pdf, 220
"
14241,source/pymupdf.pdf,"get_pixmap, 298
"
14242,source/pymupdf.pdf,"annots() (Page method), 279
append
Document.insert_file, 220
Document.insert_pdf, 220
"
14243,source/pymupdf.pdf,"append() (TextWriter method), 374
append_child() (Xml method), 394
appendv() (TextWriter method), 375
apply_redactions() (Page method), 277
archive
insert_htmlbox, 281
"
14244,source/pymupdf.pdf,"Archive (built-in class), 186
artbox (Page attribute), 307
ascender (Font attribute), 246
attach
embed file, 18, 19
"
14245,source/pymupdf.pdf,"authenticate() (Document method), 200
"
14246,source/pymupdf.pdf,"B
b (Matrix attribute), 259
Base14_Fonts (built-in variable), 433
bbox (Font attribute), 246
begin_page() (DocumentWriter method), 239
bl (IRect attribute), 250
bl (Rect attribute), 336
bleedbox (Page attribute), 307
blend_mode
Annot.update, 179
"
14247,source/pymupdf.pdf,"blendmode (Annot attribute), 177
blocks
Annot.get_text, 174
Page.get_text, 289
"
14248,source/pymupdf.pdf,"body (Story attribute), 358
border (Annot attribute), 184
border (Link attribute), 253
border_color
add_freetext_annot, 267
Annot.update, 179
"
14249,source/pymupdf.pdf,"border_color (Widget attribute), 385
border_dashes (Widget attribute), 385
border_style (Widget attribute), 385
border_width
insert_text, 280, 346
insert_textbox, 281, 347
"
14250,source/pymupdf.pdf,"border_width (Widget attribute), 385
bottom_left (IRect attribute), 250
bottom_left (Rect attribute), 336
bottom_right (IRect attribute), 250
bottom_right (Rect attribute), 337
bound() (Page method), 266
br (IRect attribute), 250
br (Rect attribute), 337
breadth
draw_squiggle, 283, 339
"
14251,source/pymupdf.pdf,"532
Index
"
14252,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14253,source/pymupdf.pdf,"draw_zigzag, 283, 341
"
14254,source/pymupdf.pdf,"buffer
Annot.update_file, 181
"
14255,source/pymupdf.pdf,"buffer (Font attribute), 246
button_caption (Widget attribute), 386
button_states() (Widget method), 384
"
14256,source/pymupdf.pdf,"C
c (Matrix attribute), 259
can_save_incrementally() (Document method), 217
catalog (built-in variable), 427
chapter_count (Document attribute), 236
chapter_page_count() (Document method), 202
chapterCount, 520
chapterPageCount, 520
char_lengths() (Font method), 245
choice_values (Widget attribute), 385
clean_contents() (Annot method), 419
clean_contents() (Page method), 418
cleanContents, 520
clear_with() (Pixmap method), 314
clearWith, 520
clip
Annot.get_text, 174
DisplayList.get_pixmap, 190
get_pixmap, 298
get_textpage, 291
Page.get_text, 289
search_for, 304
show_pdf_page, 302
"
14257,source/pymupdf.pdf,"clone() (Xml method), 394
close() (Document method), 226
close() (DocumentWriter method), 240
closePath
draw_bezier, 284
draw_circle, 283
draw_curve, 284
draw_line, 283
draw_oval, 283
draw_polyline, 284
draw_quad, 284
draw_rect, 284
draw_sector, 283
draw_squiggle, 283
draw_zigzag, 283
finish, 345
"
14258,source/pymupdf.pdf,"color
add_freetext_annot, 267
Document.insert_page, 221
draw_bezier, 284
draw_circle, 283
draw_curve, 284
draw_line, 283
draw_oval, 283
"
14259,source/pymupdf.pdf,"draw_polyline, 284
draw_quad, 284
draw_rect, 284
draw_sector, 283
draw_squiggle, 283
draw_zigzag, 283
finish, 345
insert_text, 280, 346
insert_textbox, 281, 347
"
14260,source/pymupdf.pdf,"color (TextWriter attribute), 377
color_count() (Pixmap method), 321
color_topusage() (Pixmap method), 321
colors (Annot attribute), 183
colors (Link attribute), 253
colorspace
Annot.get_pixmap, 174
DisplayList.get_pixmap, 190
get_pixmap, 298
"
14261,source/pymupdf.pdf,"Colorspace (built-in class), 188
colorspace (Pixmap attribute), 322
commit
overlay, 349
"
14262,source/pymupdf.pdf,"commit() (Shape method), 349
concat() (Matrix method), 258
contains() (IRect method), 249
contains() (Rect method), 335
contents (built-in variable), 428
ConversionHeader(), 413
ConversionTrailer(), 413
convert_to_pdf
examples, 57
"
14263,source/pymupdf.pdf,"convert_to_pdf() (Document method), 205
convertToPDF, 520
coordinate (built-in variable), 427
copy
examples, 65, 66
"
14264,source/pymupdf.pdf,"copy() (Pixmap method), 317
copy_page() (Document method), 222
copyPage, 520
copyPixmap, 520
create_element() (Xml method), 394
create_text_node() (Xml method), 394
CropBox, 520
CropBox (built-in variable), 427
cropbox (Page attribute), 307
cropbox_position (Page attribute), 307
CropBoxPosition, 520
cross_out
Annot.update, 179
"
14265,source/pymupdf.pdf,"CS_CMYK (built-in variable), 433
CS_GRAY (built-in variable), 433
CS_RGB (built-in variable), 433
csCMYK (built-in variable), 433
csGRAY (built-in variable), 433
"
14266,source/pymupdf.pdf,"Index
533
"
14267,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14268,source/pymupdf.pdf,"csRGB (built-in variable), 433
css
insert_htmlbox, 281
"
14269,source/pymupdf.pdf,"css_for_pymupdf_font(), 407
"
14270,source/pymupdf.pdf,"D
d (Matrix attribute), 259
dashes
draw_bezier, 284
draw_circle, 283
draw_curve, 284
draw_line, 283
draw_oval, 283
draw_polyline, 284
draw_quad, 284
draw_rect, 284
draw_sector, 283
draw_squiggle, 283
draw_zigzag, 283
finish, 345
"
14271,source/pymupdf.pdf,"debug() (Xml method), 394
del_toc_item() (Document method), 215
del_xml_metadata() (Document method), 413
delete_annot() (Page method), 276
delete_image
xref, 289
"
14272,source/pymupdf.pdf,"delete_image() (Page method), 289
delete_link() (Page method), 278
delete_page() (Document method), 221
delete_pages() (Document method), 222
delete_responses() (Annot method), 179
delete_widget() (Page method), 276
deleteAnnot, 520
deleteLink, 520
deletePage, 520
deletePageRange, 520
deleteWidget, 520
delimiters
Page.get_text, 289
"
14273,source/pymupdf.pdf,"derotation_matrix (Page attribute), 308
derotationMatrix, 520
desc
Annot.update_file, 181
Document.embfile_add, 224
Document.embfile_upd, 226
"
14274,source/pymupdf.pdf,"descender (Font attribute), 247
dest (Link attribute), 254
dest (linkDest attribute), 255
dest (Outline attribute), 263
Device (built-in class), 422
dict
Annot.get_text, 174
Page.get_text, 289
"
14275,source/pymupdf.pdf,"dictionary (built-in variable), 428
"
14276,source/pymupdf.pdf,"digest (Pixmap attribute), 322
DisplayList (built-in class), 189
DisplayList.get_pixmap
alpha, 190
clip, 190
colorspace, 190
matrix, 190
"
14277,source/pymupdf.pdf,"distance_to() (Point method), 326
doc (Shape attribute), 349
Document
filename, 193
filetype, 193
fontsize, 193
open, 193
rect, 193
stream, 193
"
14278,source/pymupdf.pdf,"Document (built-in class), 193
Document.convert_to_pdf
from_page, 205
rotate, 205
to_page, 205
"
14279,source/pymupdf.pdf,"Document.embfile_add
desc, 224
filename, 224
ufilename, 224
"
14280,source/pymupdf.pdf,"Document.embfile_upd
desc, 226
filename, 226
ufilename, 226
"
14281,source/pymupdf.pdf,"Document.insert_file
annots, 220
append, 220
from_page, 220
join, 220
links, 220
merge, 220
rotate, 220
show_progress, 220
start_at, 220
to_page, 220
"
14282,source/pymupdf.pdf,"Document.insert_page
color, 221
fontfile, 221
fontname, 221
fontsize, 221
height, 221
width, 221
"
14283,source/pymupdf.pdf,"Document.insert_pdf
annots, 220
append, 220
from_page, 220
join, 220
links, 220
merge, 220
"
14284,source/pymupdf.pdf,"534
Index
"
14285,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14286,source/pymupdf.pdf,"rotate, 220
show_progress, 220
start_at, 220
to_page, 220
"
14287,source/pymupdf.pdf,"Document.layout
fontsize, 213
height, 213
rect, 213
width, 213
"
14288,source/pymupdf.pdf,"Document.new_page
height, 221
width, 221
"
14289,source/pymupdf.pdf,"DocumentWriter (built-in class), 239
down (Outline attribute), 262
dpi
Annot.get_pixmap, 174
get_pixmap, 298
get_textpage_ocr, 291
"
14290,source/pymupdf.pdf,"draw() (Story method), 358
draw_bezier
closePath, 284
color, 284
dashes, 284
fill, 284
fill_opacity, 284
lineCap, 284
lineJoin, 284
morph, 284
oc, 284
overlay, 284
stroke_opacity, 284
width, 284
"
14291,source/pymupdf.pdf,"draw_bezier() (Page method), 284
draw_bezier() (Shape method), 341
draw_circle
closePath, 283
color, 283
dashes, 283
fill, 283
fill_opacity, 283
lineCap, 283
lineJoin, 283
morph, 283
oc, 283
overlay, 283
stroke_opacity, 283
width, 283
"
14292,source/pymupdf.pdf,"draw_circle() (Page method), 283
draw_circle() (Shape method), 342
draw_cont (Shape attribute), 350
draw_curve
closePath, 284
color, 284
dashes, 284
"
14293,source/pymupdf.pdf,"fill, 284
fill_opacity, 284
lineCap, 284
lineJoin, 284
morph, 284
oc, 284
overlay, 284
stroke_opacity, 284
width, 284
"
14294,source/pymupdf.pdf,"draw_curve() (Page method), 284
draw_curve() (Shape method), 343
draw_line
closePath, 283
color, 283
dashes, 283
fill, 283
fill_opacity, 283
lineCap, 283
lineJoin, 283
morph, 283
oc, 283
overlay, 283
stroke_opacity, 283
width, 283
"
14295,source/pymupdf.pdf,"draw_line() (Page method), 283
draw_line() (Shape method), 339
draw_oval
closePath, 283
color, 283
dashes, 283
fill, 283
fill_opacity, 283
lineCap, 283
lineJoin, 283
morph, 283
oc, 283
overlay, 283
stroke_opacity, 283
width, 283
"
14296,source/pymupdf.pdf,"draw_oval() (Page method), 283
draw_oval() (Shape method), 342
draw_polyline
closePath, 284
color, 284
dashes, 284
fill, 284
fill_opacity, 284
lineCap, 284
lineJoin, 284
morph, 284
oc, 284
overlay, 284
stroke_opacity, 284
width, 284
"
14297,source/pymupdf.pdf,"Index
535
"
14298,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14299,source/pymupdf.pdf,"draw_polyline() (Page method), 284
draw_polyline() (Shape method), 341
draw_quad
closePath, 284
color, 284
dashes, 284
fill, 284
fill_opacity, 284
lineCap, 284
lineJoin, 284
morph, 284
oc, 284
overlay, 284
stroke_opacity, 284
width, 284
"
14300,source/pymupdf.pdf,"draw_quad() (Page method), 284
draw_quad() (Shape method), 344
draw_rect
closePath, 284
color, 284
dashes, 284
fill, 284
fill_opacity, 284
lineCap, 284
lineJoin, 284
morph, 284
oc, 284
overlay, 284
radius, 284
stroke_opacity, 284
width, 284
"
14301,source/pymupdf.pdf,"draw_rect() (Page method), 284
draw_rect() (Shape method), 344
draw_sector
closePath, 283
color, 283
dashes, 283
fill, 283
fill_opacity, 283
fullSector, 283, 343
lineCap, 283
lineJoin, 283
morph, 283
oc, 283
overlay, 283
stroke_opacity, 283
width, 283
"
14302,source/pymupdf.pdf,"draw_sector() (Page method), 283
draw_sector() (Shape method), 343
draw_squiggle
breadth, 283, 339
closePath, 283
color, 283
dashes, 283
"
14303,source/pymupdf.pdf,"fill, 283
fill_opacity, 283
lineCap, 283
lineJoin, 283
morph, 283
oc, 283
overlay, 283
stroke_opacity, 283
width, 283
"
14304,source/pymupdf.pdf,"draw_squiggle() (Page method), 283
draw_squiggle() (Shape method), 339
draw_zigzag
breadth, 283, 341
closePath, 283
color, 283
dashes, 283
fill, 283
fill_opacity, 283
lineCap, 283
lineJoin, 283
morph, 283
oc, 283
overlay, 283
stroke_opacity, 283
width, 283
"
14305,source/pymupdf.pdf,"draw_zigzag() (Page method), 283
draw_zigzag() (Shape method), 341
drawBezier, 521
drawCircle, 521
drawCurve, 521
drawLine, 521
drawOval, 521
drawPolyline, 521
drawQuad, 521
drawRect, 521
drawSector, 521
drawSquiggle, 521
drawZigzag, 521
"
14306,source/pymupdf.pdf,"E
e (Matrix attribute), 259
element_positions() (Story method), 358
embed
file, attach, 18, 19
PDF, picture, 60
"
14307,source/pymupdf.pdf,"embeddedFileAdd, 521
embeddedFileCount, 521
embeddedFileDel, 521
embeddedFileGet, 521
embeddedFileInfo, 521
embeddedFileNames, 521
embeddedFileUpd, 521
embfile_add
examples, 60, 63
"
14308,source/pymupdf.pdf,"536
Index
"
14309,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14310,source/pymupdf.pdf,"embfile_add() (Document method), 224
embfile_count() (Document method), 224
embfile_del() (Document method), 225
embfile_get() (Document method), 224
embfile_info() (Document method), 225
embfile_names() (Document method), 225
embfile_upd() (Document method), 226
EMPTY_IRECT(), 422
EMPTY_QUAD(), 422
EMPTY_RECT(), 422
encoding
insert_font, 285
insert_text, 280, 346
insert_textbox, 281, 347
"
14311,source/pymupdf.pdf,"end_page() (DocumentWriter method), 239
entry_list (Archive attribute), 188
even_odd
finish, 345
"
14312,source/pymupdf.pdf,"examples
add_file_annot, 60
convert_to_pdf, 57
copy, 65, 66
embfile_add, 60, 63
extract_image, 58
insert_image, 60, 63
invert_irect, 66
JPEG, 63
PhotoImage, 63
Photoshop, 63
Postscript, 63
save, 63, 66
set_rect, 66
show_pdf_page, 60, 63
tobytes, 63
"
14313,source/pymupdf.pdf,"expandtabs
insert_textbox, 281, 347
"
14314,source/pymupdf.pdf,"extract
image non-PDF, 57
image PDF, 58
table, 39
text rectangle, 38
"
14315,source/pymupdf.pdf,"extract_font() (Document method), 230
extract_image
examples, 58
"
14316,source/pymupdf.pdf,"extract_image() (Document method), 229
extractBLOCKS() (TextPage method), 363
extractDICT() (TextPage method), 364
extractFont, 521
extractHTML() (TextPage method), 364
extractImage, 521
extractJSON() (TextPage method), 364
extractRAWDICT() (TextPage method), 365
extractRAWJSON() (TextPage method), 365
extractTEXT() (TextPage method), 363
"
14317,source/pymupdf.pdf,"extractText() (TextPage method), 363
extractWORDS() (TextPage method), 363
extractXHTML() (TextPage method), 364
extractXML() (TextPage method), 365
ez_save() (Document method), 219
"
14318,source/pymupdf.pdf,"F
f (Matrix attribute), 259
field_flags (Widget attribute), 386
field_label (Widget attribute), 385
field_name (Widget attribute), 385
field_type (Widget attribute), 386
field_type_string (Widget attribute), 386
field_value (Widget attribute), 385
file
attach embed, 18, 19
"
14319,source/pymupdf.pdf,"file extension
wrong, 35
"
14320,source/pymupdf.pdf,"file_info (Annot attribute), 180
fileGet, 521
filename
Annot.update_file, 181
Document, 193
Document.embfile_add, 224
Document.embfile_upd, 226
insert_image, 286
open, 193
replace_image, 288
"
14321,source/pymupdf.pdf,"fileSpec (linkDest attribute), 255
filetype
Document, 193
open, 193
"
14322,source/pymupdf.pdf,"fileUpd, 521
fill
draw_bezier, 284
draw_circle, 283
draw_curve, 284
draw_line, 283
draw_oval, 283
draw_polyline, 284
draw_quad, 284
draw_rect, 284
draw_sector, 283
draw_squiggle, 283
draw_zigzag, 283
finish, 345
insert_text, 280, 346
insert_textbox, 281, 347
"
14323,source/pymupdf.pdf,"fill_color
add_freetext_annot, 267
Annot.update, 179
"
14324,source/pymupdf.pdf,"fill_color (Widget attribute), 386
fill_opacity
draw_bezier, 284
"
14325,source/pymupdf.pdf,"Index
537
"
14326,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14327,source/pymupdf.pdf,"draw_circle, 283
draw_curve, 284
draw_line, 283
draw_oval, 283
draw_polyline, 284
draw_quad, 284
draw_rect, 284
draw_sector, 283
draw_squiggle, 283
draw_zigzag, 283
finish, 345
insert_text, 280, 346
insert_textbox, 281
"
14328,source/pymupdf.pdf,"fill_textbox() (TextWriter method), 375
fillTextbox, 521
find() (Xml method), 394
find_bookmark() (Document method), 201
find_next() (Xml method), 395
find_tables() (Page method), 273
findBookmark, 521
finish
closePath, 345
color, 345
dashes, 345
even_odd, 345
fill, 345
fill_opacity, 345
lineCap, 345
lineJoin, 345
morph, 345
oc, 345
stroke_opacity, 345
width, 345
"
14329,source/pymupdf.pdf,"finish() (Shape method), 345
first_annot (Page attribute), 308
first_child (Xml attribute), 395
first_link (Page attribute), 308
first_widget (Page attribute), 308
firstAnnot, 521
firstLink, 522
firstWidget, 522
fit() (Story method), 360
fit_height() (Story method), 361
fit_scale() (Story method), 360
fit_width() (Story method), 361
fitz_config (Tools attribute), 381
fitz_fontdescriptors, 409
flags
Annot.get_text, 174
get_textpage, 291
get_textpage_ocr, 291
Page.get_text, 289
search_for, 304
"
14330,source/pymupdf.pdf,"flags (Annot attribute), 182
"
14331,source/pymupdf.pdf,"flags (Font attribute), 246
flags (Link attribute), 253
flags (linkDest attribute), 255
Font (built-in class), 240
fontbuffer
insert_font, 285
"
14332,source/pymupdf.pdf,"fontfile
Document.insert_page, 221
insert_font, 285
insert_text, 280, 346
insert_textbox, 281, 347
"
14333,source/pymupdf.pdf,"fontname
add_freetext_annot, 267
Document.insert_page, 221
insert_font, 285
insert_text, 280, 346
insert_textbox, 281, 347
"
14334,source/pymupdf.pdf,"fontsize
add_freetext_annot, 267
Annot.update, 179
Document, 193
Document.insert_page, 221
Document.layout, 213
insert_text, 280, 346
insert_textbox, 281, 347
open, 193
"
14335,source/pymupdf.pdf,"fontsize (built-in variable), 430
FormFonts (Document attribute), 236
from_page
Document.convert_to_pdf, 205
Document.insert_file, 220
Document.insert_pdf, 220
"
14336,source/pymupdf.pdf,"full
get_textpage_ocr, 291
"
14337,source/pymupdf.pdf,"fullcopy_page() (Document method), 223
fullcopyPage, 522
fullSector
draw_sector, 283, 343
"
14338,source/pymupdf.pdf,"G
gamma_with() (Pixmap method), 315
gammaWith, 522
gen_id() (Tools method), 378
get_area() (IRect method), 248
get_area() (Rect method), 335
get_attribute_value() (Xml method), 391
get_attributes() (Xml method), 391
get_bboxlog() (Page method), 414
get_cdrawings() (Page method), 295
get_char_widths() (Document method), 419
get_contents() (Page method), 418
get_displaylist() (Page method), 418
get_drawings() (Page method), 292
get_file() (Annot method), 181
"
14339,source/pymupdf.pdf,"538
Index
"
14340,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14341,source/pymupdf.pdf,"get_fonts() (Page method), 295
get_image_bbox
transform, 297
"
14342,source/pymupdf.pdf,"get_image_bbox() (Page method), 297
get_image_info
hashes, 295
xrefs, 295
"
14343,source/pymupdf.pdf,"get_image_info() (Page method), 295
get_image_rects
transform, 296
"
14344,source/pymupdf.pdf,"get_image_rects() (Page method), 296
get_images() (Page method), 295
get_label() (Page method), 278
get_layer() (Document method), 198
get_layers() (Document method), 196
get_links() (Page method), 278
get_new_xref() (Document method), 420
get_oc() (Annot method), 176
get_oc() (Document method), 195
get_ocgs() (Document method), 199
get_ocmd() (Document method), 198
get_page_fonts() (Document method), 211
get_page_images() (Document method), 211
get_page_labels() (Document method), 200
get_page_numbers() (Document method), 200
get_page_pixmap() (Document method), 210
get_page_text() (Document method), 212
get_page_xobjects() (Document method), 210
get_pdf_now(), 410
get_pdf_str(), 411
get_pixmap
alpha, 298
annots, 298
clip, 298
colorspace, 298
dpi, 298
matrix, 298
"
14345,source/pymupdf.pdf,"get_pixmap() (Annot method), 174
get_pixmap() (DisplayList method), 190
get_pixmap() (Page method), 298
get_sigflags() (Document method), 224
get_sound() (Annot method), 181
get_svg_image
matrix, 298
"
14346,source/pymupdf.pdf,"get_svg_image() (Page method), 298
get_tessdata(), 421
get_text() (Annot method), 174
get_text() (Page method), 289
get_text_blocks() (Page method), 417
get_text_length(), 410
get_text_words() (Page method), 418
get_textbox
rect, 290
textpage, 290
"
14347,source/pymupdf.pdf,"get_textbox() (Annot method), 175
get_textbox() (Page method), 290
get_textpage
clip, 291
flags, 291
"
14348,source/pymupdf.pdf,"get_textpage() (DisplayList method), 190
get_textpage() (Page method), 291
get_textpage_ocr
dpi, 291
flags, 291
full, 291
language, 291
tessdata, 291
"
14349,source/pymupdf.pdf,"get_textpage_ocr() (Page method), 291
get_texttrace() (Page method), 414
get_toc() (Document method), 206
get_xml_metadata() (Document method), 213
get_xobjects() (Page method), 296
getArea, 522
getCharWidths, 522
getContents, 522
getDisplayList, 522
getDrawings, 522
getFontList, 522
getImageBbox, 522
getImageData, 522
getImageList, 522
getLinks, 522
getOCGs, 522
getPageFontList, 522
getPageImageList, 522
getPagePixmap, 522
getPageText, 522
getPageXObjectList, 522
getPDFnow, 522
getPDFstr, 522
getPixmap, 522
getPNGData, 522
getPNGdata, 522
getRectArea, 522
getSigFlags, 522
getSVGimage, 522
getText, 522
getTextBlocks, 522
getTextbox, 522, 523
getTextLength, 523
getTextPage, 523
getTextWords, 523
getToC, 523
getXmlMetadata, 523
glyph_advance() (Font method), 243
glyph_bbox() (Font method), 244
glyph_count (Font attribute), 246
glyph_name_to_unicode(), 405
"
14350,source/pymupdf.pdf,"Index
539
"
14351,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14352,source/pymupdf.pdf,"glyph_name_to_unicode() (Font method), 244
"
14353,source/pymupdf.pdf,"H
h (Pixmap attribute), 324
has_annots() (Document method), 231
has_entry() (Archive method), 187
has_glyph() (Font method), 242
has_links() (Document method), 231
has_popup (Annot attribute), 183
hashes
get_image_info, 295
"
14354,source/pymupdf.pdf,"height
Document.insert_page, 221
Document.layout, 213
Document.new_page, 221
open, 193
"
14355,source/pymupdf.pdf,"height (IRect attribute), 251
height (Pixmap attribute), 324
height (Quad attribute), 331
height (Rect attribute), 337
height (Shape attribute), 349
html
Annot.get_text, 174
Page.get_text, 289
"
14356,source/pymupdf.pdf,"I
image
non-PDF, extract, 57
PDF, extract, 58
resolution, 55
SVG, vector, 63
"
14357,source/pymupdf.pdf,"image_profile(), 411
ImageProperties, 523
include_point() (Rect method), 335
include_rect() (Rect method), 335
includePoint, 523
includeRect, 523
INFINITE_IRECT(), 422
INFINITE_QUAD(), 422
INFINITE_RECT(), 422
info (Annot attribute), 182
inheritable (built-in variable), 427
insert_after() (Xml method), 394
insert_before() (Xml method), 394
insert_file() (Document method), 220
insert_font
encoding, 285
fontbuffer, 285
fontfile, 285
fontname, 285
set_simple, 285
"
14358,source/pymupdf.pdf,"insert_font() (Page method), 285
insert_htmlbox
adjust, 281
"
14359,source/pymupdf.pdf,"archive, 281
css, 281
morph, 281
oc, 281
opacity, 281
overlay, 281
rect, 281
rotate, 281
text, 281
"
14360,source/pymupdf.pdf,"insert_htmlbox() (Page method), 281
insert_image
examples, 60, 63
filename, 286
keep_proportion, 286
mask, 286
oc, 286
overlay, 286
pixmap, 286
rotate, 286
stream, 286
xref, 286
"
14361,source/pymupdf.pdf,"insert_image() (Page method), 286
insert_link() (Page method), 278
insert_page() (Document method), 221
insert_pdf() (Document method), 220
insert_text
border_width, 280, 346
color, 280, 346
encoding, 280, 346
fill, 280, 346
fill_opacity, 280, 346
fontfile, 280, 346
fontname, 280, 346
fontsize, 280, 346
lineheight, 346
morph, 280, 346
oc, 280, 346
overlay, 280
render_mode, 280, 346
rotate, 280, 346
stroke_opacity, 280, 346
"
14362,source/pymupdf.pdf,"insert_text() (Page method), 280
insert_text() (Shape method), 346
insert_textbox
align, 281, 347
border_width, 281, 347
color, 281, 347
encoding, 281, 347
expandtabs, 281, 347
fill, 281, 347
fill_opacity, 281
fontfile, 281, 347
fontname, 281, 347
fontsize, 281, 347
"
14363,source/pymupdf.pdf,"540
Index
"
14364,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14365,source/pymupdf.pdf,"lineheight, 347
morph, 281, 347
oc, 281, 347
overlay, 281
render_mode, 281, 347
rotate, 281, 347
stroke_opacity, 281
"
14366,source/pymupdf.pdf,"insert_textbox() (Page method), 281
insert_textbox() (Shape method), 347
insertFont, 523
insertImage, 523
insertLink, 523
insertPage, 523
insertPDF, 523
insertText, 523
insertTextbox, 523
interpolate (Pixmap attribute), 325
intersect() (IRect method), 249
intersect() (Rect method), 334
intersects() (IRect method), 249
intersects() (Rect method), 335
invert() (Matrix method), 258
invert_irect
examples, 66
"
14367,source/pymupdf.pdf,"invert_irect() (Pixmap method), 317
invertIRect, 523
IRect (built-in class), 248
irect (Pixmap attribute), 322
irect (Rect attribute), 336
irect_like (built-in variable), 427
irt_xref (Annot attribute), 183
is_closed (Document attribute), 233
is_convex (Quad attribute), 330
is_dirty (Document attribute), 234
is_empty (IRect attribute), 251
is_empty (Quad attribute), 331
is_empty (Rect attribute), 337
is_encrypted (Document attribute), 235
is_external (Link attribute), 253
is_external (Outline attribute), 263
is_fast_webaccess (Document attribute), 234
is_form_pdf (Document attribute), 234
is_infinite (IRect attribute), 251
is_infinite (Rect attribute), 337
is_monochrome (Pixmap attribute), 322
is_open (Annot attribute), 184
is_open (Outline attribute), 263
is_pdf (Document attribute), 234
is_rectangular (Quad attribute), 331
is_rectilinear (Matrix attribute), 259
is_reflowable (Document attribute), 234
is_repaired (Document attribute), 234
is_signed (Widget attribute), 386
is_stream() (Document method), 420
"
14368,source/pymupdf.pdf,"is_text (Xml attribute), 395
is_unicolor (Pixmap attribute), 322
is_valid (Rect attribute), 338
is_wrapped (Page attribute), 417
is_writable (Font attribute), 247
isConvex, 523
isDirty, 523
isEmpty, 523
isFormPDF, 523
isInfinite, 523
isMap (linkDest attribute), 255
isPDF, 523
isRectangular, 523
isRectilinear, 523
isReflowable, 523
isRepaired, 523
isStream, 524
isUri (linkDest attribute), 255
"
14369,source/pymupdf.pdf,"J
join
Document.insert_file, 220
Document.insert_pdf, 220
"
14370,source/pymupdf.pdf,"journal_can_do() (Document method), 232
journal_enable() (Document method), 232
journal_load() (Document method), 233
journal_op_name() (Document method), 232
journal_position() (Document method), 232
journal_redo() (Document method), 233
journal_save() (Document method), 233
journal_start_op() (Document method), 232
journal_stop_op() (Document method), 232
journal_undo() (Document method), 233
JPEG
examples, 63
"
14371,source/pymupdf.pdf,"json
Annot.get_text, 174
Page.get_text, 289
"
14372,source/pymupdf.pdf,"K
keep_proportion
insert_image, 286
show_pdf_page, 302
"
14373,source/pymupdf.pdf,"key-value
lookup text, 37
"
14374,source/pymupdf.pdf,"kind (linkDest attribute), 255
"
14375,source/pymupdf.pdf,"L
language
get_textpage_ocr, 291
"
14376,source/pymupdf.pdf,"last_child (Xml attribute), 395
last_location (Document attribute), 236
last_point (TextWriter attribute), 377
lastLocation, 524
"
14377,source/pymupdf.pdf,"Index
541
"
14378,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14379,source/pymupdf.pdf,"lastPoint (Shape attribute), 350
layer_ui_configs() (Document method), 199
layout() (Document method), 213
ligature (built-in variable), 430
line_ends (Annot attribute), 182
lineCap
draw_bezier, 284
draw_circle, 283
draw_curve, 284
draw_line, 283
draw_oval, 283
draw_polyline, 284
draw_quad, 284
draw_rect, 284
draw_sector, 283
draw_squiggle, 283
draw_zigzag, 283
finish, 345
"
14380,source/pymupdf.pdf,"lineEnds, 524
lineheight
insert_text, 346
insert_textbox, 347
"
14381,source/pymupdf.pdf,"lineJoin
draw_bezier, 284
draw_circle, 283
draw_curve, 284
draw_line, 283
draw_oval, 283
draw_polyline, 284
draw_quad, 284
draw_rect, 284
draw_sector, 283
draw_squiggle, 283
draw_zigzag, 283
finish, 345
"
14382,source/pymupdf.pdf,"Link (built-in class), 252
LINK_FLAG_B_VALID (built-in variable), 438
LINK_FLAG_FIT_H (built-in variable), 438
LINK_FLAG_FIT_V (built-in variable), 438
LINK_FLAG_L_VALID (built-in variable), 438
LINK_FLAG_R_IS_ZOOM (built-in variable), 438
LINK_FLAG_R_VALID (built-in variable), 438
LINK_FLAG_T_VALID (built-in variable), 438
LINK_GOTO (built-in variable), 437
LINK_GOTOR (built-in variable), 437
LINK_LAUNCH (built-in variable), 437
LINK_NAMED (built-in variable), 437
LINK_NONE (built-in variable), 437
LINK_URI (built-in variable), 437
linkDest (built-in class), 255
links
Document.insert_file, 220
Document.insert_pdf, 220
"
14383,source/pymupdf.pdf,"links() (Page method), 279
"
14384,source/pymupdf.pdf,"ll (Quad attribute), 330
load_annot() (Page method), 301
load_links() (Page method), 301
load_page() (Document method), 202
load_widget() (Page method), 301
loadAnnot, 524
loadLinks, 524
loadPage, 524
lookup
text key-value, 37
"
14385,source/pymupdf.pdf,"lr (Quad attribute), 330
lt (linkDest attribute), 255
"
14386,source/pymupdf.pdf,"M
make_bookmark() (Document method), 201
make_table(), 408
makeBookmark, 524
markinfo (Document attribute), 234
mask
insert_image, 286
"
14387,source/pymupdf.pdf,"matrix
Annot.get_pixmap, 174
DisplayList.get_pixmap, 190
get_pixmap, 298
get_svg_image, 298
"
14388,source/pymupdf.pdf,"Matrix (built-in class), 257
matrix_like (built-in variable), 427
MediaBox, 524
MediaBox (built-in variable), 427
mediabox (Page attribute), 307
mediabox_size (Page attribute), 307
MediaBoxSize, 524
merge
Document.insert_file, 220
Document.insert_pdf, 220
"
14389,source/pymupdf.pdf,"metadata (Document attribute), 235
metadataXML, 524
morph
draw_bezier, 284
draw_circle, 283
draw_curve, 284
draw_line, 283
draw_oval, 283
draw_polyline, 284
draw_quad, 284
draw_rect, 284
draw_sector, 283
draw_squiggle, 283
draw_zigzag, 283
finish, 345
insert_htmlbox, 281
insert_text, 280, 346
insert_textbox, 281, 347
"
14390,source/pymupdf.pdf,"morph() (IRect method), 249
"
14391,source/pymupdf.pdf,"542
Index
"
14392,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14393,source/pymupdf.pdf,"morph() (Quad method), 329
morph() (Rect method), 336
move_page() (Document method), 223
movePage, 524
mupdf_display_errors() (Tools method), 381
mupdf_warnings() (Tools method), 381
"
14394,source/pymupdf.pdf,"N
n (Colorspace attribute), 189
n (Pixmap attribute), 324
name (Colorspace attribute), 188
name (Document attribute), 236
name (Font attribute), 246
named (linkDest attribute), 256
need_appearances() (Document method), 223
needs_pass (Document attribute), 235
needsPass, 524
new_page() (Document method), 221
new_shape() (Page method), 304
newPage, 524
newShape, 524
newWindow (linkDest attribute), 256
next (Annot attribute), 182
next (Link attribute), 254
next (Outline attribute), 263
next (Widget attribute), 385
next (Xml attribute), 395
next_location() (Document method), 202
nextLocation, 524
non-PDF
extract image, 57
"
14395,source/pymupdf.pdf,"norm() (IRect method), 250
norm() (Matrix method), 258
norm() (Point method), 327
norm() (Rect method), 336
normalize() (IRect method), 250
normalize() (Rect method), 336
number (Page attribute), 308
"
14396,source/pymupdf.pdf,"O
object (built-in variable), 429
oc
draw_bezier, 284
draw_circle, 283
draw_curve, 284
draw_line, 283
draw_oval, 283
draw_polyline, 284
draw_quad, 284
draw_rect, 284
draw_sector, 283
draw_squiggle, 283
draw_zigzag, 283
finish, 345
"
14397,source/pymupdf.pdf,"insert_htmlbox, 281
insert_image, 286
insert_text, 280, 346
insert_textbox, 281, 347
"
14398,source/pymupdf.pdf,"OCCD (built-in variable), 430
OCG (built-in variable), 430
OCMD (built-in variable), 430
OCPD (built-in variable), 430
on_state() (Widget method), 384
opacity
insert_htmlbox, 281
"
14399,source/pymupdf.pdf,"opacity (Annot attribute), 181
opacity (TextWriter attribute), 377
open
Document, 193
filename, 193
filetype, 193
fontsize, 193
height, 193
rect, 193
stream, 193
width, 193
"
14400,source/pymupdf.pdf,"Outline (built-in class), 262
outline (Document attribute), 233
outline_xref() (Document method), 215
overlay
commit, 349
draw_bezier, 284
draw_circle, 283
draw_curve, 284
draw_line, 283
draw_oval, 283
draw_polyline, 284
draw_quad, 284
draw_rect, 284
draw_sector, 283
draw_squiggle, 283
draw_zigzag, 283
insert_htmlbox, 281
insert_image, 286
insert_text, 280
insert_textbox, 281
show_pdf_page, 302
"
14401,source/pymupdf.pdf,"P
Page (built-in class), 266
page (built-in variable), 429
page (linkDest attribute), 256
page (Outline attribute), 263
page (Shape attribute), 349
Page.get_text
blocks, 289
clip, 289
delimiters, 289
"
14402,source/pymupdf.pdf,"Index
543
"
14403,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14404,source/pymupdf.pdf,"dict, 289
flags, 289
html, 289
json, 289
rawdict, 289
sort, 289
text, 289
textpage, 289
words, 289
xhtml, 289
xml, 289
"
14405,source/pymupdf.pdf,"page_count (Document attribute), 236
page_cropbox() (Document method), 204
page_xref() (Document method), 204
pageCount, 524
pageCropBox, 524
pagelayout (Document attribute), 235
pagemode (Document attribute), 235
pages() (Document method), 204
pagetree (built-in variable), 429
pageXref, 524
paper_rect(), 405
paper_size(), 404
paper_sizes(), 409
PaperRect, 524
PaperSize, 524
paperSizes, 524
parent (Annot attribute), 181
parent (Page attribute), 308
Partial Pixmaps, 56
PDF
extract image, 58
picture embed, 60
"
14406,source/pymupdf.pdf,"pdf_catalog() (Document method), 227
pdf_trailer() (Document method), 227
PDFCatalog, 524
pdfcolor, 410
pdfocr_save() (Pixmap method), 318
pdfocr_tobytes() (Pixmap method), 319
PDFTrailer, 524
permissions (Document attribute), 235
PhotoImage
examples, 63
"
14407,source/pymupdf.pdf,"Photoshop
examples, 63
"
14408,source/pymupdf.pdf,"picture
embed PDF, 60
"
14409,source/pymupdf.pdf,"pil_save() (Pixmap method), 319
pil_tobytes() (Pixmap method), 320
pillowData, 524
pillowWrite, 524
pixel() (Pixmap method), 315
pixmap
insert_image, 286
"
14410,source/pymupdf.pdf,"replace_image, 288
"
14411,source/pymupdf.pdf,"Pixmap (built-in class), 312
place() (Story method), 357
planish_line(), 408
planishLine, 524
Point (built-in class), 326
point_like (built-in variable), 427
popup_rect (Annot attribute), 184
popup_xref (Annot attribute), 183
Postscript
examples, 63
"
14412,source/pymupdf.pdf,"preRotate, 524
prerotate() (Matrix method), 258
preScale, 524
prescale() (Matrix method), 258
preShear, 524
preshear() (Matrix method), 258
preTranslate, 524
pretranslate() (Matrix method), 258
prev_location() (Document method), 202
previous (Xml attribute), 395
previousLocation, 524
"
14413,source/pymupdf.pdf,"Q
Quad (built-in class), 329
quad (IRect attribute), 250
quad (Rect attribute), 337
quad_like (built-in variable), 427
quads
search_for, 304
"
14414,source/pymupdf.pdf,"R
radius
draw_rect, 284
"
14415,source/pymupdf.pdf,"rawdict
Annot.get_text, 174
Page.get_text, 289
"
14416,source/pymupdf.pdf,"rb (linkDest attribute), 256
read_contents() (Page method), 419
read_entry() (Archive method), 187
readContents, 524
reading order
text, 38
"
14417,source/pymupdf.pdf,"recover_char_quad(), 420
recover_line_quad(), 421
recover_quad(), 420
recover_span_quad(), 421
rect
add_freetext_annot, 267
Document, 193
Document.layout, 213
get_textbox, 290
insert_htmlbox, 281
open, 193
"
14418,source/pymupdf.pdf,"544
Index
"
14419,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14420,source/pymupdf.pdf,"rect (Annot attribute), 182
Rect (built-in class), 333
rect (DisplayList attribute), 190
rect (IRect attribute), 250
rect (Link attribute), 253
rect (Page attribute), 308
rect (Quad attribute), 329
rect (Shape attribute), 350
rect (TextPage attribute), 366
rect (TextWriter attribute), 377
rect (Widget attribute), 386
rect_delta (Annot attribute), 184
rect_like (built-in variable), 427
rectangle
extract text, 38
"
14421,source/pymupdf.pdf,"reload_page() (Document method), 203
remove() (Xml method), 394
remove_attribute() (Xml method), 392
render_mode
insert_text, 280, 346
insert_textbox, 281, 347
"
14422,source/pymupdf.pdf,"replace_image
filename, 288
pixmap, 288
stream, 288
xref, 288
"
14423,source/pymupdf.pdf,"replace_image() (Page method), 288
reset() (Story method), 358
reset() (Widget method), 385
reset_mupdf_warnings() (Tools method), 381
resolution
image, 55
zoom, 55
"
14424,source/pymupdf.pdf,"resolution (built-in variable), 430
resolve_names() (Document method), 203
resolveLink, 524
resources (built-in variable), 428
root (Xml attribute), 395
rotate
add_freetext_annot, 267
Annot.update, 179
Document.convert_to_pdf, 205
Document.insert_file, 220
Document.insert_pdf, 220
insert_htmlbox, 281
insert_image, 286
insert_text, 280, 346
insert_textbox, 281, 347
set_rotation, 302
show_pdf_page, 302
"
14425,source/pymupdf.pdf,"rotation (Annot attribute), 181
rotation (Page attribute), 306
rotation_matrix (Page attribute), 308
rotationMatrix, 524
"
14426,source/pymupdf.pdf,"round() (Rect method), 334
run() (DisplayList method), 189
run() (Page method), 414
"
14427,source/pymupdf.pdf,"S
samples (Pixmap attribute), 322
samples_mv (Pixmap attribute), 323
samples_ptr (Pixmap attribute), 323
save
examples, 63, 66
"
14428,source/pymupdf.pdf,"save() (Document method), 217
save() (Pixmap method), 318
save_snapshot() (Document method), 233
saveIncr() (Document method), 219
script (Widget attribute), 386
script_blur (Widget attribute), 387
script_calc (Widget attribute), 387
script_change (Widget attribute), 387
script_focus (Widget attribute), 387
script_format (Widget attribute), 387
script_stroke (Widget attribute), 386
scrub() (Document method), 217
search() (TextPage method), 365
search_for
clip, 304
flags, 304
quads, 304
textpage, 304
"
14429,source/pymupdf.pdf,"search_for() (Page method), 304
search_page_for() (Document method), 220
searchFor, 524
searchPageFor, 524
select() (Document method), 213
set_aa_level() (Tools method), 381
set_align() (Xml method), 391
set_alpha() (Pixmap method), 316
set_annot_stem() (Tools method), 379
set_artbox() (Page method), 306
set_attribute() (Xml method), 391
set_bgcolor() (Xml method), 392
set_bleedbox() (Page method), 306
set_blendmode() (Annot method), 177
set_bold() (Xml method), 392
set_border() (Annot method), 178
set_border() (Link method), 252
set_color() (Xml method), 392
set_colors() (Annot method), 179
set_colors() (Link method), 252
set_columns() (Xml method), 392
set_contents() (Page method), 418
set_cropbox() (Page method), 306
set_dpi() (Pixmap method), 316
set_flags() (Annot method), 179
set_flags() (Link method), 253
"
14430,source/pymupdf.pdf,"Index
545
"
14431,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14432,source/pymupdf.pdf,"set_font() (Xml method), 392
set_fontsize() (Xml method), 392
set_id() (Xml method), 392
set_info() (Annot method), 175
set_irt_xref() (Annot method), 176
set_italic() (Xml method), 393
set_layer() (Document method), 198
set_layer_ui_config() (Document method), 199
set_leading() (Xml method), 393
set_line_ends() (Annot method), 175
set_lineheight() (Xml method), 393
set_margins() (Xml method), 393
set_markinfo() (Document method), 214
set_mediabox() (Page method), 305
set_metadata() (Document method), 213
set_name() (Annot method), 177
set_oc() (Annot method), 176
set_oc() (Document method), 196
set_ocmd() (Document method), 197
set_opacity() (Annot method), 177
set_open() (Annot method), 176
set_origin() (Pixmap method), 316
set_page_labels() (Document method), 201
set_pagebreak_after() (Xml method), 393
set_pagebreak_before() (Xml method), 393
set_pagelayout() (Document method), 214
set_pagemode() (Document method), 214
set_pixel() (Pixmap method), 315
set_popup() (Annot method), 176
set_properties() (Xml method), 393
set_rect
examples, 66
"
14433,source/pymupdf.pdf,"set_rect() (Annot method), 178
set_rect() (Pixmap method), 316
set_rotation
rotate, 302
"
14434,source/pymupdf.pdf,"set_rotation() (Annot method), 178
set_rotation() (Page method), 302
set_simple
insert_font, 285
"
14435,source/pymupdf.pdf,"set_small_glyph_heights() (Tools method), 379
set_subset_fontnames() (Tools method), 379
set_text_indent() (Xml method), 393
set_toc() (Document method), 214
set_toc_item() (Document method), 215
set_trimbox() (Page method), 306
set_xml_metadata() (Document method), 214
setAlpha, 525
setBlendMode, 525
setBorder, 525
setColors, 525
setCropBox, 525
setFlags, 525
setInfo, 525
"
14436,source/pymupdf.pdf,"setLanguage, 525
setLineEnds, 525
setMediaBox, 525
setMetadata, 525
setName, 525
setOC, 525
setOpacity, 525
setOrigin, 525
setPixel, 525
setRect, 525
setResolution, 525
setRotation, 525
setToC, 525
setXmlMetadata, 525
Shape (built-in class), 339
show_aa_level() (Tools method), 380
show_pdf_page
clip, 302
examples, 60, 63
keep_proportion, 302
overlay, 302
rotate, 302
"
14437,source/pymupdf.pdf,"show_pdf_page() (Page method), 302
show_progress
Document.insert_file, 220
Document.insert_pdf, 220
"
14438,source/pymupdf.pdf,"showPDFpage, 525
shrink() (Pixmap method), 315
size (Pixmap attribute), 324
sort
Page.get_text, 289
"
14439,source/pymupdf.pdf,"soundGet, 525
sRGB_to_pdf(), 405
sRGB_to_rgb(), 405
start_at
Document.insert_file, 220
Document.insert_pdf, 220
"
14440,source/pymupdf.pdf,"store_maxsize (Tools attribute), 383
store_shrink() (Tools method), 380
store_size (Tools attribute), 383
Story (built-in class), 356
Story.FitResult (built-in class), 360
stream
Document, 193
insert_image, 286
open, 193
replace_image, 288
"
14441,source/pymupdf.pdf,"stream (built-in variable), 429
stride (Pixmap attribute), 322
stroke_opacity
draw_bezier, 284
draw_circle, 283
draw_curve, 284
draw_line, 283
"
14442,source/pymupdf.pdf,"546
Index
"
14443,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14444,source/pymupdf.pdf,"draw_oval, 283
draw_polyline, 284
draw_quad, 284
draw_rect, 284
draw_sector, 283
draw_squiggle, 283
draw_zigzag, 283
finish, 345
insert_text, 280, 346
insert_textbox, 281
"
14445,source/pymupdf.pdf,"subset_fonts() (Document method), 231
SVG
vector image, 63
"
14446,source/pymupdf.pdf,"switch_layer() (Document method), 196
"
14447,source/pymupdf.pdf,"T
table
extract, 39
"
14448,source/pymupdf.pdf,"tagname (Xml attribute), 395
tessdata
get_textpage_ocr, 291
"
14449,source/pymupdf.pdf,"TESSDATA_PREFIX, 410
text
Annot.get_text, 174
insert_htmlbox, 281
key-value, lookup, 37
Page.get_text, 289
reading order, 38
rectangle, extract, 38
"
14450,source/pymupdf.pdf,"text (Xml attribute), 395
TEXT_ALIGN_CENTER (built-in variable), 435
TEXT_ALIGN_JUSTIFY (built-in variable), 435
TEXT_ALIGN_LEFT (built-in variable), 435
TEXT_ALIGN_RIGHT (built-in variable), 435
text_color
add_freetext_annot, 267
Annot.update, 179
"
14451,source/pymupdf.pdf,"text_color (Widget attribute), 386
text_cont (Shape attribute), 350
TEXT_DEHYPHENATE (built-in variable), 436
text_font (Widget attribute), 386
text_fontsize (Widget attribute), 386
TEXT_INHIBIT_SPACES (built-in variable), 436
text_length() (Font method), 244
text_maxlen (Widget attribute), 386
TEXT_MEDIABOX_CLIP (built-in variable), 436
TEXT_PRESERVE_IMAGES (built-in variable), 436
TEXT_PRESERVE_LIGATURES (built-in variable), 435
TEXT_PRESERVE_SPANS (built-in variable), 436
TEXT_PRESERVE_WHITESPACE (built-in variable), 436
text_rect (TextWriter attribute), 377
text_type (Widget attribute), 386
TEXTFLAGS_BLOCKS (built-in variable), 436
TEXTFLAGS_DICT (built-in variable), 436
"
14452,source/pymupdf.pdf,"TEXTFLAGS_HTML (built-in variable), 436
TEXTFLAGS_RAWDICT (built-in variable), 436
TEXTFLAGS_SEARCH (built-in variable), 437
TEXTFLAGS_TEXT (built-in variable), 436
TEXTFLAGS_WORDS (built-in variable), 436
TEXTFLAGS_XHTML (built-in variable), 436
TEXTFLAGS_XML (built-in variable), 437
textpage
get_textbox, 290
Page.get_text, 289
search_for, 304
"
14453,source/pymupdf.pdf,"TextPage (built-in class), 363
TextWriter (built-in class), 374
tint_with() (Pixmap method), 314
tintWith, 525
title (Outline attribute), 263
tl (IRect attribute), 250
tl (Rect attribute), 336
to_page
Document.convert_to_pdf, 205
Document.insert_file, 220
Document.insert_pdf, 220
"
14454,source/pymupdf.pdf,"tobytes
examples, 63
"
14455,source/pymupdf.pdf,"tobytes() (Document method), 219
tobytes() (Pixmap method), 318
Tools (built-in class), 378
top_left (IRect attribute), 250
top_left (Rect attribute), 336
top_right (IRect attribute), 250
top_right (Rect attribute), 336
torect() (IRect method), 249
torect() (Rect method), 335
totalcont (Shape attribute), 350
tr (IRect attribute), 250
tr (Rect attribute), 336
trailer (built-in variable), 428
transform
get_image_bbox, 297
get_image_rects, 296
"
14456,source/pymupdf.pdf,"transform() (Point method), 327
transform() (Quad method), 329
transform() (Rect method), 334
transformation_matrix (Page attribute), 307
transformationMatrix, 525
trimbox (Page attribute), 307
type (Annot attribute), 182
"
14457,source/pymupdf.pdf,"U
ufilename
Annot.update_file, 181
Document.embfile_add, 224
Document.embfile_upd, 226
"
14458,source/pymupdf.pdf,"ul (Quad attribute), 330
"
14459,source/pymupdf.pdf,"Index
547
"
14460,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14461,source/pymupdf.pdf,"unicode_to_glyph_name(), 406
unicode_to_glyph_name() (Font method), 244
unit (Point attribute), 327
unitvector (built-in variable), 430
unset_quad_corrections() (Tools method), 380
update() (Annot method), 179
update() (Widget method), 385
update_file() (Annot method), 181
update_link() (Page method), 278
update_object() (Document method), 227
update_stream() (Document method), 227
updateLink, 525
updateObject, 525
updateStream, 525
ur (Quad attribute), 330
uri (Link attribute), 253
uri (linkDest attribute), 256
uri (Outline attribute), 263
"
14462,source/pymupdf.pdf,"V
valid_codepoints() (Font method), 243
vector
image SVG, 63
"
14463,source/pymupdf.pdf,"version (built-in variable), 434
version_count (Document attribute), 235
VersionBind (built-in variable), 433
VersionDate (built-in variable), 434
VersionFitz (built-in variable), 434
vertices (Annot attribute), 183
"
14464,source/pymupdf.pdf,"W
w (Pixmap attribute), 324
warp() (Pixmap method), 320
Widget (built-in class), 384
widgets() (Page method), 280
width
Document.insert_page, 221
Document.layout, 213
Document.new_page, 221
draw_bezier, 284
draw_circle, 283
draw_curve, 284
draw_line, 283
draw_oval, 283
draw_polyline, 284
draw_quad, 284
draw_rect, 284
draw_sector, 283
draw_squiggle, 283
draw_zigzag, 283
finish, 345
open, 193
"
14465,source/pymupdf.pdf,"width (IRect attribute), 250
width (Pixmap attribute), 324
"
14466,source/pymupdf.pdf,"width (Quad attribute), 331
width (Rect attribute), 337
width (Shape attribute), 350
words
Annot.get_text, 174
Page.get_text, 289
"
14467,source/pymupdf.pdf,"wrap_contents() (Page method), 417
wrapContents, 525
write() (Story method), 358
write_stabilized() (Story static method), 359
write_stabilized_with_links()
(Story
static
method), 359
"
14468,source/pymupdf.pdf,"write_text() (Page method), 280
write_text() (TextWriter method), 376
write_with_links() (Story method), 359
writeImage, 525
writePNG, 525
writeText, 525
wrong
file extension, 35
"
14469,source/pymupdf.pdf,"X
x (Pixmap attribute), 324
x (Point attribute), 328
x0 (IRect attribute), 251
x0 (Rect attribute), 337
x1 (IRect attribute), 251
x1 (Rect attribute), 337
xhtml
Annot.get_text, 174
Page.get_text, 289
"
14470,source/pymupdf.pdf,"xml
Annot.get_text, 174
Page.get_text, 289
"
14471,source/pymupdf.pdf,"Xml (built-in class), 390
xml_metadata_xref() (Document method), 413
xref
delete_image, 289
insert_image, 286
replace_image, 288
"
14472,source/pymupdf.pdf,"xref (Annot attribute), 183
xref (built-in variable), 430
xref (Link attribute), 254
xref (Page attribute), 309
xref (Widget attribute), 386
xref_copy() (Document method), 228
xref_get_key() (Document method), 207
xref_get_keys() (Document method), 207
xref_length() (Document method), 420
xref_object() (Document method), 226
xref_set_key() (Document method), 208
xref_stream() (Document method), 227
xref_stream_raw() (Document method), 227
xref_xml_metadata() (Document method), 231
"
14473,source/pymupdf.pdf,"548
Index
"
14474,source/pymupdf.pdf,"PyMuPDF Documentation, Release 1.23.25
"
14475,source/pymupdf.pdf,"xrefLength, 525
xrefObject, 525
xrefs
get_image_info, 295
"
14476,source/pymupdf.pdf,"xrefStream, 526
xrefStreamRaw, 526
xres (Pixmap attribute), 324
"
14477,source/pymupdf.pdf,"Y
y (Pixmap attribute), 324
y (Point attribute), 328
y0 (IRect attribute), 251
y0 (Rect attribute), 337
y1 (IRect attribute), 251
y1 (Rect attribute), 337
yres (Pixmap attribute), 324
"
14478,source/pymupdf.pdf,"Z
zoom, 55
"
14479,source/pymupdf.pdf,"resolution, 55
"
14480,source/pymupdf.pdf,"Index
549
"
14481,source/Leonid Sheremeev.docx,"Leonid Sheremeev
"
14482,source/Leonid Sheremeev.docx,"SOFTWARE ENGINEER, BERLIN, GERMANY
"
14483,source/Leonid Sheremeev.docx," +49 1520 4000982 | 
 sheremeev.anaaay@gmail.com |  
aaarey.sheremeev  |  
sheaaaen0
"
14484,source/Leonid Sheremeev.docx,"Skills 
"
14485,source/Leonid Sheremeev.docx,"Programming
Kotlin, Java, Python, C++/C, Rust , Bash, Haskell
"
14486,source/Leonid Sheremeev.docx,"Technologies
Git, Docker, Spring, AWS, Android, Gradle, gRPC, Jenkins, TensorFlow, Pandas
"
14487,source/Leonid Sheremeev.docx,"Skills Algorithms&Data Structures, System Design, Coroutines, Parallel programming, Linear Algebra, 
Statistics, Numerical Methods
"
14488,source/Leonid Sheremeev.docx,"Languages
English, Russian, German (actively learning)
"
14489,source/Leonid Sheremeev.docx,"Work Experience 
"
14490,source/Leonid Sheremeev.docx,"JetBrains
Berlin, Germany
"
14491,source/Leonid Sheremeev.docx,"Software Engineer
|
Kotlin, Ktor, 
Coroutines, Gradle
Apr 2023 ‑ Aug 2023
"
14492,source/Leonid Sheremeev.docx,"• Led NP‑complete dependency resolution algorithm development, creating documentation and relatable knowledge 
base, as a result – boosted dependency resolution algorithm efficiency by an impressive 20%
"
14493,source/Leonid Sheremeev.docx,"• Analyzed over 60 projects, designed a testing interface for build data gathering across 30 projects, offered 
optimization insights
"
14494,source/Leonid Sheremeev.docx,"• Conducted extensive research on dependency resolution problem, gathered relevant information from a wide range 
of papers
"
14495,source/Leonid Sheremeev.docx,"• Experimented with various server protocols, and optimization techniques to enhance data downloading
• Continuous Integration Pipeline, pull requests, code reviews, load/stress testing, unit/integration/e2e testing
"
14496,source/Leonid Sheremeev.docx,"NRU HSE University
Bremen, Germany
"
14497,source/Leonid Sheremeev.docx,"Mentorship for C++ team project
Feb 2023 ‑ Jun 2023
"
14498,source/Leonid Sheremeev.docx,"• Facilitated weekly team meetings to promote idea exchange and maintain a high level of motivation
• Provided guidance on design patterns and effective code structuring techniques, helped with implementation details
• Assisted in code refactoring efforts and conducted thorough reviews of GitHub pull requests to enhance code quality
"
14499,source/Leonid Sheremeev.docx,"Aeronavigator
St.Petersburg, Russia
"
14500,source/Leonid Sheremeev.docx,"Android Developer
|
Java, Spring, 
Android Studio, Gradle
Jun 2022 ‑ Feb 2023
"
14501,source/Leonid Sheremeev.docx,"• Developed a comprehensive mobile application for pilots, providing access to essential documents, schedules, and 
real‑time communication capabilities with authorities and airport personnel
"
14502,source/Leonid Sheremeev.docx,"• Enhanced server‑client communication protocols, optimizing system responsiveness with protocol optimization, 
reducing latency by 50%
"
14503,source/Leonid Sheremeev.docx,"• Conducted extensive refactoring, prioritizing safety and security for 40% of the existing code base
"
14504,source/Leonid Sheremeev.docx,"Education 
"
14505,source/Leonid Sheremeev.docx,"Constructor University Bremen (ex Jacobs University)
Bremen, Germany
"
14506,source/Leonid Sheremeev.docx,"Bachelor of Science in Computer Science and Software Engineering
Dec 2022 ‑ Jun 2023
"
14507,source/Leonid Sheremeev.docx,"National Research University Higher School of Economics
St.Petersburg, Russia
"
14508,source/Leonid Sheremeev.docx,"Bachelor of Applied Mathmatics and Computer Science
Sep 2020 ‑ Jan 2023
"
14509,source/Leonid Sheremeev.docx,"Projects 
"
14510,source/Leonid Sheremeev.docx,"3D‑reconstruction app
|
Java, 
Android Studio, OkHttp, Python, OpenGL
NRU HSE University
"
14511,source/Leonid Sheremeev.docx,"Mobile app that identifies objects in photos and transforms them into intricate 3D models
Feb 2022 ‑ May 2022
"
14512,source/Leonid Sheremeev.docx,"• Designed and implemented the core functionality of the app, including the code architecture for all app screens
• Developed interfaces for client/server communication, enabling real‑time collaboration for 3D model reconstruction
• Engineered a system for efficiently saving and restoring the application’s state and critical data, data caching
"
14513,source/Leonid Sheremeev.docx,"Git
|
Java, Jackson
NRU HSE University
"
14514,source/Leonid Sheremeev.docx,"Git Implementation with CLI
Apr 2022 ‑ Apr 2022
"
14515,source/Leonid Sheremeev.docx,"• Implemented all core features of the Git: init, add, rm, checkout, log, reset, commit with command line interface with 
unit test coverage
"
14516,source/Leonid Sheremeev.docx,"Evolution (Desktop game)
|
C++, 
gRPC, SFML
NRU HSE University
"
14517,source/Leonid Sheremeev.docx,"The desktop game inspired by board game ”Evolution”
Feb 2021 ‑ May 2021
"
14518,source/Leonid Sheremeev.docx,"• Developed game logic and established a code architecture following the Model‑View‑Controller (MVC) pattern
• Engineered both server and client‑side functionalities with gRPC to enable online multiplayer gameplay
• Ensured code quality by implementing unit testing for correctness
"
14519,source/Leonid Sheremeev.docx,"Other projects
|
Java, C++/C, Haskell, Python, TensorFlow
"
14520,source/Leonid Sheremeev.docx,"• Signal classification: Neural network that classifies 40 different signals according to MFCC and MEL spectrogram 
with 99% accuracy
"
14521,source/Leonid Sheremeev.docx,"• Tic‑tac‑toe: The console game with a testing framework build with C macroses to streamline test development
• Vector: The own implementation of C++ std::vector with strong exception safety guarantee
• Lambda calculator: Haskell library for resolving ß‑reduction in lambda terms and resolution of problems of their aß 
and ß equivalence
"
14522,source/Leonid Sheremeev.docx,"• BMP processing: The application for BMP image download, cropping and rotation
"
14523,source/Elena Gale.pdf,"Elena 
Gale 
"
14524,source/Elena Gale.pdf,"U I / U X D E S I G N E R  
"
14525,source/Elena Gale.pdf," 
 
"
14526,source/Elena Gale.pdf,"Paphos, Cyprus 
+357 97 788000 
hi@juliaggggcom 
"
14527,source/Elena Gale.pdf,"  
"
14528,source/Elena Gale.pdf," 
"
14529,source/Elena Gale.pdf,"  
"
14530,source/Elena Gale.pdf," 
 
 
"
14531,source/Elena Gale.pdf,"PROFILE  
"
14532,source/Elena Gale.pdf,"I pursue design because of its vast potential to help people in day-to-day life, and for its 
"
14533,source/Elena Gale.pdf,"integration of beauty and utility. I’m keen on exploring human-centred, interactive, engaging 
"
14534,source/Elena Gale.pdf,"design, also, prototyping which helps think through interaction models and new possibilities. 
"
14535,source/Elena Gale.pdf,"After all, I want to apply my skills to create a positive impact. 
 
"
14536,source/Elena Gale.pdf,"EXPERIENCE  
"
14537,source/Elena Gale.pdf,"Simila Cyprus Ltd, Paphos, Cyprus 
"
14538,source/Elena Gale.pdf,"UI/UX Designer & Advertising Manager 
Jul 2017 – Present 
"
14539,source/Elena Gale.pdf,"Collaborated closely with stakeholders to design a responsive, intuitive and engaging website 
"
14540,source/Elena Gale.pdf,"across the property and car rental products on multiple devices. 
"
14541,source/Elena Gale.pdf,"Accomplishments: Revised and improved the information architecture to make users easy to 
"
14542,source/Elena Gale.pdf,"navigation on the website which leads to an increase of the conversion rate by 30% over an 
"
14543,source/Elena Gale.pdf,"older design. Updated brand logo and assets, created and implemented streamlined templates, 
"
14544,source/Elena Gale.pdf,"created more reliable and cohesive brand perception which is confirmed by Traveler's Choice 
"
14545,source/Elena Gale.pdf,"2020 from TripAdvisor. 
"
14546,source/Elena Gale.pdf,"Product Marketing: managing an organisation's online presence including public relations, 
"
14547,source/Elena Gale.pdf,"communications and social media management and created and optimise content for the Web 
"
14548,source/Elena Gale.pdf,"site using a variety of graphics and information from different courses. 
"
14549,source/Elena Gale.pdf,"UX / UI Design: conducted user research, user journey maps, identifying problems and user 
"
14550,source/Elena Gale.pdf,"needs, prototyping, competitive analysis, and visual design. 
 
"
14551,source/Elena Gale.pdf,"Freelancer (contracts) 
"
14552,source/Elena Gale.pdf,"UI/UX Designer 
Jan 2015 – Present 
"
14553,source/Elena Gale.pdf,"As a freelance designer, have worked on wide variety of clients from Canada, the UK, the USA, 
"
14554,source/Elena Gale.pdf,"Ukraine and more to deliver multiple design projects, including UI design, UX flows, storyboards, 
"
14555,source/Elena Gale.pdf,"layout design, landing pages, illustration, typography, and motion graphics. Built UI mockups 
"
14556,source/Elena Gale.pdf,"and prototypes. Collaborated with engineers ensure high- quality implementation. 
 
"
14557,source/Elena Gale.pdf,"Kharkov For Rent, Kharkiv, Ukraine 
"
14558,source/Elena Gale.pdf,"Web Designer & Marketing Manager 
May 2010 – Dec 2014 
"
14559,source/Elena Gale.pdf,"Worked closely with the owner to develop a corporate design system, including logo, 
"
14560,source/Elena Gale.pdf,"typography, image style, colours and design principle defining visual parameters for the local 
"
14561,source/Elena Gale.pdf,"property rental service. Created user experience and user interface across mobile and web 
"
14562,source/Elena Gale.pdf,"platforms. Worked with the marketing team and engineers to conduct user research, create 
"
14563,source/Elena Gale.pdf,"personas, UX flows, wireframes, and low to high fidelity prototype. 
 
"
14564,source/Elena Gale.pdf,"Dream Way, Kharkiv, Ukraine 
"
14565,source/Elena Gale.pdf,"Photographer & Social Media Coordinator 
Mar 2011 – May 2013 
"
14566,source/Elena Gale.pdf," 
"
14567,source/Elena Gale.pdf,"VOLUNTEERING  
"
14568,source/Elena Gale.pdf,"International Children’s Heart Foundation, Memphis, TN, USA 
"
14569,source/Elena Gale.pdf,"Photographer Sep 2011 – Feb 2013 
"
14570,source/Elena Gale.pdf,"Worked with an international team of doctors and nurses visiting the Kharkiv Children’s Hospital. 
"
14571,source/Elena Gale.pdf,"Prepared photo-based visual storylines of the children through their treatment and recovery 
"
14572,source/Elena Gale.pdf,"journey, and prepared presentations 
"
14573,source/Elena Gale.pdf,"for social media reporting and 
"
14574,source/Elena Gale.pdf,"fundraising programs. 
"
14575,source/Elena Gale.pdf," 
"
14576,source/Elena Gale.pdf,"SKILLS  
"
14577,source/Elena Gale.pdf,"UI/UX Design Interaction Design Branding + Identity Wireframing Prototyping 
"
14578,source/Elena Gale.pdf,"Information Architecture 
 
 
"
14579,source/Elena Gale.pdf,"TOOLS  
"
14580,source/Elena Gale.pdf,"Figma App Sketch App 
"
14581,source/Elena Gale.pdf,"Adobe Creative Suite Principle 
"
14582,source/Elena Gale.pdf,"Webflow Invision 
"
14583,source/Elena Gale.pdf,"Pen & Paper 
"
14584,source/Elena Gale.pdf," 
"
14585,source/Elena Gale.pdf,"Basic HTML/CSS Basic After Effects 
 
 
"
14586,source/Elena Gale.pdf,"EDUCATI ON  
"
14587,source/Elena Gale.pdf,"Sochnik Design School 
"
14588,source/Elena Gale.pdf,"Web & UI Design 
"
14589,source/Elena Gale.pdf,"Jan 2017 – May 2017 
"
14590,source/Elena Gale.pdf,"STEP Academy 
"
14591,source/Elena Gale.pdf,"Computer Graphics & Design Sep 2008 – May 2009 
"
14592,source/Elena Gale.pdf,"Kharkiv National University of Economics 
"
14593,source/Elena Gale.pdf,"Master’s in Business Economics Sep 2005 - May 2010 
 
"
14594,source/Elena Gale.pdf,"LANG  UA G ES  
"
14595,source/Elena Gale.pdf,"English 
IELTS - Overall 7,5 Fluent 
"
14596,source/Elena Gale.pdf,"Ukrainian 
"
14597,source/Elena Gale.pdf,"Native 
"
14598,source/Elena Gale.pdf,"Russian 
"
14599,source/Elena Gale.pdf,"Fluent 
"
14600,source/Fedor Elianov.docx,"Fedor Elianov
"
14601,source/Fedor Elianov.docx,"Canada
"
14602,source/Fedor Elianov.docx,"username@gmail.com | +1 234 567 8900 | 
https://www.linkedin.com/in/username/
"
14603,source/Fedor Elianov.docx,"Summary
"
14604,source/Fedor Elianov.docx,"Certified Microsoft, VMware, and CompTIA 
professional with 13 years of practicing in 
IT. Experience working with AWS, Terraform, 
CI/CD, Git,  and  PowerShell.  Strong  skills  
in  Server  and Storage Technologies, 
Virtualization, Backup Systems, and the 
Windows Server OS. Familiar with Active 
Directory and UNIX-like operating systems. 
Deep understanding of Service Management 
procedures.
"
14605,source/Fedor Elianov.docx,"Relevant Experience
"
14606,source/Fedor Elianov.docx,"Huge Canadian Financial | Sr. Platform 
Specialist
Sep 2020 - Present | Canada
"
14607,source/Fedor Elianov.docx,"●
Automated Business Files archiving 
procedure to reduce costs of storing 
data in cloud
"
14608,source/Fedor Elianov.docx,"●
Took part in the project of migration 
SAP
Data Services platform from on-prem 
infrastructure 
to 
Google 
Cloud 
Platform
"
14609,source/Fedor Elianov.docx,"Stack: PowerShell, Bitbucket Pipelines, SAP 
DS
"
14610,source/Fedor Elianov.docx,"Canada Government org | Infrastructure 
Analyst
Feb 2020 - Aug 2020 | Canada
"
14611,source/Fedor Elianov.docx,"●
Designed automated job scheduler 
solution
"
14612,source/Fedor Elianov.docx,"●
Implemented automated deployment of 
the 
infrastructure 
on 
ESXi 
hypervisors. 
The 
infrastructure 
includes 
vCenter 
server, 
virtual 
machines, virtual networking, Active 
Directory, Web, Business Logic, and MS 
SQL servers.
"
14613,source/Fedor Elianov.docx,"Stack: AWS Cloud Services, Terraform, Git, 
vSphere, PowerShell
"
14614,source/Fedor Elianov.docx,"Ukrainian Galera | System Engineer
Dec 2014 - Mar 2019 | Ukraine
"
14615,source/Fedor Elianov.docx,"●
Implemented a cross-site replication 
solution to meet business continuity 
plan requirements.
"
14616,source/Fedor Elianov.docx,"●
Designed and deployed a 
brand-new 
storage solution in the primary data 
center, including all-flash storage 
systems and the storage area network, 
to 
avoid 
performance 
degradation 
caused by rapid headcount growth.
"
14617,source/Fedor Elianov.docx,"●
Led the relocation of data center 
equipment from one site to another and 
between 
different 
cities 
without 
business interruption.
"
14618,source/Fedor Elianov.docx,"Stack: vSphere, Active Directory, DNS, Group 
Policy, DHCP, MS TFS, EMC RecoverPoint, Veeam 
backup & replication, MS SQL, PowerShell
"
14619,source/Fedor Elianov.docx,"for the Developer Team to replace the
 
"
14620,source/Fedor Elianov.docx,"existing 
outdated 
one. 
It 
significantly 
reduced 
IT-staff 
involvement in developers’ routine by 
providing them with a framework that 
they can use on their own.
"
14621,source/Fedor Elianov.docx,"●
Initiated 
implementation 
of 
CD 
"
14622,source/Fedor Elianov.docx,"pipeline to bring 
some 
DevOps 
best 
practices into the
"
14623,source/Fedor Elianov.docx,"Education
"
14624,source/Fedor Elianov.docx,"Master of Science | Computer 
"
14625,source/Fedor Elianov.docx,"system and Networks
Ukrainian Polytech
Aug 2001 - Jul 2008 | Ukraine
"
14626,source/Fedor Elianov.docx,"workflow between development and IT
 
"
14627,source/Fedor Elianov.docx,"departments.
"
14628,source/Fedor Elianov.docx,"Stack: PowerShell, GitLab CI,
vSphere,
"
14629,source/Fedor Elianov.docx,"Active Directory
"
14630,source/Fedor Elianov.docx,"Ukrainian Galera | Senior System Engineer
Apr 2019 - Aug 2019 | Ukraine
"
14631,source/Fedor Elianov.docx,"●
Built a Terraform AWS infrastructure 
for QA Team. The solution allowed 
excluding any involvement of Ops in 
repeated tasks.
"
14632,source/Fedor Elianov.docx,"Certifications
"
14633,source/Fedor Elianov.docx,"●
MCITP Server administrator
"
14634,source/Fedor Elianov.docx,"●
VCP on vSphere 4
"
14635,source/Fedor Elianov.docx,"●
MCTS
Windows
Server
2008
Active Directory, Configuration
"
14636,source/Fedor Elianov.docx,"●
MCTS
Windows
Server 2008
Network 
Infrastructure, Configuration
"
14637,source/DENIS GRIGOREV.pdf,"DENIS GRIGOREV 
"
14638,source/DENIS GRIGOREV.pdf,"Experience 
"
14639,source/DENIS GRIGOREV.pdf,"▷ +60 113 776 11 11  ▷ observerrrrrr@gmail.com  
"
14640,source/DENIS GRIGOREV.pdf," 
"
14641,source/DENIS GRIGOREV.pdf,"Business Engineering Group 
September 2020 – May 2023 
"
14642,source/DENIS GRIGOREV.pdf,"Senior Project Manager 
"
14643,source/DENIS GRIGOREV.pdf,"• Engaged in business transformation projects, implementing architectural solutions, and integrating various innovations 
"
14644,source/DENIS GRIGOREV.pdf,"into a unified business system at the level of management & governance. Executed by building its DTO model and 
utilizing company’s own proprietary EAMT-class software, customized to address client challenges. 
"
14645,source/DENIS GRIGOREV.pdf,"• Collaborated with a port company undergoing a significant cargo nature shift from coal handling to grain handling. Over 
"
14646,source/DENIS GRIGOREV.pdf,"a 10-month period, the project transformed the company’s process system and partially its organizational structure. The 
company currently operates successfully in the port market. 
"
14647,source/DENIS GRIGOREV.pdf,"• Led a project involving a construction site fire safety services provider’s substantial business expansion - from servicing 
"
14648,source/DENIS GRIGOREV.pdf,"fire alarms to comprehensive fire safety solutions. Formed a business ecosystem by partnering with complementary 
companies, with our client’s company driving this ecosystem and boosting revenue by 270%. 
"
14649,source/DENIS GRIGOREV.pdf,"• Developed a successful digital transformation strategy for a confidential correspondence and hazardous cargo delivery 
"
14650,source/DENIS GRIGOREV.pdf,"company. Current execution of the strategy has led to a 20% reduction in hazardous cargo delivery time, improved 
security for confidential correspondence through advanced tracking, and a 15% increase in customer satisfaction. 
"
14651,source/DENIS GRIGOREV.pdf,"RE Solutions (Contract) 
February 2022 – September 2022 
"
14652,source/DENIS GRIGOREV.pdf,"Requirements Engineer 
"
14653,source/DENIS GRIGOREV.pdf,"• Led a project for a Mercedes IoT contractor, overseeing the integration of software aimed at automating the fleet 
"
14654,source/DENIS GRIGOREV.pdf,"management ecosystem. Resulted in a significant decrease in the average vehicle repair processing time from 40 minutes 
to 12 minutes. 
"
14655,source/DENIS GRIGOREV.pdf,"Tesla Coil 
April 2017 – July 2020 
"
14656,source/DENIS GRIGOREV.pdf,"CEO & Co-Founder 
The company focused on manufacturing and developing exhibits for science museums. 
"
14657,source/DENIS GRIGOREV.pdf,"• Organized a full production cycle, ranging from printed circuit board manufacturing to software development for exhibit 
"
14658,source/DENIS GRIGOREV.pdf,"control and functionality. 
"
14659,source/DENIS GRIGOREV.pdf,"• Increased production speed from a few units per month to hundreds, transitioning from garage-style manufacturing to 
"
14660,source/DENIS GRIGOREV.pdf,"industrial-scale production line, becoming a market leader for science-intensive exhibits in the CIS and Eastern Europe. 
"
14661,source/DENIS GRIGOREV.pdf,"• Grew company profits from $2000 to $200,000 within 2 years. 
"
14662,source/DENIS GRIGOREV.pdf,"• Conducted lectures at scientific exhibitions, including the Russian Academy of Sciences. 
"
14663,source/DENIS GRIGOREV.pdf,"HighLoad Workshop 
September 2015 – November 2017 
"
14664,source/DENIS GRIGOREV.pdf,"Portfolio Manager 
"
14665,source/DENIS GRIGOREV.pdf,"• Prepared the company for launch by identifying and onboarding external contractors and outsourcing partners for diverse 
"
14666,source/DENIS GRIGOREV.pdf,"projects, focusing on aligning their skills and expertise with project requirements. Compiled and maintained a 
comprehensive database of more than 200 contractors, enabling swift project staffing and resource allocation. 
"
14667,source/DENIS GRIGOREV.pdf,"• Developed an internal system for managing outsourcing partners’ resources to monitor work progress, assess quality, and 
"
14668,source/DENIS GRIGOREV.pdf,"meet deadlines. This optimization resulted in a reduction of project delays by 20% compared to industry averages. 
"
14669,source/DENIS GRIGOREV.pdf,"• Conducted thorough risk assessments to identify potential bottlenecks and roadblocks in project execution. Formulated 
"
14670,source/DENIS GRIGOREV.pdf,"and executed mitigation strategies, resulting in a 15% reduction in project risks and a smoother project flow. 
"
14671,source/DENIS GRIGOREV.pdf,"• Led the end-to-end management of a CRM system’s development. Collaborated closely with design, engineering, and QA 
"
14672,source/DENIS GRIGOREV.pdf,"teams to define product specifications, facilitate seamless communication, and ensure consistent progress tracking. This 
cooperative approach resulted in a 30% faster development cycle and a highly polished final product. 
"
14673,source/DENIS GRIGOREV.pdf,"• Implemented the successful integration of SAFe (Scaled Agile Framework) software into the company’s internal 
"
14674,source/DENIS GRIGOREV.pdf,"workflows. This transformation streamlined collaboration, enhanced transparency, and improved overall project 
management efficiency, leading to a 25% reduction in time-to-market for new products. 
"
14675,source/DENIS GRIGOREV.pdf,"Yes Coffee Thailand – Coffee Frax 
June 2014 - August 2015 
"
14676,source/DENIS GRIGOREV.pdf,"Process Optimization Specialist 
"
14677,source/DENIS GRIGOREV.pdf,"• Conducted a thorough examination of operational processes within the coffee shop network and coffee factory. Detected 
"
14678,source/DENIS GRIGOREV.pdf,"critical bottlenecks, pinpointed areas of inefficiency, and preemptively identified potential challenges. 
"
14679,source/DENIS GRIGOREV.pdf,"• Successfully implemented software solutions to overhaul production procedures. This initiative led to a notable reduction 
"
14680,source/DENIS GRIGOREV.pdf,"in manufacturing time, streamlined logistics operations, and strategic resource utilization, culminating in a substantial 
12% decrease in operational costs. 
"
14681,source/DENIS GRIGOREV.pdf,"• Devised a set of performance metrics aimed at closely monitoring and analyzing outcomes. 
"
14682,source/DENIS GRIGOREV.pdf,"Gardenberg - Architectural Bureau 
September 2012 - July 2014 
"
14683,source/DENIS GRIGOREV.pdf,"Director of Marketing and Advertising 
"
14684,source/DENIS GRIGOREV.pdf,"• Established processes: market analysis, designed and implemented advertising strategies, budgeting, execution, and 
"
14685,source/DENIS GRIGOREV.pdf,"effectiveness assessment. 
"
14686,source/DENIS GRIGOREV.pdf,"• Enhanced online orders’ share from 7% to 72% by conceptualizing and overseeing the development and launch of 2 
"
14687,source/DENIS GRIGOREV.pdf,"websites. This included managing hired contractors, monitoring progress, and approving outcomes. 
"
14688,source/DENIS GRIGOREV.pdf,"• Led brand restructuring efforts, dividing it into two branches, significantly improving advertising efficiency and resulting 
"
14689,source/DENIS GRIGOREV.pdf,"in a 26% increase in company profits. 
"
14690,source/DENIS GRIGOREV.pdf,"Education 
Far Eastern Federal University 
2007 – 2012 
"
14691,source/DENIS GRIGOREV.pdf,".Specialist degree in Japanese and English 
"
14692,source/DENIS GRIGOREV.pdf,"Languages 
"
14693,source/DENIS GRIGOREV.pdf,"English: C1 
Japanese: N3 
Russian: native 
Latin 
"
14694,source/Artyom Orlov.pdf,"Artyom Orlov
iart2.o@outlook.com
"
14695,source/Artyom Orlov.pdf,"Senior Frontend Developer & Team Lead
+7 91 9320-1005
"
14696,source/Artyom Orlov.pdf,"Visa sponsorship required
LinkedIn
"
14697,source/Artyom Orlov.pdf,"T-shaped, responsible, and collaborative Software Engineer and Team Lead. 8+ years of experience of development in startups,
consultancies, and product companies. Advanced skills in frontend development, an expert in JavaScript, various frontend
frameworks, and libraries. Comprehensive knowledge of Java and backend utilities. Passionate about user experience and clear
software architecture. Fond of teamwork and productive meetings.
"
14698,source/Artyom Orlov.pdf,"Technical Skills
"
14699,source/Artyom Orlov.pdf,"Languages
TypeScript, JavaScript, Java, Golang
"
14700,source/Artyom Orlov.pdf,"Frameworks & libs
ReactJS, Svelte, Effector, Recoil, Redux, Apollo GraphQL, TreeJS, OSM, ExpressJS, Spring
"
14701,source/Artyom Orlov.pdf,"Professional Experience
"
14702,source/Artyom Orlov.pdf,"Remedy Inc
Senior Frontend Engineer & Team Lead
Dec 2019 ‑ present
"
14703,source/Artyom Orlov.pdf,"Developed a ﬂexible platform to allow customers to choose a clinic and get or order some medical services online
"
14704,source/Artyom Orlov.pdf,"●
Migrated a complex legacy project from JavaScript/AngularJS to TypeScript/React with unit and integrating testing
"
14705,source/Artyom Orlov.pdf,"●
Signiﬁcantly increased accessibility for users with mobile devices
"
14706,source/Artyom Orlov.pdf,"●
Developed and implemented UI-library with Unit tests and documentation based on Storybook
"
14707,source/Artyom Orlov.pdf,"●
Designed frontend architecture
"
14708,source/Artyom Orlov.pdf,"●
Leading and inﬂuencing software engineering best practices within teams for the full software development life cycle,
including documentation, design, coding standards, code reviews, building, testing, deployment, and other operations.
"
14709,source/Artyom Orlov.pdf,"●
Led a team of 5 members
"
14710,source/Artyom Orlov.pdf,"Vinavis
"
14711,source/Artyom Orlov.pdf,"Senior Software Engineer
Nov 2018 ‑ Dec 2019
"
14712,source/Artyom Orlov.pdf,"Developed a high-loaded management system for unmanned vehicles
"
14713,source/Artyom Orlov.pdf,"●
Architected and developed a scalable real-time ReactJS application
"
14714,source/Artyom Orlov.pdf,"●
Improved performance from 10 to 60 FPS for the most loaded parts of the app
"
14715,source/Artyom Orlov.pdf,"●
Implemented CI/CD for the frontend part of the application
"
14716,source/Artyom Orlov.pdf,"●
Developed and Implemented multi-domain OAuth-based authentication
"
14717,source/Artyom Orlov.pdf,"●
Developed and Implemented JS library for on-map data visualization
"
14718,source/Artyom Orlov.pdf,"●
Coordinated teamwork of 3 developers
"
14719,source/Artyom Orlov.pdf,"ITeco
"
14720,source/Artyom Orlov.pdf,"Software Engineer & Senior Software Engineer
Apr 2016 ‑ Nov 2018
"
14721,source/Artyom Orlov.pdf,"Developed and successfully delivered SPA (part of a complex enterprise solution) for letting clients book deposit boxes online for
one of the biggest banks in Russia
"
14722,source/Artyom Orlov.pdf,"●
Developed and implemented a module for remote printing
"
14723,source/Artyom Orlov.pdf,"●
Created about 20 new components for internal UI library
"
14724,source/Artyom Orlov.pdf,"●
Achieved 90+% test coverage on the Backend side
"
14725,source/Artyom Orlov.pdf,"●
Implemented integration with other banking modules and ﬂows
"
14726,source/Artyom Orlov.pdf,"●
Made several major CI/CD improvements which allowed to reduce deployment time from 17 to 3 minutes
"
14727,source/Artyom Orlov.pdf,"●
Interviewed 30 candidates, mentored 4 junior engineers
"
14728,source/Artyom Orlov.pdf,"Freelance & Web Studios (SEMark, Consulting plus)
"
14729,source/Artyom Orlov.pdf,"Web developer & Lead Web Developer
Sep 2012 ‑ Feb 2016
"
14730,source/Artyom Orlov.pdf,"●
Developed various company projects as a full‑stack JavaScript/PHP & Python developer
"
14731,source/Artyom Orlov.pdf,"●
Led development of Web and Mobile application
"
14732,source/Artyom Orlov.pdf,"●
Developed and delivered a solution for municipalities to allow local governments to handle incoming citizen’s application
"
14733,source/Artyom Orlov.pdf,"●
Processed incoming business requirement
"
14734,source/Artyom Orlov.pdf,"●
Delivering innovative technical solutions to improve business outcomes
"
14735,source/Artyom Orlov.pdf,"●
Implemented integration with third-party APIs
"
14736,source/Artyom Orlov.pdf,"Education
"
14737,source/Artyom Orlov.pdf,"Master of Computer Science
State Technical University, 2016
"
14738,source/ILDAR AIBEKOV.docx,"sheradilaaa@gmail.com | www.linkedin.com/in/sheradilaaaa | +1 (778)000-4060 
"
14739,source/ILDAR AIBEKOV.docx,"TECHNICAL SKILLS
"
14740,source/ILDAR AIBEKOV.docx,"￿
Programming Languages: JavaScript, TypeScript, HTML5, CSS3, Java
"
14741,source/ILDAR AIBEKOV.docx,"￿
Frameworks: React, Node.js, Express.js, Android Development
"
14742,source/ILDAR AIBEKOV.docx,"￿
Other: Git VCS, RDB, PostgreSQL, SQLite, MongoDB, REST API, OOP, Scrum, Figma, Firebase
"
14743,source/ILDAR AIBEKOV.docx,"TECHNICAL PROJECTS
Face Finder
 
                                                                Nov – Dec 2020
"
14744,source/ILDAR AIBEKOV.docx,"￿
Developed a web application, using HTML, CSS, React.js and Node.js to detect human faces using AI based API 
"
14745,source/ILDAR AIBEKOV.docx,"￿
Built a database using PostgreSQL and bcrypt Node.js library to securely store the users’ information 
"
14746,source/ILDAR AIBEKOV.docx,"￿
Connected the database using Knex.js to build a flexible and clean implementation of the queries
"
14747,source/ILDAR AIBEKOV.docx,"￿
Developed a REST API using Express.js and tested all server requests via Postman to ensure the responsiveness of 
the application
"
14748,source/ILDAR AIBEKOV.docx,"PAC Sports | Mobile Application Development II | CSIS 4175, Douglas College.                                 Jan - Apr 2020
"
14749,source/ILDAR AIBEKOV.docx,"￿
Developed an Android mobile application in a team of four students to track sport statistics and to create sport 
event posts that would encourage people to be more active  
"
14750,source/ILDAR AIBEKOV.docx,"￿
Created a screen that introduces the user to the app and gives the usage guide by walking the user through available 
features
"
14751,source/ILDAR AIBEKOV.docx,"￿
Securely stored users’ data and implemented Real Time Database using Firebase 
"
14752,source/ILDAR AIBEKOV.docx,"￿
Developed a miniature application view called widget that depicts the statistics of the favorite team  
"
14753,source/ILDAR AIBEKOV.docx,"Smarter
                                                                            Jan - Apr 2020
"
14754,source/ILDAR AIBEKOV.docx,"￿
Developed a web-based platform that helps to manage users’ workflow efficiently 
"
14755,source/ILDAR AIBEKOV.docx,"￿
Implemented attractive design using Tachyons CSS toolkit to make style of the app flexible, scalable and fast
"
14756,source/ILDAR AIBEKOV.docx,"￿
Developed a Kanban board, using w3schools’ Drag and Drop API, that helps to visualize the users’ workflow and 
tasks
"
14757,source/ILDAR AIBEKOV.docx,"￿
Created Math Sprint game to entertain users during long work sessions
"
14758,source/ILDAR AIBEKOV.docx,"WORK EXPERIENCE
Server | Old Spaghetti Factory 
                                Sept 2018 - Present
"
14759,source/ILDAR AIBEKOV.docx,"￿
Was recognized as an Employee of the Month twice
"
14760,source/ILDAR AIBEKOV.docx,"￿
Accurately recorded orders and worked with kitchen staff to serve drinks and food that exceeds expectations
"
14761,source/ILDAR AIBEKOV.docx,"￿
Handled customer complaints to maintain customer satisfaction
"
14762,source/ILDAR AIBEKOV.docx,"￿
Successfully solved customer conflicts and problems when mistakes were made with orders and payments
"
14763,source/ILDAR AIBEKOV.docx,"Junior Server | Old Spaghetti Factory
                                                          Nov 2017- Sep 2018
"
14764,source/ILDAR AIBEKOV.docx,"￿
Worked together with other junior servers to maintain cleaning of the restaurant 
"
14765,source/ILDAR AIBEKOV.docx,"￿
Was responsible for working with waitstaff to ensure all guest needs are met
"
14766,source/ILDAR AIBEKOV.docx,"EDUCATION
Computing Studies and Information System (Diploma) 
"
14767,source/ILDAR AIBEKOV.docx,"￿
Douglas College | New Westminster 
     
                                        Jan 2017 – Dec 2020
"
14768,source/Iliya Stepanov.pdf," 
"
14769,source/Iliya Stepanov.pdf,"5+ years of Software 
Development in 
JavaScript, React, 
GraphQL, Distributed 
Systems. 
"
14770,source/Iliya Stepanov.pdf," 
"
14771,source/Iliya Stepanov.pdf,"Iliya Stepanov 
"
14772,source/Iliya Stepanov.pdf," 
"
14773,source/Iliya Stepanov.pdf,"+38 093 111 11 11 
email@gmail.com  
"
14774,source/Iliya Stepanov.pdf,"Current employment | Software Engineer, Front-end | @COMP1, the UK | 03/2019 – Present 
Enterprise solution for Maritime industry. The platform with 80+ products. 
60+ devs, in squads of 3-7 people. 
Front-end is built on Micro-Front-End architecture. I am a member of an Infrastructure Team. 
 
"
14775,source/Iliya Stepanov.pdf,"Front-end Infrastructure 
"
14776,source/Iliya Stepanov.pdf,"- 
Resolved 250+ circular dependencies all over the project with webpack 
"
14777,source/Iliya Stepanov.pdf,"- 
Optimized SVG consumption that in result solved chain of arised bugs 
"
14778,source/Iliya Stepanov.pdf,"- 
Leading knowledge sharing sessions for 20+ members of Front-end team 
"
14779,source/Iliya Stepanov.pdf,"- 
Optimised building and check phases of Monorepo (> x2 times) 
"
14780,source/Iliya Stepanov.pdf,"Version control app(Back-office) 
"
14781,source/Iliya Stepanov.pdf,"- 
Developed web app from scratch (React, TypeScript, GraphQL, Apollo) 
"
14782,source/Iliya Stepanov.pdf,"Other experience 
"
14783,source/Iliya Stepanov.pdf,"Front-end Engineer @COMP2 - the USA (2018-2019) 
· 2019: Web app. Squad of 7 people. I built the Front-end side of the Healthcare Insurance 
"
14784,source/Iliya Stepanov.pdf,"module(web page) with JS, React, MobX, Web-sockets. 
"
14785,source/Iliya Stepanov.pdf,"· 2018: Mobile app. Squad of 8 people. I developed 80+ screens with React-native, Redux with 
"
14786,source/Iliya Stepanov.pdf,"support of iOS & Android + designed the API layer. Being part of the Focus team. Conducted 20+ 
interviews. As a team member won internal award “Best performance team” 
"
14787,source/Iliya Stepanov.pdf,"Front-end Developer @COMP3 - Belgium (2015-2018) 
· B2B data flow project with blockchain. Close work with the customer / client side. Taught myself 
"
14788,source/Iliya Stepanov.pdf,"MobX in 1 week, developed 10+ web pages, implemented i18n using React, amCharts etc. 
"
14789,source/Iliya Stepanov.pdf,"Business Analyst/Configuration Engineer @Luxoft(Citibank) - the USA (2014-2015) 
· Configuring Onboarding system with 1900+ questions using DSL, created/updated 20+ workflows 
"
14790,source/Iliya Stepanov.pdf,"that optimised Business processes in FinTech. Eliciting requirements, communication with 
stakeholders (NAM/EMEA/LATAM). 
"
14791,source/Iliya Stepanov.pdf,"Other activities 
"
14792,source/Iliya Stepanov.pdf,"· Mentor on offline intensive course React/Redux @Courses - consulting, supporting students, 
"
14793,source/Iliya Stepanov.pdf,"homework review, code review 
"
14794,source/Iliya Stepanov.pdf,"Education 
"
14795,source/Iliya Stepanov.pdf,"Kyiv, Ukraine 
National University of Life and Environmental 
"
14796,source/Iliya Stepanov.pdf,"Sciences of Ukraine 
2008-2013 
"
14797,source/Iliya Stepanov.pdf,"· Master in Mechanical Engineering, 2013(High Honors). 
· Bachelor in Mechanical Engineering, 2012(High Honors). 
Languages and Technologies: JavaScript(ES6+); TypeScript; ImmutableJS; HTML; CSS; React; 
Redux/MobX/Apollo; redux-thunk/redux-saga;REST/GraphQL/Websockets;ant-design; materialUI; 
webpack; React-native; 
"
14798,source/Iliya Stepanov.pdf," 
"
14799,source/VLAD KUTUZOV.docx,"ML engineer
"
14800,source/VLAD KUTUZOV.docx,"kutuzov.vl@phystech.edu
+7 903 000 7778
"
14801,source/VLAD KUTUZOV.docx,"EXPERIENCE
"
14802,source/VLAD KUTUZOV.docx,"ML/C++-developer
Yandex, Geosearch quality team
"
14803,source/VLAD KUTUZOV.docx,"  July 2023 - Present time
Moscow
"
14804,source/VLAD KUTUZOV.docx,"• Reduced the number of empty search results in Kazakhstan 
by 11% without a drop in other geosearch metrics
"
14805,source/VLAD KUTUZOV.docx,"• Increased the geowizard’s integral surplus by 5% in 
Kazakhstan
"
14806,source/VLAD KUTUZOV.docx,"• Fixed big windows on rubric search queries in Dubai
"
14807,source/VLAD KUTUZOV.docx,"• Created new L2 geosearch ranking formula which 
improved in-window recall in Dubai from 0.69 to 
0.83
Analyst
Yandex, Taxi safety team
"
14808,source/VLAD KUTUZOV.docx,"  January 2023 - July 2023
Moscow
"
14809,source/VLAD KUTUZOV.docx,"• Created algorithm for road accidents 
identiﬁcation with 0.8 ROC-AUC instead of 0.75 
ROC-AUC of previous model
Researcher
Huawei Moscow Research Center, Math Modelling 
Lab
"
14810,source/VLAD KUTUZOV.docx,"  August 2022 - June 2023
Moscow
"
14811,source/VLAD KUTUZOV.docx,"• Created algorithm for WiFi sensing scenarios identiﬁcation 
with 0.99 f1 for NLOS class and > 0.9 f1 for dynamic and 
station mobility classes
Data Scientist
Demis Group
"
14812,source/VLAD KUTUZOV.docx,"  June 2021 - December 2021
Moscow
"
14813,source/VLAD KUTUZOV.docx,"• Developed a generator of search engine-relevant 
headers for websites based on GPT-3 and an 
evolutionary algorithm
"
14814,source/VLAD KUTUZOV.docx,"• Developed an algorithm for searching for words that 
improve or decrease the site’s position in search 
engines
"
14815,source/VLAD KUTUZOV.docx,"ACHIEVEMENTS
"
14816,source/VLAD KUTUZOV.docx,"• Digital pharmacology hack, solo ﬁrst place
"
14817,source/VLAD KUTUZOV.docx,"• Moscow Math Olympiad, 3rd place
"
14818,source/VLAD KUTUZOV.docx,"• Placed in top 11% in Feedback Prize Kaggle Competition
"
14819,source/VLAD KUTUZOV.docx,"• Won three ""Skills of the future"" hackathons in a row
"
14820,source/VLAD KUTUZOV.docx,"• Digital League AI Challenge, Army 2021 forum, third place
"
14821,source/VLAD KUTUZOV.docx,"• Robomasters Youth Championship, winner of the All-
Russian stage
"
14822,source/VLAD KUTUZOV.docx,"PAPERS
"
14823,source/VLAD KUTUZOV.docx,"• Implicitly normalized forecaster with clipping for linear and 
"
14824,source/VLAD KUTUZOV.docx,"non-linear heavy-tailed multi-armed bandits, May 2023
"
14825,source/VLAD KUTUZOV.docx,"• Breaking the Heavy-Tailed Noise Barrier in Stochastic 
"
14826,source/VLAD KUTUZOV.docx,"Optimization Problems, November 2023
"
14827,source/VLAD KUTUZOV.docx,"EDUCATION
"
14828,source/VLAD KUTUZOV.docx,"Bachelor’s degree in Applied Math & Computer 
Science
"
14829,source/VLAD KUTUZOV.docx,"Moscow Institute of Physics and Technology
"
14830,source/VLAD KUTUZOV.docx,"  August 2021 – May 2025
"
14831,source/VLAD KUTUZOV.docx,"Neuroscience Summer School Institute of 
Theoretical and Experimental Biophysics
"
14832,source/VLAD KUTUZOV.docx,"  August 2022, August 2023
"
14833,source/VLAD KUTUZOV.docx,"• Programmed mathematical models of brain neural 
networks activity
"
14834,source/VLAD KUTUZOV.docx,"• Analyzed brain activity data to conﬁrm existing 
neuroscience hypotheses
Scientiﬁc and practical intensive on reproduction 
of state-of-the-art scientiﬁc results
"
14835,source/VLAD KUTUZOV.docx,"Sirius University, Yandex
"
14836,source/VLAD KUTUZOV.docx,"  October 2023
"
14837,source/VLAD KUTUZOV.docx,"• Conducted experiments with new methods for 
decentralized non-smooth optimization
"
14838,source/VLAD KUTUZOV.docx,"SIDE PROJECTS
"
14839,source/VLAD KUTUZOV.docx,"Zero-shot recommendation system
Ama Ready Startup
"
14840,source/VLAD KUTUZOV.docx,"  October 2020 - January 2021
"
14841,source/VLAD KUTUZOV.docx,"• Developed zero-shot recommendation system based on 
variational autoencoder and pseudorandom graph.
"
14842,source/VLAD KUTUZOV.docx,"• Participated in the development of a Facebook bot
"
14843,source/VLAD KUTUZOV.docx,"Bioinformatics project
Novel Software Systems
"
14844,source/VLAD KUTUZOV.docx,"  November 2021
Remote
"
14845,source/VLAD KUTUZOV.docx,"• Developed an algorithm for amino-acids embeddings 
aggregation
"
14846,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"Vladyslav Tyshchenko
"
14847,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"Calgary, AB | Tyvla0009@gmail.com | +1 (587) 000-7226 | http://www.linkedin.com/in/aaadtysh
"
14848,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"Education
"
14849,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"Taras Shevchenko National University
"
14850,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"Bachelor’s degree, Data Analytics (Sep 2019 - Jun 2023)
"
14851,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"Skills
"
14852,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"Programming Languages: Python, C++, SQL, HTML, CSS
"
14853,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"Libraries: Flask, Pandas, Matplotlib, Seaborn, Plotly, Scikit-learn, TensorFlow
"
14854,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"Tools: Tableau, Excel, Word, PowerPoint, Outlook, Google Sheets, VMware Workstation
"
14855,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"Languages: English (Upper Intermediate), Ukrainian (Native), Russian (Fluent)
"
14856,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"Experience
"
14857,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"Blockchain Analyst (Jan 2022 – Sep 2022)
"
14858,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"Hedge fund, moscow
"
14859,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"●
Conducted in-depth research on blockchain technology, cryptocurrencies, and decentralized
protocols across various blockchains.
"
14860,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"●
Compiled comprehensive reports summarizing the findings and presented them to the team.
"
14861,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"●
Explored trading technologies and analyzed a range of indicators to identify correlations
between the global economy and the cryptocurrency market.
"
14862,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"●
Developed new databases and optimized the process of automatically populating a
cryptocurrency price database directly from blockchain during my last role.
"
14863,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"Junior Data Analyst (Aug 2021 - Dec 2021)
"
14864,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"Coral Travel, moscow
"
14865,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"●
Collaborated closely with the analytics and sales teams, providing them with up-to-date and
processed data.
"
14866,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"●
Processed, formatted, and automated data to adjust service prices.
"
14867,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"●
Compiled reports to identify areas for improvement and suggested proposals based on the
findings.
"
14868,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"Courses
"
14869,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"Intermediate SQL - Calgary Public Library (Issued Oct 2023)
"
14870,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"Introduction to SQL - Calgary Public Library (Issued Sep 2023)
"
14871,source/Vladyslav Tyshchenko Data Analyst v2.pdf,"Introduction to Python 3 Programming - Calgary Public Library (Issued Aug 2023)
"
14872,source/Dima SIDORENKO.pdf,"Dima SIDORENKO
Full Stack Web Developer
"
14873,source/Dima SIDORENKO.pdf,"Phone No: +7 902 000 9090
Email: dsidorenko@gmail.com
"
14874,source/Dima SIDORENKO.pdf,"LinkedIn:https://www.linkedin.com/in/dm-e-sido
"
14875,source/Dima SIDORENKO.pdf,"renko/
"
14876,source/Dima SIDORENKO.pdf,"GitHub: https://github.com/DmSidorenko
"
14877,source/Dima SIDORENKO.pdf,"A passionate web developer with 3 years of experience in production development, interested in system
design, software architecture, OOP design patterns and algorithms. Adore to build reliable and effective
software, love latest PHP features, adore Symfony, like the beauty and freshness of Golang and ﬂexibility
of JavaScript.
"
14878,source/Dima SIDORENKO.pdf,"PROFESSIONAL EXPERIENCE
"
14879,source/Dima SIDORENKO.pdf,"Senior Developer at Luxoft
St. Petersburg, Russia Feb 2021 - Present
"
14880,source/Dima SIDORENKO.pdf,"●
Create and maintain mobile services, e.g. push notiﬁcations campaign management service
"
14881,source/Dima SIDORENKO.pdf,"●
Build high-load and time-consuming services, e.g. providing paid services ordering from mobile
app
"
14882,source/Dima SIDORENKO.pdf,"●
Design software architecture, analyze system improvements, e.g. improve overloaded legacy
service by transfer it on an asynchronous mode of query processing
"
14883,source/Dima SIDORENKO.pdf,"●
Review code and provide tech consultations for colleagues, especially junior developers
"
14884,source/Dima SIDORENKO.pdf,"Middle Web Developer at CDNow!
St. Petersburg, Russia Jan 2020 - Feb 2021
"
14885,source/Dima SIDORENKO.pdf,"●
Built new features for client’s and admin’s dashboard of CDN service website, including
time-consuming ones, e.g. conﬁgurations update, automate SSL certiﬁcates obtaining from user
dashboard
"
14886,source/Dima SIDORENKO.pdf,"●
Created real-time features for an online entertainment project like chats and live event messaging,
internal payments, regular automatic payments etc.
"
14887,source/Dima SIDORENKO.pdf,"●
Wrote API methods, both with public and private access
"
14888,source/Dima SIDORENKO.pdf,"●
Propagated and advanced following code style, patterns using, implementing static analysis tools
"
14889,source/Dima SIDORENKO.pdf,"Junior Web Developer at CDNow!
St. Petersburg, Russia Nov 2018 - Jan 2020
"
14890,source/Dima SIDORENKO.pdf,"●
Created simple and mid-complex scripts and layouts like CRUDs, web interfaces, e.g. for using as a
part of CDN service website
"
14891,source/Dima SIDORENKO.pdf,"●
Implemented secured ﬁle storing on AWS S3 cloud
"
14892,source/Dima SIDORENKO.pdf,"●
Created dynamic 2-d and 3d-graphical widgets e.g. an interactive ﬂoor plans for room booking
service, a stair modelling tool with 3-d previews and 2-d pdf drawings for a stairs manufacturer
website
"
14893,source/Dima SIDORENKO.pdf,"●
Used Wordpress, created plugins for LMS Moodle
"
14894,source/Dima SIDORENKO.pdf,"EDUCATION
"
14895,source/Dima SIDORENKO.pdf,"●
Ph.D. in radiophysics, 2016 at Lobachevsky State University, N. Novgorod, Russia
"
14896,source/Dima SIDORENKO.pdf,"●
The postgraduate program in radiophysics, 2002-2005, Polar Geophysical Institute, Murmansk
"
14897,source/Dima SIDORENKO.pdf,"●
MEd in teaching physics & computer technology (diploma with honour), 1997-2002 Murmansk
Teachers Institute
"
14898,source/Dima SIDORENKO.pdf,"TOOLS AND TECHNOLOGIES
"
14899,source/Dima SIDORENKO.pdf,"●
PHP (Symfony), Go, JS/TS
"
14900,source/Dima SIDORENKO.pdf,"●
React, React Native, Redux, Vue
"
14901,source/Dima SIDORENKO.pdf,"●
MySQL, Postgre, Redis
"
14902,source/Dima SIDORENKO.pdf,"●
RabbitMQ, Docker, Jenkins
"
14903,source/Vladimir Slutskii.docx,"Software Engineer
"
14904,source/Vladimir Slutskii.docx,"Vladimir Slutskii
"
14905,source/Vladimir Slutskii.docx,"maalutskiy@gmail.com | linkedin.com/in/aalutskii | Munich, Germany
"
14906,source/Vladimir Slutskii.docx,"SUMMARY
Backend Software Engineer with 2.5+ YoE in software development with experience in research.
"
14907,source/Vladimir Slutskii.docx,"TECHNICAL SKILLS
"
14908,source/Vladimir Slutskii.docx,"Languages: C++ (stl, OpenMP), Python, Matlab
Developer Tools: Git, Linux
"
14909,source/Vladimir Slutskii.docx,"EXPERIENCE
Software  Engineer  (R&D)
11/2020 - 05/2021
"
14910,source/Vladimir Slutskii.docx,"Align Technology · link · the  largest manufacturer of 3D digital solutions in orthodontics.
"
14911,source/Vladimir Slutskii.docx,"• Proposed and implemented features included in a launch of a new orthodontic product;
"
14912,source/Vladimir Slutskii.docx,"• Increased rate of successful orthodontic treatment by 4% by improving geometric algorithms;
"
14913,source/Vladimir Slutskii.docx,"• Consulted a team of 3 bio-mechanics on optimization problems;
"
14914,source/Vladimir Slutskii.docx,"• Conducted code review and provided unit testing for legacy code to maintain code 
"
14915,source/Vladimir Slutskii.docx,"quality; Had to resign because of relocation to Germany.
"
14916,source/Vladimir Slutskii.docx,"Research  engineer
08/2018 - 06/2020
"
14917,source/Vladimir Slutskii.docx,"Landau Institute for Theoretical Physics · link
"
14918,source/Vladimir Slutskii.docx,"• Implemented numerical simulations for various models of quantum physics;
"
14919,source/Vladimir Slutskii.docx,"• Co-authored an article about quantum algorithms.
"
14920,source/Vladimir Slutskii.docx,"Research  engineer
02/2018 - 06/2018
"
14921,source/Vladimir Slutskii.docx,"Higher School of Economics · link
"
14922,source/Vladimir Slutskii.docx,"• Optimized algorithms for simulating physical processes on large space and created a multi-
thread program for corresponding computations;
"
14923,source/Vladimir Slutskii.docx,"• Publicized an article on the related theme.
"
14924,source/Vladimir Slutskii.docx,"EDUCATION
Higher School of Economics · link
MSc,   Computer   Science
"
14925,source/Vladimir Slutskii.docx,"QS World University Rankings: top 100 in Mathematics, top 200 in Computer Science
2018 - 2020
"
14926,source/Vladimir Slutskii.docx,"Higher School of Economics · link
BSc,  Applied  Mathematics
"
14927,source/Vladimir Slutskii.docx,"Key courses: algorithms, C++, numerical methods, parallel programming
2014 - 2018
"
14928,source/Vladimir Slutskii.docx,"PUBLICATIONS
Slutskii, Mikhail, et al. ”Analog nature of quantum adiabatic unstructured search.” New Journal of Physics 
21.11 (2019): 113025.
"
14929,source/Vladimir Slutskii.docx,"Slutskii, M. G., L. Yu Barash, and Yu Yu Tarasevich. ”Percolation and jamming of random sequential 
adsorption samples of large linear k-mers on a square lattice.” Physical Review E 98.6 (2018): 062130;
"
14930,source/Oleg FOROFONTOV.docx,"O
leg FOROFONTOV
"
14931,source/Oleg FOROFONTOV.docx,"SOFTWARE ENGINEER
"
14932,source/Oleg FOROFONTOV.docx,"CONTACT DETAILS:
Tel.: +4900046398366
E-mail: foaaaontov.dev@gmail.com
LinkedIn: https://www.linkedin.com/inaaaitrii-forofontov
"
14933,source/Oleg FOROFONTOV.docx,"PROFESSIONAL PROFILE:
"
14934,source/Oleg FOROFONTOV.docx,"I am an experienced software engineer with a strong background in full-stack development, proficiency in databases, a track 
record in math Olympiads, and a passion for working effectively in diverse cultural environments.
"
14935,source/Oleg FOROFONTOV.docx,"TECHNOLOGY STACK:
"
14936,source/Oleg FOROFONTOV.docx,"-
Node.js, JS/TS, Python, Golang, PHP
"
14937,source/Oleg FOROFONTOV.docx,"-
Mongodb, Postgres, MySQL, Elasticsearch
"
14938,source/Oleg FOROFONTOV.docx,"-
React, Redux, Next
"
14939,source/Oleg FOROFONTOV.docx,"-
AWS
"
14940,source/Oleg FOROFONTOV.docx,"-
Docker
"
14941,source/Oleg FOROFONTOV.docx,"-
Puppeteer, Cypress, Selenium
"
14942,source/Oleg FOROFONTOV.docx,"EMPLOYMENT HISTORY:
"
14943,source/Oleg FOROFONTOV.docx,"Software engineer, 
United Innovations GmbH
Jul 2022 - Present
"
14944,source/Oleg FOROFONTOV.docx,"Munich
"
14945,source/Oleg FOROFONTOV.docx,"Created products for an outsourcing company with different technology stacks (TS, Node.js, GoLang, Python). Created new 
products from scratch and supported them till production phase. Led a team of backend-end developers. Mentored two junior 
and one working student software engineers. Often achieved performance enchantment by optimizing the final product and 
working with builds.
Frontend engineer, 
Swapus GmbH
Oct 2021 - May 2022
"
14946,source/Oleg FOROFONTOV.docx,"I created the front-end for a cryptocurrency company. Designed the logic for graphs, charts, and the relationships between them. 
Created packages for charts and graphs state control. In addition, I collaborated with the back-end team to ensure seamless 
integration of the front-end with the back-end. I also conducted extensive testing to ensure the product was bug-free and met 
all requirements. Finally, I provided documentation and training to the team to ensure they could maintain and update the 
product as needed.
Fullstack engineer, CDC 
RESTORATION INC
Jun 2020 - Oct 2021
"
14947,source/Oleg FOROFONTOV.docx,"Was developing themes and plugins using the PHP/JS stack on WordPress base. Since WordPress' main problem is speed, I 
created a solution to integrate React into WordPress renderer and convinced other developers to move to the PHP/React stack, 
which increased the loading speed of the final products by 700%+.
"
14948,source/Oleg FOROFONTOV.docx,"LANGUAGE SKILLS:
"
14949,source/Oleg FOROFONTOV.docx,"-
English: Advanced
"
14950,source/Oleg FOROFONTOV.docx,"-
Russian: Fluent
"
14951,source/Rafael Alaskarzada.docx,"Rafael Alaskarzada
"
14952,source/Rafael Alaskarzada.docx,"naaaa85@gmail.com | https://www.linkedin.com/in/naaak/ | +994 50 0004322
"
14953,source/Rafael Alaskarzada.docx,"10+ years of Telco and IT experience | Project Manager | Scrum Master | Product Manager | Agile Change Manager
"
14954,source/Rafael Alaskarzada.docx,"EXPERIENCE
"
14955,source/Rafael Alaskarzada.docx,"Simbrella | http://www.simbrella.com/ | Simbrella is a FinTech company that enables mobile operators and banks to 
provide credit based on big data analytics. Serving 200M+ customers in 25 countries.
"
14956,source/Rafael Alaskarzada.docx,"Project Management Office director (March 2017– Present) & Technical Project Manager (September 2013 – March 
2017)
"
14957,source/Rafael Alaskarzada.docx,"-
Established a new Technical Project Management unit, PMO department and rolled out better task managment 
practices in order to improve productivity and product quality.
"
14958,source/Rafael Alaskarzada.docx,"-
Started agile transformation, by introducing Scrum and Kanban, coaching teams and individuals.
"
14959,source/Rafael Alaskarzada.docx,"-
Created and implemented task management processes and introduced a task management system in company
"
14960,source/Rafael Alaskarzada.docx,"-
Launched products and services in more than 12 countries around the world as project manager.
"
14961,source/Rafael Alaskarzada.docx,"-
As a Project Management Office director - contributes high-level decisions in support of the company's strategic 
planning, mission, visions, and goals.
"
14962,source/Rafael Alaskarzada.docx,"Civil Service Commission under the President of the Republic of 
"
14963,source/Rafael Alaskarzada.docx,"Azerbaijan Project Manager/System Administrator (November 2006 – 
"
14964,source/Rafael Alaskarzada.docx,"September 2013)
"
14965,source/Rafael Alaskarzada.docx,"-
As a Project Manager was responsible for maintenance of the Civil Servant Register database
"
14966,source/Rafael Alaskarzada.docx,"-
Lead the creation, development and improvement of Civil Servant Register database tools
"
14967,source/Rafael Alaskarzada.docx,"-
Managed the team that was designed, implement and customized network and equipment in the testing 
centers of the Commission covering 240 testing places
"
14968,source/Rafael Alaskarzada.docx,"-
As a System Administrator, created a network infrastructure for operations need of Commission from the scratch.
"
14969,source/Rafael Alaskarzada.docx,"Ministry of Communication and Information Technologies
"
14970,source/Rafael Alaskarzada.docx,"IT Engineer the Informational Computer Centre (February 2003 – October 2005)
"
14971,source/Rafael Alaskarzada.docx,"-
Responsible for the website updates, adding new features, regular updates etc.
"
14972,source/Rafael Alaskarzada.docx,"-
Responsible for Mail and fileservers maintenances
"
14973,source/Rafael Alaskarzada.docx,"-
HelpDesk, providing 1st line technical support
"
14974,source/Rafael Alaskarzada.docx,"EDUCATION, CREDENTIALS and HONORS
"
14975,source/Rafael Alaskarzada.docx,"Bachelor’s degree in Accounting and Auditing | Azerbaijan Cooperation University (2001 - 2005)
"
14976,source/Rafael Alaskarzada.docx,"Professional development course, Administration and support of operational systems |Bauman Moscow State 
Technical University (2011 -2012)
"
14977,source/Rafael Alaskarzada.docx,"ICAgile Certified Professional, Agile Project Management ICP-APM | ICAgile (2019) Kiev
"
14978,source/Rafael Alaskarzada.docx,"NT-PM101 Project Management Methodology | TechExpert (2014) Kiev
"
14979,source/Rafael Alaskarzada.docx,"SKILLS
"
14980,source/Rafael Alaskarzada.docx,"Professional: Project & Program management, product management, Agile coaching, Scrum, Kanban, process 
management, portfolio management, risk management
"
14981,source/Rafael Alaskarzada.docx,"Technical: Windows Server AD, Network and Applications Infrastructure, Frontend (HTML, CSS, JavaScript)
"
14982,source/Rafael Alaskarzada.docx,"Languages: English, Russian, Turkish, Azerbaijani
"
14983,source/Rafael Alaskarzada.docx,"HOBBIES
"
14984,source/Rafael Alaskarzada.docx,"Travelling, Football (Ajax fan), Gaming (RPG, Strategy, Football simulators)
"
14985,source/Ivan CHUDINOV.pdf,"Ivan CHUDINOV 
"
14986,source/Ivan CHUDINOV.pdf,"Moscow, Russia · imonoooo@yandex.ru · +7 925-906-00-00 ·  
"
14987,source/Ivan CHUDINOV.pdf,"WORK EXPERIENCE 
"
14988,source/Ivan CHUDINOV.pdf,"Yandex 
Moscow, Russia 
"
14989,source/Ivan CHUDINOV.pdf,"Software Engineer, Internal analytical tools team 
January 2020 – Present 
"
14990,source/Ivan CHUDINOV.pdf,"• Maintained a virtual machine cluster with a pre-conﬁgured Jupyter environment 
"
14991,source/Ivan CHUDINOV.pdf,"with a one-click deployment for any analyst within the company. 
"
14992,source/Ivan CHUDINOV.pdf,"• Integrated Jupyter installation with internal tools, such as secret storage, 
"
14993,source/Ivan CHUDINOV.pdf,"task tracking, and code-review systems. 
"
14994,source/Ivan CHUDINOV.pdf,"Software Engineer, Ad-hoc statistics team 
April 2019 – December 2019 
"
14995,source/Ivan CHUDINOV.pdf,"• Provided technical expertise and consultations about Map-Reduce computations 
"
14996,source/Ivan CHUDINOV.pdf,"to analysts on diﬀerent teams. 
"
14997,source/Ivan CHUDINOV.pdf,"• Re-wrote and optimized most expensive regular Map-Reduce jobs, improving their 
"
14998,source/Ivan CHUDINOV.pdf,"performance up to 10x, resulting in more than 10% total savings of CPU time on 
analytical clusters. 
"
14999,source/Ivan CHUDINOV.pdf,"• Developed and still maintaining a system collecting of all JavaScript front-end 
"
15000,source/Ivan CHUDINOV.pdf,"project dependencies in internal repositories in Yandex, used for tracking old, 
deprecated and vulnerable dependencies. 
"
15001,source/Ivan CHUDINOV.pdf,"Junior Software Engineer, Ad-hoc statistics team 
April 2018 – March 2019 
"
15002,source/Ivan CHUDINOV.pdf,"• Implemented recurring analytical jobs on the in-house Map-Reduce clusters for 
"
15003,source/Ivan CHUDINOV.pdf,"consumers throughout the company. 
"
15004,source/Ivan CHUDINOV.pdf," 
"
15005,source/Ivan CHUDINOV.pdf,"SKILLS 
"
15006,source/Ivan CHUDINOV.pdf,"Languages: 
Russian — native, English — proﬁcient (C2) 
"
15007,source/Ivan CHUDINOV.pdf,"Programming languages: Python — primary, Go — secondary 
Tools: 
MapReduce, Jupyter, Linux (daily usage), Bash 
"
15008,source/Ivan CHUDINOV.pdf,"EDUCATION 
"
15009,source/Ivan CHUDINOV.pdf,"Higher School of Economics 
Moscow, Russia 
"
15010,source/Ivan CHUDINOV.pdf,"Bachelor of Science 
Applied Mathematics and Informatics 
September 2014 – June 2019 
"
15011,source/Ivan CHUDINOV.pdf,"PROJECTS 
"
15012,source/Ivan CHUDINOV.pdf,"Investigation of Parsing Expression Grammars formal languages 
Bachelor thesis — theoretical work, in which I propose a new computation method and 
prove its equivalence to PEG. Scientiﬁc advisor — Rubtsov A.A., 
associate professor at MIPT. 
"
15013,source/Ivan CHUDINOV.pdf,"Building a Fast RegExp Engine formal languages, Rust 
Coursework — research and implementation of diﬀerent techniques used for optimizing 
regular expressions. Scientiﬁc advisor — Guilhem Gamard, PhD ENS Lyon. 
"
15014,source/Nickita Valchkou.pdf," 
"
15015,source/Nickita Valchkou.pdf,"Pedro Vucenovic 
"
15016,source/Nickita Valchkou.pdf," 
 
"
15017,source/Nickita Valchkou.pdf,"Date of birth: 29/11/1978 
 
"
15018,source/Nickita Valchkou.pdf,"Gender: Male 
(+356) 9976211 
zvbrdaaaa@gmail.com 
"
15019,source/Nickita Valchkou.pdf,"Marsaskala, Malta 
"
15020,source/Nickita Valchkou.pdf," 
 
 
 
 
"
15021,source/Nickita Valchkou.pdf,"WORK EXPERIENCE 
"
15022,source/Nickita Valchkou.pdf," 
"
15023,source/Nickita Valchkou.pdf,"15/10/2018 – CURRENT – Fgura, Malta 
FLOOR COVERING INSTALLER – Betacentre 
"
15024,source/Nickita Valchkou.pdf,"Installing 
"
15025,source/Nickita Valchkou.pdf,"◦ hardwood flooring 
◦ laminate 
◦ decks 
◦ vinyl 
◦ parquet 
◦ turf 
◦ auwing and coving 
◦ aquafloor 
◦ Measuring materials 
◦ preparing floors, removing imperfections 
◦ apply finishes and refinishes 
"
15026,source/Nickita Valchkou.pdf," 
 
"
15027,source/Nickita Valchkou.pdf,"01/03/2003 – 16/09/2018 – Prijedor, Bosnia and Herzegovina 
SHOP GENERAL MANAGER – Delta TR 
"
15028,source/Nickita Valchkou.pdf,"◦ Responsible for the daily managing of store and staff 
◦ Analysing store sales figures 
◦ Developing marketing strategies 
◦ Maintaining accurate records of pricing and sales 
◦ Managing budgets 
"
15029,source/Nickita Valchkou.pdf," 
 
"
15030,source/Nickita Valchkou.pdf,"01/06/2015 – 01/06/2017 – Kozarska Dubica, Bosnia and Herzegovina 
ORCHARD ASSISTANT VOLUNTEER - FRUIT GROWER – Nipas DOO 
"
15031,source/Nickita Valchkou.pdf,"◦ Worked as an orchard assistant working different types of jobs at the plum, apple and 
"
15032,source/Nickita Valchkou.pdf,"pear orchard 
"
15033,source/Nickita Valchkou.pdf,"◦ Pruning trees per instruction of apple production manager. 
◦ Harvesting of fruit trees, assisting fruit production crew with various tasks as needed 
◦ Care and protection of trees and fruits 
"
15034,source/Nickita Valchkou.pdf,"EDUCATION AND TRAINING 
"
15035,source/Nickita Valchkou.pdf," 
"
15036,source/Nickita Valchkou.pdf,"01/09/1993 – 01/06/1997 – Prijedor, Bosnia and Herzegovina 
Agriculture technician 
"
15037,source/Nickita Valchkou.pdf," 
"
15038,source/Nickita Valchkou.pdf,"2002 – Italy 
Courses in Agriculture, Vegetable, Floriculture, Plant Protection – AGEF 
"
15039,source/Nickita Valchkou.pdf," 
 
 
"
15040,source/Nickita Valchkou.pdf,"LANGUAGE SKILLS 
"
15041,source/Nickita Valchkou.pdf," 
"
15042,source/Nickita Valchkou.pdf,"Mother tongue(s): SERBIAN 
"
15043,source/Nickita Valchkou.pdf," 
 
"
15044,source/Nickita Valchkou.pdf,"UNDERSTANDING 
SPEAKING 
WRITING 
"
15045,source/Nickita Valchkou.pdf,"Listening 
Reading 
Spoken production 
Spoken interaction  
"
15046,source/Nickita Valchkou.pdf,"ENGLISH B1 
B1 
B1 
B2 
B1 
"
15047,source/Nickita Valchkou.pdf,"Levels: A1 and A2: Basic user; B1 and B2: Independent user; C1 and C2: Proficient user 
"
15048,source/Nickita Valchkou.pdf," 
 
 
"
15049,source/Nickita Valchkou.pdf,"DIGITAL SKILLS 
"
15050,source/Nickita Valchkou.pdf," 
"
15051,source/Nickita Valchkou.pdf,"Microsoft Office 
"
15052,source/Nickita Valchkou.pdf," 
 
 
 
"
15053,source/Nickita Valchkou.pdf,"COMMUNICATION AND INTERPERSONAL SKILLS 
"
15054,source/Nickita Valchkou.pdf," 
"
15055,source/Nickita Valchkou.pdf,"Detail oriented, Physical fitness, Organisational skills 
"
15056,source/Nickita Valchkou.pdf," 
"
15057,source/Konstantin Grachev.docx,"Konstantin Grachev
"
15058,source/Konstantin Grachev.docx,"Moscow 
taaaurovic@gmail.com
"
15059,source/Konstantin Grachev.docx,"Willing to relocate: Anywhere
"
15060,source/Konstantin Grachev.docx,"Work Experience
"
15061,source/Konstantin Grachev.docx,"Lead Android Developer
"
15062,source/Konstantin Grachev.docx,"Sovcombank - Moscow June 
2018 to Present
"
15063,source/Konstantin Grachev.docx,"Support mobile application of bank Sovcombank. 
Coordinate work across teams.
Review, document, and provide maintenance support to existing application code. Perform new 
application feature development
"
15064,source/Konstantin Grachev.docx,"Android Developer
"
15065,source/Konstantin Grachev.docx,"Taxcom - Moscow
June 2016 to May 2018
"
15066,source/Konstantin Grachev.docx,"Manage a team of 8 people (5 android developers, 2 QA, 1 UX/UI designer). Review code.
Planning and distribution of tasks.
Release of the company's application releases. 
Conducting technical interviews.
"
15067,source/Konstantin Grachev.docx,"Android Developer
"
15068,source/Konstantin Grachev.docx,"Paragon Software Group - Moscow 
October 2013 to May 2016
"
15069,source/Konstantin Grachev.docx,"Support mobile application
"
15070,source/Konstantin Grachev.docx,"Education
"
15071,source/Konstantin Grachev.docx,"Master of Engineering in Computer Science
"
15072,source/Konstantin Grachev.docx,"Chuvash State University - Cheboksary September 
2006 to July 2011
"
15073,source/Konstantin Grachev.docx,"Skills
"
15074,source/Konstantin Grachev.docx,"• Android
"
15075,source/Konstantin Grachev.docx,"• Kotlin
"
15076,source/Konstantin Grachev.docx,"Languages
"
15077,source/Konstantin Grachev.docx,"•
Russian - Expert
"
15078,source/Konstantin Grachev.docx,"•
English - Intermediate
"
15079,source/Konstantin Grachev.docx,"Links
"
15080,source/Konstantin Grachev.docx,"http://www.linkedin.com/in/grachev98
"
15081,source/Алексей Тугаенко.docx,"Java 
Developer
"
15082,source/Алексей Тугаенко.docx,"Ведущий инженер по теплообеспечению и производству тепловой энергии с более чем 
6- летним опытом. Давно увлекаюсь программированием и всем что связано с IT. 
Благодаря пандемии переосмыслил свой взгляд на жизнь потому в мае 2020 года 
принял решение сменить профессию и стать Java разработчиком. Так как вечерних 
занятий недостаточно для смены профессии — оставил работу инженера и продолжил 
обучение уже в полной мере.
"
15083,source/Алексей Тугаенко.docx,"Для чего мне это? - Для меня программисты - это кудесники 21 века и стать одним из 
них - моя мечта. Просто я решил реализовать свою мечту.
"
15084,source/Алексей Тугаенко.docx,"Навыки
"
15085,source/Алексей Тугаенко.docx,"•
Языки: Java, SQL
"
15086,source/Алексей Тугаенко.docx,"•
Фреймворки: JavaSE, Spring / Core / JDBC / MVC / DATA, Jackson, JAXB
"
15087,source/Алексей Тугаенко.docx,"•
Технологии: JSP, JDBC, Servlet, JPA
"
15088,source/Алексей Тугаенко.docx,"•
Веб сервер: Apache Tomcat
"
15089,source/Алексей Тугаенко.docx,"•
Базы данных: PostgreSQL, HSQLDB
"
15090,source/Алексей Тугаенко.docx,"•
Тестирование: Junit, Assertj
"
15091,source/Алексей Тугаенко.docx,"•
Окружение: Git, Maven, Intellij IDEA, Emacs, Linux
"
15092,source/Алексей Тугаенко.docx,"Проекты
2021 «Подсчёт калорий» (в разработке)
Spring/JPA Enterprise приложения c авторизацией и правами доступа на основе ролей 
на стеке Maven/ Spring MVC/ Security/ REST(Jackson)/ Java 8 Stream API.
"
15093,source/Алексей Тугаенко.docx,"•
Реализация сохранения в базы Postgres и HSQLDB на основе Spring JBDC, 
JPA(Hibernate) и Spring-Data-JPA
"
15094,source/Алексей Тугаенко.docx,"•
Реализация и тестирование REST и AJAX контроллеров
"
15095,source/Алексей Тугаенко.docx,"•
Реализация клиента на Bootstrap (css/js), datatables, jQuery + plugins
"
15096,source/Алексей Тугаенко.docx,"•
Собственная доработка проекта
"
15097,source/Алексей Тугаенко.docx,"2019-2020 «Java learn»
Решил полный комплект задач для онлайн курса JavaRush
"
15098,source/Алексей Тугаенко.docx,"•
Более 1200 решенных практических задач
"
15099,source/Алексей Тугаенко.docx,"•
20 выполненных мини-проектов
"
15100,source/Алексей Тугаенко.docx,"Опыт работы
2016 - 2020 - Ведущий инженер
"
15101,source/Алексей Тугаенко.docx,"Коммунальное предприятие «Житло-сервис» (около 500 сотрудников).
"
15102,source/Алексей Тугаенко.docx,"•
Обеспечивал бесперебойную работу теплового хозяйства предприятия, в 
которое входило более 100 жилых домов и 6 газовых котелен
"
15103,source/Алексей Тугаенко.docx,"•
Руководил командой из 4 инженеров
"
15104,source/Алексей Тугаенко.docx,"•
Обучал сотрудников эффективным приемам работы с ПК
"
15105,source/Алексей Тугаенко.docx,"Достижения
"
15106,source/Алексей Тугаенко.docx,"•
Выполнил и автоматизировал расчёт технико-экономических показателей 
затрат ресурсов на технологические потребности котелен для формирования 
тарифов. Теперь каждый последующий перерасчёт выполняется в десятки раз 
быстрее
"
15107,source/Алексей Тугаенко.docx,"•
Автоматизировал процесс распределения тепловой энергии в жилых домах и 
нежилых помещениях, тем самым повысив эффективность работы инженерной 
службы и снизив издержки для предприятия
"
15108,source/Алексей Тугаенко.docx,"•
Успешно реализовал проект установки модулей телеметрии в газовых 
котельных, значительно снизив риски получения финансовых издержек при 
выходе из строя комплексов учёта природного газа
"
15109,source/Алексей Тугаенко.docx,"Приобретённые опыт и навыки
"
15110,source/Алексей Тугаенко.docx,"•
Высокий уровень стрессоустойчивости
"
15111,source/Алексей Тугаенко.docx,"•
Отличное умение общаться с клиентами
"
15112,source/Алексей Тугаенко.docx,"•
Умение завершать задачи в срок
"
15113,source/Алексей Тугаенко.docx,"•
Усидчивость и умение сосредоточится в условиях повышенного стресса
"
15114,source/Алексей Тугаенко.docx,"•
Объяснять непростые вещи простым языком
"
15115,source/Алексей Тугаенко.docx,"Образование
"
15116,source/Алексей Тугаенко.docx,"•
2020 - JavaRush - интерактивный онлайн курс по программированию на Java
"
15117,source/Алексей Тугаенко.docx,"•
2013 - Киевский национальный университет строительства и архитектуры 
(специалист, Товароведенье и коммерческая деятельность)
"
15118,source/Алексей Тугаенко.docx,"Языки
"
15119,source/Алексей Тугаенко.docx,"•
Украинский: родной
"
15120,source/Алексей Тугаенко.docx,"•
Русский: свободно
"
15121,source/Алексей Тугаенко.docx,"•
Английский: средний
"
15122,source/Алексей Тугаенко.docx,"О себе
"
15123,source/Алексей Тугаенко.docx,"•
Для меня важно добираться до сути решаемых задач и доводить их до конца
"
15124,source/Алексей Тугаенко.docx,"•
Ценю уважение среди сотрудников, доброжелательную атмосферу
"
15125,source/Алексей Тугаенко.docx,"•
Мне нравятся задачи, в которых нужно искать нестандартные решения
"
15126,source/Алексей Тугаенко.docx,"•
Умею работать в команде, оказываю позитивное влияние на коллектив
"
15127,source/Алексей Тугаенко.docx,"•
Люблю познавать новое, экспериментировать
"
15128,source/Алексей Тугаенко.docx,"•
Среди главного в моей жизни — саморазвитие и работа над собой
"
15129,source/Ron Magauin.docx,"EDUCATION
"
15130,source/Ron Magauin.docx,"• Nazarbayev University
Astana, Kazakhstan
Majors in Computer Science
Aug 2021 - May 2025
"
15131,source/Ron Magauin.docx,"Courses: Algorithms, Formal Languages, Programming Languages, Computer Systems and Organization, Performance and Data Structures
"
15132,source/Ron Magauin.docx,"SKILLS SUMMARY
• Languages: GoLang, Python, C++, Java, C
• Frameworks: Gin, Gorilla Mux, revel.go, Django REST, gRPC
• Web Development: Backend development in GoLang with REST APIs, gRPC, and Django REST Framework.
• Database Management: Experience with SQLite, PostgreSQL, MongoDB, and Redis.
• Containerization: Proficient in Docker and Kubernetes deployment on AWS.
• API Integration: Skilled in RPC, Protocol Buffers, and gRPC integration.
• Data Structures and Algorithms: Proficient in ADTs and OOP for optimized performance.
• Testing: Emphasis on unit testing for software reliability using gomock for mocking databases.
EXPERIENCE
dev.house
Astana, Kazakhstan
"
15133,source/Ron Magauin.docx,"Backend Developer
Sep 2022 - July 2023
"
15134,source/Ron Magauin.docx,"• Developed REST API services in Golang using Gin.Used gRPC for efficient data flow and error handling.
"
15135,source/Ron Magauin.docx,"• Managed Redis, NoSQL, and SQL databases, ensuring optimal performance and data persistence.
"
15136,source/Ron Magauin.docx,"• Utilized Docker for application containerization, enhancing scalability and reproducibility.
"
15137,source/Ron Magauin.docx,"• Ensured software reliability and stability through rigorous unit testing, leading to improved code quality.
"
15138,source/Ron Magauin.docx,"PROJECTS
"
15139,source/Ron Magauin.docx,"• SimpleBank Backend Service: Developed a comprehensive backend web service in Go for a banking system. The service 
provides RESTful HTTP APIs for account management, balance tracking, and money transfers between accounts. Leveraged Gin 
framework for API development, Docker for containerization, and Kubernetes for deployment on AWS. The project also 
incorporates advanced features like gRPC APIs, asynchronous processing using Redis, and security enhancements with JWT, 
PASETO, and user authentication. Github link
"
15140,source/Ron Magauin.docx,"• Encryption Service: Developed a Go-based encryption microservice with API endpoints, logging, and instrumentation for 
system monitoring and debugging, designed for integration into larger systems to provide encryption as a service. Github link
"
15141,source/Ron Magauin.docx,"• GRPC Project: Developed a Go-based GRPC service for managing transactions, encompassing a GRPC server and client, both 
designed in Go, with interfaces and message types defined via Protocol Buffers. Github link
"
15142,source/Ron Magauin.docx,"• E-commerce REST API: Developed an E-commerce REST API in Go. The project includes API endpoints for managing users 
and orders. The data models are defined in Go. Github link
"
15143,source/Ron Magauin.docx,"• Document Delivery System (Backend): Developed the backend for an electrical government project that enables users to 
request and deliver official documents efficiently. Implemented full CRUD operations and integrated a distance-based pricing 
algorithm using Django REST framework. Github link
"
15144,source/Ron Magauin.docx,"• To Do Task Manager: Developed TodoWoo, a task management, using DRF. Implemented user authentication, authorization, 
CRUD operations for task management, and integrated with PostgreSQL for data storage. Github link
"
15145,source/Ron Magauin.docx,"HONORS AND AWARDS
• International Physics Olympiad (IPHO)
2020, 2019
"
15146,source/Ron Magauin.docx,"Silver (Top 25%), Bronze (Top 25%) medals ∼350 participants
"
15147,source/Ron Magauin.docx,"• European Physics Olympiad (EuPHO)
2020
"
15148,source/Ron Magauin.docx,"Gold (Top 5%) medal ∼270 participants
"
15149,source/Ron Magauin.docx,"• Asian Physics Olympiad (APHO)
2019
"
15150,source/Ron Magauin.docx,"Bronze (Top 25%) medal and Best experimentator (Top 1%) award ∼220 participants
"
15151,source/Ron Magauin.docx,"• International Zhautykov Olympiad (IZHO)
2020, 2019, 2018
"
15152,source/Ron Magauin.docx,"Gold (Top 3%), Silver (Top 15%), Bronze (Top 30%) ∼200 participants from 20 country
"
15153,source/Ron Magauin.docx,"• National Physics Olympiad
2020, 2019, 2018
"
15154,source/Ron Magauin.docx,"Gold (Top 1%), Gold (Top 2%), Gold (Top 2%) medals ∼50 participants
"
15155,source/Sharif Sharapov.docx,"Sharif Sharapov
"
15156,source/Sharif Sharapov.docx,"iOS-Developer
"
15157,source/Sharif Sharapov.docx,"Moncton, New Brunswick
+ 1-506-000-90-
75
"
15158,source/Sharif Sharapov.docx,"LinkedIn Profile
"
15159,source/Sharif Sharapov.docx,"sharifl.sharapov@mail.
ru
"
15160,source/Sharif Sharapov.docx,"Very strong interest and passion for the IT Sector and more specifically in iOS Development. Drive 
to keep up to date with developments and trends in the tech and modern media world; motivated by 
continuous learning. Ability to interpret and follow technical plans.
"
15161,source/Sharif Sharapov.docx,"Highly developed communication and interpersonal skills honed through work experience in different 
positions. Accomplished public speaker and strong presentation skills. Excellent ability to provide 
information clearly and in interesting manner. Organized, self-motivated and determined to succeed.
"
15162,source/Sharif Sharapov.docx,"Programming & Technical Skills
"
15163,source/Sharif Sharapov.docx,"♦ Cocoa
♦ Swift
♦ Git
"
15164,source/Sharif Sharapov.docx,"♦ Object-oriented design
♦ Software development
♦ Design patterns
"
15165,source/Sharif Sharapov.docx,"♦ Ability in delivering clean, organized and testable code
"
15166,source/Sharif Sharapov.docx,"♦ Knowledge of integrating APIs and back-end services with mobile applications
"
15167,source/Sharif Sharapov.docx,"Education
"
15168,source/Sharif Sharapov.docx,"iOS-Developer for Beginners, On-line Educational Platform Skillbox
2020-2021
"
15169,source/Sharif Sharapov.docx,"https://skillbox.ru/course/profession-ios-developer-2021/
"
15170,source/Sharif Sharapov.docx,"￿
30-hour course covering theories in 15 topics; each topic has a practical component 
with assignments and evaluations
"
15171,source/Sharif Sharapov.docx,"￿
As part of the completion of the program, the final project is the development of an App.
"
15172,source/Sharif Sharapov.docx,"￿
Developed an App for Personal Financial Management (completion in September 2021)
"
15173,source/Sharif Sharapov.docx,"Master’s Degree in Finance and Credit, Moscow Banking Institute, Moscow, Russia
2005-2010
"
15174,source/Sharif Sharapov.docx,"Canadian recognition by WES
"
15175,source/Sharif Sharapov.docx,"Relevant Experience
"
15176,source/Sharif Sharapov.docx,"Junior iOS-Developer (volunteer), Start-up in the financial sector, Moscow, Russia
May 2021 – 
Present
"
15177,source/Sharif Sharapov.docx,"￿
Create a view element from code using SnapKit
"
15178,source/Sharif Sharapov.docx,"￿
Implement a separate method for requesting the backend (REST API)
"
15179,source/Sharif Sharapov.docx,"￿
Install new libraries into the project (CocoaPods)
"
15180,source/Sharif Sharapov.docx,"￿
Plan work flow in Trello, and use GitHub and Figma
"
15181,source/Sharif Sharapov.docx,"Employment History
"
15182,source/Sharif Sharapov.docx,"Head of Risk Department, FinTech Bank, Moscow, Russia
2019 – 2021
"
15183,source/Sharif Sharapov.docx,"Chief Specialist of Risk Department, Qiwi Bank, Moscow, Russia
2015 – 2017
"
15184,source/Sharif Sharapov.docx,"Bank Analyst, Inf. Agency Banki.ru, Moscow, Russia
2010 –2014
"
15185,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"KHALIMBETOV ASLAN 
"
15186,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"khalimbetovvvvvvvv@gmail.com    
"
15187,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"OBJECTIVE 
"
15188,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"Dedicated 3rd-year computer science student with strong skills in Python, C, SQL, and Java. Experienced in teaching 
”Advanced C” and well-versed in algorithms and data structures. Looking for software development roles to apply 
my knowledge and grow professionally. 
"
15189,source/АЛЕКСЕЙ КУРБАНОВ.pdf," 
"
15190,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"EDUCATION 
"
15191,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"Bachelor of Computer Science, Sejong University (Seoul/South Korea) 
2020 - 2024 
"
15192,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"SKILLS 
"
15193,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"Technical Languages: 
Python, C, Java, SQL 
"
15194,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"Frameworks: 
Django 
"
15195,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"Data  Analysis  Libraries: 
Matplotlib, Pandas 
"
15196,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"Soft Skills: 
Problem-solving, Critical Thinking, Communication, Teamwork 
"
15197,source/АЛЕКСЕЙ КУРБАНОВ.pdf," 
"
15198,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"EXPERIENCE 
"
15199,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"Video  Codec  Engineer 
August 2023 - Current 
"
15200,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"Sejong University 
Seoul, South Korea 
"
15201,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"• Collaborated with a multidisciplinary team to identify, troubleshoot, and resolve codec-related issues 
"
15202,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"• Documented standardization processes and findings, contributing to the lab’s knowledge base and best practices. 
"
15203,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"Teacher  Assistant  Advanced  C Programming 
March 2022 - July 2022 
"
15204,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"Sejong University 
 
Seoul, South Korea 
"
15205,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"• Boosted students’ understanding of Advanced C by 40% through tailored assignment assistance,  leveraging 
"
15206,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"expertise in C language and debugging. 
"
15207,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"• Pioneered a teaching approach that elevated code efficiency by 50%, combining technical prowess with innovative 
"
15208,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"curriculum strategies. 
"
15209,source/АЛЕКСЕЙ КУРБАНОВ.pdf," 
"
15210,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"PROJECTS 
"
15211,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"Korea Income and Welfare Gender Predictor. 
"
15212,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"• Utilized Python, Pandas, Matplotlib, Seaborn, and Scikit-learn. 
"
15213,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"• Built a logistic regression model from scratch to predict gender based on income, region, and education. 
"
15214,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"• Achieved high accuracy, showcasing the model’s predictive capabilities. 
"
15215,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"Django E-Commerce Clothing Platform. 
"
15216,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"• Developed using Django, focusing on clothing retail. 
"
15217,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"• Features include user-friendly navigation, secure authentication, advanced search, and efficient transaction sys- 
"
15218,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"tems. 
"
15219,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"• Set a benchmark for online clothing platforms with its blend of design and functionality. 
"
15220,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"EXTRA-CURRICULAR ACTIVITIES 
"
15221,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"• Core member of the university’s Computer Security Club, actively participating in discussions, workshops, and 
"
15222,source/АЛЕКСЕЙ КУРБАНОВ.pdf,"events focused on the latest cybersecurity trends and threats. 
"
15223,source/Ildar Noskov.docx,"Python, AWS, SQL
ilgh.noskov@hey.com
"
15224,source/Ildar Noskov.docx,"PROFILE 
I deliver state of the art Data Infrastructure and Data Engineering solutions for unicorn tech companies. 
My passion is building distributed-compute and data-intensive applications, with special attention to data 
design and automation. I strive to lead by example and regularly mentor junior engineers. I also have a 
strong background in full-stack development in the cloud.
"
15225,source/Ildar Noskov.docx,"EXPERIENCE 
Data Engineer at SumUp, September 2018 - Current
Building data processes for the “Fastest Growing Company in Europe 2018” (by inc.com)
"
15226,source/Ildar Noskov.docx,"- Designed and delivered Snowflake and AWS Redshift data replication and access management processes.
- Developed ETL pipelines for the largest data-marts in the company with Airflow, SQL and Python.
- Successfully completed migration to the new data warehousing solution achieving 100% data accuracy.
- Fully implemented CI/CD for Snowflake-based ETL/ELT development with Jenkins and Docker.
- Regularly led SQL training sessions, teaching dozens of colleagues to make their queries run 10x faster.
- Introduced unit and integration tests as a regular development practice within the team.
"
15227,source/Ildar Noskov.docx,"Freelance Software Engineer in FinTech, 2018
"
15228,source/Ildar Noskov.docx,"- Consulted one of the largest private brokerages in Europe ($1B daily volume) building data infrastructure.
- Designed and delivered ETL pipelines processing 350 million monthly stock trades.
- Relevant technologies: Python, AWS, JavaScript, and PostgreSQL.
- Fully automated position reconciliation, dividends and stock loan fee calculation processes.
- Briefly led and onboarded a team of 3 software engineers.
"
15229,source/Ildar Noskov.docx,"Full Stack Software Engineering Intern at SumUp, Summer of 2017 and 2018
"
15230,source/Ildar Noskov.docx,"Contributed to the development of highly-reliable payment infrastructure for 30+ countries.
"
15231,source/Ildar Noskov.docx,"- Relevant technologies: JavaScript, Ruby, NodeJS, React, Typescript, and PostgreSQL.
- Completed an API rate limiting solution, from the design stage to testing and delivery.
- Built a POC full-stack application for an internal employee network to facilitate communication.
- Participated in multiple hackathons and attended professional conferences.
"
15232,source/Ildar Noskov.docx,"Backend Developer Intern at Centroida, Fall 2016
"
15233,source/Ildar Noskov.docx,"Interned at the “Best Student Startup in Bulgaria of 2016” (by Junior Achievement)
"
15234,source/Ildar Noskov.docx,"- Developed backend systems using NodeJS, implementing integration with social media APIs.
- Completed a project with Serverless framework utilising AWS Lambda functions.
- Integrated Elasticsearch + Kibana with a custom e-commerce solution, facilitating complex search queries.
- Gained an understanding of work in a fast-growing and dynamic startup with Agile and Scrum.
"
15235,source/Ildar Noskov.docx,"EDUCATION 
American University in Bulgaria, class of 2019
Double Major in Computer Science and Mathematics.
"
15236,source/Aman Yersultan.pdf,"Aman Yersultan 
"
15237,source/Aman Yersultan.pdf," Almaty, Kazakhstan 
 
"
15238,source/Aman Yersultan.pdf," +7 747 5652000 
"
15239,source/Aman Yersultan.pdf," 
EDUCATION 
"
15240,source/Aman Yersultan.pdf,"International IT University, Almaty, Kazakhstan 
Bachelor of Computer Science, September 2016 - June 2020; GPA: 3.56/4.00 
"
15241,source/Aman Yersultan.pdf,"▪ Won a scholarship and grant to study abroad in Schmalkalden, Germany, April-August 2019. 
▪ Dean’s list 3rd ,4th, 7th semester. 
"
15242,source/Aman Yersultan.pdf," 
PROFESSIONAL EXPERIENCE 
"
15243,source/Aman Yersultan.pdf,"Crystal Spring, Almaty, Kazakhstan 
Android Developer, October 2019-Present 
Developed app used by 100K+ users for store Miniso. 
"
15244,source/Aman Yersultan.pdf,"▪ Built Android app in Kotlin by using MVVM with android architecture components. 
▪ Implemented backend driven UI architecture. 
▪ Help to increase company revenue through online purchases. 
▪ Collaborated with designer and backend developer to create QR bonus system, search by barcode. 
▪ Integrated payment system to save card and pay by card. 
▪ Deep link handling to open link in the appropriate application page or share product link via social 
"
15245,source/Aman Yersultan.pdf,"networks. 
"
15246,source/Aman Yersultan.pdf,"Investment app to track stocks and to trade stocks. 
"
15247,source/Aman Yersultan.pdf,"▪ Implemented real-time bidirectional communication with server side through Socket. 
▪ Developing an application to manage portfolio with functional features like: 
"
15248,source/Aman Yersultan.pdf,"- 
add ticker to watch list to easily track stock price of ticker 
"
15249,source/Aman Yersultan.pdf,"- 
buy or sell tickers 
"
15250,source/Aman Yersultan.pdf,"- 
investment ideas for buying or selling a ticker via forecasts 
"
15251,source/Aman Yersultan.pdf,"- 
get exchange rate 
"
15252,source/Aman Yersultan.pdf," 
PERSONAL PROJECT 
Developed platform for organizing hiking event to the natural places: multiplatform application to provide 
services to find companions and gather them in groups to hike together and inform about routes, weather and 
tips. 
"
15253,source/Aman Yersultan.pdf,"§ 
Built RESTful API backend service and created endpoints in Golang using Clean Architecture intended for 
an iterating with logistic processes for mobile and web app. Wrote a specification for API. 
"
15254,source/Aman Yersultan.pdf,"§ 
Implemented the integration of backend service with third-party APIs to store image in cloud storage, get 
weather. 
"
15255,source/Aman Yersultan.pdf,"§ 
Designed architecture and constructed database part with MongoDB Atlas. 
"
15256,source/Aman Yersultan.pdf,"§ 
Developing android part with teammate. Integrated with 3D map service with real time GPS navigation. 
"
15257,source/Aman Yersultan.pdf," 
LANGUAGES AND TECHNOLOGIES 
Kotlin, Java, Golang, SQL 
Coroutines, RxJava, Dagger 2, Koin, MVVM, Google Jetpack 
"
15258,source/Anton Nesterenko.pdf,"Dublin, Ireland 
Stanislav IG NA T E V 
sttt.ign@gmail.com 
"
15259,source/Anton Nesterenko.pdf,"Employment 
"
15260,source/Anton Nesterenko.pdf,"Software Engineer 
Facebook 
August 2019 — Present 
"
15261,source/Anton Nesterenko.pdf,"• Sped up the customer complaints processing workflow by reducing the amount of time spent on 
"
15262,source/Anton Nesterenko.pdf,"malformed request, saving couple hours/week for 2,000 people. 
"
15263,source/Anton Nesterenko.pdf,"• Separated customer complaints in two streams: one for contractors working from home and another one 
"
15264,source/Anton Nesterenko.pdf,"for full-time employees. The processing delay decreased from 10 days to 1 day. 
"
15265,source/Anton Nesterenko.pdf,"• Implemented and supported the deployment of work status revamp for 20,000 of FB contractors. 
"
15266,source/Anton Nesterenko.pdf,"Software Engineer 
Yandex 
September 2017 — August 2019 
"
15267,source/Anton Nesterenko.pdf,"• Fixed more than 50 bugs over the 2-year timeframe while analyzing the Yandex ad engine, which consists 
"
15268,source/Anton Nesterenko.pdf,"of over 10 subsystems, has 1M RPS and 100ms latency SLA. 
"
15269,source/Anton Nesterenko.pdf,"• Worked on an ad management system. Improved geotargeting, added Yandex phone device targeting. 
"
15270,source/Anton Nesterenko.pdf,"Software Engineer 
BCS Global Markets 
May 2016 — September 2017 
"
15271,source/Anton Nesterenko.pdf,"• Implemented a low latency / high throughput financial data monitoring pipeline with Apache Kafka. 
"
15272,source/Anton Nesterenko.pdf,"• It calculates and shows various data features and latencies (hardware/software delay, time to trade, current 
"
15273,source/Anton Nesterenko.pdf,"position, profit/loss, fees, etc.) processing data with strict no-delay requirements. 
"
15274,source/Anton Nesterenko.pdf,"Software Engineer 
Opera Software ASA 
August 2014 — June 2015 
"
15275,source/Anton Nesterenko.pdf,"• Developed a distributed testing system for browsers. 
"
15276,source/Anton Nesterenko.pdf,"• It prevents bug regressions in the Opera Desktop browser and Chromium project. 
"
15277,source/Anton Nesterenko.pdf,"Software Engineer 
LLC Tensor Company 
August 2013 — August 2014 
"
15278,source/Anton Nesterenko.pdf,"• Developed a service for rendering web pages in pdf and other formats using C++, Python, and JavaScript. 
"
15279,source/Anton Nesterenko.pdf,"• Since January 2014 was mentoring an intern. She ramped up from beginner level to full-time Engineer. 
"
15280,source/Anton Nesterenko.pdf," 
"
15281,source/Anton Nesterenko.pdf,"Education 
"
15282,source/Anton Nesterenko.pdf,"Tallinn, Estonia 
Baltic Summer School 
July 2015 
"
15283,source/Anton Nesterenko.pdf,"• Finished courses on Software Reliability and Information Security. 
"
15284,source/Anton Nesterenko.pdf,"Yaroslavl, Russia 
Yaroslavl State University 
August 2009 — July 2015 
"
15285,source/Anton Nesterenko.pdf,"• Specialist (Master of Science equivalent) in Applied Mathematics and Computer Science. 
"
15286,source/Anton Nesterenko.pdf,"Selinsgrove, PA, USA 
Susquehanna University 
August 2012 — May 2013 
"
15287,source/Anton Nesterenko.pdf,"• Study abroad exchange program. Cumulative GPA: 3.763/4.0. TOEFL score: 103. 
"
15288,source/Anton Nesterenko.pdf," 
"
15289,source/Anton Nesterenko.pdf,"Languages and Technologies 
"
15290,source/Anton Nesterenko.pdf,"• Several years’ experience in developing large distributed systems. 
"
15291,source/Anton Nesterenko.pdf,"• Experience with scalable Big Data processing, including both batch and streaming variants. 
"
15292,source/Anton Nesterenko.pdf,"• Proficient in Python, JavaScript, HTML/CSS. Prior experience: SQL, MongoDB, C++, Node.js, Java, C#. 
"
15293,source/Anton Nesterenko.pdf," 
"
15294,source/Anton Nesterenko.pdf,"Honors and Awards 
"
15295,source/Anton Nesterenko.pdf,"1st place: Science Drive IV: Mathematics, IT, Physics 
 
May 2014 
"
15296,source/Anton Nesterenko.pdf,"1st place: Tizen Hackathon Yaroslavl 
October 2013 
"
15297,source/Anton Nesterenko.pdf,"1st place: Bucknell Programming Contest, Combo Division 
April 2013 
"
15298,source/Matvey Sheremeev.docx,"Matvey Sheremeev
"
15299,source/Matvey Sheremeev.docx,"SOFTWARE ENGiNEER, BERLiN, GERMANY
"
15300,source/Matvey Sheremeev.docx,"+49 1520 4000982   |
sheremeev.andrey@gmail.com   |
aaarey.sheremeev     |
sheaaaen0
"
15301,source/Matvey Sheremeev.docx,"Skills  
"
15302,source/Matvey Sheremeev.docx,"Programming
Kotlin, Java, Python, C++/C, Rust , Bash, Haskell
"
15303,source/Matvey Sheremeev.docx,"Technologies
Git, Docker, Spring, AWS, Kubernetes, Android, Gradle, gRPC, Jenkins, TensorFlow, Pandas
"
15304,source/Matvey Sheremeev.docx,"Skills Algorithms&Data Structures, System Design, Coroutines, Parallel programming, Linear Algebra, 
Statistics, Numerical Methods
"
15305,source/Matvey Sheremeev.docx,"Languages
English, Russian, German (actively learning)
"
15306,source/Matvey Sheremeev.docx,"Work Experience  
"
15307,source/Matvey Sheremeev.docx,"JetBrains
Berlin, Germany
"
15308,source/Matvey Sheremeev.docx,"Software Engineer
|
Kotlin, Ktor, 
Coroutines, Gradle
Apr 2023 ‑ Aug. 2023
"
15309,source/Matvey Sheremeev.docx,"• Led NP‑complete dependency resolution algorithm development, creating documentation and relatable knowledge 
base, as a result – boosted dependency resolution algorithm efficiency by an impressive 20%
"
15310,source/Matvey Sheremeev.docx,"• Designed a versatile testing interface for build data gathering across 30 projects, offered optimization insights
• Conducted extensive research on dependency resolution problem, meticulously gathering relevant information from 
a wide range of papers
"
15311,source/Matvey Sheremeev.docx,"• Experimented with various server protocols, and optimization techniques to enhance data downloading
• Continuous Integration Pipeline, pull requests, code reviews, load/stress testing, unit/integration/e2e testing
Aeronavigator
St.Petersburg, Russia
"
15312,source/Matvey Sheremeev.docx,"Android Developer
|
Java, Spring, 
Android Studio, Gradle
June 2022 ‑ Feb. 2023
"
15313,source/Matvey Sheremeev.docx,"• Developed a comprehensive mobile application for pilots, providing seamless access to essential documents, 
schedules, and real‑time com‑ munication capabilities with authorities and airport personnel
"
15314,source/Matvey Sheremeev.docx,"• Enhanced server‑client communication protocols, optimizing data exchange and system responsiveness with 
protocol optimization, reducting latency and cahcing strategies
"
15315,source/Matvey Sheremeev.docx,"• Conducted extensive code refactoring, prioritizing safety and security
"
15316,source/Matvey Sheremeev.docx,"Education  
"
15317,source/Matvey Sheremeev.docx,"Constructor University Bremen (ex Jacobs University)
Bremen, Germany
"
15318,source/Matvey Sheremeev.docx,"Bachelor of Science in Computer Science and Software Engineering
National Research University Higher School of Economics
St.Petersburg, Russia
"
15319,source/Matvey Sheremeev.docx,"Bachelor of Applied Mathmatics and Computer Science
"
15320,source/Matvey Sheremeev.docx,"Projects  
"
15321,source/Matvey Sheremeev.docx,"3D‑reconstruction app
|
Java, 
Android Studio, OkHttp, Python, OpenGL
NRU HSE University
"
15322,source/Matvey Sheremeev.docx,"Mobile app that identifies objects in photos and transforms them into intricate 3D models
Feb 2022 ‑ May 2022
"
15323,source/Matvey Sheremeev.docx,"• Designed and implemented the core functionality of the app, including the code architecture for all app screens
• Implemented interfaces for client/server communication, enabling real‑time collaboration for 3D model 
reconstruction
"
15324,source/Matvey Sheremeev.docx,"• Implemented a system for efficiently saving and restoring the application’s state and critical data, data caching
"
15325,source/Matvey Sheremeev.docx,"Evolution (Desktop game)
|
C++, 
gRPC, SFML
NRU HSE University
"
15326,source/Matvey Sheremeev.docx,"The desktop game inspired by board game ”Evolution”
Feb 2021 ‑ May 2021
"
15327,source/Matvey Sheremeev.docx,"• Developed game logic and established a code architecture following the Model‑View‑Controller (MVC) pattern
• Engineered both server and client‑side functionalities with gRPC to enable online multiplayer gameplay
• Ensured code quality by implementing unit testing for correctness
"
15328,source/Matvey Sheremeev.docx,"SSVEP BCI classification
|
Python, PyRCCA
NRU HSE University
"
15329,source/Matvey Sheremeev.docx,"• Implemented three algorithms for selecting the 
target stimulus by spectra, CCA and FBCCA
"
15330,source/Matvey Sheremeev.docx,"• Achieved classification accuracies across all 
algorithms, depending on the window size, with the 
highest accuracy 0.98
"
15331,source/Matvey Sheremeev.docx,"Oct 2022
"
15332,source/Matvey Sheremeev.docx,"Git
|
Java, Jackson
NRU HSE University
"
15333,source/Matvey Sheremeev.docx,"• Implemented all core features of the Git: init, 
add, rm, checkout, log, reset, commit with 
command line interface
"
15334,source/Matvey Sheremeev.docx,"• Implemented unit test coverage for different test 
cases
"
15335,source/Matvey Sheremeev.docx,"Apr 2022
"
15336,source/Matvey Sheremeev.docx,"Other projects
|
Java, C++/C, 
Haskell, Python, TensorFlow
NRU HSE University
"
15337,source/Matvey Sheremeev.docx,"• Signal classification: Neural network that classifies 
40 different signals according to MFCC and MEL 
spectrogram
"
15338,source/Matvey Sheremeev.docx,"• Tic‑tac‑toe: The console game with a testing 
framework build with C macroses to streamline test 
development
"
15339,source/Matvey Sheremeev.docx,"• Vector: The own implementation of C++ std::vector 
with strong exception safety guarantee
"
15340,source/Matvey Sheremeev.docx,"Sep 2020 ‑ Dec 2022
"
15341,source/Matvey Sheremeev.docx,"• Lambda calculator: The Haskell library for resolving ß‑reduction in lambda terms and assisting in the resolution 
of problems of their aß and ß equivalence
"
15342,source/Matvey Sheremeev.docx,"• BMP processing: The application for BMP image download, cropping and rotation
"
15343,source/Alina Synhaievska.docx,"Alina Synhaievska
"
15344,source/Alina Synhaievska.docx,"London, United Kingdom 
 +44 7743 840602
"
15345,source/Alina Synhaievska.docx,"Profile
"
15346,source/Alina Synhaievska.docx,"I'm an enthusiastic Frontend Developer 
seeking an entry-level position at a company 
where I can use my previous experience and 
skills in projects which push me to develop 
in the software engineering field and 
related spheres.
"
15347,source/Alina Synhaievska.docx,"Work experience
"
15348,source/Alina Synhaievska.docx,"Skills
"
15349,source/Alina Synhaievska.docx,"HTML, CSS
Grid, Flexbox 
JavaScript 
React, Redux 
GraphQL, Apollo 
VCS(Git)
Scrum Development 
Communication
"
15350,source/Alina Synhaievska.docx," 01 / 2020 – 06 / 2020 
 KYIV, UKRAINE
"
15351,source/Alina Synhaievska.docx,"Frontend developer
EPAM Systems
I acted as a Frontend developer in two 
charity projects - Klitschko foundation 
helping to develop sports among youth - 
owned by world famous Ukrainian boxers and 
foundation for helping homeless people. I 
had 
a 
scrum 
team 
of 
five 
Frontend 
developers and JIRA was used as a project 
management system. My main responsibilities 
were to develop new user facing features, 
build stable code, collaborate with back-end 
developers and web designers to improve 
usability, write functional requirement 
documents and guides, contribute to daily 
scrum meetings, sprint reviews and planning 
sessions.
"
15352,source/Alina Synhaievska.docx," LANGUAGES
"
15353,source/Alina Synhaievska.docx,"Ukrainian, Russian
Native
"
15354,source/Alina Synhaievska.docx,"English
Professional
"
15355,source/Alina Synhaievska.docx,"Hobbies
"
15356,source/Alina Synhaievska.docx,"Fitness
Snowboarding
Swimming
"
15357,source/Alina Synhaievska.docx,"Reading
Cooking
Traveling
"
15358,source/Alina Synhaievska.docx," 05 / 2019 – 01 / 2020 
 KYIV, UKRAINE
"
15359,source/Alina Synhaievska.docx,"Trainee
EPAM Systems
Studied 
the 
basics 
of 
object-oriented 
programming, the fundamentals of functional 
programming, 
design 
and 
architectural 
patterns, 
the 
capabilities 
of 
new 
"
15360,source/Alina Synhaievska.docx,"ECMAScript's standards (ES6, ES7, etc.). 
Completed 
several 
development 
projects 
collectively using the Angular and ReactJS 
frameworks.
"
15361,source/Alina Synhaievska.docx,"Education
"
15362,source/Alina Synhaievska.docx," 2009 – 2015 
 KYIV, UKRAINE
"
15363,source/Alina Synhaievska.docx,"Law
Taras Shevchenko National University 
"
15364,source/Alina Synhaievska.docx,"of Kyiv
"
15365,source/Nick Koshlan.docx,"As a software engineer, I’m willing to solve complex 
technical problems. I consider myself to be an eﬃcient 
team player. With my enthusiasm and strong knowledge, 
I would deﬁnitely bring value to your company and 
contribute to a meaningful cause!
"
15366,source/Nick Koshlan.docx,"EDUCATION
"
15367,source/Nick Koshlan.docx,"Lviv Polytechnic National University
Artiﬁcial Intelligence, Bachelor`s Degree
"
15368,source/Nick Koshlan.docx,"09/2018 - Present,
GPA(83/100 ) Lviv, Ukraine 
"
15369,source/Nick Koshlan.docx,"Courses
"
15370,source/Nick Koshlan.docx,"Linear Algebra
Mathematical Statistics
"
15371,source/Nick Koshlan.docx,"Algorithms
Object-
Oriented 
Programming
"
15372,source/Nick Koshlan.docx,"Artiﬁcial Intelligence
Web Development
"
15373,source/Nick Koshlan.docx,"SKILL
S
"
15374,source/Nick Koshlan.docx,"+7 (098) 945-1111 
"
15375,source/Nick Koshlan.docx,"Lviv, Ukraine    
"
15376,source/Nick Koshlan.docx," linkedin.com/in/nnnkoshlan   
"
15377,source/Nick Koshlan.docx,"       nnnkoshlan
"
15378,source/Nick Koshlan.docx,"WORK EXPERIENCE
"
15379,source/Nick Koshlan.docx,"Technical Consultant/ Software 
Engineer
N-IX
"
15380,source/Nick Koshlan.docx,"02/2020 - Present,
Lviv, Ukraine
"
15381,source/Nick Koshlan.docx,"Projects
"
15382,source/Nick Koshlan.docx,"HR - ECM Project used by enterprise customer 
Metinvest Holding. Its main purpose is to 
automate documents ﬂow in the whole 
company. I take part in product development 
and writing user stories. Stack: OpenText 
Content Server, SAP, MS SQL.
"
15383,source/Nick Koshlan.docx,"MISA - used by enterprise customer from 
Switzerland. This is MSC Project with many 
external features. I take part in planning, 
architecting and developing of front- end part. 
Stack: C#, React, TS, SAP, Froala (WYSIWYG HTML 
Editor).
"
15384,source/Nick Koshlan.docx,"Team Lead/ Front-end developer
SoftServe
"
15385,source/Nick Koshlan.docx,"01/2020 - 06/2020,
Lviv, Ukraine
"
15386,source/Nick Koshlan.docx,"Projects
"
15387,source/Nick Koshlan.docx,"Unity - a volunteer web app with system of 
tickets. There you can upgrade your level, collect 
achievements and many other. I came up with 
an idea of the project, was managing teamwork 
for 5 month, and presented project in front of 
company managers. Stack: Java(Spring), TS, 
React, Bootstrap4. 
"
15388,source/Nick Koshlan.docx,"PERSONAL PROJECTS
"
15389,source/Nick Koshlan.docx,"Flower shop (09/2019 - 01/2020)
"
15390,source/Nick Koshlan.docx,"First personal project written for learning. While I was 
developing it, I learned to be an organized and result-
driven person.
I presented it at my University, as my end-of-semester 
project. Stack: Java(Spring MVC), JS, Thymeleaf, HTML5, CSS3, 
"
15391,source/Nick Koshlan.docx,"Bootstrap4.
"
15392,source/Nick Koshlan.docx,"CERTIFICATES
"
15393,source/Nick Koshlan.docx,"Front-End Web UI Frameworks and Tools: 
Bootstrap 4 (03/2020 - 04/2020)
Grade Achieved: 98.50%
"
15394,source/Nick Koshlan.docx,"Front-End Web Development with 
React (04/2020 - 05/2020)
Grade Achieved: 100.00%
"
15395,source/Nick Koshlan.docx,"Design Patterns (03/2020 - 04/2020)
Grade Achieved: 97.50%
"
15396,source/Nick Koshlan.docx,"SQL for Data Science (02/2020 - 03/2020)
Grade Achieved: 92.67%
"
15397,source/Nick Koshlan.docx,"LANGUAGES
"
15398,source/Nick Koshlan.docx,"JS/TS, React, NodeJS - working 
ﬂuency
"
15399,source/Nick Koshlan.docx,"HTML5, CSS3, SASS - working 
ﬂuency
"
15400,source/Nick Koshlan.docx,"MySQL, MS SQL - working 
ﬂuency
"
15401,source/Nick Koshlan.docx,"Python, Java, Spring - working 
knowledge
"
15402,source/Nick Koshlan.docx,"OOP, MSA, Agile - deep 
understanding
"
15403,source/Nick Koshlan.docx,"Team Lead/ Front-end developer
GlobalLogic
"
15404,source/Nick Koshlan.docx,"01/2019 - 06/2019,
Lviv, Ukraine
"
15405,source/Nick Koshlan.docx,"Projects
"
15406,source/Nick Koshlan.docx,"AquaDrone (Start up) - main idea was to create a 
cheap version of underwater drone. I took part in 
product development (Android app for remote 
control). I also assembled a team, coordinated 
the workﬂow and contacted our mentor, At the 
end I presented it for the company investors.
"
15407,source/Nick Koshlan.docx,"English
Professional Working Proflciency
"
15408,source/Nick Koshlan.docx,"Ukrainian
Native
"
15409,source/Nick Koshlan.docx,"INTERESTS
"
15410,source/Nick Koshlan.docx," 
"
15411,source/Nick Koshlan.docx,"German
Limited Working Proflciency
"
15412,source/Nick Koshlan.docx,"Russian
Full Professional Proflciency
"
15413,source/Nick Koshlan.docx,"Music
Movies
Cooking
Photo
"
15414,source/Pavel Korniltsev.pdf,"Pavel Korniltsev 
"
15415,source/Pavel Korniltsev.pdf,"Data Scientist Team Leader 
"
15416,source/Pavel Korniltsev.pdf,"Saint Petersburg, Russian Federation 
"
15417,source/Pavel Korniltsev.pdf,"+79226039000 
kornilcpppp@yandex.ru 
"
15418,source/Pavel Korniltsev.pdf," 
  
 
"
15419,source/Pavel Korniltsev.pdf,"WORK EXPERIENCE 
SberBank 
"
15420,source/Pavel Korniltsev.pdf,"Data Scientist Team Leader 
"
15421,source/Pavel Korniltsev.pdf,"/ Leading teams and large portfolios of data science projects 
/ Representing the company at conferences through public speaking 
/ Delivering innovative technical solutions to improve business outcomes 
/ Creating scalable data pipelines and tools to reduce the time-to-market 
/ Working with diverse ML-technologies: NLP, NN, Recommender Systems 
/ Ensuring good communication between the parties to optimize strategies 
"
15422,source/Pavel Korniltsev.pdf,"July 2017 - Present Russian Federation 
"
15423,source/Pavel Korniltsev.pdf," 
 
"
15424,source/Pavel Korniltsev.pdf,"Mobile Telesystem 
"
15425,source/Pavel Korniltsev.pdf,"Data Scientist 
"
15426,source/Pavel Korniltsev.pdf,"/ Detecting anomalies in time series via sARIMA model 
/ Fraud-detecting through regression models 
/ Automating ETL process with SAS EG 
/ Developing BI reports for anomaly explanation 
/ Delivering insights to business supervisors 
/ Working with huge data sets via Teradata 
"
15427,source/Pavel Korniltsev.pdf,"July 2015 - July 2017 Russian Federation 
"
15428,source/Pavel Korniltsev.pdf," 
 
 
 
"
15429,source/Pavel Korniltsev.pdf,"EDUCATION 
Ural Federal University 
"
15430,source/Pavel Korniltsev.pdf,"Bachelor of Program engineering 
"
15431,source/Pavel Korniltsev.pdf,"October 2017 - Present Russian Federation 
"
15432,source/Pavel Korniltsev.pdf," 
 
"
15433,source/Pavel Korniltsev.pdf,"Ural Federal University 
"
15434,source/Pavel Korniltsev.pdf,"Master of Financial markets and investments 
"
15435,source/Pavel Korniltsev.pdf,"September 2012 - June 2014 Russian Federation 
"
15436,source/Pavel Korniltsev.pdf," 
 
"
15437,source/Pavel Korniltsev.pdf,"Ural State Mining University 
"
15438,source/Pavel Korniltsev.pdf,"Master of Underground construction 
"
15439,source/Pavel Korniltsev.pdf,"September 2007 - June 2012 
"
15440,source/Pavel Korniltsev.pdf," 
 
 
"
15441,source/Pavel Korniltsev.pdf," 
"
15442,source/Pavel Korniltsev.pdf,"SKILLS 
HADOOP, Machine Learning, NLP, Oracle, PL/SQL, Power BI, Python, Recommendation 
Systems, Spark, SQL, Tableau, Teradata, Time Series 
"
15443,source/Ivan Petrov.pdf,"1 
"
15444,source/Ivan Petrov.pdf," 
"
15445,source/Ivan Petrov.pdf," 
"
15446,source/Ivan Petrov.pdf,"Ivan Petrov 
"
15447,source/Ivan Petrov.pdf,"@TechLead (Ex-Google Tech Lead) 
"
15448,source/Ivan Petrov.pdf," 
I've reviewed hundreds of engineering resumes. Here's a recap on some of my best tips 
below. More interview training with ex-Google and ex-Facebook engineers at 
http://techinterviewpro.com/ 
 
The 10-second rule 
"
15449,source/Ivan Petrov.pdf,"Take 10 seconds to scan your resume from the beginning, reading through it quickly (as if you 
had a dozen other resumes to get through). This may involve reading only the first half-page, 
scanning the first 5 words of each sentence/bullet point. 
 
What do you see? If it's all over the place with fluff words, weak verbs, and shows weakness, 
chances are your resume will get thrown out because 10 seconds is probably about as much 
time as a recruiter/hiring manager is going to give you. 
 
Here's what you need to ensure: 
"
15450,source/Ivan Petrov.pdf,"● The first words at the top of your resume should be very software-developer oriented, 
"
15451,source/Ivan Petrov.pdf,"around developing, implementing, creating, and building: 
"
15452,source/Ivan Petrov.pdf,"○ ""Developed a REST API in X using Python and Java..."" 
○ ""Built a full-stack web app and launched to 1000 users..."" 
○ ""Taught myself GoLang and implemented a framework for a webserver..."" 
"
15453,source/Ivan Petrov.pdf,"That's starting to sound like a candidate we might be interested in. 
"
15454,source/Ivan Petrov.pdf," 
"
15455,source/Ivan Petrov.pdf,"● The resume should flow in sentence structure, explaining one after another in active 
"
15456,source/Ivan Petrov.pdf,"verbs what you have personally done. There's a rhythm here: ""Built X, Created Y, 
Developed Z, Implemented A, Built ..."" If you are breaking up the resume with statements 
rather than actions like ""GeoPickV3: A project to terraform the geoclusters,"" that halts the 
readability of the resume with fluff words that explain absolutely nothing, and switching 
the subject between you, your project, your team, and your company causes mental 
breaks. The subject should be you. 
"
15457,source/Ivan Petrov.pdf,"● It should be clear that you are a strong developer for the targeted role within the first few 
"
15458,source/Ivan Petrov.pdf,"moments of reading your resume. If it is not strong, you need to rephrase your resume. 
"
15459,source/Ivan Petrov.pdf,"Pitfalls: 
"
15460,source/Ivan Petrov.pdf,"● Don't use non-engineering words like ""Documented,"" ""Supported,"" ""Troubleshooted, 
"
15461,source/Ivan Petrov.pdf,"""Automated unit-testing,"" etc., You are not applying to be tech-support here or a 
documentation writer, so there's no need to highlight those points. Just like how you 
wouldn't highlight that you can cook, even though the company may need a few good 
cooks -- that's not what you're expecting to do here. 
"
15462,source/Ivan Petrov.pdf,"2 
"
15463,source/Ivan Petrov.pdf," 
"
15464,source/Ivan Petrov.pdf," 
"
15465,source/Ivan Petrov.pdf,"● At the top, don't list low-priority information like hobbies, extracurriculars, or irrelevant 
"
15466,source/Ivan Petrov.pdf,"skills like Photoshop, Premiere, Excel. Move these towards the bottom of the resume, or 
just leave out skills that may dilute your resume. 
"
15467,source/Ivan Petrov.pdf,"● Don't spend too much time explaining what the company does or what the team does. 
"
15468,source/Ivan Petrov.pdf,"Explain what you personally did. 
"
15469,source/Ivan Petrov.pdf," 
Tell a Story 
"
15470,source/Ivan Petrov.pdf,"Descriptions should tell a story. 
 
It is absolutely useless to list a bunch of technical jargon that no one knows. Imagine reading a 
laundry list of: 
"
15471,source/Ivan Petrov.pdf,"● Implemented X (version 238200) 
● Implemented Y in SprintSpark 3 
● Implemented Z using GeoLoaderXX1 
"
15472,source/Ivan Petrov.pdf,"It just doesn't matter what someone implemented if there is no story behind it. 
 
Even worse, many people don't explain the languages used, and these technologies are often all 
proprietary so there is no way to reuse the skillset. 
 
Saying that you ""Implemented Carraform v2.0 and launched to Prexo SpringSuite"" is like saying 
nothing, and yet most resumes are absolutely littered with phrases like this. 
 
I would recommend you explain your descriptions in a format of 
[ACCOMPLISHMENT, IMPACT, CHALLENGE] 
 
This 3 components tell a complete story. For instance, you might say ""Developed a server-side 
layout engine in iOS by teaching myself GoLang to automate 1000+ antiquated manual layouts. 
Working with a coworker, this began as an ambiguous project that I drove to completion and 
launched company-wide."" This is far more impactful and relatable, since it explains what you did, 
why it was hard, and what the validation of that work was. 
 
Less is more. 
 
Focus on a few very strong points and develop those, instead of a long list of bullet point 
features, none of which seem very interesting for anyone to care about. If you have a big 
accomplishment, spend more time on your resume to talk about that. The fact is that any bullet 
point could have an amazing story behind it, but you need to reveal that story. 
 
I once saw a resume with a ""Co-founder"" role and yet there was a single 5-word bullet point. 
""Co-founded a company and launched X."" That looks... disgenuine. Was this real? What were 
"
15473,source/Ivan Petrov.pdf,"3 
"
15474,source/Ivan Petrov.pdf," 
"
15475,source/Ivan Petrov.pdf," 
"
15476,source/Ivan Petrov.pdf,"the challenges and impact? Is this worth talking about? Obviously not if the candidate didn't have 
much to say about it. 
 
It's about you. Not about your accomplishment 
"
15477,source/Ivan Petrov.pdf,"What many candidates fail to realize is that I want to know what you, as an individual, did. 
Not what your company did. 
Not what your team did. 
Not what your project did. 
What you did. 
 
Because the fact is, the only thing you're able to bring to my team is you. 
 
So I want to know about your personal contributions to a project. That's it -- what type of 
character are you, what skills do you have, how did you apply those skills, what motivates you. It 
doesn't matter if your company is ""the worldclass leader in B2B enterprise solutions with 50,000 
clients,"" if the only task you did was write tooling documentation. 
 
So, don't worry so much about listing every little accomplishment like how you ""Implemented 
Terraform in CarbOS using Carabide."" Nothing in that sentence is usable or translatable. But if 
you were to say ""Taught myself Carabide in 2 months and collaborated with 3 teams to lead 
development of Terraform, launching with CarbOS..."" That tells me a lot more about your ability to 
learn, your collaboration skills, and your passion for creating. 
 
Show. Don't tell. 
"
15478,source/Ivan Petrov.pdf,"Every bad resume seems to have a portion where the candidate will say: 
 
""I am hardworking, enthusiastic, and passionate. I am a great communicator, have excellent teamwork 
skills, and am perfect!"" 
"
15479,source/Ivan Petrov.pdf,"You're telling me, but you're not showing me. What reason do I have to believe you? 
 
If you're such a great communicator, you should have the stories to back that up -- instead of telling 
me that you can communicate, show me that through a story about how you ""Mentored your team 
"
15480,source/Ivan Petrov.pdf,"through weekly presentations, leading to the adoption of the ViewModel pattern in the codebase."" 
"
15481,source/Ivan Petrov.pdf,"If you're passionate, tell me about a pet project you started. 
 
If you're hardworking, tell me about how you taught yourself a new language and shipped it 
under a tight deadline. 
"
15482,source/Ivan Petrov.pdf,"4 
"
15483,source/Ivan Petrov.pdf," 
"
15484,source/Ivan Petrov.pdf," 
"
15485,source/Ivan Petrov.pdf," 
"
15486,source/Ivan Petrov.pdf,"The resume is where these stories paint a picture of you. It 
"
15487,source/Ivan Petrov.pdf,"is your personal marketing brochure, not a fact-sheet. 
"
15488,source/Ivan Petrov.pdf,"What in here isn't BS? 
"
15489,source/Ivan Petrov.pdf,"A trained resume reviewer will be scanning for fake, BS stories. For a resume to standout, it 
needs to contain validation. You validate your skills by explaining the results -- the impacts of your 
work. Some tips here: 
"
15490,source/Ivan Petrov.pdf,"● For each story, list the impact. Instead of saying ""Implemented X,"" say ""Implemented X, 
"
15491,source/Ivan Petrov.pdf,"and was featured in the TechCrunch."" Or ""... this work was adopted to the wider team."" Or ""... 
saving $XX thousands of dollars,"" or ""... and sped up developer velocity."" 
"
15492,source/Ivan Petrov.pdf,"● I've seen resumes with 10 pet projects, and yet not a single link to the project website or 
"
15493,source/Ivan Petrov.pdf,"github or anything. Where's the evidence of any of this? Were these worthless projects 
that were trashed? 
"
15494,source/Ivan Petrov.pdf,"● Put in concrete technical details where they count to substantiate your claims. If you 
"
15495,source/Ivan Petrov.pdf,"have a one-liner ""Developed the iPhone,"" that's just not believable. But if you can expand on 
that with all the relevant technologies & challenges, that makes your claim believable. 
Grounding the claim in reality makes it impressive. 
"
15496,source/Ivan Petrov.pdf," 
"
15497,source/Ivan Petrov.pdf,"People won't click on your links. 
"
15498,source/Ivan Petrov.pdf,"A lot of candidates put links in their resume, which is great. But just know that 90% of people 
will not be going through the hassle of opening each and every link. 
"
15499,source/Ivan Petrov.pdf,"I've seen a number of resumes where people say ""Built Project Maven (github.com/myproject)."" The 
description here isn't sufficient and it needs to stand on its own - you can't assume anyone will 
go to these links. 
"
15500,source/Ivan Petrov.pdf,"● If you have links, it may help to have a single personal page (yourname.com), rather than a 
"
15501,source/Ivan Petrov.pdf,"dozen links to your github, linkedin, facebook, twitter, personal page, project page1, 
project page2, etc., Who's going to open all of that? 
"
15502,source/Ivan Petrov.pdf,"● Make the links easy to type, using a shortener or custom domain. 
"
15503,source/Ivan Petrov.pdf,"● If someone takes the time to open any of these, make sure the projects look good. If I 
"
15504,source/Ivan Petrov.pdf,"waste 5 minutes of my time to check out your personal GitHub, and it's just scrap waste 
projects... guess where your resume's going too? 
"
15505,source/Ivan Petrov.pdf,"5 
"
15506,source/Ivan Petrov.pdf," 
"
15507,source/Ivan Petrov.pdf," 
"
15508,source/Ivan Petrov.pdf,"  
Target your resume to the role. 
"
15509,source/Ivan Petrov.pdf,"A lot of candidates get confused about ""facts"" vs ""story"". Your resume is not a fact sheet. It is a 
targeted story, subjectively told in an effort to persuade a biased decision. 
"
15510,source/Ivan Petrov.pdf,"If you worked in a ""Hardware Engineer"" role and now you want to do Software Engineering... do you 
talk about your hardware work? If you can cook, do you talk about that? If you worked as an Uber 
driver, do you list that? The answer to all of these is ""no."" 
"
15511,source/Ivan Petrov.pdf,"Depending on the role at hand, you want to highlight just the relevant skills. Even if at your last 
job 10% of the work was Python, if you're applying for a Python role you want to be gushing 
about all the Python development that you did. ""Implemented X in Python. Used Python to do Y. 
Taught myself Python frameworks Django and Flask to do Z."" 
"
15512,source/Ivan Petrov.pdf,"If the role is for Machine Learning, focus in on those keywords. 
If it's for a web frontend engineer, focus in on your web javascript skills. If 
"
15513,source/Ivan Petrov.pdf,"you aim for everything, you'll hit nothing. 
"
15514,source/Ivan Petrov.pdf,"You must code. 
"
15515,source/Ivan Petrov.pdf,"The hilarious thing is sometimes people apply for SWE roles and yet they don't seem to want to 
actually code. They'll go into the interviews and say: 
"
15516,source/Ivan Petrov.pdf,"● I don't code anymore. I'm more into strategy. 
● I lead projects. 
● I managed my team and coordinated them. 
"
15517,source/Ivan Petrov.pdf,"● I'm a co-founder and CEO. 
● I'm an entrepreneur. 
"
15518,source/Ivan Petrov.pdf,"● I have leadership skills. 
● I'm a great communicator and team player. 
"
15519,source/Ivan Petrov.pdf," 
I once saw a resume where the top 3 experiences were ""Co-Founder"", ""Co-Founder, ""CTO."" OK, maybe 
you should go apply to be a cofounder then? Because this role is for coder. 
"
15520,source/Ivan Petrov.pdf,"Too many people don't want to code, or think they're ""above the code."" Many resumes I've read 
seem reluctant to mention code or languages. People might say ""Created X, Y, and Z and 
"
15521,source/Ivan Petrov.pdf,"shipped this project, leading and coordinating development on X."" Well, where in this sentence did 
you actually do coding? 
"
15522,source/Ivan Petrov.pdf,"6 
"
15523,source/Ivan Petrov.pdf," 
"
15524,source/Ivan Petrov.pdf," 
"
15525,source/Ivan Petrov.pdf," 
"
15526,source/Ivan Petrov.pdf,"Let's put it this way: If you've applied for a SWE role, you're expected to code. Not to waltz 
around the office in a suit going to meetings with the VP of Sales. 
"
15527,source/Ivan Petrov.pdf,"So show the languages, frameworks, and technologies that you're using. 
 
A lot of people will bucket all of that into the bottom of their resume under ""Skills: C, Python, 
Javascript"" and never mention any of these again in the rest of their resume. That is simply not 
very convincing evidence that you can actually code. It doesn't explain how well you can code. 
 
Formatting 
"
15528,source/Ivan Petrov.pdf,"Let's talk about formatting. It matters. 
"
15529,source/Ivan Petrov.pdf,"● Single page. If you are using more than a single page, you are rambling. Trim it down 
"
15530,source/Ivan Petrov.pdf,"because no one has time to read all of this stuff. Highlight just your best, most recent 
work like a brochure. 
"
15531,source/Ivan Petrov.pdf,"● Single Column. Double-column layouts and fancy fonts/graphics generally just distract 
"
15532,source/Ivan Petrov.pdf,"and people can accidentally skip portions of your resume. It doesn't flow. 
"
15533,source/Ivan Petrov.pdf,"● Fully spell the names of companies. Which looks better? ""VMWare"" or ""VMWare, Inc.""? 
"
15534,source/Ivan Petrov.pdf,"The mental weight of the fully-spelled name makes it look more official and 
professional. 
"
15535,source/Ivan Petrov.pdf,"● Fully spell the names of your degree & education. Similarly, don't short-change your 
"
15536,source/Ivan Petrov.pdf,"4-year degree (if you have one) by saying ""Majored in cs at Ohio state."" Make it look 
good. ""Bachelor's of Science in Computer Science. Ohio State, 2004. 3.80 GPA."" That's 
better. It may even be appropriate here to list additonal activities, honor societies, 
relevant coursework & projects to bulk up the education a little more so that it's not just a 
one-liner. 
"
15537,source/Ivan Petrov.pdf,"● Grammar check. 
● Spelling check. 
● Capitalization check. 
● No photos. In the US, it is illegal to discriminate based on age, gender, race, or 
"
15538,source/Ivan Petrov.pdf,"appearance. Don't put photos on your resume for that purpose. 
"
15539,source/Ivan Petrov.pdf,"● Your name. I've been toying with this idea recently, but it's something to think about. 
"
15540,source/Ivan Petrov.pdf,"Let's pretend you have a name like ""Xheycho Yining Sundarabai Xylophone."" I'm sure it's a 
beautiful name in your language, but it doesn't look familiar for many people. I've seen 
some colleagues with unpronounceable names and they say ""Just call me Bobby,"" or 
""Just call me Shay"" and that instantly seems to make them more relatable. Think about it 
-- your name is your personal brand and is to be memorable. It paints a picture about the 
person behind the resume. It may help to put something like: ""Shay"" (Xheycho Yining 
Sundarabai Xylophone). (Up to you though, this is just a theory). 
"
15541,source/Ivan Petrov.pdf,"● Age. Age discrimination is absolutely illegal. If age is a concern for you, consider 
"
15542,source/Ivan Petrov.pdf,"removing your graduation dates. No one will ask you to list those, because it is illegal. 
"
15543,source/Ivan Petrov.pdf,"7 
"
15544,source/Ivan Petrov.pdf," 
"
15545,source/Ivan Petrov.pdf," 
"
15546,source/Ivan Petrov.pdf," 
The objective. 
"
15547,source/Ivan Petrov.pdf,"Not everyone needs an objective. 
 
But, if you have a broad background, an objective may help focus your resume and clarify your 
intentions -- especially if you're switching fields, people may get thrown off. An objective is a quick 
way to briefly explain what's going on here, instead of allowing a person to read the resume once, 
become confused at your history, then read it again, then think about the open roles, then try to 
figure out if there's any mistake here, etc., 
"
15548,source/Ivan Petrov.pdf,"Oftentimes, I'll see a candidate's resume and it's all over the place. There's a little of everything. So 
I ask myself, ""First of all, what type of role is this person going for? iOS? Android? Backend? 
"
15549,source/Ivan Petrov.pdf,"Frontend? Machine Learning? Graphics? Are they even interested in graphics?"" 
 
This is one reason you need to focus your resume, as mentioned above. An objective is a tool 
for helping you do that if you feel your background is wandering all over the place. 
 
Last Impressions count. 
"
15550,source/Ivan Petrov.pdf,"Every resume has a first impression. 
And every resume leaves a last impression. This 
is the last thing on there. 
Make it look good and make it count. 
 
I've seen some resumes that just end with something forgettable like: 
 
"
15551,source/Ivan Petrov.pdf,"Education 
bs in biology at Canvers Institute, 2008 
"
15552,source/Ivan Petrov.pdf," 
Does that look good to you? bleh. 
I think even if you were to list a few fun facts about you as a person like a cool hobby, a cool 
project, or next to your education list some neat clubs/activities/coursework you did that can 
make your resume more memorable. 
 
Make yourself seem like someone people want to bring in to personally meet. 
 
"
15553,source/Ivan Petrov.pdf," 
"
15554,source/Alina   MANAFLI.pdf," Alina 
 MANAFLI 
"
15555,source/Alina   MANAFLI.pdf," 
"
15556,source/Alina   MANAFLI.pdf,"+46 764 595 000 
"
15557,source/Alina   MANAFLI.pdf,"aaaaaamanafli@gmail.com 
"
15558,source/Alina   MANAFLI.pdf,"  
"
15559,source/Alina   MANAFLI.pdf," 
 
"
15560,source/Alina   MANAFLI.pdf," EDUCATION  
"
15561,source/Alina   MANAFLI.pdf,"9/2019 – 6/2021 
Expected 
"
15562,source/Alina   MANAFLI.pdf," 
 
 
"
15563,source/Alina   MANAFLI.pdf,"1/2020 - 1/2021 
Expected 
"
15564,source/Alina   MANAFLI.pdf," 
 
"
15565,source/Alina   MANAFLI.pdf,"Tallinn University of Technology 
MSc Computer and Systems Engineering, GPA 4.4/5.O 
Computer Systems Engineering, Object Oriented Programming 
"
15566,source/Alina   MANAFLI.pdf," 
"
15567,source/Alina   MANAFLI.pdf,"Uppsala University 
NORDTEK Exchange Studies, Computer Science, GPA 5.O/5.O 
Software Engineering and Project Management, Advanced Computer Architecture, Computer 
Graphics, Low-Level Parallel Programming, Parallel Programming for EPciency, Computer Networks, 
Agile and Extreme Project Management 
"
15568,source/Alina   MANAFLI.pdf," 
"
15569,source/Alina   MANAFLI.pdf,"9/2015 - 6/2019 
Lomonosov Moscow State University 
BSc Applied Mathematics, GPA 5.O/5.O 
Programming in C/C++, Discrete Mathematics, Parallel Programming, Linear Algebra, Calculus, Math- 
ematical Statistics, Methods of Optimisation, Numerical Methods 
"
15570,source/Alina   MANAFLI.pdf," 
"
15571,source/Alina   MANAFLI.pdf,"7/2017 - 8/2017 
Peter the Great St.Petersburg Polytechnic University 
Summer School in Microelectronic Devices Programming 
"
15572,source/Alina   MANAFLI.pdf," 
"
15573,source/Alina   MANAFLI.pdf," EXPERIENCE  
"
15574,source/Alina   MANAFLI.pdf,"8/2020 - 11/2020 
Ongoing 
"
15575,source/Alina   MANAFLI.pdf," 
 
 
 
 
"
15576,source/Alina   MANAFLI.pdf,"8/2020 - 11/2020 
Ongoing 
"
15577,source/Alina   MANAFLI.pdf," 
 
"
15578,source/Alina   MANAFLI.pdf,"Kuehne + Nagel 
Tallinn, Estonia (remote) 
"
15579,source/Alina   MANAFLI.pdf,"IT Trainee 
Designing and developing an open source fullstack application for Supply Chain Management of a 
fictional business. 
React /  Spring /   HTML /   CSS /   Jira 
"
15580,source/Alina   MANAFLI.pdf,"Uppsala University 
Uppsala, Sweden 
"
15581,source/Alina   MANAFLI.pdf,"Teaching Assistant 
Assisting in teaching of the Software Engineering and Project Management course by leading the 
project work of four groups of students in the role of a Scrum coach and the project’s client. 
Agile / Scrum /  Kanban 
"
15582,source/Alina   MANAFLI.pdf," 
"
15583,source/Alina   MANAFLI.pdf,"7/2018 – 9/2018 
CERN 
Geneva, Switzerland 
"
15584,source/Alina   MANAFLI.pdf,"Openlab Summer Intern 
Tested and optimized a set of common Question Answering NLP models on The Stanford Question 
Answering Dataset using Tensorflow . 
Python / NLP /  Tensorflow /  CUDA 
"
15585,source/Alina   MANAFLI.pdf,"5/2017 - 7/2017 
R.I.S.K. Company 
Baku, Azerbaijan 
"
15586,source/Alina   MANAFLI.pdf,"Software Engineer Intern 
Programmed a voice recorder with Arduino by applying Digital Signal Processing methods. 
Arduino /  C /   DSP 
"
15587,source/Alina   MANAFLI.pdf," 
"
15588,source/Alina   MANAFLI.pdf," PROJECTS  
"
15589,source/Alina   MANAFLI.pdf," 
"
15590,source/Alina   MANAFLI.pdf,"August 2020 
Conway’s Game of Life Visualizer |   Github  
Built a fullstack application in React and Spring to visualize the evolution of alive and dead cells on 
a grid by the rules described by John Conway. 
Java /  Spring /   React /   HTML /   CSS 
"
15591,source/Alina   MANAFLI.pdf," 
"
15592,source/Alina   MANAFLI.pdf,"July 2020 
Music Advisor |   Github  
Created a personal music advisor that makes preference-based suggestions and provides links to 
new releases and featured playlists through Spotify API. 
Java / Spotify API /  OAuth 
"
15593,source/Alina   MANAFLI.pdf," 
"
15594,source/Alina   MANAFLI.pdf,"May 2020 
Space Simulator |    Youtube  
Designed and built a C++ application with OpenGL able to procedurally generate and render a large 
number of solar systems, allowing the user to move in the created space. Parallelized with OpenMP. 
C++ / OpenGL / GLSL / OpenMP 
"
15595,source/Alina   MANAFLI.pdf," SKILLS  
"
15596,source/Alina   MANAFLI.pdf,"Programming Languages: 
Java, JavaScript, C, C++ 
"
15597,source/Alina   MANAFLI.pdf,"Parallel Programming / GPU: 
OpenCL, CUDA, OpenMP, OpenGL 
"
15598,source/Alina   MANAFLI.pdf,"Web: 
React, Spring 
"
15599,source/Alina   MANAFLI.pdf,"Version Control: 
Git 
"
15600,source/Alina   MANAFLI.pdf,"Languages: 
English (fluent), Russian (native), Azerbaijani (native) 
"
15601,source/Alina   MANAFLI.pdf," 
 
"
15602,source/Alina   MANAFLI.pdf," CERTIFICATES AND AWARDS  
"
15603,source/Alina   MANAFLI.pdf,"Aug 2020 
Google Get Ahead Program 
- Participated in a 8 week virtual program for selected CS students from all over EMEA 
- The program involved technical challenges, YouTube live training and interview workshops 
"
15604,source/Alina   MANAFLI.pdf," 
"
15605,source/Alina   MANAFLI.pdf,"Jan 2020 
Nordplus grant for NORDTEK exchange studies recipient 
"
15606,source/Alina   MANAFLI.pdf,"Jan 2020 
Kristjan Jaak Study Periods Abroad Scholarship recipient 
"
15607,source/Alina   MANAFLI.pdf,"Sep 2019 
Dora Pluss Scholarship recipient 
"
15608,source/Alina   MANAFLI.pdf,"Dec 2018 
Representative of Applied Mathematics Faculty at the Second National Student Conference 
"
15609,source/Alina   MANAFLI.pdf,"Nov 2017 
Participant of ACM ICPC Subregional Programming contest 
"
15610,source/Alina   MANAFLI.pdf,"Jul 2017 
Intel FPGA Technical Training, Peter the Great St. Petersburg 
"
15611,source/Alina   MANAFLI.pdf,"Oct 2016 
Participant of ACM ICPC Subregional Programming contest 
"
15612,source/Alina   MANAFLI.pdf,"Sep 2016 
Media Team Volunteer at 42nd Chess Olympiad 
"
15613,source/Alina   MANAFLI.pdf,"Apr 2016 
Participant of the All-Republican Olympiad in Information Science 
"
15614,source/MARAT TAZHIMBETOV.docx,"MARAT TAZHIMBETOV
"
15615,source/MARAT TAZHIMBETOV.docx,"marat3424@gmail.com ￿ +7 000 000 1107
"
15616,source/MARAT TAZHIMBETOV.docx,"EDUCATION
"
15617,source/MARAT TAZHIMBETOV.docx,"Suleyman Demirel University
September 2016 - June 
"
15618,source/MARAT TAZHIMBETOV.docx,"2020 Almaty, Kazakhstan
B.S. in Computer Science.
Receiver of government scholarship for top science Olympiad medalists.
"
15619,source/MARAT TAZHIMBETOV.docx,"EXPERIENCE
"
15620,source/MARAT TAZHIMBETOV.docx,"Chocolife.me
June 2019 - Present
"
15621,source/MARAT TAZHIMBETOV.docx,"Core developer
Almaty, Kazakhstan
"
15622,source/MARAT TAZHIMBETOV.docx,"· Core Developer on the #1 coupon service in Kazakhstan with 300,000+ monthly active users
· Top-5 contributor by pull requests in the company
· Worked on every part of the platform: buildsystem, deployments, microservices, database refactoring
· Built new version of API for the whole mobile application which decreased number of requests to the server by 
x3
"
15623,source/MARAT TAZHIMBETOV.docx,"· Integrated Elasticsearch which optimized all admin-panel’s database requests’ latency by x5
· Automated user data consistency among main services via RabbitMQ and Pub/Sub design pattern
· Refactored MySQL table’s schema which decreased the number of records from 10 Million to 300 thousand rows
"
15624,source/MARAT TAZHIMBETOV.docx,"Chocolife.me
January 2019 - May 2019
"
15625,source/MARAT TAZHIMBETOV.docx,"Software Engineering Intern
Almaty, Kazakhstan
"
15626,source/MARAT TAZHIMBETOV.docx,"· Designed & developed blogging platform’s miscroservice using Phalcon, PHP via RestAPI & OpenAPI
· 100% unit & functional tests coverage using Codeception
"
15627,source/MARAT TAZHIMBETOV.docx,"Suleyman  Demirel  University
September 2016 - December 
2016
Teaching Assistant, Part-time
Almaty, Kazakhstan
"
15628,source/MARAT TAZHIMBETOV.docx,"· Supervised 20+ students and gave 15+ lectures on algorithms & data structures in Java
"
15629,source/MARAT TAZHIMBETOV.docx,"PROJECTS
"
15630,source/MARAT TAZHIMBETOV.docx,"Vehicle registration plate recognizer
Diploma project
May 2019 - June 2019
"
15631,source/MARAT TAZHIMBETOV.docx,"· Created whole software ecosystem for automatic number-plate recognition
· Built RESTful API which recognizes car license number from a received image. Used Flask, OpenCV
· Created dashboard for clients which provides access control for clients parking lot. Used Laravel
"
15632,source/MARAT TAZHIMBETOV.docx,"SKILLSET
"
15633,source/MARAT TAZHIMBETOV.docx,"· Confident in: PHP, Data Strucutre and Algorithms
· Had experience with: Python, Java, C#, Git, Lua, MySQL, Tarantool
"
15634,source/MARAT TAZHIMBETOV.docx,"AWARDS
"
15635,source/MARAT TAZHIMBETOV.docx,"· Bronze medal in the Mostratec international Science and Technology Exhibition 2016 (Among 100+ teams)
· Top-2 in Regional Olympiad in Biology 2015 (Among 30+ students)
"
15636,source/Eduard SCETININ.docx,"Eduard SCETININ
"
15637,source/Eduard SCETININ.docx,"Riga, Latvia
"
15638,source/Eduard SCETININ.docx,"+30000074873
"
15639,source/Eduard SCETININ.docx,"skeaaane@inbox.lv 
LinkedIn profile
"
15640,source/Eduard SCETININ.docx,"Professional software developer with 3 years of experience in Python development, 
especially data processing. Have an experience in REST API development with Django or 
Flask frameworks.
"
15641,source/Eduard SCETININ.docx,"TECHNICAL PROFICIENCIES
"
15642,source/Eduard SCETININ.docx,"￿
Backend: Python, Django, Flask, REST API, SQL,
￿
Databases: PostgreSQL, Oracle, SQlite
"
15643,source/Eduard SCETININ.docx,"PL/SQL, ORM, MVC
￿
Infrastructure: Docker, Kubernetes,
"
15644,source/Eduard SCETININ.docx,"￿
Frontend: HTML, CSS, Boostrap, JavaScript
JupyterHub, Azure DevOps (Pipelines,
"
15645,source/Eduard SCETININ.docx,"(ES6), JQuery, Electron, Angular
Deployment), Azure Active Directory
"
15646,source/Eduard SCETININ.docx,"￿
OS: Windows, Linux (Ubuntu)
(Authentication, Vault)
"
15647,source/Eduard SCETININ.docx,"￿
Cloud: Alibaba Cloud, Azure
￿
Data processing: Spark (PySpark), Hadoop,
"
15648,source/Eduard SCETININ.docx,"￿
NLP: Spacy
Pandas, Numpy, Jupyter Notebook
"
15649,source/Eduard SCETININ.docx,"￿
Other: Git, SVN, TFS, Jira, Pycharm, JSON,
XML, Microsoft Visual Studio Code, Agile,
Scrum, Palantir Foundry, Powershell
"
15650,source/Eduard SCETININ.docx,"PROFESSIONAL EXPERIENCE
"
15651,source/Eduard SCETININ.docx,"JUL 2019 – PRESENT
SOFTWARE DEVELOPER
C.t.co - IT solutions and services provider with 600+ employees.
Developing data processing tool for Chinese region and solving infrastructure problems. 
Building data pipelines.
"
15652,source/Eduard SCETININ.docx,"￿
Building data pipelines on the Palantir Foundry data management platform.
Technologies: Python, Pyspark, HDFS
Key Achievements: Help business to cross from SAS to Palantir Foundry huge 
amount of data processing.
"
15653,source/Eduard SCETININ.docx,"￿
Data Processing tools with a bias on the Chinese region in Alibaba Cloud. 
Technologies: Python, Pandas, Numpy, Spacy, Pytest, Jinja2, Jupyter – 
JupyterLab and JupyterHub, Azure DevOps, Azure Active Directory, Spark 
(PySpark), Docker, Kubernetes Key Achievements: Refactor the most 
important functionality of all the project, which increased the speed of operation 
and fault tolerance of the system, which reduced the time of employees for 
support by 30%.
"
15654,source/Eduard SCETININ.docx,"JUL 2018 – JUL 2019
SOFTWARE DEVELOPER
"
15655,source/Eduard SCETININ.docx,"Emergn – software vendor with 500+ employee.
Learned the basics of machine learning before first project started.
"
15656,source/Eduard SCETININ.docx,"￿
Synchronization service from TFS to Jira. Administrating Jira to provide a 
special view of all necessary tickets from TFS.
Technologies: Python, Jira, TFS, Cron.
Key Achievements: Successfully delivered service for management of the 
company fulfilling all the requirements.
"
15657,source/Eduard SCETININ.docx,"￿
Web Application with the information about company employee connections in 
Azure Cloud.
Technologies: Python, Flask, JavaScript, JQuery, JSlint, JSON.
Key Achievements: In a short time successfully launched the project to show it for 
customers. Learned back-end side with Python and front-end with JavaScript and 
JQuery.
"
15658,source/Eduard SCETININ.docx,"￿
Application with the statistics based on employee stats and predictions how it 
can be improved.
Technologies: Electron, JavaScript, JQuery, JSlint, JSON
Key Achievements: Moving project from web to app-based approach for Windows 
and Mac. Quickly and efficiently deliver all the client’s stories.
"
15659,source/Eduard SCETININ.docx,"EDUCATION
"
15660,source/Eduard SCETININ.docx,"JUNE 2019
BACHELOR’S DEGREE OF ENGINEERING SCIENCES IN COMPUTER CONTROL 
"
15661,source/Eduard SCETININ.docx,"AND
"
15662,source/Eduard SCETININ.docx,"COMPUTER SCIENCE, RIGA TECHNICAL UNIVERSITY
Research on Django Framework for Python Applications Development
"
15663,source/Eduard SCETININ.docx,"ACTIVITIES
"
15664,source/Eduard SCETININ.docx,"￿
Languages – English (fluent), Russian (native), Latvian (fluent).
"
15665,source/Eduard SCETININ.docx,"￿
Personal traits – initiative-taking, capable of quick learning the technologies and deep 
analyzing the problems.
"
15666,source/Eduard SCETININ.docx,"￿
Interests – Mobile technologies, urban studies, travelling.
"
15667,source/Eduard SCETININ.docx,"2
"
15668,source/Alex Konev.docx,"alkonev111@
"
15669,source/Alex Konev.docx,"gmail.com · 
"
15670,source/Alex Konev.docx,"Moscow, Russia
"
15671,source/Alex Konev.docx,"EXPERIENCE
"
15672,source/Alex Konev.docx,"• Yandex
"
15673,source/Alex Konev.docx,"Machine Learning Developer - Moscow, Russia 
Developing video recommender system. I work on the 
"
15674,source/Alex Konev.docx,"whole pipeline: logs processing/data collection/model 
training/AB-testing/models deployment
"
15675,source/Alex Konev.docx,"March 2020 onwards
"
15676,source/Alex Konev.docx,"• Yandex.Market
"
15677,source/Alex Konev.docx,"Intern analyst
Developed a recommender system for categories. Re- 
sponsibilities: data collection/model training/AB- testing
"
15678,source/Alex Konev.docx,"May - August 2019
"
15679,source/Alex Konev.docx,"EDUCATION
"
15680,source/Alex Konev.docx,"• M.S. Data Science
"
15681,source/Alex Konev.docx,"Skoltech
Developing DL models for multimodal trajectory pre- 
diction for self-driving cars
"
15682,source/Alex Konev.docx,"2018-2021
"
15683,source/Alex Konev.docx,"• B.S. Physics
"
15684,source/Alex Konev.docx,"Lomonosov Moscow State University
2014-2018
"
15685,source/Alex Konev.docx,"AWARDS & RECOGNITION
"
15686,source/Alex Konev.docx,"• Open AI Caribbean Challenge
"
15687,source/Alex Konev.docx,"Rooftops classification using satellite data. Used CNN 
"
15688,source/Alex Konev.docx,"models + smart stacking
"
15689,source/Alex Konev.docx,"3/1425
Link to a post in organizers‘ blog
"
15690,source/Alex Konev.docx,"• Kaggle Lyft Motion Prediction for Au- 
tonomous Vehicles
Bronze: 68 / 925 teams
The task was to predict the trajectory of the agents 
(cars/bikes/pedestrians etc) around the autonomous 
vehicle. I combined different approaches of pretrained 
"
15691,source/Alex Konev.docx,"CNNs and self-implemented graph nets
"
15692,source/Alex Konev.docx,"AWARDS & RECOGNITION
"
15693,source/Alex Konev.docx,"• International hackathon Ice Vision Chal- 
lenge
The task was to detect road sings with the inference time 
"
15694,source/Alex Konev.docx,"restriction
"
15695,source/Alex Konev.docx,"6 / 26
Link
"
15696,source/Alex Konev.docx,"SKILLS
"
15697,source/Alex Konev.docx,"• Technologies
"
15698,source/Alex Konev.docx,"Python, Pytorch, TensorFlow, ML stack (numpy, 
scipy, pandas, sklearn etc), SQL
"
15699,source/Alex Konev.docx,"• Math
"
15700,source/Alex Konev.docx,"Machine Learning / Deep Learning (implemented con- 
volutional nn using pure numpy, writing formulas for 
backprops) / Numerical Linear Algebra / Large Scale 
Optimization / Advanced Statistical Methods
"
15701,source/Alex Konev.docx,"• Languages
"
15702,source/Alex Konev.docx,"Russian (native speaker), English (fluent)
"
15703,source/Alex Konev.docx,"PROJECTS
"
15704,source/Alex Konev.docx,"• Optimal Control of Satellite Model via 
Neural Networks [pdf]
"
15705,source/Alex Konev.docx,"comparison of deep learning and reinforcement 
approaches to the task of optimal control of satellite 
model
"
15706,source/Alex Konev.docx,"• Attention/decision maps [pdf]
"
15707,source/Alex Konev.docx,"Detecting regions of MRI responsible for health 
problem
"
15708,source/Alena Guseinova.pdf,"Alena Guseinova
"
15709,source/Alena Guseinova.pdf,"9020006132, guseinova.ale@gmail.com
"
15710,source/Alena Guseinova.pdf,"https://www.linkedin.com/in/alena-guseinova/
"
15711,source/Alena Guseinova.pdf,"Summary
"
15712,source/Alena Guseinova.pdf,"Software developer with three years of hands-on experience in software development.
Proficient in pillars of OOP. Has an experience in finance positions in bank, trust worthy
and can deal with confidentially data. In-depth knowledge of mathematical concepts,
calculation and formulas from a Master of Mechanics, Mathematics related discipline.
Flexible, adaptable and comfortable dealing with changing priorities.
"
15713,source/Alena Guseinova.pdf,"Technical Skills
"
15714,source/Alena Guseinova.pdf,"Programming: Lotus Domino, Formula, Visual Basic, C#
"
15715,source/Alena Guseinova.pdf,"Professional Experience
"
15716,source/Alena Guseinova.pdf,"IBM Lotus Notes Developer
April 2018 to July 2021
"
15717,source/Alena Guseinova.pdf,"Russian Standard Bank, Russia
Is in the top Russian banks by bank assets. https://www.rsb.ru/
"
15718,source/Alena Guseinova.pdf,"•
Developed new applications in Lotus Notes, which results in improvement of bank
clerks' workflow
"
15719,source/Alena Guseinova.pdf,"•
Revised and optimized existing applications, such as passes to bank cash
desk, meetings of bank collegial bodies, trainings
"
15720,source/Alena Guseinova.pdf,"•
Integrated IBM Lotus Notes/Domino applications with other systems
"
15721,source/Alena Guseinova.pdf,"•
Collected customer requirements. Maintained and supported applications
"
15722,source/Alena Guseinova.pdf,"Financial Analyst
October 2012 - December 2014
"
15723,source/Alena Guseinova.pdf,"Financial Accountant
December 2010 – October 2012
"
15724,source/Alena Guseinova.pdf,"Probusiness Bank, Russia
"
15725,source/Alena Guseinova.pdf,"•
Developed Excel macro to increase productivity
"
15726,source/Alena Guseinova.pdf,"•
Provided analysis of financial data using data query tools such as SQL
"
15727,source/Alena Guseinova.pdf,"•
Analyzed various divisions' performance and maintained process automation
"
15728,source/Alena Guseinova.pdf,"Education
"
15729,source/Alena Guseinova.pdf,"Saratov State University, Saratov, Russia
2004-2009
"
15730,source/Alena Guseinova.pdf,"Masters in Mechanics, Mathematics related discipline
WES badge: https://www.youracclaim.com/badges/c6a75c01-1e81-4f29-83d3-
848e9318129e/public_url
"
15731,source/Liza MOKHAN.pdf,"Sunny Isles Beach, 33160, FL
linkedin.com/in/liza-mokhan-1a8
348136
"
15732,source/Liza MOKHAN.pdf,"Liza MOKHAN
(+1) 682-000-9183
"
15733,source/Liza MOKHAN.pdf,"liza.mokhan@gmail.com
"
15734,source/Liza MOKHAN.pdf,"A QA AUTOMATION ENGINEER WITH 4+ YEARS OF EXPERIENCE WITH GREAT ATTENTION TO DETAILS, AN EXCELLENT ACADEMIC RECORD, WITH
"
15735,source/Liza MOKHAN.pdf,"GOOD UNDERSTANDING OF SOFTWARE DEVELOPMENT LIFECYCLE, GOOD KNOWLEDGE OF SOFTWARE TESTING CONCEPTS AND METHODOLOGIES.
"
15736,source/Liza MOKHAN.pdf,"LOOKING FOR A CHALLENGING ROLE IN A HIGH-LEVEL PROFESSIONAL ENVIRONMENT TO UTILIZE
"
15737,source/Liza MOKHAN.pdf,"MY TECHNICAL, MATH AND COMMUNICATION SKILLS.
"
15738,source/Liza MOKHAN.pdf,"EXPERIENCE
Quality Assurance Automation Engineer
MarTech Stack LLC
Oct 2019 – Dec 2020
"
15739,source/Liza MOKHAN.pdf,"● Developed, modified, and executed software test plans, automated scripts, and programs for testing.
● Increased the productivity of forms by analyzing test results, providing feedback, and consulting with development
"
15740,source/Liza MOKHAN.pdf,"engineers in the resolution of various problems.
"
15741,source/Liza MOKHAN.pdf,"● Tracked software problems and verified their correction. Coordinated necessary testing resources to
"
15742,source/Liza MOKHAN.pdf,"meet deadlines.
"
15743,source/Liza MOKHAN.pdf,"QA Engineer
IT Royalty
Feb 2014 – Dec 2014
"
15744,source/Liza MOKHAN.pdf,"● Investigated and analyzed requirements, specifications and technical documents for creating and maintaining well
"
15745,source/Liza MOKHAN.pdf,"designed test documentation (test plans and test cases).
"
15746,source/Liza MOKHAN.pdf,"● Designed and executed complex SQL scripts to maintain data. Performed black-box testing, integration, regression,
"
15747,source/Liza MOKHAN.pdf,"smoke, positive/negative testing.
"
15748,source/Liza MOKHAN.pdf,"QA Automation Software Testing Engineer
SmartSoft
Jan 2013 – Jan 2014
"
15749,source/Liza MOKHAN.pdf,"GMSP Risk Feed Quality Monitor: tool for checking big amounts of financial data via diﬀerent business rules. Start-up
company specialized in development and support of custom web and back-end solutions.
● Participated in daily/weekly meetings in accordance with Agile principles.
● Performed functional manual testing of UI (Web application).
● Implemented and maintained QA Automation tests using Selenium Webdriver and C#
"
15750,source/Liza MOKHAN.pdf,"Junior Software Testing Engineer
HealthCorp
Jun 2011 – Jul 2012
"
15751,source/Liza MOKHAN.pdf,"● Analyzed specification, added details, wireframes and screenshots to it.
● Performed functional manual testing on diﬀerent phases of testing cycle.
● Performed usability testing. Reported issues into an owned bug-tracking system.
"
15752,source/Liza MOKHAN.pdf,"SKILLS
"
15753,source/Liza MOKHAN.pdf,"●
Experience in Selenium (Webdriver), C#.
"
15754,source/Liza MOKHAN.pdf,"●
Experience in SQL (MS SQL).
"
15755,source/Liza MOKHAN.pdf,"●
Experience in Waterfall and Agile (Scrum, Kanban) methodologies.
"
15756,source/Liza MOKHAN.pdf,"●
Experience in preparing and maintaining testing/technical documentation.
"
15757,source/Liza MOKHAN.pdf,"●
Strong communication and self-organizing skills, troubleshooting and problem-solving skills.
"
15758,source/Liza MOKHAN.pdf,"●
Strong work ethics, passionate and detail oriented, focused on result and quality, creative thinking, initiative
and committed to project goals. Team player.
"
15759,source/Liza MOKHAN.pdf,"EDUCATION
Minsk, Belarus
Belarusian State University
2008 - 2009
"
15760,source/Liza MOKHAN.pdf,"Master's degree, Mathematics
"
15761,source/Liza MOKHAN.pdf,"Minsk, Belarus
Belarusian State University
2005 - 2008
"
15762,source/Liza MOKHAN.pdf,"Bachelor's degree (diploma cum laude) in Mathematics and computer science
"
15763,source/Vadim Sosnov.docx,"Vadim Sosnov
"
15764,source/Vadim Sosnov.docx,"vadsosnov200@gmail.com +48 57 138 00 02 
"
15765,source/Vadim Sosnov.docx,"Front-end Developer
"
15766,source/Vadim Sosnov.docx,"I like to create beautiful and user­friendly interfaces and learn something new. I’m open to learn 
new technologies about the stack, but prefer to develop with modern technologies such as 
Vue.js, React.js, etc. I'm able to complete duties on time while maintaining a high­quality service. 
Good team player with excellent communication skills.
"
15767,source/Vadim Sosnov.docx,"Technical Skills
"
15768,source/Vadim Sosnov.docx,"Front-end: JavaScript(ES6, TypeScript), Vue.js(Nuxt, Vuex, Vuetify), HTML5, 
CSS(Sass/Less, Tailwind, Bootstrap), Chart.js, Storybook, REST API, Git, Gulp, Webpack; 
CMS: WordPress, Wix;
Other: C++(basics), SQL Server, MongoDB, Firebase, Linux, VS Code, Figma, Zeplin, 
SCRUM (Jira, Bitbucket, Bamboo, GilLab).
"
15769,source/Vadim Sosnov.docx,"Professional Experience
"
15770,source/Vadim Sosnov.docx,"Group BWT, Zaporizhia, Ukraine
Front-end Developer (11/2020 — present)
Technologies: Vue.js(Vuex/Vuetify), TypeScript, Chart.js, Jest, Storybook, CSS, HTML5.
Key Achievements:
"
15771,source/Vadim Sosnov.docx,"•
implemented storybook for all components.
"
15772,source/Vadim Sosnov.docx,"YouTeam, Lviv, Ukraine
Front-end and Wordpress Developer (06/2019 — 11/2020) 
Technologies: Vue.js(Vuex/Vuetify), TypeScript, CSS, HTML5, WordPress. 
Key Achievements:
"
15773,source/Vadim Sosnov.docx,"•
participating in fast­growing startup product creation;
"
15774,source/Vadim Sosnov.docx,"•
launching more than 9 Product Hunts that occupied the top 3 positions;
"
15775,source/Vadim Sosnov.docx,"•
developed analytics that allows you to monitor the clicks of the platform and at the 
same time increase the conversion by 3 times;
"
15776,source/Vadim Sosnov.docx,"•
SEO optimizations.
"
15777,source/Vadim Sosnov.docx,"Education
"
15778,source/Vadim Sosnov.docx,"Bachelor of Computer Science (2019 ­ present)
Andrzej Frycz Modrzewski Krakow University, Krakow, Poland
"
15779,source/Vadim Sosnov.docx,"Junior Specialist of Computer systems and networks (2015­2019) 
"
15780,source/Vadim Sosnov.docx,"Novorozdilskyy Polytechnic College, Lviv, Ukraine
"
15781,source/ALLA VERNIGOR.pdf,"ALLA VERNIGOR 
"
15782,source/ALLA VERNIGOR.pdf,"CONTACTS AND REFERENCES 
"
15783,source/ALLA VERNIGOR.pdf,"Gmail: vernigor.aaaaa@gmail.com |  
"
15784,source/ALLA VERNIGOR.pdf," 
"
15785,source/ALLA VERNIGOR.pdf,"EDUCATION 
Higher School of Economics, 
Moscow 
"
15786,source/ALLA VERNIGOR.pdf," 
"
15787,source/ALLA VERNIGOR.pdf,"01.09.2019 – excepted 30.06.2023 
"
15788,source/ALLA VERNIGOR.pdf,"Excepted degree: Bachelor in Applied Mathematics and Information Science 
Current GPA: 8.97 out of 10 (5.0 out of 5) 
"
15789,source/ALLA VERNIGOR.pdf," 
"
15790,source/ALLA VERNIGOR.pdf,"TECHNICAL EXPERIENCE 
Projects 
• Educational projects: (2019, C++17) Hashtable (separate chaining with linked lists) realization,  
• Other projects: 
"
15791,source/ALLA VERNIGOR.pdf,"– (2020, Python3) Browser version of the board game Dixit (Imanginarium). In the project, I was responsible 
"
15792,source/ALLA VERNIGOR.pdf,"for back-end and testing,  
"
15793,source/ALLA VERNIGOR.pdf,"– (2020, Python3) RuzoomBot. A telegram bot that sends information about a group lesson or a specific 
"
15794,source/ALLA VERNIGOR.pdf,"student’s lesson (including the auditorium for offline lessons and a link for online lessons) to the subscribed 
chats and channels before the start of the lesson,  
"
15795,source/ALLA VERNIGOR.pdf,"– (2020, Python3) VKlinkParser. When you send a link from the VK social network to a chat or a channel in 
"
15796,source/ALLA VERNIGOR.pdf,"a telegram, the bot parses the post, the link to which was received, and sends it to the chat or channel, but 
in the correct format,  
"
15797,source/ALLA VERNIGOR.pdf,"Technical skills 
• Algorithms and Data structures 
"
15798,source/ALLA VERNIGOR.pdf," 
"
15799,source/ALLA VERNIGOR.pdf,"CONTESTS AND COMPETITIONS 
"
15800,source/ALLA VERNIGOR.pdf,"• Hackathons:(2020, C++17, Python3) won the GSOM-hack (group competition). The goal was to solve the 
"
15801,source/ALLA VERNIGOR.pdf,"modification of pickup and delivery problem with time windows to optimize the routs for service buses. Our 
solution was Grouping Genetic Algorithm written on C++17 (The work with the data was carried out in python). 
"
15802,source/ALLA VERNIGOR.pdf,"• Contests. School:(C/C++) Participated in mathematics and programming individual and team olimpiads. 
"
15803,source/ALLA VERNIGOR.pdf,"Participated in regional stages of the All-Russian Olympiad(10th-11th grade). Prize-winner of group regional 
programming olimpiad (2017-2018, C). 
"
15804,source/ALLA VERNIGOR.pdf,"• Contests. University:(2019-2020, C++) Participated in Google Code Jam for Women, Google Code Jam and 
"
15805,source/ALLA VERNIGOR.pdf,"Hash Code. 
"
15806,source/ALLA VERNIGOR.pdf," 
"
15807,source/ALLA VERNIGOR.pdf,"WORK EXPERIENCE 
"
15808,source/ALLA VERNIGOR.pdf,"• (12th July 2020 – 25th December 2020) Continue to work on the project from the hackathon for release to 
"
15809,source/ALLA VERNIGOR.pdf,"production and help with tasks for other projects related to ours (such as conducting experiments with gRPC). 
"
15810,source/ALLA VERNIGOR.pdf," 
"
15811,source/ALLA VERNIGOR.pdf,"PROGRAMMING LANGUAGES 
"
15812,source/ALLA VERNIGOR.pdf,"Main language: С++17 (20) | Also know: Python3 | Competitive programming only: C 
"
15813,source/ALLA VERNIGOR.pdf," 
"
15814,source/ALLA VERNIGOR.pdf,"ASSOCIATED EXPERIENCE 
"
15815,source/ALLA VERNIGOR.pdf,"• Helped in organizing school programming contests (testing, organization) 
• Teaching Assistant in Linear Algebra and Geometry (I help students in mastering the material, and the teacher 
"
15816,source/ALLA VERNIGOR.pdf,"with checking oral and written works) 
"
15817,source/Petr  Sudakov.pdf,"Petr  Sudakov 
 
 
"
15818,source/Petr  Sudakov.pdf,"EDUCATION 
"
15819,source/Petr  Sudakov.pdf,"Novosibirsk State University 
Novosibirsk, Russia 
"
15820,source/Petr  Sudakov.pdf,"Master in Mathematics 
Sep. 1999 – Jun. 2006 
"
15821,source/Petr  Sudakov.pdf,"EXPERIENCE 
"
15822,source/Petr  Sudakov.pdf,"LocalLabs 
Remote work 
"
15823,source/Petr  Sudakov.pdf,"Senior Software Engineer 
Mar 2012 - Present 
"
15824,source/Petr  Sudakov.pdf,"◦ Voters project: Data processing from raw into fully prepared standardized form for growing number of states. 
"
15825,source/Petr  Sudakov.pdf,"Follow up tasks to match people to different datasets and provide analytics per different areas. Improved previous 
matching rate by 12% and made it about 10x times faster on large datasets. 
"
15826,source/Petr  Sudakov.pdf,"◦ Geocoder solution: I implemented server checking number of open data sources and already prepared data with 
"
15827,source/Petr  Sudakov.pdf,"fallback to paid services. The server uses state of the art address parsing and expanding libraries and provides 
caching for results. It sped up development and geocoding times significantly in number of other in-house projects. 
"
15828,source/Petr  Sudakov.pdf,"◦ Customer churn project (Machine Learning): Predicting churn customers and suggesting steps how to 
"
15829,source/Petr  Sudakov.pdf,"prevent it plus corresponding metrics. It reduced customer churn by 10% in 2 months. 
"
15830,source/Petr  Sudakov.pdf,"BlockShopper 
Remote work 
"
15831,source/Petr  Sudakov.pdf,"Senior Software Engineer 
Jun 2009 - Aug 2011 
"
15832,source/Petr  Sudakov.pdf,"◦ Team lead of data processing team: the project is about real estate information. Data processing from raw 
"
15833,source/Petr  Sudakov.pdf,"state into fully prepared ready to sell and to use in another projects. It was done for both assessor and recorder 
data for growning number of counties. Also, it supported updates and tests to keep information accurate and up to 
date. It’s still a live project covering major part of US and earning money. 
"
15834,source/Petr  Sudakov.pdf,"Parallels 
Novosibirsk, Russia 
"
15835,source/Petr  Sudakov.pdf,"Senior Software Engineer 
Jun 2009 - Aug 2011 
"
15836,source/Petr  Sudakov.pdf,"◦ Team lead of support systems development/maintenance team: The company is one of the world leaders 
"
15837,source/Petr  Sudakov.pdf,"in hosting automation with number of products such as: Parallels Desktop, Virtuozzo, Plesk and etc. It has a big 
support team working 24/7. During over 2 years my team had kept the system up, made it faster and more 
featurefull. Thus, support team had kept their duty around o’clock. 
"
15838,source/Petr  Sudakov.pdf,"DataEast 
Novosibirsk, Russia 
"
15839,source/Petr  Sudakov.pdf,"Software Engineer 
Nov 2006 - Apr 2007 
"
15840,source/Petr  Sudakov.pdf,"◦ GEO server: I developed new plugin with number of GEO functions. It widened functionality of the server. 
"
15841,source/Petr  Sudakov.pdf,"SWSoft 
Novosibirsk, Russia 
"
15842,source/Petr  Sudakov.pdf,"Customer Relationship Manager, Software Engineer 
Aug 2005 - Sep 2006 
"
15843,source/Petr  Sudakov.pdf,"◦ CRM for HSPComplete product: I led number of customers since purchase date until going live with their 
"
15844,source/Petr  Sudakov.pdf,"fully configured and customized product. I got specifications for any custom feature requests from clients and if it 
wasn’t achivable via custom scripting processed it with development team in timely manner. 
"
15845,source/Petr  Sudakov.pdf,"◦ Feature for HSPComplete product for Chinese market: I fully implemented special plugin to support 
"
15846,source/Petr  Sudakov.pdf,"Chinese government regulation rules related to web sites. It was a real blocker for China market after which 
product became available for a new country and many potential customers. 
"
15847,source/Petr  Sudakov.pdf,"NTONYX 
Novosibirsk, Russia 
"
15848,source/Petr  Sudakov.pdf,"Junior Software Engineer 
Sep 2004 - Dec 2004 
"
15849,source/Petr  Sudakov.pdf,"◦ Musical Software for Desktop (C++): I developed custom algorithm for music chords processing which 
"
15850,source/Petr  Sudakov.pdf,"satisfied and made happy number of customers requested this feature. 
"
15851,source/Petr  Sudakov.pdf,"PROJECTS 
"
15852,source/Petr  Sudakov.pdf," 
 WWW FDW: Open source PostgreSQL extension, so-called Foreign Data Wrapper (FDW). It is a handler for 
"
15853,source/Petr  Sudakov.pdf,"PostgreSQL server which provides easy way to repesent different web services as a table data. 
"
15854,source/Petr  Sudakov.pdf,"PROGRAMMING SKILLS 
"
15855,source/Petr  Sudakov.pdf," 
 Languages: Perl, Python, SQL, C++ 
"
15856,source/Ivan Melnichnikov.docx,".
"
15857,source/Ivan Melnichnikov.docx,".
"
15858,source/Ivan Melnichnikov.docx,"Moscow, Moscow, 125310
"
15859,source/Ivan Melnichnikov.docx,"79993400099 
"
15860,source/Ivan Melnichnikov.docx,"ivanm00090@gmail.com
"
15861,source/Ivan Melnichnikov.docx,"https://linkedin.com/in/iv-melnichnikov
"
15862,source/Ivan Melnichnikov.docx,"Enthusiastic software engineer eager to contribute to team success through hard work and attention to details. Track record of 
success with several big Russian companies. Solid history of spearheading back-end development of large-scale and complex 
projects from conception to completion. A team player with leadership and mentorship experience, as well as close collaboration 
with businesses to meet the needs of end users.
"
15863,source/Ivan Melnichnikov.docx,"Skills
"
15864,source/Ivan Melnichnikov.docx,"Languages: Java, Kotlin, Groovy, Scala
"
15865,source/Ivan Melnichnikov.docx,"RDBMS: PostgreSQL, Oracle
"
15866,source/Ivan Melnichnikov.docx,"NoSQL: MongoDB, Cassandra, Clickhouse, Elasticsearch, Infinispan
"
15867,source/Ivan Melnichnikov.docx,"Techs: Spring (Core, Cloud, Boot), ORMS (Hibernate, MyBatis), Java specs ( JMS, JAX-RS, JAX-WS), 
JUnit, Spock, Testcontainers, GraphQL, Vert.X, Kafka, RabbitMQ, Docker (Swarm, Compose), Proxmox 
VE, SOA/REST/Web Services, WebSockets
"
15868,source/Ivan Melnichnikov.docx,"Work History
"
15869,source/Ivan Melnichnikov.docx,"2019-03 - 
Current
"
15870,source/Ivan Melnichnikov.docx,"Software Engineer 
"
15871,source/Ivan Melnichnikov.docx,"Mail.ru Group, Moscow 
"
15872,source/Ivan Melnichnikov.docx,"Project: Financial marketplace for entrepreneurs развивай.рф (razvivai.rf)
Accomplishments:
￿
Implemented MVP and shipped it to production in 4 months.
"
15873,source/Ivan Melnichnikov.docx,"￿
Reduced infrastructure price twofold by profiling and tuning JVM apps.
"
15874,source/Ivan Melnichnikov.docx,"￿
Developed system design for platform.
"
15875,source/Ivan Melnichnikov.docx,"Techs: Java, Kotlin, Groovy, PostgreSQL(debezium), Docker Swarm (migration process to 
Kubernetes), Kafka.
"
15876,source/Ivan Melnichnikov.docx,"2017-05 - 2020-
04
"
15877,source/Ivan Melnichnikov.docx,"Lead Software Engineer 
"
15878,source/Ivan Melnichnikov.docx,"Divico LLC, Moscow 
"
15879,source/Ivan Melnichnikov.docx,"Project: Internal bloggers search platform. Team lead of 5 remote employees.
Accomplishments:
￿
Created infrastructure from scratch on bare metal using Proxmox virtualization and Docker.
"
15880,source/Ivan Melnichnikov.docx,"￿
Organized code review process.
"
15881,source/Ivan Melnichnikov.docx,".
"
15882,source/Ivan Melnichnikov.docx,".
"
15883,source/Ivan Melnichnikov.docx,"￿
Created analytics dataflow of YouTube, Instagram, VK bloggers, which helped to analyze trends in 
social networks. That highly increased marketing revenue.
"
15884,source/Ivan Melnichnikov.docx,"￿
Proposed and created a report management system through close collaboration with end-users that 
freed up 30 working hours within certain departments.
"
15885,source/Ivan Melnichnikov.docx,"Techs: Java, Scala, PostgreSQL, Clickhouse, Cassandra, Docker Swarm, RabbitMQ, Spring 
Dataflow, Elasticsearch.
"
15886,source/Ivan Melnichnikov.docx,"2016-04 - 2019-
03
"
15887,source/Ivan Melnichnikov.docx,"Software Engineer 
"
15888,source/Ivan Melnichnikov.docx,"Nexign, Moscow 
"
15889,source/Ivan Melnichnikov.docx,"Projects:
￿
MegaFon(tier 1 telecom operator) customer portal API, Billing API, Digital Tourism platform, Push 
notifications API, support chat. (https://lk.megafon.ru)
"
15890,source/Ivan Melnichnikov.docx,"￿
Billing Platform, API Gateway service
"
15891,source/Ivan Melnichnikov.docx,"Accomplishments:
￿
Orchestrated efficient large-scale software deployments, including testing features, correcting code 
and code reviewing.
"
15892,source/Ivan Melnichnikov.docx,"￿
Designed and developed a support chat that facilitated communication with end-users.
"
15893,source/Ivan Melnichnikov.docx,"￿
Contributed to Histone2 template engine. (https://github.com/MegafonWebLab/histone-java2)
"
15894,source/Ivan Melnichnikov.docx,"￿
Developed API gateway service based on GraphQL specification.
"
15895,source/Ivan Melnichnikov.docx,"￿
Developed API for tourist activity visualization in major Russian cities. (https://bdtour.megafon.ru/)
"
15896,source/Ivan Melnichnikov.docx,"￿
Assisted with the interviewing and hiring of software engineers.
"
15897,source/Ivan Melnichnikov.docx,"Techs: Java, Vert.x, MongonDB, PostgreSQL, RabbitMQ, Zookeeper, Docker Swarm.
"
15898,source/Ivan Melnichnikov.docx,"2014-07 - 2016-
04
"
15899,source/Ivan Melnichnikov.docx,"Software Engineer 
"
15900,source/Ivan Melnichnikov.docx,"Eldorado LLC, Moscow 
"
15901,source/Ivan Melnichnikov.docx,"Projects: Online store eldorado.ru and mobile application for employees.
Accomplishments:
￿
Took a significant part in the development of online platform on SAP Hybris platform.
"
15902,source/Ivan Melnichnikov.docx,"￿
Rewrote PL/SQL business logic to Java API.
"
15903,source/Ivan Melnichnikov.docx,"￿
Created a mobile application using Apache Cordova that reduced cashiers workload in stores.
"
15904,source/Ivan Melnichnikov.docx,"Techs: Java, JS(Apache Cordova), Oracle.
"
15905,source/Ivan Melnichnikov.docx,"Education
"
15906,source/Ivan Melnichnikov.docx,"2007-09 - 2013-
06
"
15907,source/Ivan Melnichnikov.docx,"Master of Science: Electrical And Electronics Engineering 
"
15908,source/Ivan Melnichnikov.docx,"Moscow Aviation Institute - Moscow
"
15909,source/Ivan Melnichnikov.docx,"Certifications
"
15910,source/Ivan Melnichnikov.docx,"2016-09
Coursera Course Certificates: Functional Programming Principles in Scala
"
15911,source/Ivan Melnichnikov.docx,"2017-03
Coursera Course Certificates: Functional Program Design in Scala
"
15912,source/Ivan Melnichnikov.docx,"2017-04
Coursera Course Certificates: Parallel programming
"
15913,source/Ivan Melnichnikov.docx,".
"
15914,source/Ivan Melnichnikov.docx,".
"
15915,source/Albina Batmanova.pdf,"Albina Batmanova
"
15916,source/Albina Batmanova.pdf,"Software Engineer, Moscow
"
15917,source/Albina Batmanova.pdf,"lb.batmanova@gmail.com
IrinaBatmanova
+7 (985) 000 47-62
"
15918,source/Albina Batmanova.pdf,"SKILLS
"
15919,source/Albina Batmanova.pdf,"Python, Bash, JavaScript, C++, SQL, Flask, Django, Asyncio, Pytest, React, Qt, Pandas, Matplotlib, Linux,
Docker, Swarm, Git, Jira, Gitlab CI, PostgreSQL, Redis, ArangoDB, Neo4j, Keycloak, Postman
"
15920,source/Albina Batmanova.pdf,"EDUCATION
"
15921,source/Albina Batmanova.pdf,"Moscow Institute of Physics and Technology
Moscow, Russia
"
15922,source/Albina Batmanova.pdf,"Bachelor of Applied Mathematics and Informatics
July 2019
"
15923,source/Albina Batmanova.pdf,"EXPERIENCE
"
15924,source/Albina Batmanova.pdf,"MyOﬃce
"
15925,source/Albina Batmanova.pdf,"Lead Software Engineer, Software Engineer
March 2019 - Present
"
15926,source/Albina Batmanova.pdf,"Develop, enhance and support several microservices for storing metadata and files of Private Cloud prod- ucts
Participate in code reviews
Improve Gitlab CI pipelines for services
Use Python, Flask, Falcon, Postman, ArangoDB (graph database), Keycloak (OIDC service), Gitlab, JIRA in my work
"
15927,source/Albina Batmanova.pdf,"Moscow Institute of Physics and Technologies
"
15928,source/Albina Batmanova.pdf,"Lecturer of workshops
October 2019 - December 2019
"
15929,source/Albina Batmanova.pdf,"Gave practical classes for a group of third year students about web development
"
15930,source/Albina Batmanova.pdf,"Used Django framework
"
15931,source/Albina Batmanova.pdf,"Cadence Design Systems
"
15932,source/Albina Batmanova.pdf,"Software Engineer Intern
June 2018 - March 2019
"
15933,source/Albina Batmanova.pdf,"Took part in developing a new 3d viewer of microschemes architecture
"
15934,source/Albina Batmanova.pdf,"Used C++, Qt, Perforce, Reviewboard in my work
"
15935,source/Albina Batmanova.pdf,"PROJECTS
"
15936,source/Albina Batmanova.pdf,"MLDev - version control for ml-experiments
"
15937,source/Albina Batmanova.pdf,"Developed yaml parser with parameters substitution (environment variables)
Set up gitlab-ci for pre-release testing of the system (deploy on different operation systems, run unit-tests)
"
15938,source/Albina Batmanova.pdf,"Snakify - interactive python lessons for kids
"
15939,source/Albina Batmanova.pdf,"Developed new frontend features on React
"
15940,source/Albina Batmanova.pdf,"Hackathons
"
15941,source/Albina Batmanova.pdf,"Personalized a landing page for brokerage service based on demographical information about anonymous
user gained from Yandex Direct (used React for landing page and YandexDirect for analytics)
Created a tool for analyzing system security logs, helping to see and prevent potential attacks (Used React for web
interface)
Developed a network for connecting potential startupers with mentors, investors and other useful and in- terested
people (used data analysis models from sklearn)
"
15942,source/Andrey Pichugin.pdf,"Andrey Pichugin
"
15943,source/Andrey Pichugin.pdf,"Georgia, Tbilisi | +995 500067215 | kiraaapichugin.work@gmail.com | LinkedIn
"
15944,source/Andrey Pichugin.pdf,"Java Software Engineer
"
15945,source/Andrey Pichugin.pdf,"Summary
Software engineer, specializing in enterprise Java projects. I have over 4 years of production ready development in Java
and its frameworks, such as Spring and Hibernate. My expertise includes developing new features, participating in
code reviews, maintaining and updating existing projects, sustaining development environments and delivery
pipelines.
"
15946,source/Andrey Pichugin.pdf,"Technical Skills
"
15947,source/Andrey Pichugin.pdf,"•
Java, JavaScript.
"
15948,source/Andrey Pichugin.pdf,"•
Spring Framework (Core, Boot, Web, Security, Data, AOP), Hibernate, PostgreSQL, MongoDB.
"
15949,source/Andrey Pichugin.pdf,"•
JUnit, Mockito, PowerMock.
"
15950,source/Andrey Pichugin.pdf,"•
Git, Jira, Jenkins, Maven, Gradle, Docker, Kubernetes, Kibana, Logstash, Elasticsearch, Openshift.
"
15951,source/Andrey Pichugin.pdf,"Experience
"
15952,source/Andrey Pichugin.pdf,"Software Engineer | Five9 Inc. | Feb 2021– Jun 2022
"
15953,source/Andrey Pichugin.pdf,"Development and maintenance of Java API server, responsible for managing calls, and respective VoIP software
solution based on FreeSWITCH.
"
15954,source/Andrey Pichugin.pdf,"•
Investigated and fixed memory leaks by tracking stuck call channels and dropped events using Elasticsearch,
Logstash, and Kibana stack to track execution flow failures, therefore increasing server nodes uptime by 30%.
"
15955,source/Andrey Pichugin.pdf,"•
Ensured consistency and stability of server nodes in case of system failures by performing Java and C code analysis
and testing in more than 60 failover scenarios.
"
15956,source/Andrey Pichugin.pdf,"•
Increased project’s unit test coverage by 20% by covering most of the controller and database connection classes.
"
15957,source/Andrey Pichugin.pdf,"•
Enhanced database cleanup Bash scripts by implementing multithreaded execution, improving their run time by
50%, which accelerated server node’s restart time.
"
15958,source/Andrey Pichugin.pdf,"•
As the owner of the developer testing environment, decreased its downtime more than twice by improving
maintenance procedures and creating corresponding documentation.
"
15959,source/Andrey Pichugin.pdf,"Full-Stack Developer/Customer Support Engineer | Netcracker Technology | Mar 2018 – Jan 2021
"
15960,source/Andrey Pichugin.pdf,"Website development based on Liferay Portal platform built in Java and JavaScript.
"
15961,source/Andrey Pichugin.pdf,"•
Supported major website release with more than 500 thousand visitors per month during 4 months business trip
onsite.
"
15962,source/Andrey Pichugin.pdf,"•
Implemented OpenID authentication and Identity Provider integration with Liferay Portal.
"
15963,source/Andrey Pichugin.pdf,"•
Provided mapping for new category of product objects in catalog model by introducing new APIs and SQL queries.
"
15964,source/Andrey Pichugin.pdf,"•
Improved performance for bulk multithreaded objects loading by optimizing object batches and removing
unnecessary procedures, which improved product catalog mapping duration from 30 to 15 minutes.
"
15965,source/Andrey Pichugin.pdf,"•
Coached a new support team of 7 people on the project in two weeks.
"
15966,source/Andrey Pichugin.pdf,"•
Fixed cache versioning issue, removing necessity to restart server to apply changes to catalog, saving 20 minutes
spent on maintenance during backend updates and installations.
"
15967,source/Andrey Pichugin.pdf,"Education
"
15968,source/Andrey Pichugin.pdf,"•
Volga State University of Water Transport | 2018: Technical Maintenance and Exploitation of RadioElectronic
Equipment – Specialist.
"
15969,source/Marat Tereshkov.pdf,"Marat Tereshkov
"
15970,source/Marat Tereshkov.pdf,"+79778000825
altaaase.job@gmail.com
Moscow, Russia
"
15971,source/Marat Tereshkov.pdf,"Alteaaae
Altaaase
Alaaaise
"
15972,source/Marat Tereshkov.pdf,"Education
"
15973,source/Marat Tereshkov.pdf,"National Research University MAI, Moscow, Russia (Sep. 2019 – May 2023)
"
15974,source/Marat Tereshkov.pdf,"B.Sc. in Computer Science (Fundamental Informatics & Information Technologies)
"
15975,source/Marat Tereshkov.pdf,"Relevant courses: Fundamental Algorithms, Application Software, Operating systems & Computer
architecture, Linear Algebra, Discrete Math, Calculus, Differential equations, Probability theory
"
15976,source/Marat Tereshkov.pdf,"GPA: 4.75 / 5
"
15977,source/Marat Tereshkov.pdf,"Internships & Projects & Achievements
"
15978,source/Marat Tereshkov.pdf,"● AVSoft (Information Security) | Internship (Jul. 2021 - Present)
"
15979,source/Marat Tereshkov.pdf,"Partly refactored an application core (visualized an outdated file processing system, removed unused
parts of it, rewrote some C-style code to a modern C++ code, and formatted it accordingly to a team
code style guide)
"
15980,source/Marat Tereshkov.pdf,"Improved a command-line arguments parser using Boost.ProgramOptions library
"
15981,source/Marat Tereshkov.pdf,"Implemented a trivial logger using Boost.Log library
"
15982,source/Marat Tereshkov.pdf,"Found an issue with the application GUI on the KDE Plasma desktop environment and reported it
"
15983,source/Marat Tereshkov.pdf,"● Tax reports database with statistics | Coursework
"
15984,source/Marat Tereshkov.pdf,"Created a fully functional console application for storing tax reports, statistics of it and a generator of the
reports
Technologies used: C++, STL, self-implemented Red-Black tree
"
15985,source/Marat Tereshkov.pdf,"● Client-server «Sea Battle» Game | Coursework
"
15986,source/Marat Tereshkov.pdf,"Created a fully functional 2 player console game
Technologies used: C++, STL, UNIX Sockets
"
15987,source/Marat Tereshkov.pdf,"● Competitive Programming | Achievements
"
15988,source/Marat Tereshkov.pdf,"Participation in ICPC, 7 OpenCups, Codeforces contests
"
15989,source/Marat Tereshkov.pdf,"Completion of a competitive programming course in MAI (2 semesters)
"
15990,source/Marat Tereshkov.pdf,"Skills
"
15991,source/Marat Tereshkov.pdf,"Programming: C, C++, STL, Object-Oriented Programming, System Programming, Multithreaded
"
15992,source/Marat Tereshkov.pdf,"Programming, Algorithms & Data Structures, C#, Python, SQL
"
15993,source/Marat Tereshkov.pdf,"Languages: English (Upper-Intermediate), Russian (Native)
"
15994,source/Marat Tereshkov.pdf,"Other: Linux, Git, TeX
"
15995,source/STEPAN GOLDOBIN.pdf,"STEPAN
"
15996,source/STEPAN GOLDOBIN.pdf,"GOLDOBIN 
"
15997,source/STEPAN GOLDOBIN.pdf,"27 years old 
"
15998,source/STEPAN GOLDOBIN.pdf,"E X P E R I E N C E 
"
15999,source/STEPAN GOLDOBIN.pdf," 
"
16000,source/STEPAN GOLDOBIN.pdf,"UI/UX DESIGNER / FRONTEND   | 
Clearscale (AWS Partner), USA 
"
16001,source/STEPAN GOLDOBIN.pdf," 
"
16002,source/STEPAN GOLDOBIN.pdf," 
"
16003,source/STEPAN GOLDOBIN.pdf," 
"
16004,source/STEPAN GOLDOBIN.pdf,"09.2019 - now 
"
16005,source/STEPAN GOLDOBIN.pdf,"Rare unicorn. Working with: React, Angular, Ember, GraphQL, Node.js, Express. Also 
making UX/UI design and graphic design. 
"
16006,source/STEPAN GOLDOBIN.pdf," 
"
16007,source/STEPAN GOLDOBIN.pdf,"UI/UX DESIGNER / FRONTEND   | 
QIWI, Moscow 
"
16008,source/STEPAN GOLDOBIN.pdf,"05.2019 - 09-2019 
"
16009,source/STEPAN GOLDOBIN.pdf,"Developed a service for companies, as a “Kickstarter”, but for banks/startups. Created 
UX/UI design and a frontend part (React). 
"
16010,source/STEPAN GOLDOBIN.pdf," 
 
"
16011,source/STEPAN GOLDOBIN.pdf,"UI/ UX Designer 
"
16012,source/STEPAN GOLDOBIN.pdf,"UI/UX DESIGNER / FRONTEND   | 
Evercity, Moscow 
"
16013,source/STEPAN GOLDOBIN.pdf,"09.2018 - 05.2019 
"
16014,source/STEPAN GOLDOBIN.pdf,"Frontend Developer 
"
16015,source/STEPAN GOLDOBIN.pdf,"Motion Designer 
"
16016,source/STEPAN GOLDOBIN.pdf,"I have developed UI/UX and prototypes for the web service. 
Creating front end visualisation in React.js 
"
16017,source/STEPAN GOLDOBIN.pdf,"Made a more iterative development process with ﬂexible course change. 
"
16018,source/STEPAN GOLDOBIN.pdf," 
"
16019,source/STEPAN GOLDOBIN.pdf,"UI/UX DESIGNER / FRONTEND   | 
MSTlab24, St.Petersburg 
"
16020,source/STEPAN GOLDOBIN.pdf,"03.2017 - 09.2019 
"
16021,source/STEPAN GOLDOBIN.pdf,"My name is Anton and I am a 
"
16022,source/STEPAN GOLDOBIN.pdf,"cross-functional specialist with UI / 
"
16023,source/STEPAN GOLDOBIN.pdf,"UX and Frontend skills. 
"
16024,source/STEPAN GOLDOBIN.pdf,"With a lot of experience in SCRUM methodology, I develop in several spheres: 
Development of UI/UX of mobile and web applications for internal BTB products. 
Experience using Haml/Sass/Vuejs for developing web applications and landing pages 
Manual and Automated Testing. 
I also created a library with a UI-web-kit - http://mandragora.mstdev.ru/ 
"
16025,source/STEPAN GOLDOBIN.pdf," 
"
16026,source/STEPAN GOLDOBIN.pdf,"UI/UX DESIGNER / FRONTEND   | 
MyPocketGirls, Moscow 
"
16027,source/STEPAN GOLDOBIN.pdf,"06.2017 - 01.2018 
"
16028,source/STEPAN GOLDOBIN.pdf,"Development of user interfaces for the mobile game ""MyPocketGirls"", game design of 
mini-games. 
"
16029,source/STEPAN GOLDOBIN.pdf," 
 
"
16030,source/STEPAN GOLDOBIN.pdf,"C O N T A C T 
"
16031,source/STEPAN GOLDOBIN.pdf,"UI/UX DESIGNER / FRONTEND   | 
"
16032,source/STEPAN GOLDOBIN.pdf,"Dbrain, Moscow 
"
16033,source/STEPAN GOLDOBIN.pdf,"09.2017 - 02.2018 
"
16034,source/STEPAN GOLDOBIN.pdf,"I developed designs for an AI service, implemented mock-ups for a landing page in 
HTML/CSS. 
"
16035,source/STEPAN GOLDOBIN.pdf," 
"
16036,source/STEPAN GOLDOBIN.pdf,"UI/UX DESIGNER  |  04.2016 - 04.2017 
"
16037,source/STEPAN GOLDOBIN.pdf,"dribbble.com/Goldobinnnnn 
"
16038,source/STEPAN GOLDOBIN.pdf,"https://github.com/Goldobinnnnn 
"
16039,source/STEPAN GOLDOBIN.pdf,"App-labs, St.Petersburg 
"
16040,source/STEPAN GOLDOBIN.pdf,"Development of layouts for android and IOS applications and web services, prototypes, 
animations. Quality control development. Web development department management. 
"
16041,source/STEPAN GOLDOBIN.pdf," 
"
16042,source/STEPAN GOLDOBIN.pdf,"UI/UX DESIGNER |  06.2015 - 04.2016 
"
16043,source/STEPAN GOLDOBIN.pdf,"+ 7 952 224 61 11  
7224511111@mail.ru 
"
16044,source/STEPAN GOLDOBIN.pdf,"Startup, St.Petersburg 
"
16045,source/STEPAN GOLDOBIN.pdf,"Development of design and application logic for reading product information on the 
barcode and selection of instructions to it. 
"
16046,source/STEPAN GOLDOBIN.pdf," 
"
16047,source/STEPAN GOLDOBIN.pdf,"GRAPHIC   DESIGNER 
| 06.2012 - 06.2015 
"
16048,source/STEPAN GOLDOBIN.pdf," 
"
16049,source/STEPAN GOLDOBIN.pdf,"St. Petersburg 
"
16050,source/STEPAN GOLDOBIN.pdf,"Russia 
"
16051,source/STEPAN GOLDOBIN.pdf,"Truck Studio, Naberezhnye Chelny 
"
16052,source/STEPAN GOLDOBIN.pdf,"Responsible for handling all printable media: from leaﬂets up to 10m banners, laser 
cutting and engraving, plotter cutting, mock-up development and layout. 
"
16053,source/STEPAN GOLDOBIN.pdf," 
 
"
16054,source/STEPAN GOLDOBIN.pdf,"S K I L L S 
"
16055,source/STEPAN GOLDOBIN.pdf," 
"
16056,source/STEPAN GOLDOBIN.pdf,"SOFTWARE  PACKAGES 
"
16057,source/STEPAN GOLDOBIN.pdf,"Sketch 
"
16058,source/STEPAN GOLDOBIN.pdf,"Figma 
"
16059,source/STEPAN GOLDOBIN.pdf,"Adobe Photoshop 
"
16060,source/STEPAN GOLDOBIN.pdf,"Adobe Illustrator 
"
16061,source/STEPAN GOLDOBIN.pdf,"Adobe After Effects 
"
16062,source/STEPAN GOLDOBIN.pdf,"Art skill 
"
16063,source/STEPAN GOLDOBIN.pdf,"LANGUAGE & FRAMEWORKS 
"
16064,source/STEPAN GOLDOBIN.pdf,"HTML/CSS 
"
16065,source/STEPAN GOLDOBIN.pdf,"Javascript 
"
16066,source/STEPAN GOLDOBIN.pdf,"Vue.js 
"
16067,source/STEPAN GOLDOBIN.pdf,"React.js 
"
16068,source/STEPAN GOLDOBIN.pdf,"Angular.js 
"
16069,source/STEPAN GOLDOBIN.pdf,"Node.js 
"
16070,source/STEPAN GOLDOBIN.pdf," 
 
"
16071,source/STEPAN GOLDOBIN.pdf,"E D U C A T I O N 
"
16072,source/STEPAN GOLDOBIN.pdf," 
"
16073,source/STEPAN GOLDOBIN.pdf,"NAB. CHELNY ART SCHOOL #2 
"
16074,source/STEPAN GOLDOBIN.pdf,"Artist 
"
16075,source/STEPAN GOLDOBIN.pdf,"2004 - 2009 
"
16076,source/STEPAN GOLDOBIN.pdf,"At art school I learned drawing skills, 
that still help me 
"
16077,source/STEPAN GOLDOBIN.pdf,"STATE INSTITUTION “KAMI” 
"
16078,source/STEPAN GOLDOBIN.pdf,"Lawyer 
"
16079,source/STEPAN GOLDOBIN.pdf,"2011 - 2012 
"
16080,source/STEPAN GOLDOBIN.pdf,"At the law school I studied the 
necessary knowledge in terms of the 
law 
"
16081,source/STEPAN GOLDOBIN.pdf," 
"
16082,source/STEPAN GOLDOBIN.pdf,"MUNICIPAL EDUCATIONAL 
INSTITUTION ""INTERSCHOOL 
TRAINING COMPLEX"" 
"
16083,source/STEPAN GOLDOBIN.pdf,"Computer operator 
"
16084,source/STEPAN GOLDOBIN.pdf,"2007 - 2009 
"
16085,source/STEPAN GOLDOBIN.pdf,"I learned different programs such as 
Adobe Photoshop, Adobe After Effects, 
Flash 
"
16086,source/STEPAN GOLDOBIN.pdf," 
"
16087,source/STEPAN GOLDOBIN.pdf,"L A N G U A G E 
"
16088,source/STEPAN GOLDOBIN.pdf,"EDUCATIONAL INSTITUTION 
""TECHNICAL COLLEGE 
""V.D.POTASHOVA"" 
"
16089,source/STEPAN GOLDOBIN.pdf,"Industrial system programmer 
Honor degree 
"
16090,source/STEPAN GOLDOBIN.pdf,"2009 - 2011 
"
16091,source/STEPAN GOLDOBIN.pdf,"I gained programming skills for 
"
16092,source/STEPAN GOLDOBIN.pdf,"metalworking machines. Also worked 
"
16093,source/STEPAN GOLDOBIN.pdf,"with Zeiss precision measuring machines. 
"
16094,source/STEPAN GOLDOBIN.pdf," 
"
16095,source/STEPAN GOLDOBIN.pdf,"RUSSIAN 
"
16096,source/STEPAN GOLDOBIN.pdf,"Native speaker 
"
16097,source/STEPAN GOLDOBIN.pdf,"ENGLISH 
"
16098,source/STEPAN GOLDOBIN.pdf,"Upper Intermediate 
"
16099,source/STEPAN GOLDOBIN.pdf,"Hello again! 
"
16100,source/STEPAN GOLDOBIN.pdf,"Glad to see you on the second page 
"
16101,source/STEPAN GOLDOBIN.pdf," 
"
16102,source/STEPAN GOLDOBIN.pdf,"A B O U T 
"
16103,source/STEPAN GOLDOBIN.pdf," 
 
"
16104,source/STEPAN GOLDOBIN.pdf,"HACKATONS 
"
16105,source/STEPAN GOLDOBIN.pdf," 
"
16106,source/STEPAN GOLDOBIN.pdf,"I have an overall design experience of over 7 years. I have experience working under various conditions in different 
environments. 
"
16107,source/STEPAN GOLDOBIN.pdf," 
"
16108,source/STEPAN GOLDOBIN.pdf,"I have been a web developer for the past 2 years. At my current job, I developed a library with a design system using 
Vue.js  
I work on projects using technology stacks like Rails+VueJs and Rails+ReactJs. 
"
16109,source/STEPAN GOLDOBIN.pdf," 
"
16110,source/STEPAN GOLDOBIN.pdf,"TECHNOLOGY  STACKS 
"
16111,source/STEPAN GOLDOBIN.pdf," 
"
16112,source/STEPAN GOLDOBIN.pdf,"Design 
Adobe Photoshop CC, Sketch, Figma, CorelDraw, Illustrator, Invision, After Effects 
"
16113,source/STEPAN GOLDOBIN.pdf," 
"
16114,source/STEPAN GOLDOBIN.pdf,"UI development and front-end 
JS, VueJS, ReactJs, AngularJs, EmberJs, GraphQL, HTML / CSS, SCSS and similar preprocessors, Webpack 
"
16115,source/STEPAN GOLDOBIN.pdf," 
"
16116,source/STEPAN GOLDOBIN.pdf,"Backend development 
NodeJs, GraphQL, Express, Mongoose 
"
16117,source/STEPAN GOLDOBIN.pdf," 
"
16118,source/STEPAN GOLDOBIN.pdf,"Testing 
Cucumber, Capibara, Jira, Kaiten 
"
16119,source/STEPAN GOLDOBIN.pdf," 
"
16120,source/STEPAN GOLDOBIN.pdf,"STRENGTHS 
"
16121,source/STEPAN GOLDOBIN.pdf," 
"
16122,source/STEPAN GOLDOBIN.pdf,"• Cross-functional - I'm Ideal for scrum teams. I've worked with agile methodologies (Scrum, Kanban). 
"
16123,source/STEPAN GOLDOBIN.pdf,"• I am social. I love new acquaintances and communication. 
"
16124,source/STEPAN GOLDOBIN.pdf,"• Can train other people and monitor the progress of tasks. 
"
16125,source/STEPAN GOLDOBIN.pdf,"• I am a team player with a systematic approach who can juggle multiple projects at the same time. 
"
16126,source/STEPAN GOLDOBIN.pdf,"• Like to stretch your wings across user research, split testing, user experience and product design. 
"
16127,source/STEPAN GOLDOBIN.pdf,"• Think about the most common devices. 
"
16128,source/STEPAN GOLDOBIN.pdf,"• Have some experience with conversional driven design and split testing. 
"
16129,source/STEPAN GOLDOBIN.pdf,"• Comfortable working on multiple projects at a time of taking ownership. 
"
16130,source/STEPAN GOLDOBIN.pdf,"• Ability to prioritize projects, communicate progress and deliver on time. 
"
16131,source/STEPAN GOLDOBIN.pdf,"• Passion for identifying and solving real user problems. 
"
16132,source/STEPAN GOLDOBIN.pdf," 
"
16133,source/STEPAN GOLDOBIN.pdf,"SKILLS 
"
16134,source/STEPAN GOLDOBIN.pdf," 
"
16135,source/STEPAN GOLDOBIN.pdf,"• Create various kinds of animations using Adobe After Effect. 
"
16136,source/STEPAN GOLDOBIN.pdf,"• Sketch to create pixel-perfect design. 
"
16137,source/STEPAN GOLDOBIN.pdf,"• Programming in JavaScript, work with libraries and read documentations. 
"
16138,source/STEPAN GOLDOBIN.pdf,"• Good foundation in Vue.js and React.js, I can independently carry out small tasks and help other developers. 
"
16139,source/STEPAN GOLDOBIN.pdf,"• QA – Manual and automated testing (cucumber + capibara). 
"
16140,source/STEPAN GOLDOBIN.pdf,"• Rapid prototyping in Figma and Sketch. 
"
16141,source/STEPAN GOLDOBIN.pdf,"• Knowledge of typography, information design and modular grids. 
"
16142,source/STEPAN GOLDOBIN.pdf,"• Experience in teamwork, remote development, experience in negotiations and presentations, experience in the 
position of art director. 
"
16143,source/STEPAN GOLDOBIN.pdf,"• I follow current trends in web development and UI designs. Static, rubber, adaptability. 
"
16144,source/STEPAN GOLDOBIN.pdf,"• Knowledge and experience in Pre-press and Printing. Experience with printing houses. Order and control of 
circulation. 
"
16145,source/STEPAN GOLDOBIN.pdf,"• Knowledge of GitHub/GitLab – comfortably. 
"
16146,source/STEPAN GOLDOBIN.pdf," 
 
"
16147,source/STEPAN GOLDOBIN.pdf,"P R O G R E S S 
"
16148,source/STEPAN GOLDOBIN.pdf," 
 
"
16149,source/STEPAN GOLDOBIN.pdf,"HACKATONS 
"
16150,source/STEPAN GOLDOBIN.pdf," 
"
16151,source/STEPAN GOLDOBIN.pdf,"• Member of the Open Fight hackathon ﬁnalist team from OPEN 
Bank. 
"
16152,source/STEPAN GOLDOBIN.pdf," 
"
16153,source/STEPAN GOLDOBIN.pdf,"• Member of the hackathon winners team from the St. Petersburg 
Polytechnic Institute. 
"
16154,source/STEPAN GOLDOBIN.pdf," 
"
16155,source/STEPAN GOLDOBIN.pdf,"• Member of the hackathon ﬁnalist team Budapest Hackjunction’18. 
"
16156,source/STEPAN GOLDOBIN.pdf," 
"
16157,source/STEPAN GOLDOBIN.pdf,"• Member of the Hackathon winners team Energy Blockchain Hack. 
"
16158,source/Ivan Litmanovich.docx,"Ivan Litmanovich
"
16159,source/Ivan Litmanovich.docx,"SOFTWARE DEVELOPER
"
16160,source/Ivan Litmanovich.docx,"+995500048485 | daaary.litmanovich@pm.me | linkedin.com/in/daaamanovich | github.com/dmaaaylitmanovich
"
16161,source/Ivan Litmanovich.docx,"SUMMARY
Senior Ruby Developer with 5.5+ years of web application development experience. Experienced in Ruby, 
Ruby on Rails, JavaScript, and front-end frameworks (React, Angular). Also skilled in Python and 
PostgreSQL. Known for effective multitasking, adaptability, and attention to detail. Demonstrates a proactive 
approach to staying updated with industry trends and best practices.
"
16162,source/Ivan Litmanovich.docx,"EDUCATION
"
16163,source/Ivan Litmanovich.docx,"Technical University
Minsk, Belarus
"
16164,source/Ivan Litmanovich.docx,"Engineering Design and Production of Materials
"
16165,source/Ivan Litmanovich.docx,"EXPERIENCE
"
16166,source/Ivan Litmanovich.docx,"Full-Stack  developer
January 2023 – present
"
16167,source/Ivan Litmanovich.docx,"Freelance
"
16168,source/Ivan Litmanovich.docx,"• Developed a personal stylist website, using React on front-end and FastAPI on back-end, created custom UI.
"
16169,source/Ivan Litmanovich.docx,"• Implemented secure user authentication and authorization systems.
"
16170,source/Ivan Litmanovich.docx,"• Established an e-commerce platform for product sales, integrated payment processing.
"
16171,source/Ivan Litmanovich.docx,"• Ensured website optimization and data security while providing ongoing support and updates.
"
16172,source/Ivan Litmanovich.docx,"Full-stack  developer
August 2022 – January 2023
"
16173,source/Ivan Litmanovich.docx,"JetRockets
Remote, Georgia
"
16174,source/Ivan Litmanovich.docx,"• Developed and implemented features on both front-end and back-end (React, RoR, PostgreSQL.
"
16175,source/Ivan Litmanovich.docx,"• Integrated third-party libraries and API services to enhance functionality.
"
16176,source/Ivan Litmanovich.docx,"• Collaborated effectively with clients through weekly calls to align project objectives.
"
16177,source/Ivan Litmanovich.docx,"• Provided ongoing support, optimized performance, and conducted code refactoring to maintain code excellence.
"
16178,source/Ivan Litmanovich.docx,"• Ensured comprehensive test coverage for robust code quality.
"
16179,source/Ivan Litmanovich.docx,"Full-stack  developer
June 2018 – August 2022
"
16180,source/Ivan Litmanovich.docx,"TireAgent
Remote, Belarus
"
16181,source/Ivan Litmanovich.docx,"• Developed features on both front-end and back-end to enhance the platform’s functionality (React, 
RoR, PostgreSQL).
"
16182,source/Ivan Litmanovich.docx,"• Integrated side libraries and APIs to improve the user experience.
"
16183,source/Ivan Litmanovich.docx,"• Ensured thorough test coverage for code reliability and robustness.
"
16184,source/Ivan Litmanovich.docx,"• Provided invaluable support, optimization, and refactoring for legacy codebase.
"
16185,source/Ivan Litmanovich.docx,"• Actively participated in task evaluation for effective project planning.
"
16186,source/Ivan Litmanovich.docx,"• Mentored team members, fostering professional growth and collaboration.
"
16187,source/Ivan Litmanovich.docx,"Full-stack  developer
June 2018 – December 
2018
Pest Forecast
Minsk, Belarus
"
16188,source/Ivan Litmanovich.docx,"• Developed features for front-end and back-end (React, DRF, MongoDB).
"
16189,source/Ivan Litmanovich.docx,"• Developed new functionalities for Android and iOS applications (React Native).
"
16190,source/Ivan Litmanovich.docx,"• Integrated external libraries and APIs, elevating application capabilities.
"
16191,source/Ivan Litmanovich.docx,"• Ensured code integrity through meticulous unit test coverage.
"
16192,source/Ivan Litmanovich.docx,"Full-stack developer
October 2017 - June 2018
"
16193,source/Ivan Litmanovich.docx,"Pendex
Minsk, Belarus
"
16194,source/Ivan Litmanovich.docx,"• Led end-to-end development of a cross-platform health monitoring app (PHP, Angular, MySQL).
"
16195,source/Ivan Litmanovich.docx,"• Achieved data security, user engagement, and scalability.
"
16196,source/Ivan Litmanovich.docx,"TECHNICAL SKILLS
"
16197,source/Ivan Litmanovich.docx,"Languages: Ruby, Python, JavaScript, SQL, HTML/CSS
Frameworks: Ruby on Rails, Grape, Padrino, React, React Native, Node.js, Express.js, Django, FastAPI
Developer Tools: Git, VS Code, PyCharm, Android Studio, IntelliJ
DevOps Tools: Docker, Terraform, Ansible, Kubernetes, Kafka
"
16198,source/VLADIMIR MATVEEV.pdf,"Moscow, Russia 
Open to relocate 
Visa sponsorship required 
VLADIMIR 
MATVEEV 
CTO / Software Engineer / Tech Lead 
"
16199,source/VLADIMIR MATVEEV.pdf,"matv11v@gmail.com  
"
16200,source/VLADIMIR MATVEEV.pdf,"+7 995 0998 000 
"
16201,source/VLADIMIR MATVEEV.pdf," 
"
16202,source/VLADIMIR MATVEEV.pdf,"  
PERSONAL SUMMARY 
 
"
16203,source/VLADIMIR MATVEEV.pdf,"Entrepreneurial-spirited software engineer with over 15 years of experience mostly in web development (using 
Microsoft.NET technologies stack). 10+ years career as a software engineer, team lead and senior developer. 
5+ years as a software project manager and CTO in a startup, managing team of 15. Broad expertise in IT, full 
project lifecycle management, client/vendor relationship management and financial/operational management. 
"
16204,source/VLADIMIR MATVEEV.pdf," 
"
16205,source/VLADIMIR MATVEEV.pdf,"  
TECHNICAL SKILLS 
 
"
16206,source/VLADIMIR MATVEEV.pdf," 
"
16207,source/VLADIMIR MATVEEV.pdf,"Languages 
C#; JavaScript; T-SQL; LINQ; HTML; CSS; ES6+ 
"
16208,source/VLADIMIR MATVEEV.pdf,"Technologies and 
Frameworks 
"
16209,source/VLADIMIR MATVEEV.pdf,".NET, .NET Core; ASP.NET Core, ASP.NET MVC; ASP.NET ASP.NET Web Forms; jQuery; 
Angular; React; Vue; SOA/REST/Web Services; SignalR; Selenium; ADO.NET; Entity 
Framework; Bootstrap 
"
16210,source/VLADIMIR MATVEEV.pdf,"Databases 
Microsoft SQL Server; MongoDB; Redis; My SQL; TimescaleDB 
"
16211,source/VLADIMIR MATVEEV.pdf,"Source Control 
Git; TFS; SVN 
"
16212,source/VLADIMIR MATVEEV.pdf,"Methodology 
Scrum; Kanban; Lean; TDD 
"
16213,source/VLADIMIR MATVEEV.pdf,"Platforms 
Windows Server; IIS 
"
16214,source/VLADIMIR MATVEEV.pdf,"  Virtualization & Cloud 
 Windows Azure; Amazon Web Services 
 
"
16215,source/VLADIMIR MATVEEV.pdf,"Tools 
VSTS; ReSharper; JMeter; TeamCity; YouTrack; MS Visual Studio; Visual Studio Code 
"
16216,source/VLADIMIR MATVEEV.pdf,"  
WORK EXPERIENCE 
 
"
16217,source/VLADIMIR MATVEEV.pdf," 
"
16218,source/VLADIMIR MATVEEV.pdf," 
"
16219,source/VLADIMIR MATVEEV.pdf,"Founder and CTO 
Sep 2019 — Current 
"
16220,source/VLADIMIR MATVEEV.pdf,"Glomad — glomad.net 
 
"
16221,source/VLADIMIR MATVEEV.pdf,"The Glomad.net was launched in early 2020. Our mission is to promote the idea of free movement with the 
ability of remote work and online entrepreneurship. The purpose of Glomad is to provide services for remote 
workers, travelers and digital nomads. The first demo version is launched on January 20, 2020. Currently, it is 
a crowdsourced database of cities in the world analyzing 8302 cities and 10 parameters for each as well as 
about 100 embassies. 
"
16222,source/VLADIMIR MATVEEV.pdf," 
 
"
16223,source/VLADIMIR MATVEEV.pdf," 
Engineering Manager (contract) 
Jun 2020 — Current 
"
16224,source/VLADIMIR MATVEEV.pdf," 
BPS Int. — connected-bim.com 
Munich, Germany 
"
16225,source/VLADIMIR MATVEEV.pdf,"Building from scratch the full cycle of the development process of an innovative product in the field of IIoT. 
"
16226,source/VLADIMIR MATVEEV.pdf," 
 
"
16227,source/VLADIMIR MATVEEV.pdf," 
"
16228,source/VLADIMIR MATVEEV.pdf,"Chief Technology Officer 
Feb 2015 — Apr 2018 
"
16229,source/VLADIMIR MATVEEV.pdf,"DaOffice LLC — daoffice.ru 
Moscow, Russia 
"
16230,source/VLADIMIR MATVEEV.pdf,"As a partner and CTO was initially hired to oversee all product development, team building and management. I 
worked on enterprise social software platform, a Russian analog of Microsoft Yammer and Facebook 
Workplace. 
Key Achievements: 
"
16231,source/VLADIMIR MATVEEV.pdf," 
"
16232,source/VLADIMIR MATVEEV.pdf,"§ 
Implemented product development lifecycle from scratch and introduced Agile methodologies. Therefore, 
releases were made according to schedule. 
"
16233,source/VLADIMIR MATVEEV.pdf,"§ 
Process of mobile development was created. 2 new flagman products and 6 applications were released. 
"
16234,source/VLADIMIR MATVEEV.pdf,"§ 
As a result of QA department launch a number of hotfixes was significantly decreased. 
"
16235,source/VLADIMIR MATVEEV.pdf,"§ 
Was engaged in system performance analysis. During evaluation the bottlenecks were detected, and web 
application response time decreased from ~4 sec to ~1,5 sec. 
"
16236,source/VLADIMIR MATVEEV.pdf,"§ 
System uptime was up to 99.9% due to monitoring system implementation. 
"
16237,source/VLADIMIR MATVEEV.pdf,"§ 
Quality of customer service increased up to 70% (based on first reply time and agent touches) according to 
Zendesk statistic. 
"
16238,source/VLADIMIR MATVEEV.pdf,"§ 
Designed and implemented project IT infrastructure. Some optimizations saved 30% of the budget. 
"
16239,source/VLADIMIR MATVEEV.pdf,"§ 
Organized work processes with 3rd party contributors. 
"
16240,source/VLADIMIR MATVEEV.pdf,"§ 
Development and management of KPI for the developers' team. 
"
16241,source/VLADIMIR MATVEEV.pdf," 
 
"
16242,source/VLADIMIR MATVEEV.pdf," 
"
16243,source/VLADIMIR MATVEEV.pdf,"Lead Software Engineer 
Feb 2013 — Aug 2015 
"
16244,source/VLADIMIR MATVEEV.pdf,"DELL Inc. — dell.com 
Moscow, Russia 
"
16245,source/VLADIMIR MATVEEV.pdf,"Joined as a senior software engineer to work on web part of Dell One Active Roles Server. Worked on backend 
and frontend parts of solution. Later was promoted to lead the web development team of 6. 
Key Achievements: 
"
16246,source/VLADIMIR MATVEEV.pdf," 
"
16247,source/VLADIMIR MATVEEV.pdf,"§ 
For outstanding contribution to business results and dedication to customers was awarded The Dell 
Champion Award as the employee of year. 
"
16248,source/VLADIMIR MATVEEV.pdf,"§ 
Responsible for new UI and UX as one of the major features of version 7.0. Decreased feature time-to 
market from 12 to 4 months. 
"
16249,source/VLADIMIR MATVEEV.pdf,"§ 
Unit tests covering was increased to 70%. Unit tests for frontend were implemented by our team from 
scratch. 
"
16250,source/VLADIMIR MATVEEV.pdf,"§ 
Presented MVP to the product owner collected feedback for next release and sync up on current 
development state. It allowed to estimate must-have features in time. 
"
16251,source/VLADIMIR MATVEEV.pdf,"§ 
System performance analysis combined with stress testing allowed to detect and fix bottlenecks resulting 
in the improvement of response time up to 20%. 
"
16252,source/VLADIMIR MATVEEV.pdf,"§ 
As a result of the research, one of the offered modern front-end technologies was selected for use in 
following versions. 
"
16253,source/VLADIMIR MATVEEV.pdf," 
 
"
16254,source/VLADIMIR MATVEEV.pdf," 
Engineering Manager 
Jul 2011 — Feb 2013 
"
16255,source/VLADIMIR MATVEEV.pdf," 
Concert.ru LLC — concert.ru 
Moscow, Russia 
"
16256,source/VLADIMIR MATVEEV.pdf,"Started my way in Concert.ru (the biggest ticket portal in Russia) up from a software developer to Head of 
development. Working collaboratively with in-house departments I combined positions of a full-stack web 
developer and team lead. 
Key Achievements: 
"
16257,source/VLADIMIR MATVEEV.pdf," 
"
16258,source/VLADIMIR MATVEEV.pdf,"§ 
Created development, quality assurance, and implementation methodologies of product produce lifecycle. 
"
16259,source/VLADIMIR MATVEEV.pdf,"§ 
Responsible for an idea, development and delivery of a new product conducive to the business growth. 
"
16260,source/VLADIMIR MATVEEV.pdf,"§ 
The development department grew up from 3 to 7 people. 
"
16261,source/VLADIMIR MATVEEV.pdf,"§ 
Organized development and releases of mobile applications from scratch. 
"
16262,source/VLADIMIR MATVEEV.pdf,"§ 
Helpdesk department was created. 
"
16263,source/VLADIMIR MATVEEV.pdf,"§ 
DB monitoring process was implemented. Speed of most valuable reports was up to 20 times. 
"
16264,source/VLADIMIR MATVEEV.pdf,"§ 
Developed a strategy against DDOS attacks. 
"
16265,source/VLADIMIR MATVEEV.pdf,"§ 
Collaborated with SEO specialists that resulted in the top 2 rankings on Google and Yandex. 
"
16266,source/VLADIMIR MATVEEV.pdf,"§ 
The ticket portal for Ukraine was launched which allowed the company to enter the new market. 
"
16267,source/VLADIMIR MATVEEV.pdf,"  
KEY COMPETENCIES 
 
"
16268,source/VLADIMIR MATVEEV.pdf," 
"
16269,source/VLADIMIR MATVEEV.pdf,"§ 
Web Development 
"
16270,source/VLADIMIR MATVEEV.pdf,"§ 
Web Applications and Services 
"
16271,source/VLADIMIR MATVEEV.pdf,"§ 
Software Development 
Lifecycle 
"
16272,source/VLADIMIR MATVEEV.pdf,"§ 
Software Engineering 
"
16273,source/VLADIMIR MATVEEV.pdf,"§ 
Agile Methodologies 
"
16274,source/VLADIMIR MATVEEV.pdf,"§ 
Scaled Agile Framework 
"
16275,source/VLADIMIR MATVEEV.pdf,"§ 
Project Management 
"
16276,source/VLADIMIR MATVEEV.pdf,"§ 
Risk Management 
"
16277,source/VLADIMIR MATVEEV.pdf,"§ 
Solutions Technical 
Architecture 
"
16278,source/VLADIMIR MATVEEV.pdf,"§ 
Team Building & Development 
"
16279,source/VLADIMIR MATVEEV.pdf,"§ 
UX & UI Design 
"
16280,source/VLADIMIR MATVEEV.pdf,"§ 
Startups 
"
16281,source/VLADIMIR MATVEEV.pdf," 
"
16282,source/VLADIMIR MATVEEV.pdf,"  
EDUCATION 
 
"
16283,source/VLADIMIR MATVEEV.pdf," 
"
16284,source/VLADIMIR MATVEEV.pdf," 
"
16285,source/VLADIMIR MATVEEV.pdf,"Master’s Degree in Computer Science 
2002 — 2008 
"
16286,source/VLADIMIR MATVEEV.pdf,"Southern Federal University 
Field of Information Systems and Technologies 
"
16287,source/VLADIMIR MATVEEV.pdf,"Russia 
"
16288,source/VLADIMIR MATVEEV.pdf," 
 
"
16289,source/VLADIMIR MATVEEV.pdf," 
"
16290,source/VLADIMIR MATVEEV.pdf,"Y Combinator 
2017 
"
16291,source/VLADIMIR MATVEEV.pdf,"Startup Founder Track for Startup School Online with the Zentranet company 
Online 
"
16292,source/VLADIMIR MATVEEV.pdf," 
"
16293,source/IVASHCHENKO VIKTOR.docx,"v.ivshchenko.1321@gmail.com
Moscow, Russia
linkedin.com/in/ivashchenko-12452/
+7-926-330-00-11
"
16294,source/IVASHCHENKO VIKTOR.docx,"EXPERIENCE
"
16295,source/IVASHCHENKO VIKTOR.docx,"Software Engineer
"
16296,source/IVASHCHENKO VIKTOR.docx,"Avito | OLX Group
"
16297,source/IVASHCHENKO VIKTOR.docx,"  Dec 2019 – Present
Moscow, Russia
"
16298,source/IVASHCHENKO VIKTOR.docx,"•Developed admin panel for supports, it helps to handle client requests of secondary real estate.
•Refactored services of our command, also helped with splitting monolith of main desktop application.
•Created different kind of features for a-b tests in secondary real estate.
•Became a certified scrum-master in my command and improved processes in team, and burndown.
•Technologies: Golang, Php, Js, React-Redux, Postgresql, Redis, Rabbit MQ
"
16299,source/IVASHCHENKO VIKTOR.docx,"Software Engineer Oriented at Frontend
"
16300,source/IVASHCHENKO VIKTOR.docx,"Mail.ru Group
"
16301,source/IVASHCHENKO VIKTOR.docx,"  Sep 2019 – Dec 2019
Moscow, Russia
"
16302,source/IVASHCHENKO VIKTOR.docx,"•Developed overall architecture of frontend application.
•Developed with distributed team the web-portal for Russian oil company and we had to support IE10.
•Technologies: Typescript, React-Redux, React-Router, Webpack, Storybook, Python, Styled Components
"
16303,source/IVASHCHENKO VIKTOR.docx,"Software Engineer Oriented at Frontend
RamblerCo
"
16304,source/IVASHCHENKO VIKTOR.docx,"  July 2018 – Sep 2019
Moscow, Russia
"
16305,source/IVASHCHENKO VIKTOR.docx,"•Improved frontend performance of choosing restaurant application.
•Added couple features in graphic representation of restaurants halls, which reduced waiting time of 
restaurateurs.
"
16306,source/IVASHCHENKO VIKTOR.docx,"•Refactored legacy and added new frontend technology in project.
•Developed with team searching restaurants at map this is feature helped to attract new active users.
•Technologies: Node Js, React-Redux, React-Router, Webpack, Canvas, Typescript, Python Django, Styled 
"
16307,source/IVASHCHENKO VIKTOR.docx,"Components
"
16308,source/IVASHCHENKO VIKTOR.docx,"EDUCATION, COURSES
"
16309,source/IVASHCHENKO VIKTOR.docx,"Bauman Moscow State Technical University
"
16310,source/IVASHCHENKO VIKTOR.docx,"Bachelors in Robotics and Mechatronics
"
16311,source/IVASHCHENKO VIKTOR.docx,"   Sep 2014 – July 2018
Moscow, Russia
"
16312,source/IVASHCHENKO VIKTOR.docx,"Technopark Mail.ru - System Architect
https://park.mail.ru/pages/index/
"
16313,source/IVASHCHENKO VIKTOR.docx,"  Feb 2017 – July 2018
"
16314,source/IVASHCHENKO VIKTOR.docx,"•Technologies: C/C++, Node Js, Python, Postgresql
"
16315,source/IVASHCHENKO VIKTOR.docx,"Scrum Course at agilix and scrum.org
"
16316,source/IVASHCHENKO VIKTOR.docx,"Received PSM I
"
16317,source/IVASHCHENKO VIKTOR.docx,"  Apr 2020
"
16318,source/IVASHCHENKO VIKTOR.docx,"AWARDS
"
16319,source/IVASHCHENKO VIKTOR.docx,"Prize-winner Junction Hackaton
"
16320,source/IVASHCHENKO VIKTOR.docx,"Section AI
"
16321,source/IVASHCHENKO VIKTOR.docx,"   Nov 2018
Helsinki, Finland
"
16322,source/Ivan Kudaibergenov.docx,"|
|
|
"
16323,source/Ivan Kudaibergenov.docx,"•
"
16324,source/Ivan Kudaibergenov.docx,"•
"
16325,source/Ivan Kudaibergenov.docx,"Ivan Kudaibergenov
"
16326,source/Ivan Kudaibergenov.docx,"+77019400060   iaaas.kudaibergenov@nu.edu.kz    linkedin.com/in/iaaas-kudaibergenov/    
github.com/Aaaahka0
"
16327,source/Ivan Kudaibergenov.docx,"EDUCATION
"
16328,source/Ivan Kudaibergenov.docx,"Nazarbayev University
Astana, Kazakhstan
"
16329,source/Ivan Kudaibergenov.docx,"Bachelor of Science in Computer Science
August 2021 – June 2025 
(Expected) Selected Coursework: Algorithms, Software Engineering, Programming Languages, Artificial 
Intelligence, Database Systems, Performance and Data Structures.
"
16330,source/Ivan Kudaibergenov.docx,"EXPERIENCE
"
16331,source/Ivan Kudaibergenov.docx,"Yandex  | Market
Moscow, Russia
"
16332,source/Ivan Kudaibergenov.docx,"iOS Developer
February 2023 - September 2023
"
16333,source/Ivan Kudaibergenov.docx,"Team responsible for building back-end driven UI infrastructure for other Yandex teams.
"
16334,source/Ivan Kudaibergenov.docx,"Integrated signals, which provided client’s app customizable actions coming  from  back-end. 
Assembled a cross-platform solution for a recommendation feature in Kotlin, which resulted in a 4% 
increase in new user acquisition.
"
16335,source/Ivan Kudaibergenov.docx,"• Designed a PullToRefresh model for clients to fully customize the refresh behavior within client’s app.
• Enhanced bug detection by 12% through velocity monitoring feature, which measures speed of networking. 
Increased test code coverage by 40% by writing more than 60 tests within the SDK, including UI, Unit and 
Snapshot tests.
Minimized overall testing time by 15% by integrating a script into SDK release CI pipeline, which checks if all 
test-scenarios are properly documented and generates a result document for the testing team.
Reduced friction of SDK usage for other teams by 8% through filing the library’s functionality, refining and 
enriching existing records in the documentation.
"
16336,source/Ivan Kudaibergenov.docx,"Yandex | Realty
Moscow, Russia
"
16337,source/Ivan Kudaibergenov.docx,"iOS Developer
August 2022 - October 2022
"
16338,source/Ivan Kudaibergenov.docx,"Online marketplace for real estate
"
16339,source/Ivan Kudaibergenov.docx,"Redesigned the user contacts page using SwiftUI to create user-friendly interface with seamless redirection 
capabilities from the main page.
Implemented a deep link that opens up an application with an apartment page, resulting in 9% increase in 
visits to the designated page.
Built a custom notification with actions for the previous tenant by using protocol buffer models, enabling user 
to manage former residence.
"
16340,source/Ivan Kudaibergenov.docx,"• Wrapped application with Snapshot and UI tests, leading to a 10% improvement in bug awareness. 
Implemented an entity for logging user activity, enabling analytics-driven feature enhancements, which 
resulted in 7% better conversion.
"
16341,source/Ivan Kudaibergenov.docx,"Yandex | Auto.ru
Moscow, Russia
"
16342,source/Ivan Kudaibergenov.docx,"iOS Developer
June 2022 - August 2022
"
16343,source/Ivan Kudaibergenov.docx,"Social network and trading post for drivers
• Refined overall volume of sales by 3% by adding a histogram of prices for the selected car models.
• Built a screen for a new feature and connected different states according to design, utilizing SwiftUI and UIKit.
• Added information section for an active offer feature E2E, secured 100% rollout and monitored the release.
• Increased garage users conversion by 5% by adding a date-picking functionality for car details.
"
16344,source/Ivan Kudaibergenov.docx,"Improved upcoming feature  design by collaborating with the team  designer to address potential technical 
issues, resulting in a 10% acceleration in the rollout of the feature.
"
16345,source/Ivan Kudaibergenov.docx,"•
Optimized form validation by creating a custom hook that allows manipulating user input on component level.
"
16346,source/Ivan Kudaibergenov.docx,"Freelance  | Hey!
Astana, Kazakhstan
"
16347,source/Ivan Kudaibergenov.docx,"iOS Developer
January 2022 - May 2022
"
16348,source/Ivan Kudaibergenov.docx,"Party Quiz App
"
16349,source/Ivan Kudaibergenov.docx,"Created user-friendly screens for displaying quiz questions, answer choices, and feedback on answers using 
SwiftUI and UIKit according to HIG.
"
16350,source/Ivan Kudaibergenov.docx,"• Developed a correlation between sounds and the number of correct and incorrect answers using AVFoundation.
• Saved user progress, such as completed quizzes and scores using CoreData.
"
16351,source/Ivan Kudaibergenov.docx,"•
•
"
16352,source/Ivan Kudaibergenov.docx,"•
"
16353,source/Ivan Kudaibergenov.docx,"•
"
16354,source/Ivan Kudaibergenov.docx,"•
"
16355,source/Ivan Kudaibergenov.docx,"•
"
16356,source/Ivan Kudaibergenov.docx,"•
"
16357,source/Ivan Kudaibergenov.docx,"•
"
16358,source/Ivan Kudaibergenov.docx,"•
"
16359,source/Ivan Kudaibergenov.docx,"PROGRAMMING SKILLS
"
16360,source/Ivan Kudaibergenov.docx,"Languages: Swift, Python, Kotlin, Java, C/C++, Javascript, HTML, CSS
"
16361,source/Ivan Kudaibergenov.docx,"Technologies: UIKit, SwiftUI, Firebase, Xcode, CocoaPods, Swift Package Manager, Realm, Flask, Bash
"
16362,source/Ivan Kudaibergenov.docx,"Other: Git, Teamcity, CoreData/SQLite, NSUserDefaults, XCTest
"
16363,source/Kirill Petrov.docx,"Frontend Developer
"
16364,source/Kirill Petrov.docx,"Skilled and dynamic professional in frontend development with experience in 
designing and developing websites and web applications. Have a proven track record 
of integrating clients' design vision into pixel-perfect cross-browser responsive and/or 
adaptive websites. Continuously developing my expertise in frontend development and 
surrounding areas, including UI/UX and backend development.
"
16365,source/Kirill Petrov.docx,"Experience
"
16366,source/Kirill Petrov.docx,"Personal info
"
16367,source/Kirill Petrov.docx,"Phone
"
16368,source/Kirill Petrov.docx,"+7 (999) XXX-XX-XX
"
16369,source/Kirill Petrov.docx,"Email
"
16370,source/Kirill Petrov.docx,"xxxxx@gmail.com
"
16371,source/Kirill Petrov.docx,"2020 -07 -
present
"
16372,source/Kirill Petrov.docx,"2019-07 -
2020-07
"
16373,source/Kirill Petrov.docx,"2017-08 -
2019-07
"
16374,source/Kirill Petrov.docx,"2016-08 -
2017-08
"
16375,source/Kirill Petrov.docx,"Senior frontend developer (#React/Redux, #Typescript, #Jest/Cypress)
Rai￿eisen Bank - bank. Moscow, Russia.
Retail business software development department
"
16376,source/Kirill Petrov.docx,"- Developed web portal for bank partners (developed frontend architecture, 
led customer development interviews with users)
"
16377,source/Kirill Petrov.docx,"- Set up monorepo for all mortgage web applications. Wrote unit and UI 
tests, managed web server for local development.
"
16378,source/Kirill Petrov.docx,"- Took part in the development of bank Design system as a contributor.
"
16379,source/Kirill Petrov.docx,"- Managed all A/B testing activities for mortgage applications.
"
16380,source/Kirill Petrov.docx,"Frontend developer (#React/Redux, #ES6) 
Sberbank - largest bank in CEE. Moscow, Russia 
Compliance Technology Development Department
"
16381,source/Kirill Petrov.docx,"- Created internal web application for the compliance department. Integrated 
application with external bank products and solutions, implemented client-
side encryption, transferred application from monolith to micro-service.
"
16382,source/Kirill Petrov.docx,"- Refactored legacy code and improved application performance.
"
16383,source/Kirill Petrov.docx,"- Communicated with internal clients to understand business needs, 
demonstrate new features, and improve UX.
"
16384,source/Kirill Petrov.docx,"- Took the role of Scrum Master in the team (meetings facilitation, 
communication with parallel teams, managing agile scrum artifacts).
"
16385,source/Kirill Petrov.docx,"Frontend developer (#Backbone/Marionettej #BEM, #React - pet projects)
Drumee - website constructor. Moscow, Russia
"
16386,source/Kirill Petrov.docx,"- Translated designs to front-end code, estimated time and costs, and 
determined developer requirements and specifications.
"
16387,source/Kirill Petrov.docx,"- Collaborated with creative and development teams on the execution of 
ideas and projects. Promoted new ideas, process improvements, and new 
technologies to team members.
"
16388,source/Kirill Petrov.docx,"- Updated existing code to improve site performance.
"
16389,source/Kirill Petrov.docx,"Frontend developer (#jQuery, #bootstrap)
Handybank - internet-banking system provider. Moscow, Russia
"
16390,source/Kirill Petrov.docx,"- Developed web interfaces and implemented them into a Java-based 
internet-banking solution. Developed a new company website.
"
16391,source/Kirill Petrov.docx,"- Worked closely with a cross-functional project team to define and develop 
product roadmaps.
"
16392,source/Kirill Petrov.docx,"LinkedIn
"
16393,source/Kirill Petrov.docx,"www.linkedin.com/in/xxxxxx
"
16394,source/Kirill Petrov.docx,"Web
https://github.com/2u4u 
https://medium.com/@2u4u (EN) 
https://t.me/blog_2u4u (RU) 
https://www.behance.net/2u4u
"
16395,source/Kirill Petrov.docx,"Programming skills
"
16396,source/Kirill Petrov.docx,"Frontend:
"
16397,source/Kirill Petrov.docx,"Native JS (ES6), 
React/Redux, Typescript, 
Backbone/ Marionette, jQuery, 
HTML5, CSS3
"
16398,source/Kirill Petrov.docx,"Tests:
Jest, Cypress, React Testing 
Library
"
16399,source/Kirill Petrov.docx,"Backend:
Node.js, Express.js (REST API), 
WebSockets, Passport.js, Java
"
16400,source/Kirill Petrov.docx,"Database:
"
16401,source/Kirill Petrov.docx,"MongoDB
"
16402,source/Kirill Petrov.docx,"Other skills
"
16403,source/Kirill Petrov.docx,"Adobe CS (Ps, Ai, Lr)
Corel Draw, Inkscape, GIMP 
Figma, Sketch
Application deployment on AWS,
Digital Ocean, Heroku
"
16404,source/Kirill Petrov.docx,"Education
Agile, Scrum, LESS
"
16405,source/Kirill Petrov.docx,"2003 -
2008
"
16406,source/Kirill Petrov.docx,"Moscow State University of Geodesy and Cartography 
"
16407,source/Kirill Petrov.docx,"Faculty of Applied Cosmonautics and Photogrammetry. 
"
16408,source/Kirill Petrov.docx,"Master's of Science in Information Systems & 
"
16409,source/Kirill Petrov.docx,"Technologies.
"
16410,source/Kirill Petrov.docx,"Languages
"
16411,source/Kirill Petrov.docx,"Russian - Native
"
16412,source/Kirill Petrov.docx,"Certification
"
16413,source/Kirill Petrov.docx,"2020
Scrum master school (Sberbank corporate university)
"
16414,source/Kirill Petrov.docx,"English - 
Advanced French - 
Basic
"
16415,source/Pavel Diakov.docx,"Pavel Diakov
"
16416,source/Pavel Diakov.docx,"Product Manager
"
16417,source/Pavel Diakov.docx,"Summary
"
16418,source/Pavel Diakov.docx,"Aspiring product manager with 3+ years of experience of building products from scratch as an entrepreneur 
with great project and team management skills resulting from leading 20+ consulting and event-focused 
commercial projects. Searching for a place to proceed with professional development and contribute to the 
rise of new great products.
"
16419,source/Pavel Diakov.docx,"Work Experience
"
16420,source/Pavel Diakov.docx,"2017 - 2020
FOUNDER – RUSSIAN HACKERS LLC
"
16421,source/Pavel Diakov.docx,"(3 years)
russianhackers.org – aid companies to achieve business goals with a help of hackathons
"
16422,source/Pavel Diakov.docx,"Product manager: developed platform for organizing hackathons which reduced our project execution 
time by up to 30%; through the period of 9 months turned it into the profitable B2B SaaS product for other 
hackathon organizers (generated >$35.000 in additional revenue). The market entry strategy I developed 
(showcases + wide adaptation among participants + access to community and expertise) made it 
possible to attract major players as our regular customers and became a market leader.
"
16423,source/Pavel Diakov.docx,"-
developed business opportunity into a new stream of income
"
16424,source/Pavel Diakov.docx,"-
researching existing and potential customers and users to build a feature backlog
"
16425,source/Pavel Diakov.docx,"-
providing functional and technical planning and managing the full-cycle product delivery process
"
16426,source/Pavel Diakov.docx,"-
building and enchasing sales funnel
"
16427,source/Pavel Diakov.docx,"-
gathering requirements from clients and delivering customizations
"
16428,source/Pavel Diakov.docx,"-
establishing a process of aggregating feedback from clients and users
"
16429,source/Pavel Diakov.docx,"-
recruiting and managing development team: full-stack dev, front-end dev, UX/UI designer
"
16430,source/Pavel Diakov.docx,"-
taking part as a part-time full-stack developer to speed up testing and delivery of new features
"
16431,source/Pavel Diakov.docx,"Project manager: organized and consulted more than 20 hackathons that helped clients to find and test 
new product ideas, recruit talents and teams, develop employer brand and spread their technologies.
"
16432,source/Pavel Diakov.docx,"-
developed a framework for organizing hackathons that maximizes the value of an event for clients
"
16433,source/Pavel Diakov.docx,"-
leading sales and negotiations processes with clients
"
16434,source/Pavel Diakov.docx,"-
working with stakeholders inside the client to make event work (CIO, CTO, CPO, Head of HR)
"
16435,source/Pavel Diakov.docx,"-
transforming business problems into hackathon challenges
"
16436,source/Pavel Diakov.docx,"-
planning and supervising projects’ execution
"
16437,source/Pavel Diakov.docx,"-
coordinating project team (promotion, communication, design and production, mentoring, logistics)
"
16438,source/Pavel Diakov.docx,"Clients I was working with: 1C, Avast, HERE, Huawei, Microsoft, MTS, Lenta, NVIDIA, Philips, Raiffeisen Bank, Rosbank, 
Sibur, SberCloud, WorldQuant, Unilever, Yellow.Rockets, Federal Taxation Service, Moscow Agency of Innovations.
"
16439,source/Pavel Diakov.docx,"2019
METHODIST, MENTOR – MIPT INNOVATION LAB
"
16440,source/Pavel Diakov.docx,"(5 months)
Educational course for 3rd year students at Moscow Institute of Physics and Technology
"
16441,source/Pavel Diakov.docx,"Developed and delivered education program upon modern approaches of startup development: 53 
students in 9 teams with support from 7 mentors were pushing projects through innovation funnel during 
the 5-month period; 3 teams continued to work on their projects after in the university’s accelerator.
"
16442,source/Pavel Diakov.docx,"-
developed a suitable course program and assessment criteria
"
16443,source/Pavel Diakov.docx,"-
managed collaboration between teams and mentors
"
16444,source/Pavel Diakov.docx,"-
mentored teams though the course
"
16445,source/Pavel Diakov.docx,"-
gathered data to improve the course (the course was successfully conducted again the following year)
"
16446,source/Pavel Diakov.docx,"2017 - 2018
FOUNDER – YASTREAM
"
16447,source/Pavel Diakov.docx,"(7 months)
yastream.win - P2P donation platform for streamers with enhanced connection with viewers
"
16448,source/Pavel Diakov.docx,"Developed the idea and managed the project to the stage of actual MVP; gained proof of concept. Was 
able to get partnership contract from Yandex.Money and receive an investment proposal from QIWI PLC. 
Collapsed due to the loss of interest by keys member as a result of long negotiation processes.
"
16449,source/Pavel Diakov.docx,"-
developed idea to the actual business case
"
16450,source/Pavel Diakov.docx,"-
recruited and managed team: front-end, back-end, android dev, designer, product manager
"
16451,source/Pavel Diakov.docx,"-
led negotiations with partners and investors
"
16452,source/Pavel Diakov.docx,"-
took part as a part-time full-stack developer (ASP.NET, SQL Server)
"
16453,source/Pavel Diakov.docx,"Education
"
16454,source/Pavel Diakov.docx,"Lancaster University
2020-2021
"
16455,source/Pavel Diakov.docx,"E-Business and Innovation, M.Sc.
"
16456,source/Pavel Diakov.docx,"National Research University “Higher School of Economics”
2015-2019
"
16457,source/Pavel Diakov.docx,"Business Informatics, B.Sc. (Honours)
GPA 8.75/10
"
16458,source/Pavel Diakov.docx,"London School of Economics and Political Science
2018
"
16459,source/Pavel Diakov.docx,"Open Innovation, Summer School
A-
"
16460,source/Pavel Diakov.docx,"Personal info
"
16461,source/Pavel Diakov.docx,"Phone
"
16462,source/Pavel Diakov.docx,"+44 7780 000000
"
16463,source/Pavel Diakov.docx,"Email
"
16464,source/Pavel Diakov.docx,"diakov00000@gmail.com
"
16465,source/Pavel Diakov.docx,"Location
"
16466,source/Pavel Diakov.docx,"Lancaster, UK
available to relocate nationwide
"
16467,source/Pavel Diakov.docx,"Programming skills
"
16468,source/Pavel Diakov.docx,"Frontend 
"
16469,source/Pavel Diakov.docx,"AngularJS, 
"
16470,source/Pavel Diakov.docx,"Native JS (ES6),
jQuery, HTML5, CSS3
"
16471,source/Pavel Diakov.docx,"Backend
"
16472,source/Pavel Diakov.docx,"Express.js (Node.js), 
Flask, Django (python), 
ASP.NET (C#)
"
16473,source/Pavel Diakov.docx,"REST API, WebSockets
"
16474,source/Pavel Diakov.docx,"Databases
"
16475,source/Pavel Diakov.docx,"MongoDB
SQL Server, PostgreSQL
"
16476,source/Pavel Diakov.docx,"Data Analytics
"
16477,source/Pavel Diakov.docx,"Pandas, Matplotlib, NumPy 
SQL
"
16478,source/Pavel Diakov.docx,"Achievements
"
16479,source/Pavel Diakov.docx,"MLH Top 50 Hackers of 2020: 
"
16480,source/Pavel Diakov.docx,"award by the official hackathon 
"
16481,source/Pavel Diakov.docx,"league Major League hacking as a 
"
16482,source/Pavel Diakov.docx,"recognition of my impact on the 
"
16483,source/Pavel Diakov.docx,"Russian hackathon community.
"
16484,source/Pavel Diakov.docx,"""Silver Nestling"" Nominee: award 
"
16485,source/Pavel Diakov.docx,"to the HSE students for outstanding 
"
16486,source/Pavel Diakov.docx,"achievements in studies, research 
"
16487,source/Pavel Diakov.docx,"and self-development.
"
16488,source/Pavel Diakov.docx,"Languages
"
16489,source/Pavel Diakov.docx,"Russian - Native 
English - Advanced
"
16490,source/Pavel Diakov.docx,"Hackathons
"
16491,source/Pavel Diakov.docx,"3rd place
Junction, Helsinki: “Making Spaces Brighter with Radar Technology”, 2019 
1st place
HEX, Eindhoven: “E-commerce”, 2018
"
16492,source/Pavel Diakov.docx,"1st place
Digital Aviation Hackathon, Moscow: track “Travel planning”, 2018 
2nd place
HackUPC, Barcelona: “SmartLocation to save lives”, 2017
"
16493,source/Pavel Diakov.docx,"1st place
HackUPC, Barcelona: “#HackHarassment”, 2017 
2nd place
NASA Space Apps Challenge, Moscow, 2017
"
16494,source/Pavel Diakov.docx,"1st place
Yandex.Money Hackathon, 2017 
1st place
QIWI API Contest, Moscow, 2017
"
16495,source/Danil Vibly.pdf,"Danil Vibly
"
16496,source/Danil Vibly.pdf,"New Rochelle, New York, United States
"
16497,source/Danil Vibly.pdf,"daaaibly@gmail.com
(901) 0007659
linkedin.com/in/denisvaaay
"
16498,source/Danil Vibly.pdf,"Summary
"
16499,source/Danil Vibly.pdf,"I'm a Quality Assurance Engineer with great attention to detail and a commitment to developing and
implementing continuous improvement initiatives through the collection and analysis of data and converting
it into actionable information
"
16500,source/Danil Vibly.pdf,"Skills
"
16501,source/Danil Vibly.pdf,"Core Competencies: Software Quality Assurance, Manual Testing, Requirements Analysis, Test Planning
Project Planning Tools: Jira, Gitlab
Source Control: Git
Methodology: Scrum, Kanban
Databases: Postgresql, MySQL, DBeaver
QA Tools & Software: WebAPI, Testing using Postman, Charles Proxy, Chrome Developer Tools
"
16502,source/Danil Vibly.pdf,"Experience
"
16503,source/Danil Vibly.pdf,"Software Quality Assurance Engineer
"
16504,source/Danil Vibly.pdf,"IN/OUT, Los Angeles, CA
"
16505,source/Danil Vibly.pdf,"March 2019 - Present (1 year)
"
16506,source/Danil Vibly.pdf,"●
Participating
in
full
system
development
life
cycle
including
designing,
developing
and
"
16507,source/Danil Vibly.pdf,"implementing test plans, test cases, and test processes, test methodologies (Agile), deployments and
promotions of hotfixes and weekly releases
"
16508,source/Danil Vibly.pdf,"● Manual software testing experience (web-based applications, Client/Server, e-Commerce, Mobile)
"
16509,source/Danil Vibly.pdf,"Operation Manager
"
16510,source/Danil Vibly.pdf,"MKN Communications LLC, Knoxville, TN
"
16511,source/Danil Vibly.pdf,"Mar 2017 - March 2019 (3 years)
"
16512,source/Danil Vibly.pdf,"● Headed - 8 Foreman’s that worked with a team of engineers, CM's, PM’s, GC’s
"
16513,source/Danil Vibly.pdf,"● Created structure and repeatability to allow the company to optimize the business processes
(project management, logistics, financial operations, document flow)
"
16514,source/Danil Vibly.pdf,"Project Manager
"
16515,source/Danil Vibly.pdf,"Demis Group, Moscow, Russia
"
16516,source/Danil Vibly.pdf,"Sep 2014 - Feb 2017 (2 years 6 months)
"
16517,source/Danil Vibly.pdf,"● Focused on serving/consulting key agency’s clients on internet marketing/web development
"
16518,source/Danil Vibly.pdf,"●
Introduced processes in the department to optimize work on projects (refinement of CRM and
"
16519,source/Danil Vibly.pdf,"project management rules)
"
16520,source/Danil Vibly.pdf,"Education
"
16521,source/Danil Vibly.pdf,"Belarusian State University, Minsk, BY
Master's Degree in Art Management, 2007 - 2014
"
16522,source/BALAMANOVA ASSEL.pdf,"BALAMANOVA ASSEL
"
16523,source/BALAMANOVA ASSEL.pdf,"EDUCATION
"
16524,source/BALAMANOVA ASSEL.pdf,"+77010009306 |
"
16525,source/BALAMANOVA ASSEL.pdf,"assel.balamanova237@gmail.com |
"
16526,source/BALAMANOVA ASSEL.pdf,"LinkedIn | Kazakhstan, Almaty |
"
16527,source/BALAMANOVA ASSEL.pdf,"Ready to relocate
"
16528,source/BALAMANOVA ASSEL.pdf,"International Information Technology University
Bachelor of Information Systems
Sep. 2016 – May 2022
"
16529,source/BALAMANOVA ASSEL.pdf,"FH Schmalkalden University of Applied Sciences
Exchange student of faculty Information Technologies
Oct. 2018 – Feb 2019
"
16530,source/BALAMANOVA ASSEL.pdf,"EXPERIENCE
"
16531,source/BALAMANOVA ASSEL.pdf,"KCELL JSC
"
16532,source/BALAMANOVA ASSEL.pdf,"Software Developer | Java Spring, flyway, mybatis, redis, RabbitMQ
Sep 2020 – now
"
16533,source/BALAMANOVA ASSEL.pdf,"• Worked on back-end side of new corporate site of company from 0 to launch
• Experience on project migrated from monolith to microservices
• Started to write code review for colleagues
• Support junior SD
"
16534,source/BALAMANOVA ASSEL.pdf,"Junior Software Developer |React, Java Spring, Oracle, PostgreSQL, RabbitMQ, JDBC
Jul 2019 – Aug 2020
"
16535,source/BALAMANOVA ASSEL.pdf,"• Worked to optimize internal web-site which process million of users
• E-Registry project for accountant and clients
• Logger and validation starter
• Work together with DevOpses to migrate projects from VM to kubernetes
"
16536,source/BALAMANOVA ASSEL.pdf,"Zero To One Labs
"
16537,source/BALAMANOVA ASSEL.pdf,"Mobile Developer Intern| React Native
Jun 2018 – Aug 2018
"
16538,source/BALAMANOVA ASSEL.pdf,"• Took part in a coding boot camp where implemented various cross-platform mobile apps using
"
16539,source/BALAMANOVA ASSEL.pdf,"technologies such as React Native, GraphQL and Firebase
"
16540,source/BALAMANOVA ASSEL.pdf,"AWARDS & ACHIEVEMENTS
"
16541,source/BALAMANOVA ASSEL.pdf,"International Student Scientiﬁc and Practical Conference ""Youth, Science and Innovation - 2020"", 2nd place
First President Scholarship Winner between students of our country (Scholarship for top 50 students in KZ)
Honor of Yessenov`s Foundation Scholarship for achievements of study and activities between students in
"
16542,source/BALAMANOVA ASSEL.pdf,"the country.
"
16543,source/BALAMANOVA ASSEL.pdf,"3rd place: Demo Presentation at nFactorial Incubator 2018 honor application for abbiturents which help to
"
16544,source/BALAMANOVA ASSEL.pdf,"select future career and university, got 3rd place out of approximately 100 mobile apps by the end of Bootcamp.
"
16545,source/BALAMANOVA ASSEL.pdf,"VOLUNTEERING & OTHER ACTIVITIES
"
16546,source/BALAMANOVA ASSEL.pdf,"Volunteer in “Club Dobryakov” which organizes charity events in city Almaty
2018 – 2020
"
16547,source/BALAMANOVA ASSEL.pdf,"Organizer and Leader of enthnic ensemble in university, every year the number of students is growing 2016 – 2020
"
16548,source/BALAMANOVA ASSEL.pdf,"Student Mentor of Hackathon organized by UNICEF.
2016
Sep
"
16549,source/BALAMANOVA ASSEL.pdf,"Volunteer on “2017 Universade Winter Sport Games” International student`s sports federation.
2017 Feb
"
16550,source/BALAMANOVA ASSEL.pdf,"TECHNICAL SKILLS
"
16551,source/BALAMANOVA ASSEL.pdf,"Programming Languages: Java, JavaScript,
"
16552,source/BALAMANOVA ASSEL.pdf,"Framework & Tools: Spring Boot, React, React Native, GraphQL, flyway, myBatis, Oracle, PostgreSQL, Spring Data,
FeignCloud, JUnit,
Languages: English (Intermediate), Russian(Native Speaker)
"
16553,source/Eldar SHAKIRBEKOV.docx,"Eldar SHAKIRBEKOV
"
16554,source/Eldar SHAKIRBEKOV.docx,"ellddshakirbekov@gmail.com | +1 469 748 0000 
"
16555,source/Eldar SHAKIRBEKOV.docx,"EDUCATION
"
16556,source/Eldar SHAKIRBEKOV.docx,"Al-Farabi Kazakh National University
Bachelor of Science, Computer Science
"
16557,source/Eldar SHAKIRBEKOV.docx,"Expected May 2021 
GPA: 3.4/4.0
"
16558,source/Eldar SHAKIRBEKOV.docx,"Relevant coursework: Algorithms and Data Structures, Computer Architecture, Intro to Artificial Intelligence, 
Introduction to CS, Database Systems, Design and Analysis of Algorithms , Object-Oriented Programming, 
Programming Languages and Compilers, Principles of Data Science, Discrete Math, Calculus I, Linear Algebra
"
16559,source/Eldar SHAKIRBEKOV.docx,"EXPERIENCE
"
16560,source/Eldar SHAKIRBEKOV.docx,"Backend Developer (Freelancer)
Dec 2019 - Present
"
16561,source/Eldar SHAKIRBEKOV.docx,"Almaty, Kazakhstan
• Successfully migrated code from PHP with MySQL to Django for a new web application
• Worked closely with clients to collect requirements and ensure project high quality
• Developed and maintained different web application programs
"
16562,source/Eldar SHAKIRBEKOV.docx,"Azmiut Sol., Front End Developer Intern (offered a part-time position after internship)
Almaty, Kazakhstan
• Implemented web design and development principles to build stable software
• Tested application to identify bugs and technical issues before and after deploying
• Built stable and maintainable codebases using Angular, VueJS also integrated Telegram API’s
"
16563,source/Eldar SHAKIRBEKOV.docx,"Jun 2019 - May 2020
"
16564,source/Eldar SHAKIRBEKOV.docx,"• Implemented new features, functionality and capabilities on the eCommerce sites using Javascript, Ajax, CSS, JSON
"
16565,source/Eldar SHAKIRBEKOV.docx,"Al-Farabi Kazakh National University, Software Engineering Intern
Dec 2018 - Feb 2019
"
16566,source/Eldar SHAKIRBEKOV.docx,"Almaty, Kazakhstan
• Created a database app for construction industry products, and also created landing pages from different layouts
• Created Web application by using HTML5, JavaScript, and JQuery that provides solution for issues of the company
• Worked with Microsoft SQL Server technology and how to administer, create, upgrade, maintain, STIG, and 
customize manually and using SQL Queries
"
16567,source/Eldar SHAKIRBEKOV.docx,"• Implemented products on the site using a database in PHP MySQL
"
16568,source/Eldar SHAKIRBEKOV.docx,"PROJECTS
"
16569,source/Eldar SHAKIRBEKOV.docx,"Braun Tau
• Successfully developed and published an adaptive website for a construction company
• Produced websites compatible with different type of devices
• Made a convenient and intuitive interface
"
16570,source/Eldar SHAKIRBEKOV.docx,"Coffee Boom
• Participated in the development and played one of the main roles
• Created one of the interface options of web application that was used for the final release
"
16571,source/Eldar SHAKIRBEKOV.docx,"SKILLS & CERTIFICATIONS
"
16572,source/Eldar SHAKIRBEKOV.docx,"Programming Languages: Javascript, Java, C, C++, Python, SQL, HTML/CSS, C#, PHP
Frameworks/Tools: Bootstrap, Git, React, VueJS, Angular, Django, MongoDB, NodeJS, REST API, Ajax, JQuery
Certifications: Coursera | Crash Course on Python, Coursera | Advanced Styling with Responsive Design, Coursera | 
"
16573,source/Eldar SHAKIRBEKOV.docx,"Interactivity with JavaScript
"
16574,source/Eldar SHAKIRBEKOV.docx,"HONORS & AWARDS
"
16575,source/Eldar SHAKIRBEKOV.docx,"Government Scholar: Awarded scholarship from the government for passing the unified national test for one of the 
highest score in country
ACM Olympic team: Participant in different programming competitions domestically
"
16576,source/Marat Nuriev.pdf,"Marat Nuriev
"
16577,source/Marat Nuriev.pdf,"marat@nuriev.me • linkedin.com/in/nuriev78/
"
16578,source/Marat Nuriev.pdf,".Net Developer
"
16579,source/Marat Nuriev.pdf,"TECHNICAL PROFICIENCIES
"
16580,source/Marat Nuriev.pdf,"Backend: .NET, C#, ASP.NET MVC, LINQ
Frontend: JavaScript, Ext JS, HTML, CSS
Databases: PostgreSQL, Oracle, NHibernate
Version Control: Git
"
16581,source/Marat Nuriev.pdf,"PROFESSIONAL EXPERIENCE
"
16582,source/Marat Nuriev.pdf,"BARS Group, Russia
"
16583,source/Marat Nuriev.pdf,"Full-stack .NET Developer (7/2018 – Present)
"
16584,source/Marat Nuriev.pdf,"Project: Electronic Budget of the Russian Federation (.NET MVC Web Application)
"
16585,source/Marat Nuriev.pdf,"Technologies: C#, ASP.NET MVC, Ext JS, JavaScript, NHibernate, Oracle, PostgreSQL, Castle Windsor, Git, Jira,
Bitbucket, TeamCity, IIS
"
16586,source/Marat Nuriev.pdf,"Key Achievements:
"
16587,source/Marat Nuriev.pdf,"● Reduced loading time of some pages from 10 to 3 seconds by improving requests to database and
"
16588,source/Marat Nuriev.pdf,"reducing materialization of data.
"
16589,source/Marat Nuriev.pdf,"● Created messenger bot to create reports for client about finished tasks (uses Jira’s API).
"
16590,source/Marat Nuriev.pdf,"● Built module for testing electronic signing of documents on client side after application update.
"
16591,source/Marat Nuriev.pdf,"● Fixed bugs, such as bugs after merging brunches on Git or critical issues after update.
"
16592,source/Marat Nuriev.pdf,"● Implemented graphical representation of information (different tables and reports).
"
16593,source/Marat Nuriev.pdf,"● Supported and developed new functionality.
"
16594,source/Marat Nuriev.pdf,"Self-employed, Russia
"
16595,source/Marat Nuriev.pdf,"Software Developer (1/2015 – 7/2018)
"
16596,source/Marat Nuriev.pdf,"Technologies: C#, Windows Forms, JavaScript, HTML, CSS, MySQL, Entity Framework, PHP, Git
"
16597,source/Marat Nuriev.pdf,"Key Achievements:
"
16598,source/Marat Nuriev.pdf,"● Created trading bots for computer games that has been used by hundreds of people every day.
"
16599,source/Marat Nuriev.pdf,"● Developed messenger bots, one of them has 1000+ subscribers.
"
16600,source/Marat Nuriev.pdf,"● Built windows forms applications to check strategies for stock market.
"
16601,source/Marat Nuriev.pdf,"● Worked on own ideas and programs.
"
16602,source/Marat Nuriev.pdf,"EDUCATION AND TRAINING
"
16603,source/Marat Nuriev.pdf,"Bachelor of Computer Science (2012 – 2016). GPA: 3.23.
(in progress) Master of Computer Science. Part-time. 2019 – March 2022.
Kazan State Power Engineering University, Russia
"
16604,source/Marat Nuriev.pdf,"LANGUAGES CERTIFICATES
"
16605,source/Marat Nuriev.pdf,"● English: IELTS C1 (advanced). Listening: 8.5. Reading: 8.0. Writing: 7.0. Speaking: 7.0. Overall: 7.5.
"
16606,source/Marat Nuriev.pdf,"● French: TCF B2 (upper-intermediate). CO: 480. CE: 518. EE: 13. EO: 10.
"
16607,source/KHALIMBETOV ASLAN.pdf,"KHALIMBETOV ASLAN 
"
16608,source/KHALIMBETOV ASLAN.pdf,"⋄ Seoul, South Korea 
"
16609,source/KHALIMBETOV ASLAN.pdf,"khalimbetovvvvvvvv@gmail.com    
"
16610,source/KHALIMBETOV ASLAN.pdf,"OBJECTIVE 
"
16611,source/KHALIMBETOV ASLAN.pdf,"Dedicated 3rd-year computer science student with strong skills in Python, C, SQL, and Java. Experienced in teaching 
”Advanced C” and well-versed in algorithms and data structures. Looking for software development roles to apply 
my knowledge and grow professionally. 
"
16612,source/KHALIMBETOV ASLAN.pdf," 
"
16613,source/KHALIMBETOV ASLAN.pdf,"EDUCATION 
"
16614,source/KHALIMBETOV ASLAN.pdf,"Bachelor of Computer Science, Sejong University (Seoul/South Korea) 
2020 - 2024 
"
16615,source/KHALIMBETOV ASLAN.pdf,"SKILLS 
"
16616,source/KHALIMBETOV ASLAN.pdf,"Technical Languages: 
Python, C, Java, SQL 
"
16617,source/KHALIMBETOV ASLAN.pdf,"Frameworks: 
Django 
"
16618,source/KHALIMBETOV ASLAN.pdf,"Data  Analysis  Libraries: 
Matplotlib, Pandas 
"
16619,source/KHALIMBETOV ASLAN.pdf,"Soft Skills: 
Problem-solving, Critical Thinking, Communication, Teamwork 
"
16620,source/KHALIMBETOV ASLAN.pdf," 
"
16621,source/KHALIMBETOV ASLAN.pdf,"EXPERIENCE 
"
16622,source/KHALIMBETOV ASLAN.pdf,"Video  Codec  Engineer 
August 2023 - Current 
"
16623,source/KHALIMBETOV ASLAN.pdf,"Sejong University 
Seoul, South Korea 
"
16624,source/KHALIMBETOV ASLAN.pdf,"• Collaborated with a multidisciplinary team to identify, troubleshoot, and resolve codec-related issues 
"
16625,source/KHALIMBETOV ASLAN.pdf,"• Documented standardization processes and findings, contributing to the lab’s knowledge base and best practices. 
"
16626,source/KHALIMBETOV ASLAN.pdf,"Teacher  Assistant  Advanced  C Programming 
March 2022 - July 2022 
"
16627,source/KHALIMBETOV ASLAN.pdf,"Sejong University 
 
Seoul, South Korea 
"
16628,source/KHALIMBETOV ASLAN.pdf,"• Boosted students’ understanding of Advanced C by 40% through tailored assignment assistance,  leveraging 
"
16629,source/KHALIMBETOV ASLAN.pdf,"expertise in C language and debugging. 
"
16630,source/KHALIMBETOV ASLAN.pdf,"• Pioneered a teaching approach that elevated code efficiency by 50%, combining technical prowess with innovative 
"
16631,source/KHALIMBETOV ASLAN.pdf,"curriculum strategies. 
"
16632,source/KHALIMBETOV ASLAN.pdf," 
"
16633,source/KHALIMBETOV ASLAN.pdf,"PROJECTS 
"
16634,source/KHALIMBETOV ASLAN.pdf,"Korea Income and Welfare Gender Predictor. 
"
16635,source/KHALIMBETOV ASLAN.pdf,"• Utilized Python, Pandas, Matplotlib, Seaborn, and Scikit-learn. 
"
16636,source/KHALIMBETOV ASLAN.pdf,"• Built a logistic regression model from scratch to predict gender based on income, region, and education. 
"
16637,source/KHALIMBETOV ASLAN.pdf,"• Achieved high accuracy, showcasing the model’s predictive capabilities. 
"
16638,source/KHALIMBETOV ASLAN.pdf,"Django E-Commerce Clothing Platform. 
"
16639,source/KHALIMBETOV ASLAN.pdf,"• Developed using Django, focusing on clothing retail. 
"
16640,source/KHALIMBETOV ASLAN.pdf,"• Features include user-friendly navigation, secure authentication, advanced search, and efficient transaction sys- 
"
16641,source/KHALIMBETOV ASLAN.pdf,"tems. 
"
16642,source/KHALIMBETOV ASLAN.pdf,"• Set a benchmark for online clothing platforms with its blend of design and functionality. 
"
16643,source/KHALIMBETOV ASLAN.pdf,"EXTRA-CURRICULAR ACTIVITIES 
"
16644,source/KHALIMBETOV ASLAN.pdf,"• Core member of the university’s Computer Security Club, actively participating in discussions, workshops, and 
"
16645,source/KHALIMBETOV ASLAN.pdf,"events focused on the latest cybersecurity trends and threats. 
"
16646,source/Alina Borovik.docx,"borovik.alll@gmail.com
"
16647,source/Alina Borovik.docx,"PROFILE
6+ years of experience in business analysis, process discovery and reengineering, including Data 
Modeling group of processes (in Sberbank)
2+ years of experience in data architecture and data warehousing 2+ 
years of experience in banking
Motivated to enhance knowledge and expertise in data management practices and technologies to 
provide users with up-to-date solutions.
"
16648,source/Alina Borovik.docx,"SKILLS & 
EXPERTISE
"
16649,source/Alina Borovik.docx,"ARIS Architect 
PowerDesigner 
BPMN 
TOGAF
DAMA DMBOK
"
16650,source/Alina Borovik.docx,"Data Modeling SQL
ETL
Python
"
16651,source/Alina Borovik.docx,"EMPLOYMENT HISTORY
"
16652,source/Alina Borovik.docx,"Jun 2019 — Dec 2020
Data Service Architect, Enterprise Architecture Division,
Sberbank
"
16653,source/Alina Borovik.docx,"Moscow, Russia
"
16654,source/Alina Borovik.docx,"Technologies: ARIS, PowerDesigner
As Data Service architect (Data Modeling group of processes, scope: Glossaries, Logical Data 
Model, Integrated Data Layer):
"
16655,source/Alina Borovik.docx,"•
Collecting and analyzing business needs for the data service, conducting interviews, 
existing process discovery, high-level cost-benefit analysis;
"
16656,source/Alina Borovik.docx,"•
Designing data service and related processes, ensuring reconciliation with other 
processes within the enterprise, creating development and roll-out roadmap;
"
16657,source/Alina Borovik.docx,"•
Leading Data Service development: creating technical requirements documentation for 
short-term (based on ready-to-use options) and long-term (ML-based modules for 
entity resolution and term mapping etc) service operation, initiating change requests for 
developers, approving results upon completion and piloting;
"
16658,source/Alina Borovik.docx,"•
Roll-out leading and promoting changes: leading data service working group, 
communicating updates to users, involved/affected teams and management; user 
training, ensuring fixes of issues and documentation availability during service roll-out 
and delivery;
"
16659,source/Alina Borovik.docx,"As Data Architect and Member of Logical Data Modeling Committee:
"
16660,source/Alina Borovik.docx,"•
Developing, adopting and reviewing Data Modeling and related standards (such are 
logical data modeling standard, name convention, allowed domains, Logical data model 
extension requirements);
"
16661,source/Alina Borovik.docx,"•
Reviewing logical data model changes (increments) and taking decisions wether to 
merge or reject an increment developed by data modelers.
"
16662,source/Alina Borovik.docx,"Apr 2018 — Nov 2020
Data Analyst / ETL Developer, Lab4U
Moscow, Russia
"
16663,source/Alina Borovik.docx,"Project: Reporting and BI system development (system of reference + BI tool for Executives and 
Marketing + customer service department operational reporting):
Technologies: PowerBI, SQL, Google Analytics, Python, 1C Bitrix
"
16664,source/Alina Borovik.docx,"•
Accomplished detailed business analysis and data sources analysis to ensure compliance 
"
16665,source/Alina Borovik.docx,"with internal needs and stakeholders requirements;
"
16666,source/Alina Borovik.docx,"•
Glossary composing, logical data modeling;
"
16667,source/Alina Borovik.docx,"•
Designing, developing, testing and maintaining of ETL and data integration procedures, 
data marts;
"
16668,source/Alina Borovik.docx,"•
Developing and maintaining executive dashboards.
"
16669,source/Alina Borovik.docx,"July 2015 — March 2018
Project manager, Bureau Veritas
Moscow, Russia
"
16670,source/Alina Borovik.docx,"•
Process discovery internal auditing, process audit report composing;
"
16671,source/Alina Borovik.docx,"•
Leading of IOT-based monitoring system project for Russian market: UI localization, 
business requirements analysis, creating technical requirement documents, solution 
piloting.
"
16672,source/Alina Borovik.docx,"Jan 2014 — June 2015
EHS Process Engineer, PepsiCo
Vladivostok, Russia
"
16673,source/Alina Borovik.docx,"•
Developing and optimizing EHS management processes in accordance with company 
EHS Policy and company standards;
"
16674,source/Alina Borovik.docx,"•
Conducting Risk assessment, root cause analysis, planning and implementing corrective 
actions and preventative measures for performance improvements;
"
16675,source/Alina Borovik.docx,"•
Team training, EHS-related changes promoting.
"
16676,source/Alina Borovik.docx,"June 2011 — May 2012
Private Banker, Alfa Bank
Irkutsk, Russia
"
16677,source/Alina Borovik.docx,"•
Business development, client portfolio enhancement;
"
16678,source/Alina Borovik.docx,"•
Financial services delivery and financial advisory for Private Banking Clients.
"
16679,source/Alina Borovik.docx,"EDUCATION HISTORY
"
16680,source/Alina Borovik.docx,"Sep 2017 — Nov 2021
Bachelor of Computer Science,
"
16681,source/Alina Borovik.docx,"Pacific State University
"
16682,source/Alina Borovik.docx,"Applied Informatics in Economics Khabarovsk, 
"
16683,source/Alina Borovik.docx,"Russia
"
16684,source/Alina Borovik.docx,"Feb 2018 — March 2019
Diploma course in Data Science
"
16685,source/Alina Borovik.docx,"Bauman Moscow State Technical 
University Training Centre
"
16686,source/Alina Borovik.docx,"Data Science and Applied Statistics 
"
16687,source/Alina Borovik.docx,"Moscow, Russia
"
16688,source/Alina Borovik.docx,"Sep 2005 — Jun 2009
Bachelor (unfinished, transferred),
"
16689,source/Alina Borovik.docx,"Pacific State University
"
16690,source/Alina Borovik.docx,"Civil Engineering 
"
16691,source/Alina Borovik.docx,"Khabarovsk, Russia
"
16692,source/Alina Borovik.docx,"LANGUAGES
English
Very good command
Russian
Native speaker
"
16693,source/Mark Pavlenko.pdf,"Mark Pavlenko
"
16694,source/Mark Pavlenko.pdf,"Senior Frontend Developer
"
16695,source/Mark Pavlenko.pdf,"Contacts
vitaaan@gmail.com
+7(968)000-52-96
"
16696,source/Mark Pavlenko.pdf,"@pavlenko_viaaay
"
16697,source/Mark Pavlenko.pdf,"pavlenko-aaaay
pavlaaaovit
"
16698,source/Mark Pavlenko.pdf,"Summary
I've been doing front-end development for over 6 years. During this time, I developed
SPA in React, made websites with SSR with Next.js, mobile applications in React Native
for iOS/Android.
"
16699,source/Mark Pavlenko.pdf,"My strong point is the love of order in any project. This applies not only to code, but
also to processes in teams. In the last two companies I combined development and
management of a team, the size of which reached 10 people.
"
16700,source/Mark Pavlenko.pdf,"Skills
JavaScript · TypeScript · React · Next.js · React Native · Redux.js · Webpack · D3.js
· Styled Components · Restyle · SAAS · Jest · React Testing Library · CSS · HTML ·
Node.js · Express.js · GraphQL · MySQL · Git
"
16701,source/Mark Pavlenko.pdf,"Work experience – 6 years 3 months
"
16702,source/Mark Pavlenko.pdf,"Senior Frontend Developer, Team Lead
PROFI – marketplace of specialties
Mar 2022 - Present · 1 year 6 months
"
16703,source/Mark Pavlenko.pdf,"For the last six months, I have been responsible for the development and implementation of UI-kit into
products. Previously, I developed the front-end of a mobile application and web version of Profi
"
16704,source/Mark Pavlenko.pdf,"✓ Speeded up the React Native application renderer by 30% after abandoning styled-components
✓
Rewrote part of the code from the monolith into a separate microservice on Node.js. This
"
16705,source/Mark Pavlenko.pdf,"made it possible to get rid of legacy PHP code and transfer part of the product to the target
architecture
✓ Wrote 3 articles on Habr, which helped increase awareness of the IT brand
"
16706,source/Mark Pavlenko.pdf,"Frontend Cluster Lead
SBER (PULSE) – digital environment for employees and managers
Nov 2018 - Feb 2022 · 3 years 4 months
"
16707,source/Mark Pavlenko.pdf,"I was a competency leader in the Analytics cluster and was responsible for the growth and development
of 10 front-end developers
"
16708,source/Mark Pavlenko.pdf,"✓ Launched 4 analytical products on the HR platform
✓ Delivered a presentation at the SberJS meetup with a topic about the D3.js charting library
✓ Created a comfortable atmosphere in the front-end community of the cluster
✓ Participated in the hiring of interns for the Sber Seasons internship and was a mentor for 4 interns
✓ Received an award for his contribution to the development of a mentoring culture at the bank
"
16709,source/Mark Pavlenko.pdf,"Frontend Developer
KRIKDESIGN – Web Studio
Aug 2017 - Oct 2018 · 1 years 3 months
"
16710,source/Mark Pavlenko.pdf,"I developed front-end parts for websites using React or native JavaScript
"
16711,source/Mark Pavlenko.pdf,"✓ Made 2 websites with complex animations for the Awwwards, which won as the “site of the day”
"
16712,source/Mark Pavlenko.pdf,"✓ Created several interactive promotional landing pages for the IKEA website
"
16713,source/Mark Pavlenko.pdf,"Additional information
"
16714,source/Mark Pavlenko.pdf,"Education 2017 - 2021
Moscow Automobile and Road Construction
University (MADI)
Bachelor's degree, Information Technology
"
16715,source/Mark Pavlenko.pdf,"Publications
- Restyle as a new standard for creating UI in React Native
- Building Complex Forms with Ease: A Comprehensive Guide
- Advanced Data Visualization using D3.js and React
- Creating Your Own CLI for React: Tips and Tricks
- Creating Dynamic Sticky Effects for React Slider
-
Implementing Free Particle Movement with
"
16716,source/Mark Pavlenko.pdf,"ReactJS Languages Russian – Native | English – Proficient
"
16717,source/Budniak Ivan.pdf,"• 
"
16718,source/Budniak Ivan.pdf,"Budniak Ivan 
Software Engineer with significant competitive programming experience 
 
"
16719,source/Budniak Ivan.pdf,"Email: budniakkkk@yandex.by  
Mobile: +375 (44) 543-11-11 
 
"
16720,source/Budniak Ivan.pdf," 
"
16721,source/Budniak Ivan.pdf,"EDUCATION 
"
16722,source/Budniak Ivan.pdf,"Belarusian State University in Informatics and Radioelectronics 
Minsk, Belarus 
"
16723,source/Budniak Ivan.pdf,"Bachelor’s degree in Computer Science 
September 2017 — Expected 2021 
"
16724,source/Budniak Ivan.pdf,"Yandex School of Data Analysis 
Moscow, Russia 
"
16725,source/Budniak Ivan.pdf,"Master’s level program, Machine Learning development track 
September 2019 — Expected 2021 
"
16726,source/Budniak Ivan.pdf,"Relevant courses: Probability and Statistics, Machine Learning, Computer Vision, Natural Language Processing, Deep 
Learning, Reinforcement Learning, Python, C++, GoLang, Algorithms and Data Structures, BigData, Parallel and 
Distributed Computations 
"
16727,source/Budniak Ivan.pdf," 
"
16728,source/Budniak Ivan.pdf,"WORK   EXPERIENCE 
"
16729,source/Budniak Ivan.pdf,"Deltix (Bought by EPAM Systems at january 2020) 
Minsk, Belarus 
"
16730,source/Budniak Ivan.pdf,"Software Engineer 
August 2018 – Present 
"
16731,source/Budniak Ivan.pdf,"Developed a system for integration with various top crypto-custodies for crypto-trading platform used by hundreds of 
thousands. 
"
16732,source/Budniak Ivan.pdf,"• Created a service for secure interacting with any Ethereum tokens. 
• Fixed major issues of crypto-trading platform high loaded module. 
• Built a tool for crypto-trading platform stress-testing. 
"
16733,source/Budniak Ivan.pdf,"Mogilev State Regional Institute for Education Development 
Mogilev, Belarus 
"
16734,source/Budniak Ivan.pdf,"Competitive Programming Mentor 
Febrary, March 2018&2019 
"
16735,source/Budniak Ivan.pdf,"• Preparing students of Mogilev region for the National Olympiad in Informatics. Many of them were awarded. 
"
16736,source/Budniak Ivan.pdf,"PROJECTS 
"
16737,source/Budniak Ivan.pdf,"JPEG decoder: Baseline sequential mode of JPEG decoder, written in C++ using OOP and various algorithms such as 
Huffman decoding. 
Ukrainian-Russian translator: Written in Python with Sklearn library, using embedding space mapping with optimal 
transformation derived from SVD decomposition. Used public dataset with 1M word pairs. 
LightBulbChan: Student assistant in the form of a multifunctional telegram bot. Uses various APIs to help students 
prepare for classes. 
"
16738,source/Budniak Ivan.pdf,"AWARDS 
"
16739,source/Budniak Ivan.pdf,"ACM ICPC, NEERC ICPC 
Saint-Petersburg, Russia — December, 2017 
"
16740,source/Budniak Ivan.pdf,"• Competition in sports programming among teams of universities of the North Eastern Europe, Western Subregion 
• III degree award (2017, 81/244 place) 
"
16741,source/Budniak Ivan.pdf,"ACM ICPC, Belarus and Baltics Regional Contest 
Minsk, Belarus — October, 2017&2018 
"
16742,source/Budniak Ivan.pdf,"• Competition in sports programming among teams of universities of the North Eastern Europe, Western Subregion 
• III degree award (2019, 18/57 place) 
• II degree award (2017, 8/57 place) 
"
16743,source/Budniak Ivan.pdf,"Individual Olympiad in Informatics and Programming 
Saint-Petersburg, Russia — March 2017 
"
16744,source/Budniak Ivan.pdf,"• Programming competition among schoolchildren of Belarus, Russia and Kazakhstan 
• I degree award (10/180 place) 
"
16745,source/Budniak Ivan.pdf,"Belarusian National Olympiad in Informatics 
Belarus — March 2015&2016&2017 
"
16746,source/Budniak Ivan.pdf,"• II degree award (2017, 12/123 place) 
• II degree award (2016, 12/120 place) 
• III degree award (2015, 39/118 place) 
"
16747,source/Budniak Ivan.pdf,"Top 3% on Codeforces — ednotdead 
Top 2% on Hackerrank — Ed_Os 
"
16748,source/Budniak Ivan.pdf,"• 
"
16749,source/Budniak Ivan.pdf,"• 
"
16750,source/Budniak Ivan.pdf,"• 
"
16751,source/Budniak Ivan.pdf,"• 
"
16752,source/Gregoriy Alexeev.pdf,"Gregoriy Alexeev
"
16753,source/Gregoriy Alexeev.pdf,"UI/UX Designer
"
16754,source/Gregoriy Alexeev.pdf,"Tbilisi, Georgia / +995 000-637-978 / greg.alexeev@me.com / Portfolio
"
16755,source/Gregoriy Alexeev.pdf,"A hard-working, motivated, and experienced UI/UX Designer with a
"
16756,source/Gregoriy Alexeev.pdf,"strong online portfolio, attention to detail, and excellent management
"
16757,source/Gregoriy Alexeev.pdf,"skills. Quick learner with modern ideas and a huge knowledge base.
"
16758,source/Gregoriy Alexeev.pdf,"Having excellent communication skills I can easily fit a
"
16759,source/Gregoriy Alexeev.pdf,"cross-functional Agile team. Always ready to perform tasks quickly in
"
16760,source/Gregoriy Alexeev.pdf,"different fields like design, development, management, or analyses.
"
16761,source/Gregoriy Alexeev.pdf,"EXPERIENCE
"
16762,source/Gregoriy Alexeev.pdf,"Senior UI/UX Designer Apr 2021 - Present
"
16763,source/Gregoriy Alexeev.pdf,"Dualboot Partners, Charlotte, NC (Remote)
"
16764,source/Gregoriy Alexeev.pdf,"Designing complex user flows, researching personas, organizing design
"
16765,source/Gregoriy Alexeev.pdf,"systems for Web and Mobile (iOS, Android) applications and SaaS.
"
16766,source/Gregoriy Alexeev.pdf,"Communicating with product directors, stakeholders, and distributed
"
16767,source/Gregoriy Alexeev.pdf,"developers team. Improving design management process and mentoring
"
16768,source/Gregoriy Alexeev.pdf,"junior designers.
"
16769,source/Gregoriy Alexeev.pdf,"Senior UI/UX Designer Feb 2019 - Mar 2021
"
16770,source/Gregoriy Alexeev.pdf,"Coursly.co, Moscow
"
16771,source/Gregoriy Alexeev.pdf,"Designed an online LMS using the best practices of Interface Design in
"
16772,source/Gregoriy Alexeev.pdf,"6 months by implementing a system based on reusable components.
"
16773,source/Gregoriy Alexeev.pdf,"Increased the number of trial users by 400% with A/B testing.
"
16774,source/Gregoriy Alexeev.pdf,"Designed onboarding process and decreased a load of support center by
"
16775,source/Gregoriy Alexeev.pdf,"270%
"
16776,source/Gregoriy Alexeev.pdf,"Senior UI/UX Designer, Team Lead Sep 2016 - Feb 2019
"
16777,source/Gregoriy Alexeev.pdf,"#VA, Moscow
"
16778,source/Gregoriy Alexeev.pdf,"Managed a team of designers and developers. Worked with customers’
"
16779,source/Gregoriy Alexeev.pdf,"requirements. Designed over 35 projects based on user interviews,
"
16780,source/Gregoriy Alexeev.pdf,"prototypes and user flows. $60,000 turnover of the company in its first
"
16781,source/Gregoriy Alexeev.pdf,"year on the web design market. Built online courses with over 300
"
16782,source/Gregoriy Alexeev.pdf,"students who completed the course on UI/UX design.
"
16783,source/Gregoriy Alexeev.pdf,"Senior Web Developer Jun 2016 - May 2018
"
16784,source/Gregoriy Alexeev.pdf,"TechProMarketing, Boston, MA (Remote)
"
16785,source/Gregoriy Alexeev.pdf,"Full Stack Web Development. Landing Page and eCommerce websites design
"
16786,source/Gregoriy Alexeev.pdf,"mockups integration. SEO optimization and API integration of Stripe and
"
16787,source/Gregoriy Alexeev.pdf,"Plaid Processing. Built continuous integration (CI) for WordPress-based
"
16788,source/Gregoriy Alexeev.pdf,"websites. Managed a team of 7 developers. Writing tech specs and
"
16789,source/Gregoriy Alexeev.pdf,"documentation.
"
16790,source/Gregoriy Alexeev.pdf,"Junior UI Designer Jun 2014 - Dec 2014
"
16791,source/Gregoriy Alexeev.pdf,"AIC, Moscow
"
16792,source/Gregoriy Alexeev.pdf,"Web and mobile data-driven design (iOS & Android) of banking dashboards
"
16793,source/Gregoriy Alexeev.pdf,"and financial services. Collaborating with the team to build a complex
"
16794,source/Gregoriy Alexeev.pdf,"application design and usability testing. Designed system for the most
"
16795,source/Gregoriy Alexeev.pdf,"popular Government Services Portal with 1,6M DAU.
"
16796,source/Gregoriy Alexeev.pdf,"EDUCATION
"
16797,source/Gregoriy Alexeev.pdf,"Bachelor's degree - IT Management Sep 2015 - May 2019
"
16798,source/Gregoriy Alexeev.pdf,"Plekhanov Russian University of Economics, Moscow
"
16799,source/Gregoriy Alexeev.pdf,"Agile methodologies in IT Management and Web Technology.
"
16800,source/Gregoriy Alexeev.pdf,"SKILLS
"
16801,source/Gregoriy Alexeev.pdf,"Expert in: UI/UX Design, Interaction Design, Adobe XD, Sketch, Web
"
16802,source/Gregoriy Alexeev.pdf,"Design, Workflows, InvisionApp, Wireframes Design, Figma, Visual
"
16803,source/Gregoriy Alexeev.pdf,"Design, Zoom, Slack, SaaS, Dashboards, Product Design, HTML5, CSS3
"
16804,source/Gregoriy Alexeev.pdf,"Intermediate in: Adobe Photoshop, WordPress, JavaScript, User Research,
"
16805,source/Gregoriy Alexeev.pdf,"Customer Journey Map, Design Team Management, Prototyping & User
"
16806,source/Gregoriy Alexeev.pdf,"Stories, Problem Solving skills, Other design tools, Laravel, Vue.js,
"
16807,source/Gregoriy Alexeev.pdf,"Video Editing, Onboarding design, Moqups, Zeplin, eCommerce Design
"
16808,source/Gregoriy Alexeev.pdf,"Basic In: Python, SQL, SEO, Motion Graphics, Graphic Design
"
16809,source/Gregoriy Alexeev.pdf,"ONLINE PORTFOLIO
"
16810,source/Gregoriy Alexeev.pdf,"Check out my portfolio website with all the available projects,
"
16811,source/Gregoriy Alexeev.pdf,"case studies, and other activities. Please note, that some of the
"
16812,source/Gregoriy Alexeev.pdf,"marked projects are not for public sharing.
"
16813,source/Karen Kekov.pdf,"Karen Kekov 
"
16814,source/Karen Kekov.pdf,"SoFTWARE ENGiNEER 
Ponyville, Equestria  
"
16815,source/Karen Kekov.pdf," 
Summary   
 
"
16816,source/Karen Kekov.pdf,"Software Engineer with 4+ years of experience in building distributed back‑end systems and infrastructure automation. Mainly focusing on the 
design and development side of things, but also dabbling in SRE/DevOps practices. I enjoy solving challenging problems (be they of a technical 
nature or otherwise) and learning new tools and technologies. 
 
Work Experience   
 
"
16817,source/Karen Kekov.pdf,"Super Expert IT Solutions GmbH. 
City, Country 
"
16818,source/Karen Kekov.pdf,"SoFTWARE ENGiNEER 
Mar. 2019 ‑ Present 
"
16819,source/Karen Kekov.pdf,"• Designed a service‑oriented (a.k.a. microservice) architecture for the company’s flagship Customer Loyalty SaaS product, allowing for horizontal 
"
16820,source/Karen Kekov.pdf,"scalability, increasing development velocity and drastically reducing the operational complexity (as compared to a similar legacy application). 
"
16821,source/Karen Kekov.pdf,"• Implemented several core API microservices in a cloud‑native fashion (leveraging Kubernetes abstractions) in Kotlin, Java and Python. 
"
16822,source/Karen Kekov.pdf,"• Provisioned an easily manageable cloud infrastructure, utilizing Kubernetes on AWS. 
"
16823,source/Karen Kekov.pdf,"• Built fully automated CI/CD pipelines on Bitbucket Pipelines, allowing to quickly build and containerize applications (images being stored in 
"
16824,source/Karen Kekov.pdf,"ECR) and deploy changes to a Kubernetes cluster in AWS. 
"
16825,source/Karen Kekov.pdf,"• Deployed a centralized monitoring and logging environment (Prometheus, Victoria Metrics, Grafana, Linkerd, CloudWatch, Coralogix), allowing 
"
16826,source/Karen Kekov.pdf,"to easily monitor the system and locate problematic areas in case an incident occurs. 
"
16827,source/Karen Kekov.pdf,"• Facilitated continuous learning in the team, introducing Kotlin (for writing small and clean server apps), Python (for writing automation scripts 
"
16828,source/Karen Kekov.pdf,"and performing load tests) and Kubernetes (for building flexible cloud‑native distributed systems). 
"
16829,source/Karen Kekov.pdf,"• Facilitated cooperation in the team, making sure everyone sees the end‑goal of the system and not just the piece they are working on, and 
"
16830,source/Karen Kekov.pdf,"resolving conflicts between team members. 
"
16831,source/Karen Kekov.pdf,"Depressing Bank Ltd. 
City, Country 
"
16832,source/Karen Kekov.pdf,"SoFTWARE ENGiNEER 
"
16833,source/Karen Kekov.pdf,"• Implemented a server application for off‑line processing of financial data. 
"
16834,source/Karen Kekov.pdf,"Oct. 2017 ‑ Feb. 2019 
"
16835,source/Karen Kekov.pdf,"• Implemented CI/CD pipelines using Jenkins, and helped the operations team to automate their side (development and production environment 
"
16836,source/Karen Kekov.pdf,"were completely separate, so the ops team had their own automation). 
"
16837,source/Karen Kekov.pdf,"• Performed a major refactoring of a legacy Java application, rewriting most of it into Kotlin. 
"
16838,source/Karen Kekov.pdf,"Cool Startup Ltd. 
City, Country 
"
16839,source/Karen Kekov.pdf,"JAVA DEVELOPER 
Feb. 2017 ‑ Oct. 2017 
"
16840,source/Karen Kekov.pdf,"• Implemented several microservices in Java for storing and retrieving image data and routing it to processing (text recognition) services, using 
"
16841,source/Karen Kekov.pdf,"MongoDB, RabbitMQ, S3 and ElasticSearch. 
"
16842,source/Karen Kekov.pdf,"• Implemented integration and unit tests, performed load testing using JMeter. 
 
Skills   
 
"
16843,source/Karen Kekov.pdf,"• Programming Languages: Java, Kotlin, Python, basic knowledge of Rust 
"
16844,source/Karen Kekov.pdf,"• Databases/Message queues/etc.: SQL, NoSQL, RabbitMQ, Redis 
"
16845,source/Karen Kekov.pdf,"• Infrastructure‑related: AWS cloud services, Kubernetes 
"
16846,source/Karen Kekov.pdf,"• Other: Algorithms/Data structures, Linux, Docker, Git 
Certifications   
 
"
16847,source/Karen Kekov.pdf,"AWS Certified Developer Associate 
"
16848,source/Karen Kekov.pdf,"CLOUD PLATFORM CERTiFICATiON 
"
16849,source/Karen Kekov.pdf,"• Learned to leverage the cloud services provided by AWS. 
"
16850,source/Karen Kekov.pdf,"Jan. 2019 
"
16851,source/Karen Kekov.pdf," 
Education   
 
"
16852,source/Karen Kekov.pdf,"Some University 
City, Country 
"
16853,source/Karen Kekov.pdf,"B.S. iN COMPUTER SCiENCE 
Sep. 2017 ‑ (expected) Jul. 2021 
"
16854,source/Karen Kekov.pdf," 
"
16855,source/Karen Kekov.pdf,"Another University 
City, Country 
"
16856,source/Karen Kekov.pdf,"B.A. iN JAPANESE LANGUAGE 
Sep. 2011 ‑ Jul. 2015 
"
16857,source/Karen Kekov.pdf," 
 
 
"
16858,source/Karen Kekov.pdf,"OCTOBER 29, 2020 
LOL KEKOV · RÉSUMÉ 
1 
"
16859,source/Danila Shiga.pdf,"Danila Shiga 
"
16860,source/Danila Shiga.pdf,"insaaaaaa@protonmail.com  
"
16861,source/Danila Shiga.pdf,"SUMMARY 
"
16862,source/Danila Shiga.pdf," 
 
"
16863,source/Danila Shiga.pdf,"Larnaca,   Cyprus 
"
16864,source/Danila Shiga.pdf,"+357 94  000  651 
"
16865,source/Danila Shiga.pdf," 
"
16866,source/Danila Shiga.pdf," 
"
16867,source/Danila Shiga.pdf,"Experienced DevOps Engineer in both corporate-level  projects and small-scale  start-ups. Nine years 
of experience in IT roles, such as DevOps and Network Engineer, including Lead responsibilities 
"
16868,source/Danila Shiga.pdf,"• Tools: Configuration control and provisioning of Linux VMs via Ansible, Puppet, Terraform. CI/CD with Gitlab CI, 
"
16869,source/Danila Shiga.pdf,"Azure Pipelines, Jenkins, Helm. Monitoring and logging through Zabbix, Grafana, Prometheus,  ELK/EFK, Graylog. 
Routine automation using Bash, Python, knowledge in Java and its runtime, PHP, Go, C#, C++. 
"
16870,source/Danila Shiga.pdf,"• Operations: Leading a team of System Engineers ensuring smooth operation and collaboration  between departments, 
"
16871,source/Danila Shiga.pdf,"while also performing duties of Scrum master. Consulting Product owner and stakeholders on IT operations. 
"
16872,source/Danila Shiga.pdf,"• Infrastructure: Various cloud providers like AWS, GCP, Azure, Swisscom, including Kubernetes services. On-prem 
"
16873,source/Danila Shiga.pdf,"virtualization VMware, Hyper-V, KVM. Planning and implementation of solution architecture from day one till the finish. 
"
16874,source/Danila Shiga.pdf,"• Advanced Knowledge: Code culture, Gitflow, CI/CD, Team motivation, Process automation, Technical assessment, 
"
16875,source/Danila Shiga.pdf,"Hardware, Self-learning, Technology research. 
"
16876,source/Danila Shiga.pdf,"PROFESSIONAL EXPERIENCE 
"
16877,source/Danila Shiga.pdf," 
"
16878,source/Danila Shiga.pdf,"Senior DevOps Engineer 
Conzylum 
October 2022 – Current 
"
16879,source/Danila Shiga.pdf,"• Learned the project in 2 weeks, replacing retiring engineer. Made some meaningful impact and took integration lead in 
"
16880,source/Danila Shiga.pdf,"1,5 months. Delivered full automation of project processes in 6 months. Currently tinkering the app for external clients. 
"
16881,source/Danila Shiga.pdf,"• Defined project integration roadmap based on business goals. Improved CI/CD pipelines eliminating human interaction. 
"
16882,source/Danila Shiga.pdf,"• Converted development process to Gitflow increasing development speed ~3 times and removing feature congestion. 
"
16883,source/Danila Shiga.pdf,"• Implemented  elaborate monitoring that enabled rapid feedback and planning based on custom metrics. 
"
16884,source/Danila Shiga.pdf,"• Led a team of two DevOps Engineers, a DBA and a QA Engineer. Wrote comprehensive work items that require no questions 
"
16885,source/Danila Shiga.pdf,"DevOps Engineer 
AYA Group 
March 2022 – September 2022 
"
16886,source/Danila Shiga.pdf,"• Rewrote CI/CD pipelines to ease scalability and introduce new features that reduced deployment time about 4 times. 
"
16887,source/Danila Shiga.pdf,"• Integrated Vault secret storage securing sensitive data while moving it from SaaS solutions to on-prem. 
"
16888,source/Danila Shiga.pdf,"• Developed crucial version control metrics for over 80 instances that streamlined processes for Dev and QA teams. 
"
16889,source/Danila Shiga.pdf,"• Helped the team to recover from failures providing insights into potential causes that shorten regression analysis. 
"
16890,source/Danila Shiga.pdf,"DevOps Engineer 
ClearOps 
September 2021 – February 2022 
"
16891,source/Danila Shiga.pdf,"• Wrote custom Ansible roles and modules enabling features that are not present on the market. 
"
16892,source/Danila Shiga.pdf,"• Automated Bitbucket pipelines through API to catch up with other solutions and even provide new functionality. 
"
16893,source/Danila Shiga.pdf,"• Implemented Ansible role testing with molecule saving DevOps time and eliminating human factor. 
"
16894,source/Danila Shiga.pdf,"DevOps Engineer 
Bank of Saint-Petersburg 
June  2021 – September 2021 
"
16895,source/Danila Shiga.pdf,"• Learned the project in 2 weeks replacing current engineer on their vacation. 
"
16896,source/Danila Shiga.pdf,"• Automated routine with shell scripts that reduced L3 support response time 2-3 times. 
"
16897,source/Danila Shiga.pdf,"• Rewrote Zabbix web check pre-processing eliminating metrics delay that is crucial for banking sector. 
"
16898,source/Danila Shiga.pdf,"• Improved Jenkins groovy scripts enabling deploy scalability  and overall stability. 
"
16899,source/Danila Shiga.pdf,"• Leveraged communication with QA team making testing process several times faster that improved code quality. 
"
16900,source/Danila Shiga.pdf,"PREVIOUS PROFESSIONAL EXPERIENCE 
February 2014 – June 2021 
"
16901,source/Danila Shiga.pdf," 
"
16902,source/Danila Shiga.pdf,"• Took a variety of roles like Lead Network Engineer, System Administrator and managed a team of Engineers. 
"
16903,source/Danila Shiga.pdf,"Worked for both international giants and small local businesses. 
"
16904,source/Danila Shiga.pdf,"• Developed security policies that hardened corporate network making it impossible to attack it with malicious device. 
"
16905,source/Danila Shiga.pdf,"• Interviewed potential candidates for IT department with new screening policies that ended up saving money by less 
"
16906,source/Danila Shiga.pdf,"hire but more quality professionals. This also increased average employment duration from ~1 year to 2-3 years. 
"
16907,source/Danila Shiga.pdf,"• Mentored freshmen colleagues to earn a status of person of trust. One of them inherited my position as I quit. 
"
16908,source/Danila Shiga.pdf,"• Wrote a PC inventory tool in C# that enabled IT department to cut costs due to more precise hardware ordering. 
"
16909,source/Danila Shiga.pdf,"• Designed 8 new network branches while maintaining around 25 networks in total – approx. 2500 PCs. 
"
16910,source/Danila Shiga.pdf,"• Wrote documentation for a square mile enterprise territory of network hardware – about 120 devices like switches, routers 
"
16911,source/Danila Shiga.pdf,"EDUCATION 
"
16912,source/Danila Shiga.pdf," 
"
16913,source/Danila Shiga.pdf,"A.A.S. in Computer Science and Engineering  – Krasnodar College of Electronic Instrument Design, 2013 
"
16914,source/Vera Pugacheva.docx,"linkedin.com/in/avrsa-
pugacheva (+36) 2000077 
9923
"
16915,source/Vera Pugacheva.docx,"Vera 
Pugacheva
"
16916,source/Vera Pugacheva.docx,"Senior Data Scientist
"
16917,source/Vera Pugacheva.docx,"aaaaapugacheva@ya.ru
"
16918,source/Vera Pugacheva.docx,"Data Scientist with 5+ years of experience in Machine Learning development for various projects in 
banking, telecommunication, and marketing areas. I have a proven track record of leading and managing a 
team of 4 professionals, including Data Scientists and Data Engineers. I possess a strong ability to 
communicate effectively with both business stakeholders and development teams, honed through my 
experience working as an ML engineer in consulting. My current responsibilities include leading a team of 4 
individuals, which comprises Data Scientists and Data Engineers. My role encompasses task assignment, 
prioritization, conducting code reviews, and establishing streamlined intra-team processes.
"
16919,source/Vera Pugacheva.docx,"SKILLS
"
16920,source/Vera Pugacheva.docx,"Programming
Python, R, SQL, Git, Bash, Apache Airflow
"
16921,source/Vera Pugacheva.docx,"Quantitative Research
Machine Learning, Mathematical statistics, Mathematical optimization, A/B testing, 
hypothesis testing Domain Knowledge
Pricing optimization, Marketing optimization, Supply Chain 
Finance, Next Best Action, Credit Risks Databases
HDFS, Google bigQuery, PostgreSQL, Oracle 
Database, PL/SQL
Data science toolkits
Pandas, Polars, Scikit-learn, Tensorflow, Keras, PyTorch, Numpy, Catboost
"
16922,source/Vera Pugacheva.docx,"Visualization Tools
Plotly, matplotlib, Seaborn, basic RShiny
"
16923,source/Vera Pugacheva.docx,"HIGHLIGHTED TECHNICAL EXPERIENCE
"
16924,source/Vera Pugacheva.docx,"Senior Data Scientist -> Data Science Team Lead / Online banking marketplace
Nov 2021 — 
Present
• Built an anti-fraud ML model tailored for detecting spurious clients reviews, subsequently packaging 
it as a service. The implementation of this pipeline within our business processes resulted in 20% 
reduction in the workload of the moderation team.
"
16925,source/Vera Pugacheva.docx,"• Implemented a Machine Learning approach for managing a Google Ads budget. As a result, costs for 
treated traffic streams were reduced by up to 15% while the conversion rate remained the same.
"
16926,source/Vera Pugacheva.docx,"• Developed a framework for selecting the best retention marketing channel, leading to an increase in 
overall conversion rates by 10% and cost savings of 20%.
"
16927,source/Vera Pugacheva.docx,"Data Scientist / Glowbyte Consulting LLC
Jan 2019 — Oct 
2021
• Project: Implemented Value-Based Pricing framework for credit offering in AlfaBank (Russian Bank 
TOP-10). The solution consisted of ML models and decision-making engine, and was required to 
cover over 3 million loan offers monthly.
"
16928,source/Vera Pugacheva.docx,"• Project: Developed Next Best Action framework for managing both revenue and risks of personal 
marketing communications in Megafon (a Russian major telecommunication company). Covering 
marketing campaigns above 17 million monthly users. The treatment group turned out to be 20-30% 
more profitable than the control group.
"
16929,source/Vera Pugacheva.docx,"• Project: Built a model for credit risk estimating based on the Supply Chain Finance (SCF) approach 
for Otkritie Bank. The implementation provided an assessment of the large and medium-sized 
businesses.
"
16930,source/Vera Pugacheva.docx,"• Project: Developed an Exposure At Default (EAD) risk model.
"
16931,source/Vera Pugacheva.docx,"Junior Data Scientist / Dentsu Aegis Network
Aug 2018 — Jan 
2019
Developed 5+ forecasting systems of seasonal sales for advertisement holdings.
EDUCATION
"
16932,source/Vera Pugacheva.docx,"Specialist Degree in Computer Science, National Research Nuclear University MEPHI - Moscow Engineering Physics 
"
16933,source/Vera Pugacheva.docx,"Institute, Russia Additional course: Machine learning and data analysis, MIPT & Yandex at Coursera.org
"
16934,source/Vera Pugacheva.docx,"PUBLICATIONS
"
16935,source/Vera Pugacheva.docx,"ENG: ML&DS shades of Credit Risk Management. Part I.
RU: ML&DS shades of Credit Risk Management. Exposure 
at default RU: Machine learning in banking pricing. VBP
"
16936,source/Vera Pugacheva.docx,"PROFESSIONAL ACTIVITIES
"
16937,source/Vera Pugacheva.docx,"• Conducting public talks about the business application of Machine Learning.
• Engaged in 1:1 mentorship with a junior teammate, helping develop technical skills such as SQL and 
Python, as well as systems design and OOP.
"
16938,source/Vera Pugacheva.docx,"• Developed library and visualization tool for building ML models and evaluating the impact of manually 
quantized predictors. Launching and leading this project with junior and mid-level coworkers as a 
side-project that eventually became part of the company-wide ModelOps solution.
"
16939,source/Nick Vinogradov.docx,"Nick Vinogradov
Preferred role: software engineer
"
16940,source/Nick Vinogradov.docx,"E-mail
: nickkk.vin@gmail.com 
"
16941,source/Nick Vinogradov.docx,"Telephone : +4000958077 (DK) 
Education : M.Eng. in electronics 
(2012) Citizenship : Russia
Residence : Copenhagen, Denmark
"
16942,source/Nick Vinogradov.docx,"Skill Set
● Modern C++, GCC/MSVC, Python
● Machine learning: NumPy, Pandas, Keras, TensorFlow, xgboost
● Embedded Programming: C for ARM,
● FPGA Design - Vivado, Vitis, HLS,
● RTL languages: SystemVerilog, Verilog 95/2000, VHDL-93/2008, Chisel, HLS, 
OpenCL
"
16943,source/Nick Vinogradov.docx,"● Misc: CMake, Make, bash, TCL. Maintenance of the Azure, Redmine, GitLab, 
Jenkins. Linux and Windows system administration
"
16944,source/Nick Vinogradov.docx,"Work Experience, 10 years of experience in complex digital system 
design
"
16945,source/Nick Vinogradov.docx,"Alipes A/S, Denmark
Quantitative Developer Sep.2020-till now
"
16946,source/Nick Vinogradov.docx,"● Cross-platform software development in modern C++ for ﬁnancial 
applications
"
16947,source/Nick Vinogradov.docx,"● Design FPGA computational IP cores in Vitis and Vivado HLS
● Implemented ANN and DecisionTrees ML Models for low-latency trading
"
16948,source/Nick Vinogradov.docx,"Widex A/S, Denmark
IC Specialist, Digital Design Jan2019 — Aug.2020 (2 years)
"
16949,source/Nick Vinogradov.docx,"● Design and implementation of ultra-low-power DSP blocks for next-
generation hearing aid in VHDL for ASIC
"
16950,source/Nick Vinogradov.docx,"● Resource, space and power optimization
● Collaboration with IC Phy and DSP teams
● Providing GUI and console utilities for daily routine operation - viewers 
and report generation
"
16951,source/Nick Vinogradov.docx,"● Design by FDA and other medical device's certiﬁcation guidelines
"
16952,source/Nick Vinogradov.docx,"Cobham Satcom (ex. Thrane & Thrane), Denmark
FPGA Development Engineer in Aviator S team March 2018 — December 2018 (10 
months)
"
16953,source/Nick Vinogradov.docx,"● Design, support and maintain RTL IP Cores (AXI interface) for Zynq SoC for 
"
16954,source/Nick Vinogradov.docx,"Aviator S Smart Aircraft project
"
16955,source/Nick Vinogradov.docx,"● Safety and security requirements writing and implementing, design test 
cases and speciﬁcation for commercial airlines avionics certiﬁcation
"
16956,source/Nick Vinogradov.docx,"● Veriﬁcation of generated netlist with TCL, generate documents 
speciﬁcation with Python and Latex, memory map generation and 
support with Python
"
16957,source/Nick Vinogradov.docx,"Huawei Technologies, Russian Research Center, Moscow
"
16958,source/Nick Vinogradov.docx,"Algorithm researcher in Nonlinear sector September 2015 —January 2018 (2.5 
years)
● Matlab design of DSP algorithms - ﬂoating and ﬁxed point
● FPGA implementation of adaptive algorithms
● Zynq and Microblaze based SoCs RTL development
● SoC software development in Xilinx SDK - LWIP, Linux, hardware drivers
Key project: polyphase DPD for wideband signals. Matlab ﬁx-point design of 
nonlinear algorithms, SystemVerilog code development, veriﬁcation 
system, platform research with 4G base station PA.
"
16959,source/Nick Vinogradov.docx,"Awards: Outstanding Contractor award 2016 of Russian R&D 
Center Member of Outstanding Team Award 2017
"
16960,source/Nick Vinogradov.docx,"Digital Solutions, SPE, LLC Moscow
"
16961,source/Nick Vinogradov.docx,"FPGA designer September 2012 — September 2015 (3 years)
"
16962,source/Nick Vinogradov.docx,"● Full-stack electronic design from small IP cores to device production.
● Network trafﬁc processing and analyzing system, DPI. IP cores design, 
CPU and PCIe interfaces, Ethernet, IP, TCP/UDP protocols in RTL, 
memory.
"
16963,source/Nick Vinogradov.docx,"● Reed Solomon, Viterbi and LDPC codecs implementation for ASIC 
and FPGA. Matlab modelling, architecture design, RTL 
implementation and veriﬁcation.
"
16964,source/Nick Vinogradov.docx,"● Flash and DDR memory-based systems - FIFO, stack, hash-tables, binary 
trees.
"
16965,source/Nick Vinogradov.docx,"● PCB design - 10+ boards design. Capture design and layout 
designer communication. Altium component database 
development and support.
"
16966,source/Nick Vinogradov.docx,"Research Institute of Precision Instruments, Moscow,
"
16967,source/Nick Vinogradov.docx,"FPGA designer February 2010 — September 2012 (2 years 8 months)
"
16968,source/Nick Vinogradov.docx,"● R&D for radio channel coding system. QAM and QPSK through AWGN and 
multipath channel systems modelling for wireless communication.
"
16969,source/Nick Vinogradov.docx,"● Matlab's implementation of DSP algorithms and ECC codes - Reed Solomon 
and Viterbi. Resource and parameters optimization.
"
16970,source/Nick Vinogradov.docx,"● RTL implementation and veriﬁcation for space grade FPGA’s
● MIL-1553 IP core design and implementation.
● Concatenation codes research took the prize “Youth and future of aviation 
and space exploration 2012” of Russian Aerospace Agency 
http://mai.ru/conf/mforum/ﬁles/Pobeditely_2012.pdf
"
16971,source/Nick Vinogradov.docx,"Research Institute of Space Instrument Moscow,
Junior developer June 2009 — October 2009 5 
months
"
16972,source/Nick Vinogradov.docx,"● C++ algorithm Carrier-Phase measurements for NAVSTAR GPS and GLONASS.
"
16973,source/Nick Vinogradov.docx,"Education
M.Eng Electronics Engineering.
Moscow Aviation Institute (National Research University) ""MAI"" 2006-2012
● Faculty of Avionic systems, Communications with Mobile Objects. Specialist, 
Master of Engineering equivalent, 5.5 years
"
16974,source/Nick Vinogradov.docx,"● Advanced specialization, 2 years, Information technology in electronic design - 
DSP, ARM, PCB design, FPGA, microcontrollers, ampliﬁers. Certiﬁcated, with 
honours
"
16975,source/Nick Vinogradov.docx,"Specialization “Advanced Machine Learning”[cert] by NRE Higher School of Economics
"
16976,source/Nick Vinogradov.docx,"○ Introduction to Machine learning 100%
○ Introduction to deep learning. 98.2% With Honor
○ Bayesian Methods for Machine Learning With Honor
○ Practical Reinforcement Learning, With Honors
○ Addressing Large Hadron Collider Challenges by Machine Learning
○ How to Win a Data Science Competition
○ Natural Language Processing
○ Deep Learning in Computer vision
"
16977,source/Nick Vinogradov.docx,"Extra Courses
● Advanced C++ Programming
● Introduction to OpenCL on FPGAs
● Databases and SQL for Data Science with Python
"
16978,source/Nick Vinogradov.docx,"● Circuits & Electronics: MITx 6.002x MITx
"
16979,source/Худорожков Алексей.docx,"Globus it is about a strong technical expertise in mobile development and innovative IT solutions 
in the development of websites.
Globus cooperates with the largest Russian and foreign customers for more than 9 years.
____________________________________________________________________________
"
16980,source/Худорожков Алексей.docx,"Худорожков Алексей
Системный аналитик
"
16981,source/Худорожков Алексей.docx,"25 лет
Саратов
89100068965
"
16982,source/Худорожков Алексей.docx,"ОПЫТ РАБОТЫ И ГОТОВЫЕ ПРОЕКТЫ 
________________________________________________________________
"
16983,source/Худорожков Алексей.docx,"Август 2022 — по настоящее время (1 год 1 месяц)
"
16984,source/Худорожков Алексей.docx,"ГЛОБУС-ИТ
"
16985,source/Худорожков Алексей.docx,"Должность:
"
16986,source/Худорожков Алексей.docx,"Системный аналитик
"
16987,source/Худорожков Алексей.docx,"Обязанности:
"
16988,source/Худорожков Алексей.docx,"Работа на проекте Сбербанка - команда разрабатывает централизованную 
"
16989,source/Худорожков Алексей.docx,"автоматизированную систему генерации, сертификации и администрирования 
"
16990,source/Худорожков Алексей.docx,"ключей электронной подписи. 
"
16991,source/Худорожков Алексей.docx,"- Сбор, анализ требований
"
16992,source/Худорожков Алексей.docx,"- Актуализация требований
"
16993,source/Худорожков Алексей.docx,"- Формирование функциональных и бизнес требований
"
16994,source/Худорожков Алексей.docx,"- Написание документации, ТЗ, спецификаций
"
16995,source/Худорожков Алексей.docx,"- Описание use case
"
16996,source/Худорожков Алексей.docx,"- Формирование артефактов по результатам проведенного анализа
"
16997,source/Худорожков Алексей.docx,"- Документирование требований по swagger
"
16998,source/Худорожков Алексей.docx,"- Работа с интеграциями
"
16999,source/Худорожков Алексей.docx,"- Работа с фронтом и бэком
"
17000,source/Худорожков Алексей.docx,"- Работа с JSON и XML
"
17001,source/Худорожков Алексей.docx,"- Работа с микросервисной архитектурой и монолитом
"
17002,source/Худорожков Алексей.docx,"- Работа с rest, soap
"
17003,source/Худорожков Алексей.docx,"Работа на проекте X5 Retail Group – команда разрабатывает сервис доставки 
"
17004,source/Худорожков Алексей.docx,"заказов из интернет-магазинов и маркетплейсов партнеров в постаматы и пункты 
"
17005,source/Худорожков Алексей.docx,"выдачи в магазинах «Пятёрочка» и «Перекрёсток».
"
17006,source/Худорожков Алексей.docx,"- Сбор, анализ требований
"
17007,source/Худорожков Алексей.docx,"- Актуализация требований
"
17008,source/Худорожков Алексей.docx,"- Формирование функциональных и бизнес требований
"
17009,source/Худорожков Алексей.docx,"- Написание документации, ТЗ, спецификаций
"
17010,source/Худорожков Алексей.docx,"- Описание use case
"
17011,source/Худорожков Алексей.docx,"- Формирование диаграмм, спецификаций, требований к системе
"
17012,source/Худорожков Алексей.docx,"- Работа с Postman, Figma, Conflunce, Jira
"
17013,source/Худорожков Алексей.docx,"- Постановка задач для fron end и back end разработки
"
17014,source/Худорожков Алексей.docx,"- Работа с микросервисной архитектурой 
"
17015,source/Худорожков Алексей.docx,"- Документирование требований по swagger
"
17016,source/Худорожков Алексей.docx,"- Помощь в тестировании разработанного функционала
"
17017,source/Худорожков Алексей.docx,"- Демонстрация результата работы заказчику
"
17018,source/Худорожков Алексей.docx,"- Работа по Agile Scram
"
17019,source/Худорожков Алексей.docx,"Май 2022 — Август 2022 (4 месяца)
"
17020,source/Худорожков Алексей.docx,"Иннотех
"
17021,source/Худорожков Алексей.docx,"Должность:
"
17022,source/Худорожков Алексей.docx,"Системный аналитик
"
17023,source/Худорожков Алексей.docx,"Обязанности:
"
17024,source/Худорожков Алексей.docx,"Актуализация требований, формирование функциональных и бизнес требований, 
"
17025,source/Худорожков Алексей.docx,"документирование требований по swagger, работа со стримингом данных, сбор, 
"
17026,source/Худорожков Алексей.docx,"анализ требований, описание use case, работа с очередями и брокерами 
"
17027,source/Худорожков Алексей.docx,"сообщений, Kafka, Tarantool, UML, Apache Flink, Jira
"
17028,source/Худорожков Алексей.docx,"Апрель 2021 — Май 2022 (1 год 2 месяца)
"
17029,source/Худорожков Алексей.docx,"Цифровые привычки
"
17030,source/Худорожков Алексей.docx,"Должность:
"
17031,source/Худорожков Алексей.docx,"Системный аналитик
"
17032,source/Худорожков Алексей.docx,"Обязанности:
"
17033,source/Худорожков Алексей.docx,"- Сбор, анализ требований
"
17034,source/Худорожков Алексей.docx,"- Описание use case, user story
"
17035,source/Худорожков Алексей.docx,"- Актуализация требований
"
17036,source/Худорожков Алексей.docx,"- Формирование функциональных и бизнес требований
"
17037,source/Худорожков Алексей.docx,"- Документирование требований по swagger
"
17038,source/Худорожков Алексей.docx,"- Работа на кредитном конвейере
"
17039,source/Худорожков Алексей.docx,"- Ведение проекта с нуля
"
17040,source/Худорожков Алексей.docx,"- Работа с реляционными и нереляционными БД
"
17041,source/Худорожков Алексей.docx,"- Работа с микросервисной архитектурой и монолитом
"
17042,source/Худорожков Алексей.docx,"- Проектирование сервисов
"
17043,source/Худорожков Алексей.docx,"- Проектирование модели данных
"
17044,source/Худорожков Алексей.docx,"- Работа с JSON и XML
"
17045,source/Худорожков Алексей.docx,"- Работа с rest, soap 
"
17046,source/Худорожков Алексей.docx,"Октябрь 2020 — март 2021 (6 месяцев)
"
17047,source/Худорожков Алексей.docx,"Совкомбанк
"
17048,source/Худорожков Алексей.docx,"Должность:
"
17049,source/Худорожков Алексей.docx,"Системный аналитик
"
17050,source/Худорожков Алексей.docx,"Обязанности:
"
17051,source/Худорожков Алексей.docx,"- Разработка и анализ проектов 
"
17052,source/Худорожков Алексей.docx,"- Анализ бизнес-требований
"
17053,source/Худорожков Алексей.docx,"- Сбор доп. информации с бизнеса и подразделений по другим бэк-системам
"
17054,source/Худорожков Алексей.docx,"- Проработка и описание тех. процессов
"
17055,source/Худорожков Алексей.docx,"- Решение интеграционных задач
"
17056,source/Худорожков Алексей.docx,"- Формирование функциональных и нефункциональных требований
"
17057,source/Худорожков Алексей.docx,"- Применение методов выявления требований
"
17058,source/Худорожков Алексей.docx,"- Поддержание документации в актуальном состоянии
"
17059,source/Худорожков Алексей.docx,"- Помощь в решении исследований и устранении ошибок
"
17060,source/Худорожков Алексей.docx,"BPMN, UML, YouTrack 
"
17061,source/Худорожков Алексей.docx,"Январь 2020 — сентябрь 2020 (9 месяцев)
"
17062,source/Худорожков Алексей.docx,"Neoflex
"
17063,source/Худорожков Алексей.docx,"Должность:
"
17064,source/Худорожков Алексей.docx,"Системный аналитик
"
17065,source/Худорожков Алексей.docx,"Обязанности:
"
17066,source/Худорожков Алексей.docx,"- Аналитическое сопровождение проектов.
"
17067,source/Худорожков Алексей.docx,"- Анализ существующих технологий, использующихся на проекте, актуализация 
"
17068,source/Худорожков Алексей.docx,"документации по проекту, разработка концептуальной модели проекта. 
"
17069,source/Худорожков Алексей.docx,"- Выполнение доработок, аналитики по проекту (сбор требований по заявке, 
"
17070,source/Худорожков Алексей.docx,"анализ, написание подхода к реализации заявки, формирование оценки 
"
17071,source/Худорожков Алексей.docx,"трудозатрат по заявке, согласование, актуализация документации по заявке).
"
17072,source/Худорожков Алексей.docx,"ОБРАЗОВАНИЕ 
"
17073,source/Худорожков Алексей.docx,"_____________________________________________________________  
"
17074,source/Худорожков Алексей.docx,"2020:
"
17075,source/Худорожков Алексей.docx,"Саратовский государственный технический университет им. Ю.А. Гагарина, 
"
17076,source/Худорожков Алексей.docx,"Саратов Институт прикладных информационных технологий и коммуникаций 
"
17077,source/Худорожков Алексей.docx,"(ИнПИТ), Информационные системы и технологии, Бакалавр
"
17078,source/Худорожков Алексей.docx,"2022:
"
17079,source/Худорожков Алексей.docx,"Саратовский государственный технический университет им. Ю.А. Гагарина, 
"
17080,source/Худорожков Алексей.docx,"Саратов Институт прикладных информационных технологий и коммуникаций 
"
17081,source/Худорожков Алексей.docx,"(ИнПИТ), Информационные системы и технологии, Магистр
"
17082,source/Худорожков Алексей.docx,"КЛЮЧЕВЫЕ НАВЫКИ 
_____________________________________________________________  
"
17083,source/Худорожков Алексей.docx,"• Знание технологий проектирования и программирования в разработке 
"
17084,source/Худорожков Алексей.docx,"информационных систем и технологий, проектирование бизнес- и 
"
17085,source/Худорожков Алексей.docx,"технологических процессов: 
"
17086,source/Худорожков Алексей.docx,"- XML. 
"
17087,source/Худорожков Алексей.docx,"- XSD. 
"
17088,source/Худорожков Алексей.docx,"- XSLT. 
"
17089,source/Худорожков Алексей.docx,"- WSDL. 
"
17090,source/Худорожков Алексей.docx,"- SOAP. 
"
17091,source/Худорожков Алексей.docx,"- Rest API. 
"
17092,source/Худорожков Алексей.docx,"• Методологии построения и ведения бизнес-процессов: 
"
17093,source/Худорожков Алексей.docx,"- Понимание методологии Agile (Scrum). 
"
17094,source/Худорожков Алексей.docx,"- Понимание методологии Waterfall. 
"
17095,source/Худорожков Алексей.docx,"• Навыки: SQL (DDL, DML, DCL, TCL). 
"
17096,source/Худорожков Алексей.docx,"• Знание предметной области. 
"
17097,source/Худорожков Алексей.docx,"• Знание инструментов Task Trackers. 
"
17098,source/Худорожков Алексей.docx,"• Знание Collaboration System (Confluence). 
"
17099,source/Худорожков Алексей.docx,"• Знание языков/нотаций моделирования (UML). 
"
17100,source/Худорожков Алексей.docx,"• Понимание архитектуры приложения: SOA, microservices. 
"
17101,source/Худорожков Алексей.docx,"• Понимание технологии работы web-service. 
"
17102,source/Худорожков Алексей.docx,"• Понимание работы брокеров сообщений. 
"
17103,source/Kirill Valiavskyi.docx,"Kirill Valiavskyi
"
17104,source/Kirill Valiavskyi.docx," Phone: +7 (093) 635-10-00;
"
17105,source/Kirill Valiavskyi.docx,"Summary:
Project Manager with an overall 5 years experience in software 
development of various kinds with strong interpersonal skills and a 
proven record of successfully delivered IT products. Passionate about 
tackling new challenges, learning, and keeping development and team 
agile. Good at managing priorities, meeting deadlines, understanding 
business values, and timely delivery.
"
17106,source/Kirill Valiavskyi.docx,"Experience (Ukraine, Kharkiv):
(Dec 2020 - Now) Delivery Manager/ Technical Program Manager
Grid Dynamics
"
17107,source/Kirill Valiavskyi.docx,"Achievements:
"
17108,source/Kirill Valiavskyi.docx,"￿ Brought order into the chaos by taking control of project documentation;
"
17109,source/Kirill Valiavskyi.docx,"￿ Build trusted relationships with stakeholders;
"
17110,source/Kirill Valiavskyi.docx,"￿ Organized development process using the most suitable agile 
methodologies;
"
17111,source/Kirill Valiavskyi.docx,"￿ Took responsibility for direct reporting to Senior Management;
"
17112,source/Kirill Valiavskyi.docx,"(April 2019 - Nov 2020)
Project 
"
17113,source/Kirill Valiavskyi.docx,"manager / Scrum Master
EPAM 
Systems
"
17114,source/Kirill Valiavskyi.docx,"Achievements:
"
17115,source/Kirill Valiavskyi.docx,"￿ 100% delivery of planned increments for the last 10 month;
"
17116,source/Kirill Valiavskyi.docx,"￿ Under my management project health check value has raised from 2.5 to 
4.25 (out of 5);
"
17117,source/Kirill Valiavskyi.docx,"￿ Successfully managed a project with over 1M$ budget;
"
17118,source/Kirill Valiavskyi.docx,"￿ Managed a program with up to 25 engineers (from juniors to leads);
"
17119,source/Kirill Valiavskyi.docx,"￿ Shared Project Management and Scrum knowledge across the Company 
"
17120,source/Kirill Valiavskyi.docx,"through webinars and tech-talks;
"
17121,source/Kirill Valiavskyi.docx,"(June 2014 - April 2019) Project manager
MWDN Ltd.
"
17122,source/Kirill Valiavskyi.docx,"Achievements:
"
17123,source/Kirill Valiavskyi.docx,"￿ Researched and found a solution to customer’s problem and was able to 
quadruple the team;
"
17124,source/Kirill Valiavskyi.docx,"￿ Managed projects from negotiations to closure across all phases;
￿ Completely switch the whole account from Waterfall to Scrum;
"
17125,source/Kirill Valiavskyi.docx,"Education:
"
17126,source/Kirill Valiavskyi.docx,"Sep 2009 – Jul 2014
Simon Kuznets Kharkiv National University of Economics,
Master's degree in International Economics
"
17127,source/Kirill Valiavskyi.docx,"Skills
:
Distributed team management; Communication; Risk Management; 
Budget management; Motivation; Adaptability; Research skills; PM 
Methodologies; Conflict Management; Microsoft Project; Jira; Planning; 
Facilitation; Project documentation; Estimations; Interviewing;
"
17128,source/Kirill Valiavskyi.docx,"Hobbies:
Fixing and overhauling different staff, travels, books, new technologies.
"
17129,source/Kirill Valiavskyi.docx,"Languages:
"
17130,source/Kirill Valiavskyi.docx,"●
English - C1 (Advanced);
"
17131,source/Kirill Valiavskyi.docx,"●
Russian - Native;
"
17132,source/Kirill Valiavskyi.docx,"●
Ukrainian - Mother language;
"
17133,source/Denis Chernov.pdf,"EDUCATION
"
17134,source/Denis Chernov.pdf,"Denis Chernov
"
17135,source/Denis Chernov.pdf,"+79841342567 | denmail@gmail.com |
"
17136,source/Denis Chernov.pdf,"linkedin/in/daaael-chernov-mx |
"
17137,source/Denis Chernov.pdf,"github.com/Laaaaer
"
17138,source/Denis Chernov.pdf,"Moscow State Technical University
Moscow, RU
"
17139,source/Denis Chernov.pdf,"Bachelor Degree at Software Engineering
Aug. 2018 – May 2022
"
17140,source/Denis Chernov.pdf,"EXPERIENCE
"
17141,source/Denis Chernov.pdf,"Java Software Developer
February 2022 – Present
"
17142,source/Denis Chernov.pdf,"DCloud Tech
Mexico city, MX
"
17143,source/Denis Chernov.pdf,"• Implemented a report generation service that boosted our business efficiency, resulting in a 30% reduction in reporting
"
17144,source/Denis Chernov.pdf,"time and a 20% increase in data accuracy, leading to improved decision-making and a 15% growth in overall
productivity.
"
17145,source/Denis Chernov.pdf,"• Implemented a monitoring system for error tracking to proactively identify and resolve issues, resulting in a 50%
"
17146,source/Denis Chernov.pdf,"reduction in production incidents.
"
17147,source/Denis Chernov.pdf,"• Implemented microservices for notifications and emails, that led to a 30% reduction in the time it takes to develop and
"
17148,source/Denis Chernov.pdf,"deploy new features. Increased development efficiency has allowed us to introduce new functionalities to our clients 1.5
times faster, enhancing our competitive edge and resulting in a 10% boost in customer satisfaction.
"
17149,source/Denis Chernov.pdf,"• Optimized the cache system, resulting in a 40% reduction in both processing time and memory consumption. This
"
17150,source/Denis Chernov.pdf,"enhancement significantly improved system performance and operational efficiency, leading to faster response times and
cost savings.
"
17151,source/Denis Chernov.pdf,"• Optimized and refactored the database schema to expedite the processing of user requests and information, resulting in
"
17152,source/Denis Chernov.pdf,"significantly faster SQL queries. This improvement has also enabled us to achieve a 30% reduction in development time
and enhance overall system performance.
"
17153,source/Denis Chernov.pdf,"Java Software Developer
February 2020 – February 2022
"
17154,source/Denis Chernov.pdf,"Soft Media Group
Moscow, RU
"
17155,source/Denis Chernov.pdf,"• Developed crucial features for the COVID-19 patient care system, which encompassed live patient monitoring and tracking,
"
17156,source/Denis Chernov.pdf,"symptom evaluation, and contact tracing. The system was efficiently implemented across various healthcare facilities,
facilitating prompt and efficient care for individuals affected by COVID-19 and playing a pivotal role in the broader battle
against the pandemic.
"
17157,source/Denis Chernov.pdf,"• Increased test code coverage from 60% to 90%, resulting in improved system reliability and performance and
"
17158,source/Denis Chernov.pdf,"decreased risk of errors or bugs.
"
17159,source/Denis Chernov.pdf,"• Refactored and improved patient scheduling system resulting in a 30% reduction in scheduling errors and a 25% increase
"
17160,source/Denis Chernov.pdf,"in appointment efficiency.
"
17161,source/Denis Chernov.pdf,"• Optimised SQL queries boosting performance from logarithmic to linear, which reduced time of patients had to wait for
"
17162,source/Denis Chernov.pdf,"website loading for some requests up to 90%.
"
17163,source/Denis Chernov.pdf,"• Successfully deployed and configured integrated Keycloak server, which allowed to rework Authentication system and
"
17164,source/Denis Chernov.pdf,"enhance system security.
"
17165,source/Denis Chernov.pdf,"TECHNICAL SKILLS
"
17166,source/Denis Chernov.pdf,"Languages: Java, SQL, Kotlin, MongoDB, JavaScript, HTML/CSS
Technologies: Kafka, RabbitMQ, Oauth, ElasticSearch, Kibana, Redis, Hazelcast, Docker, AWS, Jenkins, Git Frameworks and
Libraries: Spring Framework, Spring Boot, Spring Cloud, Hibernate, JDBC, Liquibase, Flyway, JUnit, Mockito, Gradle, Maven
"
17167,source/ASLANBEK ASADOV.docx,"ASLANBEK 
ASADOV
"
17168,source/ASLANBEK ASADOV.docx,"+998 97 412-00-00
aslanbek888@icloud.com
"
17169,source/ASLANBEK ASADOV.docx,"iOS Developer
"
17170,source/ASLANBEK ASADOV.docx,"￿
+4 years of years of iOS experience. Built pixel perfect products for 0.5 million users.
"
17171,source/ASLANBEK ASADOV.docx,"￿
Areas: finance, banking, customer services
"
17172,source/ASLANBEK ASADOV.docx,"Skills:
"
17173,source/ASLANBEK ASADOV.docx,"￿
iOS/macOS/WatchOS: Swift, UIKit, SwiftUI, AppKit, Concurrency, Accessibility etc.
"
17174,source/ASLANBEK ASADOV.docx,"￿
Architecture: MVVM -C, MVVM, MVC, MVP, Test Driven UI,
"
17175,source/ASLANBEK ASADOV.docx,"￿
Technologies: CI/CD, Firebase ML Kit, Analytics (Mixpanel, Segment, Firebase), 
TensorFlow (ML), CoreML, Hadoop, Spark;
"
17176,source/ASLANBEK ASADOV.docx,"￿
Management: Scrum, Kanban, Unit Testing, Code Review, Refactoring.
"
17177,source/ASLANBEK ASADOV.docx,"￿
Programming languages and mathematical packages: Swift, Python, C, C ++
"
17178,source/ASLANBEK ASADOV.docx,"￿
Computer aided design/engineering: Adobe XD, Figma, Sketch, Zeppelin;
"
17179,source/ASLANBEK ASADOV.docx,"￿
Other: SPSS, Linux Ubuntu, macOS, Windows OS, Postman API, Yacc, FLEX;
"
17180,source/ASLANBEK ASADOV.docx,"Work Experience:
"
17181,source/ASLANBEK ASADOV.docx,"JSCB “Kapital Bank” – Apelsin Digital Bank, Tashkent
Oct. 2019 - present 
iOS developer:
"
17182,source/ASLANBEK ASADOV.docx,"￿
Wrote a framework for NFC Smart-card Tag reading of AID through Inner filesystem for iOS 
app in C/Swift - (utils static library);
"
17183,source/ASLANBEK ASADOV.docx,"￿
Worked with CoreBanking Interlayer, integrated HUMOPay NFC Payment framework to 
Andoid devices;
"
17184,source/ASLANBEK ASADOV.docx,"￿
Has been developing and maintaining Apelsin app - mobile banking app by Kapital Bank;
"
17185,source/ASLANBEK ASADOV.docx,"￿
Developed application from scratch: P2P, deposits, loans, worked with OAuth, etc;
"
17186,source/ASLANBEK ASADOV.docx,"￿
Worked with Paynet api, iABS api (Fido-Business), Google Firebase, Maps, implemented chat;
"
17187,source/ASLANBEK ASADOV.docx,"￿
Wrote high-quality code using MVVM-C architecture and covering code with unit tests, 
resulting in 90% test coverage;
"
17188,source/ASLANBEK ASADOV.docx,"￿
Developed backend driven UI architecture, where screens and interactions are defined by 
JSON. That allowed us to instantly push updates to the users without them having to update the 
app;
"
17189,source/ASLANBEK ASADOV.docx,"￿
Collaborated with backend and Android engineers to develop REST API contracts.
"
17190,source/ASLANBEK ASADOV.docx,"￿
Reviewed code of fellows engineers. 2-5 PRs reviewed per day.
"
17191,source/ASLANBEK ASADOV.docx,"•
Worked with Core Banking Microservices and integrated them using self-developed interlayer 
written in Java Spring Framework;
"
17192,source/ASLANBEK ASADOV.docx,"•
Official website of JSC “Kapital Bank”: www.kapitalbank.uz / apelsin.uz
"
17193,source/ASLANBEK ASADOV.docx,"JSCB “TBC UZ Bank” — (TBC International), Tashkent
Aug. – Oct. 2019 
QA Engineer/ IT Intern:
"
17194,source/ASLANBEK ASADOV.docx,"•
Worked with the most perspective team developing IT Banking based on Core Banking;
"
17195,source/ASLANBEK ASADOV.docx,"•
Worked with iABS, FIDO APIs, NIBBD API;
"
17196,source/ASLANBEK ASADOV.docx,"•
Wrote API Test cases on JavaScript (5-6) using Postman GUI;
"
17197,source/ASLANBEK ASADOV.docx,"•
Worked in a team management based on Agile;
"
17198,source/ASLANBEK ASADOV.docx,"•
Official website of JSC “TBC UZ Bank"": www.tbcbank.uz
"
17199,source/ASLANBEK ASADOV.docx,"JSC “Fox-Art Studio”, Tashkent
Jan. 2016 – Feb. 2019
"
17200,source/ASLANBEK ASADOV.docx,"iOS developer (freelancer):
"
17201,source/ASLANBEK ASADOV.docx,"•
Developed Mobile applications for a variety of fields;
"
17202,source/ASLANBEK ASADOV.docx,"•
Created: Ayo Service, F2B App, CarRent.Uz, Fox-Arts;
"
17203,source/ASLANBEK ASADOV.docx,"•
Wrote high-quality code using MVVM-C architecture and covering code with unit tests, 
resulting in 90% test coverage;
"
17204,source/ASLANBEK ASADOV.docx,"•
Developed backend driven UI architecture, where screens and interactions are defined by 
JSON. That allowed us to instantly push updates to the users without them having to update 
the app;
"
17205,source/ASLANBEK ASADOV.docx,"•
Collaborated with backend and Android engineers to develop REST API contracts.
"
17206,source/ASLANBEK ASADOV.docx,"•
Worked in a team with different developing skills, worked as Team Lead in Ayo 
Service/F2B apps.
"
17207,source/ASLANBEK ASADOV.docx,"Education
"
17208,source/ASLANBEK ASADOV.docx,"Bachelor:
Inha University in Tashkent (IUT), 9, Ziyolilar str., M.Ulugbek dist., Tashkent city
"
17209,source/ASLANBEK ASADOV.docx,"•
Major: B.Sc. in Computer Science
"
17210,source/ASLANBEK ASADOV.docx,"•
Graduated: 22 August 2020;
"
17211,source/ASLANBEK ASADOV.docx,"•
GPA: 3.93 in 4.5 scale;  (87.3 out of 100.0 / 5.24 out of 6.0 in Swiss GPA Scale)
"
17212,source/ASLANBEK ASADOV.docx,"Upper-secondary:
Tashkent Polytechnic Professional College, 26, Amir Temur str., Tashkent city
"
17213,source/ASLANBEK ASADOV.docx,"•
Major (Qualification): Finances
"
17214,source/ASLANBEK ASADOV.docx,"•
Graduated: July, 2016;
"
17215,source/ASLANBEK ASADOV.docx,"•
CGPA: 95.5 out of 100.0 (4.775 out of 5.0)
"
17216,source/ASLANBEK ASADOV.docx,"Research Experience
"
17217,source/ASLANBEK ASADOV.docx,"Undergraduate student, Inha University in Tashkent
2019 – 2020
"
17218,source/ASLANBEK ASADOV.docx,"-
Internet of Things, SOC4110-002 dept.
2020 Spring semester 
Advisor: Dr. Francis Noh Tai – Professor at INHA University Korea, Former founder and 
representative of Bell Labs Korea;
•
Developed and proposed solutions for modern city traffic congestions – Smart Traffic, 
SPNDSe IoT software solutions that consists of securely connected IoT devices through 
networks (WLAN 802.11.XX) to platform and users based on oneM2M infrastructure, 
Common Services Entity and RESTful API;
"
17219,source/ASLANBEK ASADOV.docx,"•
Integrated hardware components, sensors (in-Vehicle, in-Road: RADAR, GPS, LIDAR, 
Pneumatic road tube, ILD, Piezoelectric, RFID Tags, etc.) using Arduino Uno;
"
17220,source/ASLANBEK ASADOV.docx,"•
Wrote API for NB-IoT and LoRa communication between components of the systems in 
Python/C;
"
17221,source/ASLANBEK ASADOV.docx,"This work resulted in top ranked term projects on IoT course, i.e. 3rd best software project, 
IUT, 2020;
"
17222,source/ASLANBEK ASADOV.docx,"-
Capstone Design, SOC4130-003 dept.,
2020 Spring semester 
Advisor: Jangwoo Kwon, Ph.D. – Professor at Dept. of Computer Eng. INHA University;
•
Created a prototype of an autonomous smart car in a minimized aspect ratio using Arduino 
Uno;
"
17223,source/ASLANBEK ASADOV.docx,"•
Wrote a software in Python for autonomous car communications, taking into consideration
4 motor modes (normal, deep, sensor, sensor deep) for lane detection using basic 
algorithms (Image BGR to HSV, HSV to GRAY, Gaussian Blur, Hough Lines, regression 
during separation of an amalgam of left/right sides);
"
17224,source/ASLANBEK ASADOV.docx,"•
Wrote software in Python for Signs Recognition, obstacle and traffic light/crosswalk 
detection using camera and LIDAR using deep learning and raw data model;
"
17225,source/ASLANBEK ASADOV.docx,"This work resulted in top ranked term projects on Capstone Design course, i.e. gained 4th best 
project in Spring 2020;
"
17226,source/ASLANBEK ASADOV.docx,"-
Artificial Intelligence, SOC4040-002 dept.,
2019 Fall Semester 
Advisor: Dr. Francis Noh Tai – Professor at Dept. of Computer Eng. INHA University, 
Former founder and representative of Bell Labs Korea;
•
Designed and developed a mobile application integrated with our custom optimized neural-
network model that studies implications of mental diseases on a human being in various 
conditions and locations all the while providing medical suggestions in addition to 
professional cure; Analyzed and identified facial and vocal patterns of feelings and 
intonations of testees;
"
17227,source/ASLANBEK ASADOV.docx,"•
Built a neural-network oriented on a mental health state classification of an individual in 
terms of existing medical care data with average confidence level of 82%;
"
17228,source/ASLANBEK ASADOV.docx,"•
Tackled data collection and mining problems by sample mirroring techniques;
"
17229,source/ASLANBEK ASADOV.docx,"This work resulted in top ranked term projects on the course, ranking 2nd best in Fall 2019;
"
17230,source/ASLANBEK ASADOV.docx,"-
Theory of Programming Languages, SOC4140-001 dept.,
2019 Fall Semester 
Mentor: Dr. Abdul Rahim Naseer - Dean & Professor at Dept. of Computer Eng. INHA 
University, US Marquis Albert Nelson Lifetime Achievement Award Scholar;
•
Designed and developed a new programming language “RULANG”, targeted on young 
engineers with lack of English Languages proficiency, based on C++/Swift/Java syntax and 
semantics with additions from FRINK PL for larger primitive data types (units of measure, 
advanced math. Functions etc.);
"
17231,source/ASLANBEK ASADOV.docx,"•
Implemented by applying functional and imperative paradigms, set RULANG as pure 
interpreting languages that translates each line to a parse tree thus to be computed by Python 
predefined instructions; Defined semantics and syntax rules, lexical analyzer using FLEX, 
Symbol Table, Yacc GNU Bison;
"
17232,source/ASLANBEK ASADOV.docx,"Achievements
"
17233,source/ASLANBEK ASADOV.docx,"Dean’s List member
2016-2020 all semesters 
Rankings: 8th place in 2017
"
17234,source/ASLANBEK ASADOV.docx,"Academic Excellence Scholar
2017 Spring semester 
Rankings: 8th place in 2017
Tuition Fee coverage: $ 2,500 USD
"
17235,source/ASLANBEK ASADOV.docx,"Honours & awards
"
17236,source/ASLANBEK ASADOV.docx,"Apple Academic Scholarship
2020 - 2021
"
17237,source/ASLANBEK ASADOV.docx,"Università degli Studi di Napoli Federico II
Corso Nicolangelo Protopisani 70, 
Apple Developer Academy
80146, Napoli NA - Italy
"
17238,source/ASLANBEK ASADOV.docx,"Best Software Solution Award (IUT WORKSHOP)
Spring 2019
"
17239,source/ASLANBEK ASADOV.docx,"INHA University in Tashkent (IUT),
9, Ziyolilar str., M.Ulugbek dist.,
"
17240,source/ASLANBEK ASADOV.docx,"INHA Summer School Contest
Tashkent, Uzbekistan
"
17241,source/ASLANBEK ASADOV.docx,"Academic Excellence Scholarship
Spring 2017
"
17242,source/ASLANBEK ASADOV.docx,"INHA University in Tashkent (IUT),
9, Ziyolilar str., M.Ulugbek dist., 
Tashkent, Uzbekistan
"
17243,source/ASLANBEK ASADOV.docx,"Teaching Experience
"
17244,source/ASLANBEK ASADOV.docx,"Lecturer, tutor, SOS Education Centre, Tashkent, Uzbekistan
Spring - Summer 2019 
Course: Introduction to C++, Advanced Programming in C++, Advanced iOS Development 
Responsibilities: Developed and delivered 6 months long courses to students at the educational 
centre using contemporary teaching techniques, like Challenge Based Learning (CBL), Moodle etc. 
Taught 3 groups of 32 students;
"
17245,source/ASLANBEK ASADOV.docx,"Projects
"
17246,source/ASLANBEK ASADOV.docx,"JSCB “Kapitalbank”, Department of Innovative Products
2020 - present
"
17247,source/ASLANBEK ASADOV.docx,"and Development at Apelsin Digital Bank
"
17248,source/ASLANBEK ASADOV.docx,"• Worked on integration of HumoPay, NFC based payment on Android devices through Apelsin 
app;
"
17249,source/ASLANBEK ASADOV.docx,"• Developed custom interlayer API for both Core Banking and Android NFC protocols 
compatibility; Info: https://apelsin.uz;
"
17250,source/ASLANBEK ASADOV.docx,"JSC “Project Managers”, Department of Development
Mar. 2020 – Apr. 2020
"
17251,source/ASLANBEK ASADOV.docx,"•
Voluntary contributed to the development of iOS app “Birga Yengamiz”;
"
17252,source/ASLANBEK ASADOV.docx,"•
Worked with CoreBluetooth & BlueTracer API in order to develop app that will help to 
prevent, identify and drastically reduce prevalence of COVID-19 in Uzbekistan;
"
17253,source/ASLANBEK ASADOV.docx,"•
Assembled app completely from scratch along with other 3 developers;
"
17254,source/ASLANBEK ASADOV.docx,"•
Info: https://birgayengamiz.uz/
"
17255,source/ASLANBEK ASADOV.docx,"IUT WORKSHOP – an education app for INHA University
Mar. 2019 – May 2020
"
17256,source/ASLANBEK ASADOV.docx,"in Tashkent, Tashkent
"
17257,source/ASLANBEK ASADOV.docx,"•
Worked as Team Leader and Idea owner, in Team of 5 developers, iOS developer;
"
17258,source/ASLANBEK ASADOV.docx,"•
Worked in the investment platform assembling process;
"
17259,source/ASLANBEK ASADOV.docx,"•
Developed self-learning AI Assistant “L.I.S.A.” who is aimed to help ease team & project 
management process;
"
17260,source/ASLANBEK ASADOV.docx,"•
Developed the entire functionality, major user roles, set Scrum Sprints, maintained 
development process;
"
17261,source/ASLANBEK ASADOV.docx,"•
Winner of Summer School Contest 2019
"
17262,source/ASLANBEK ASADOV.docx,"FerMa.uz – a farmer/distributor targeted app with marketplace       Sep. 2018 – May 2019
Tashkent, Uzbekistan - Moscow, Russia,
"
17263,source/ASLANBEK ASADOV.docx,"•
Worked as Project Manager, iOS developer, team of 6 developers, developed 3 projects;
"
17264,source/ASLANBEK ASADOV.docx,"•
Developed system of B2B and B2C for farmers and retailers;
"
17265,source/ASLANBEK ASADOV.docx,"•
Created the system that helps farmers and retailers using contemporary technologies to 
communicate with each other and improve trade partnerships and eliminate corruption in the 
process of trade.
"
17266,source/ASLANBEK ASADOV.docx,"Volunteering
"
17267,source/ASLANBEK ASADOV.docx,"GDGTashkent, Alphabet Inc., Google Developer Event
Nov. 2019
"
17268,source/ASLANBEK ASADOV.docx,"•
Helped in organization processes, facilities check, queues management etc.
"
17269,source/ASLANBEK ASADOV.docx,"Instructor and Tutor of Freshmen Students at IUT
Aug. 2018
"
17270,source/ASLANBEK ASADOV.docx,"•
Helped freshmen students to coordinate at INHA University in Tashkent, adopt to the study 
conditions and provided all necessary information and help upon the request;
"
17271,source/ASLANBEK ASADOV.docx,"Codecraft.uz, Hour of Code Instructor
Jun. – Aug. 2017
"
17272,source/ASLANBEK ASADOV.docx,"•
Helped teacher and tutors provide free-lesson for up to 80 kids within one day; Inha University 
in Tashkent,
"
17273,source/ASLANBEK ASADOV.docx,"Math Competition Olympiad for students of Lyceums and Colleges Apr. 27- May 15 2017
"
17274,source/ASLANBEK ASADOV.docx,"•
Proctor, controlled process of holding Olympiad;.
"
17275,source/ASLANBEK ASADOV.docx," Language skills
 
"
17276,source/ASLANBEK ASADOV.docx,"Language Skills
English – Fluent (IELTS 7.0 - 2020 y.);
German – Fluent (Goethe Zert. C1); 
Russian - Native Speaker;
Uzbek – Native Speaker;
"
17277,source/ASLANBEK ASADOV.docx,"References available upon request*
"
17278,source/MARGO SAGITOVA.pdf,"MARGO SAGITOVA 
"
17279,source/MARGO SAGITOVA.pdf,"+7(999)999-99-99 ⬦ x@x.com  
"
17280,source/MARGO SAGITOVA.pdf,"EDUCATION 
 
"
17281,source/MARGO SAGITOVA.pdf,"Moscow  Institute  of  Physics  and  Technology 
September 2019 - August 2023 
"
17282,source/MARGO SAGITOVA.pdf,"#11 QS EECA University Rankings 2020 
(Expected) 
"
17283,source/MARGO SAGITOVA.pdf,"Bachelor’s degree in Applied Mathematics, Physics and Computer Science 
GPA 9.05 of 10 
"
17284,source/MARGO SAGITOVA.pdf," 
WORK EXPERIENCE 
 
"
17285,source/MARGO SAGITOVA.pdf,"Russian  Foundation  for  Basic  Research  grant  N◦ 20-07-00222 
January 2019 - Present 
"
17286,source/MARGO SAGITOVA.pdf,"“Synthetic DNA as an information carrier for long-term storage of non-biological data in it, including 
the creation of a prototype of an oligo library from NYRN oligonucleotides” 
"
17287,source/MARGO SAGITOVA.pdf,"· Analyzing DNA-computing algorithms and information coding systems. 
· Designing the prototype of the coding system. 
"
17288,source/MARGO SAGITOVA.pdf,"Russian  Foundation  for  Basic  Research  grant  N◦ 18-29-14076 
August 2018 - Present 
"
17289,source/MARGO SAGITOVA.pdf,"“Legal and ethical aspects of the general DNA certification of the population of the Russian Federation 
for the purpose of DNA identification of a person” 
"
17290,source/MARGO SAGITOVA.pdf,"· Designing and developing searching software for molecular biologists. 
"
17291,source/MARGO SAGITOVA.pdf,"ACHIEVEMENTS 
 
"
17292,source/MARGO SAGITOVA.pdf,"Co-author of the article “Non-biological application of DNA molecules” 
DOI:10.31301/2221-6197.bmcs.2019-28 
"
17293,source/MARGO SAGITOVA.pdf,"Co-applicant of the patent “Coding methods using nitrogenous bases of DNA and olig- 
otecs” 
Russian Federation patent application N◦ 2019126609 
"
17294,source/MARGO SAGITOVA.pdf,"PROJECTS 
 
"
17295,source/MARGO SAGITOVA.pdf,"Strategy Game 
May 2020 
"
17296,source/MARGO SAGITOVA.pdf,"· Collaborated with a classmate to develop a cross-platform game in C++. 
· Learned diverse design patterns and implement clear and flexible architecture. 
· Designed game engine classes and developed game mechanics. 
"
17297,source/MARGO SAGITOVA.pdf,"Website for DnD players 
April 2020 
"
17298,source/MARGO SAGITOVA.pdf,"· Learned Django framework in two weeks and developed backend using PostgreSQL database. 
· Created frontend using HTML. 
"
17299,source/MARGO SAGITOVA.pdf,"Desktop App for SNPs Search 
March 2020 
"
17300,source/MARGO SAGITOVA.pdf,"· Collaborated with molecular biologists to design universal searching app. 
· Developed an app that allows to find different patterns in SNPs with Tkinter package. 
"
17301,source/MARGO SAGITOVA.pdf,"Algorithms  and  Data  Structures  practice 
January 2020 - May 2020 
"
17302,source/MARGO SAGITOVA.pdf,"· Implemented different data structures and algorithms including BigInteger, List, Planarity Check in 
"
17303,source/MARGO SAGITOVA.pdf,"C++. 
"
17304,source/MARGO SAGITOVA.pdf," 
TECHNICAL SKILLS 
 
"
17305,source/MARGO SAGITOVA.pdf,"Languages 
C++, Python, C 
"
17306,source/MARGO SAGITOVA.pdf,"Technologies 
Git, NumPy, Tkinter, Django 
"
17307,source/MARGO SAGITOVA.pdf,"Other 
LaTex, Linux 
"
17308,source/CHE RNY AVS K I Y Artyom.pdf,"Almaty, Kazakhstan https://www.linkedin.com/in/cghji/
"
17309,source/CHE RNY AVS K I Y Artyom.pdf,"EMPLOYMENT
CHE RNY AVS K I Y Artyom
spa05698@gmail.com
"
17310,source/CHE RNY AVS K I Y Artyom.pdf,"Software Engineer
Transport Holding of Almaty city
Apr 2021 – Present
"
17311,source/CHE RNY AVS K I Y Artyom.pdf,"onay.kz
"
17312,source/CHE RNY AVS K I Y Artyom.pdf,"● Developing the payment system from the ground up, with the total number of transactions exceeding 2
"
17313,source/CHE RNY AVS K I Y Artyom.pdf,"million per day.
"
17314,source/CHE RNY AVS K I Y Artyom.pdf,"● Conducted research work and selected an appropriate tech stack considering the needs of the company.
"
17315,source/CHE RNY AVS K I Y Artyom.pdf,"Software Engineer (Backend)
Eurasian Bank
Mar 2020 – Jan 2021
"
17316,source/CHE RNY AVS K I Y Artyom.pdf,"Smartbank
"
17317,source/CHE RNY AVS K I Y Artyom.pdf,"● I have communicated directly with a business unit also collected and analyzed business requirements.
"
17318,source/CHE RNY AVS K I Y Artyom.pdf,"● Decomposition of the requirements of the tasks.
"
17319,source/CHE RNY AVS K I Y Artyom.pdf,"● Reduced the process of opening Bank's products from 3 days to 5 minutes.
"
17320,source/CHE RNY AVS K I Y Artyom.pdf,"● Developed and launched the mechanism for transmitting the secure card data between client's and Bank's
"
17321,source/CHE RNY AVS K I Y Artyom.pdf,"systems through implementing the ISO-9564 standard with 3DES encryption.
"
17322,source/CHE RNY AVS K I Y Artyom.pdf,"Software Engineer (Xamarin)
Eurasian Bank
Jun 2019 – Mar 2020
"
17323,source/CHE RNY AVS K I Y Artyom.pdf,"Smartbank
"
17324,source/CHE RNY AVS K I Y Artyom.pdf,"● Reduced the app size by 30% by implementing best practices of working with static resources and refactoring
"
17325,source/CHE RNY AVS K I Y Artyom.pdf,"the existing's codebase using Microsoft recommendations regarding handle native elements.
"
17326,source/CHE RNY AVS K I Y Artyom.pdf,"● Saved the company more than 30000$ by porting native libraries of different scanners (Card, NFS, Barcode)
"
17327,source/CHE RNY AVS K I Y Artyom.pdf,"from native iOS and Android platforms to Xamarin environment instead of buying box solutions.
"
17328,source/CHE RNY AVS K I Y Artyom.pdf,"● Integrated analytics and metrics.
"
17329,source/CHE RNY AVS K I Y Artyom.pdf,"● Integrated worldwide money transfer service.
"
17330,source/CHE RNY AVS K I Y Artyom.pdf,"● Counseled the company's contractor.
"
17331,source/CHE RNY AVS K I Y Artyom.pdf,"Software Engineer
AMK-Eurasia LLP
Mar 2018 – Jun 2019
"
17332,source/CHE RNY AVS K I Y Artyom.pdf,"Otbasy bank
"
17333,source/CHE RNY AVS K I Y Artyom.pdf,"● Designed and implemented newly designed Otbasy bank application for banking system using Xamarin forms.
"
17334,source/CHE RNY AVS K I Y Artyom.pdf,"● Developed and launched online services which helped reduce the load on the Bank's branches
"
17335,source/CHE RNY AVS K I Y Artyom.pdf,"● Launched the cloud testing with Xamarin Test Cloud platform.
"
17336,source/CHE RNY AVS K I Y Artyom.pdf,"● Maintained and developed existing website.
"
17337,source/CHE RNY AVS K I Y Artyom.pdf,"LICENSES AND CERTIFICATIONS
Xamarin Certified Mobile Professional (2019)
"
17338,source/CHE RNY AVS K I Y Artyom.pdf,"LANGUAGES AND TECHNOLOGIES
C#.NET; SQL; JavaScript; HTML; CSS; Java; Objective-C; WCF; BizTalk; SOAP; JSON; Xamarin.
Visual Studio; Microsoft SQL Server; XCode; dotMemory; dotTrace; BenchmarkDotNet;
"
17339,source/CHE RNY AVS K I Y Artyom.pdf,"SOCIAL ACTIVITIES
Free time practice: C/C++; Math; GameDev(UE);
"
17340,source/ALAN TAZHIMBETOV.docx,"ALAN TAZHIMBETOV
"
17341,source/ALAN TAZHIMBETOV.docx,"alan1134@gmail.com ￿ +7 747 720 1000
"
17342,source/ALAN TAZHIMBETOV.docx,"EDUCATION
"
17343,source/ALAN TAZHIMBETOV.docx,"Suleyman Demirel University
September 2016 - June 
"
17344,source/ALAN TAZHIMBETOV.docx,"2020 Almaty, Kazakhstan
B.S. in Computer Science.
Receiver of government scholarship for top science Olympiad medalists.
"
17345,source/ALAN TAZHIMBETOV.docx,"EXPERIENCE
"
17346,source/ALAN TAZHIMBETOV.docx,"Chocolife.me
June 2019 - 
"
17347,source/ALAN TAZHIMBETOV.docx,"Present
Core developer
Almaty, Kazakhstan
"
17348,source/ALAN TAZHIMBETOV.docx,"· Core Developer on the #1 coupon service in Kazakhstan with 300,000+ monthly active users
· Top-5 contributor by pull requests in the company
· Worked on every part of the platform: buildsystem, deployments, microservices, database refactoring
· Built new version of API for the whole mobile application which decreased number of requests to the 
"
17349,source/ALAN TAZHIMBETOV.docx,"server by x3
"
17350,source/ALAN TAZHIMBETOV.docx,"· Integrated Elasticsearch which optimized all admin-panel’s database requests’ latency by x5
· Automated user data consistency among main services via RabbitMQ and Pub/Sub design pattern
· Refactored MySQL table’s schema which decreased the number of records from 10 Million to 300 
thousand rows
"
17351,source/ALAN TAZHIMBETOV.docx,"Chocolife.me
January 2019 - May 
"
17352,source/ALAN TAZHIMBETOV.docx,"2019
Software Engineering Intern
Almaty, Kazakhstan
"
17353,source/ALAN TAZHIMBETOV.docx,"· Designed & developed blogging platform’s miscroservice using Phalcon, PHP via RestAPI & 
"
17354,source/ALAN TAZHIMBETOV.docx,"OpenAPI
"
17355,source/ALAN TAZHIMBETOV.docx,"· 100% unit & functional tests coverage using Codeception
"
17356,source/ALAN TAZHIMBETOV.docx,"Suleyman  Demirel  University
September 2016 - December 
2016
Teaching Assistant, Part-time
Almaty, Kazakhstan
"
17357,source/ALAN TAZHIMBETOV.docx,"· Supervised 20+ students and gave 15+ lectures on algorithms & data structures in Java
"
17358,source/ALAN TAZHIMBETOV.docx,"PROJECTS
"
17359,source/ALAN TAZHIMBETOV.docx,"Vehicle registration plate recognizer
Diploma project
May 2019 - June 
"
17360,source/ALAN TAZHIMBETOV.docx,"2019
"
17361,source/ALAN TAZHIMBETOV.docx,"· Created whole software ecosystem for automatic number-plate recognition
· Built RESTful API which recognizes car license number from a received image. Used Flask, OpenCV
· Created dashboard for clients which provides access control for clients parking lot. Used Laravel
"
17362,source/ALAN TAZHIMBETOV.docx,"SKILLSET
"
17363,source/ALAN TAZHIMBETOV.docx,"· Confident in: PHP, Data Strucutre and Algorithms
· Had experience with: Python, Java, C#, Git, Lua, MySQL, Tarantool
"
17364,source/ALAN TAZHIMBETOV.docx,"AWARDS
"
17365,source/ALAN TAZHIMBETOV.docx,"· Bronze medal in the Mostratec international Science and Technology Exhibition 2016 (Among 100+ 
"
17366,source/ALAN TAZHIMBETOV.docx,"teams)
"
17367,source/ALAN TAZHIMBETOV.docx,"· Top-2 in Regional Olympiad in Biology 2015 (Among 30+ students)
"
17368,source/Anna Shemerey.pdf,"Anna Shemerey 
SOFTWARE ENGINEER 
+7-920-234-11-11 | mail@mail.ru | Plechanova str.32-54, Moskow, Russia 
"
17369,source/Anna Shemerey.pdf," 
 
 
 
"
17370,source/Anna Shemerey.pdf,"EXPERIENCE 
 
"
17371,source/Anna Shemerey.pdf,"Business News Media ZAO, Moscow, Russia — Senior Software Engineer 
"
17372,source/Anna Shemerey.pdf,"SEPTEMBER 2018 - PRESENT 
"
17373,source/Anna Shemerey.pdf,"Designed and implemented comments service via WebSockets (Go, Ruby, Postgresql, RabbitMQ, 
Redis). 
"
17374,source/Anna Shemerey.pdf,"Proposed a way to change the client requests logic decreasing DB load by 21%. 
"
17375,source/Anna Shemerey.pdf," 
"
17376,source/Anna Shemerey.pdf,"Implemented functionality to meet the requirements of new laws passed by the Federal Tax Service 
"
17377,source/Anna Shemerey.pdf,"(VAT rate changed, a new type of receipt put into circulation) (Ruby, MSSql remote procedures, 
"
17378,source/Anna Shemerey.pdf,"PostgreSQL). 
"
17379,source/Anna Shemerey.pdf,"Refactored legacy code reducing the time the users spend on registration by 16%. 
"
17380,source/Anna Shemerey.pdf," 
 
"
17381,source/Anna Shemerey.pdf,"BillBored Inc, St John’s, Canada — Software Developer 
"
17382,source/Anna Shemerey.pdf,"FEBRUARY 2018 - SEPTEMBER 2018 
"
17383,source/Anna Shemerey.pdf,"Implemented functional testing for an SDK in Elixir (ExUnit, VCR, XML-based third parties APIs). 
"
17384,source/Anna Shemerey.pdf," 
"
17385,source/Anna Shemerey.pdf,"Unlimited Technologies, Moscow, Russia — Software Developer 
"
17386,source/Anna Shemerey.pdf,"MAY 2016 - FEBRUARY 2018 
"
17387,source/Anna Shemerey.pdf,"Designed and implemented a push service via FCM and APNS integrated with all client platforms. 
(Elixir, Erlang, Postgresql, Kafka, Redis). 
"
17388,source/Anna Shemerey.pdf," 
"
17389,source/Anna Shemerey.pdf,"Business Car LLC (Toyota Tsusho Corporation subsidiary), Moscow, Russia 
— Software Developer 
"
17390,source/Anna Shemerey.pdf,"JULY 2015 - APRIL 2016 
"
17391,source/Anna Shemerey.pdf,"Designed and implemented a questionnaire section of the inner CRM system decreasing the 
preservice time by 15%. (Ruby, RoR). 
"
17392,source/Anna Shemerey.pdf," 
"
17393,source/Anna Shemerey.pdf,"Forward Media Group, Moscow, Russia — Advertising Sales Director 
"
17394,source/Anna Shemerey.pdf,"JANUARY 2009 - JULY 2015 
"
17395,source/Anna Shemerey.pdf,"Managed and implemented ad sales plan covering all production and editorial costs of the original 
Russian glossy magazine (Story magazine). 
"
17396,source/Anna Shemerey.pdf," 
"
17397,source/Anna Shemerey.pdf,"VI, Moscow, Russia — Advertising Sales Director 
"
17398,source/Anna Shemerey.pdf,"2003 - 2008 
"
17399,source/Anna Shemerey.pdf,"As part of a team launched HELLO! Magazine in Russia. The ad sales plan was outstripped by 30% in 
the first year and by 15% in the second one. 
"
17400,source/Anna Shemerey.pdf,"Participated in annual marketing events (Baselworld, SIHH) that increased the part of the luxury 
segment in ad budget by 60%. 
"
17401,source/Anna Shemerey.pdf," 
"
17402,source/Anna Shemerey.pdf,"Computerra Publishing House, Moscow, Russia — Marketing and Advertising 
Manager 
"
17403,source/Anna Shemerey.pdf,"2003 
"
17404,source/Anna Shemerey.pdf,"Elaborating advertising and promotional materials about the company’s projects, ad sales. 
"
17405,source/Anna Shemerey.pdf,"SUMMARY 
"
17406,source/Anna Shemerey.pdf,"4+ years of experience in Golang, Ruby, Elixir, and 
"
17407,source/Anna Shemerey.pdf,"Erlang programming. I'm a self-taught person 
"
17408,source/Anna Shemerey.pdf,"with experience in designing and implementing 
"
17409,source/Anna Shemerey.pdf,"software. Proven ability to write maintainable, 
"
17410,source/Anna Shemerey.pdf,"quality code covered with tests. Strong yearning 
"
17411,source/Anna Shemerey.pdf,"for perfect results, based on elegant solutions and 
latest technologies. Used to working under 
"
17412,source/Anna Shemerey.pdf,"pressure to meet tight deadlines and handling 
"
17413,source/Anna Shemerey.pdf,"unpredicted changes. 
"
17414,source/Anna Shemerey.pdf,"I also have 10+ years of wide experience in 
"
17415,source/Anna Shemerey.pdf,"Advertising & Sales with major Publishing Russian 
"
17416,source/Anna Shemerey.pdf,"companies on top positions with strong skills in 
"
17417,source/Anna Shemerey.pdf,"starting new projects. 
"
17418,source/Anna Shemerey.pdf," 
 
 
"
17419,source/Anna Shemerey.pdf,"SKILLS 
 
"
17420,source/Anna Shemerey.pdf,"Golang, Ruby, Elixir, Erlang, PostgreSQL, 
"
17421,source/Anna Shemerey.pdf,"Cassandra, Mnesia, Kafka, RabbitMQ, Redis, 
"
17422,source/Anna Shemerey.pdf,"Memcached, ElasticSearch, Docker, Git 
"
17423,source/Anna Shemerey.pdf," 
 
 
"
17424,source/Anna Shemerey.pdf,"EDUCATION 
 
"
17425,source/Anna Shemerey.pdf,"Bauman Moscow State Technical 
University, Moscow 
"
17426,source/Anna Shemerey.pdf,"2016 - 2019 
"
17427,source/Anna Shemerey.pdf,"B.S. in Computer Software Engineering 
"
17428,source/Anna Shemerey.pdf," 
 
"
17429,source/Anna Shemerey.pdf,"Lomonosov Moscow State University, 
Moscow 
"
17430,source/Anna Shemerey.pdf,"1999 - 2004 
"
17431,source/Anna Shemerey.pdf,"M.S. in Developmental and Child Psychology 
"
17432,source/Anna Shemerey.pdf," 
 
 
"
17433,source/Anna Shemerey.pdf,"PROJECTS 
 
"
17434,source/Anna Shemerey.pdf,"Vedomosti — print and online newspaper services 
(vedomosti.ru, hbr-russia.ru). 
"
17435,source/Anna Shemerey.pdf," 
"
17436,source/Anna Shemerey.pdf,"Express — enterprise messaging app. 
 
"
17437,source/Anna Shemerey.pdf,"Business Car — CRM system spanning all 
departments of Toyota dealers in Russia. 
"
17438,source/Viktor Pavlenko.pdf,"Viktor Pavlenko 
"
17439,source/Viktor Pavlenko.pdf,"Senior Software Engineer  
"
17440,source/Viktor Pavlenko.pdf,"WORK EXPERIENCE 
"
17441,source/Viktor Pavlenko.pdf,"Engineering Manager, Star Global - 01/2015 - present - Kyiv, Ukraine 
"
17442,source/Viktor Pavlenko.pdf," 
 
 
 
"
17443,source/Viktor Pavlenko.pdf,"+380976670000 
"
17444,source/Viktor Pavlenko.pdf,"Star is a global consultancy that delivers impactful technology products by connecting strategy, design 
and engineering. 
"
17445,source/Viktor Pavlenko.pdf,"⇢ Implemented and delivered assistant tool for automotive industry using Python, Flask, React, 
"
17446,source/Viktor Pavlenko.pdf,"MySQL, AWS and Terraform. Joined from the middle of the project and turned it into fully 
scalable and reliable platform, increased performance of response and build time by 50%. 
"
17447,source/Viktor Pavlenko.pdf,"⇢ Created frontend side of a fuel delivery platform, managed team of 10 engineers(grew it 
"
17448,source/Viktor Pavlenko.pdf,"from the zero). Integrated e2e and performance platform testing. Introduced React and 
React Native as a new stack and migrated legacy code to React and React Native. Built 
mobile delivery pipeline and publishing. 
"
17449,source/Viktor Pavlenko.pdf,"⇢ Created a platform to connect car owners to workshop in Express, Sequalize, MySQL, 
"
17450,source/Viktor Pavlenko.pdf,"Google Cloud, GraphQL and React Native. Introduced integration testing for all used 
vendors which reduced amount of bugs by 15%. 
"
17451,source/Viktor Pavlenko.pdf,"⇢ Created a product to extend the functionality of the messenger service with a search 
"
17452,source/Viktor Pavlenko.pdf,"engine, gallery and bots. Used Python, Django, Angular 2 to build fully scalable service. 
"
17453,source/Viktor Pavlenko.pdf,"⇢ Manage unit of backend engineers(50+), responsible for career development, project 
"
17454,source/Viktor Pavlenko.pdf,"allocation and performance evaluation 
"
17455,source/Viktor Pavlenko.pdf,"⇢ Drive and develop company expertise in Node.js, React Native and Golang: give tech talks, 
"
17456,source/Viktor Pavlenko.pdf,"run workshops, hire engineers 
"
17457,source/Viktor Pavlenko.pdf,"⇢ Build internal platform for performance evaluation, use NestJS, PostgreSQL, GraphQL and 
"
17458,source/Viktor Pavlenko.pdf,"React to move quickly from proof of concept to a ready scalable product. 
"
17459,source/Viktor Pavlenko.pdf," 
"
17460,source/Viktor Pavlenko.pdf,"Software Engineer, Django Stars - 01/2013 - 01/2015 - Kyiv, Ukraine 
"
17461,source/Viktor Pavlenko.pdf,"Django Stars provides startups and enterprises with Python development services 
"
17462,source/Viktor Pavlenko.pdf,"⇢ Implemented a mortgage advice platform using Python and Django. 
"
17463,source/Viktor Pavlenko.pdf,"⇢ Created a platform to join divers, used Python, Django and Tastypie. 
 
"
17464,source/Viktor Pavlenko.pdf,"Software Engineer, Diawest Telecom - 01/2011 - 01/2013 - Kyiv, Ukraine 
"
17465,source/Viktor Pavlenko.pdf,"Local telecommunication company. 
"
17466,source/Viktor Pavlenko.pdf,"⇢ Created and maintained email subscription service, used Python, MySQL and Postfix 
"
17467,source/Viktor Pavlenko.pdf,"⇢ Implemented and maintained many customer facing infrastructure tools using Python. 
"
17468,source/Viktor Pavlenko.pdf,"EDUCATION AND CERTIFICATES 
"
17469,source/Viktor Pavlenko.pdf,"2008 M.S. in Information Security, National Technical University of Ukraine “Igor Sikorsky Kyiv 
"
17470,source/Viktor Pavlenko.pdf,"Polytechnic Institute” 
"
17471,source/Viktor Pavlenko.pdf,"TECHNICAL SKILLS 
"
17472,source/Viktor Pavlenko.pdf,"(8+ years): Python, Django, Flask and Git 
"
17473,source/Viktor Pavlenko.pdf,"(4+ years): MySQL, PostgreSQL and Redis 
"
17474,source/Viktor Pavlenko.pdf,"(3+ years): React, React Native, Redux, ES6 and Git. 
"
17475,source/Viktor Pavlenko.pdf,"(2+ years): Nodejs, Express, Koa 
"
17476,source/Viktor Pavlenko.pdf,"LANGUAGES 
"
17477,source/Viktor Pavlenko.pdf,"English - Advanced 
"
17478,source/Viktor Pavlenko.pdf,"Your native language - Russian 
"
17479,source/Yuriy SHAKIRBEKOV.docx,"Yuriy SHAKIRBEKOV
"
17480,source/Yuriy SHAKIRBEKOV.docx,"shakirbekovyyyy@gmail.com | +1 469 748  1111
"
17481,source/Yuriy SHAKIRBEKOV.docx,"EDUCATION
"
17482,source/Yuriy SHAKIRBEKOV.docx,"Al-Farabi Kazakh National University
Bachelor of Science, Computer Science
"
17483,source/Yuriy SHAKIRBEKOV.docx,"Expected May 2021 
GPA: 3.4/4.0
"
17484,source/Yuriy SHAKIRBEKOV.docx,"Relevant coursework: Algorithms and Data Structures, Computer Architecture, Intro to Artificial Intelligence, 
Introduction to CS, Database Systems, Design and Analysis of Algorithms , Object-Oriented Programming, 
Programming Languages and Compilers, Principles of Data Science, Discrete Math, Calculus I, Linear Algebra
"
17485,source/Yuriy SHAKIRBEKOV.docx,"EXPERIENCE
"
17486,source/Yuriy SHAKIRBEKOV.docx,"Backend Developer (Freelancer)
Dec 2019 - Present
"
17487,source/Yuriy SHAKIRBEKOV.docx,"Almaty, Kazakhstan
• Successfully migrated code from PHP with MySQL to Django for a new web application
• Worked closely with clients to collect requirements and ensure project high quality
• Developed and maintained different web application programs
"
17488,source/Yuriy SHAKIRBEKOV.docx,"Azmiut Sol., Front End Developer Intern (offered a part-time position after internship)
Almaty, Kazakhstan
• Implemented web design and development principles to build stable software
• Tested application to identify bugs and technical issues before and after deploying
• Built stable and maintainable codebases using Angular, VueJS also integrated Telegram API’s
"
17489,source/Yuriy SHAKIRBEKOV.docx,"Jun 2019 - May 2020
"
17490,source/Yuriy SHAKIRBEKOV.docx,"• Implemented new features, functionality and capabilities on the eCommerce sites using Javascript, Ajax, CSS, JSON
"
17491,source/Yuriy SHAKIRBEKOV.docx,"Al-Farabi Kazakh National University, Software Engineering Intern
Dec 2018 - Feb 2019
"
17492,source/Yuriy SHAKIRBEKOV.docx,"Almaty, Kazakhstan
• Created a database app for construction industry products, and also created landing pages from different layouts
• Created Web application by using HTML5, JavaScript, and JQuery that provides solution for issues of the company
• Worked with Microsoft SQL Server technology and how to administer, create, upgrade, maintain, STIG, and 
customize manually and using SQL Queries
"
17493,source/Yuriy SHAKIRBEKOV.docx,"• Implemented products on the site using a database in PHP MySQL
"
17494,source/Yuriy SHAKIRBEKOV.docx,"PROJECTS
"
17495,source/Yuriy SHAKIRBEKOV.docx,"Braun Tau
• Successfully developed and published an adaptive website for a construction company
• Produced websites compatible with different type of devices
• Made a convenient and intuitive interface
"
17496,source/Yuriy SHAKIRBEKOV.docx,"Coffee Boom
• Participated in the development and played one of the main roles
• Created one of the interface options of web application that was used for the final release
"
17497,source/Yuriy SHAKIRBEKOV.docx,"SKILLS & CERTIFICATIONS
"
17498,source/Yuriy SHAKIRBEKOV.docx,"Programming Languages: Javascript, Java, C, C++, Python, SQL, HTML/CSS, C#, PHP
Frameworks/Tools: Bootstrap, Git, React, VueJS, Angular, Django, MongoDB, NodeJS, REST API, Ajax, JQuery
Certifications: Coursera | Crash Course on Python, Coursera | Advanced Styling with Responsive Design, Coursera | 
Interactivity with JavaScript
"
17499,source/Yuriy SHAKIRBEKOV.docx,"HONORS & AWARDS
"
17500,source/Yuriy SHAKIRBEKOV.docx,"Government Scholar: Awarded scholarship from the government for passing the unified national test for one of the 
highest score in country
ACM Olympic team: Participant in different programming competitions domestically
"
17501,source/IVAN LOPTEV.pdf,"IVAN LOPTEV 
"
17502,source/IVAN LOPTEV.pdf,"+7(909)370-71-11 ⬦ selllll@gmail.com  
"
17503,source/IVAN LOPTEV.pdf," 
EDUCATION 
"
17504,source/IVAN LOPTEV.pdf,"Higher School of Economics 
Sep 2019 – Expected Jun 2023 
"
17505,source/IVAN LOPTEV.pdf,"Bachelor in Applied Mathematics and Information Science 
GPA: 9.18/10.0 
"
17506,source/IVAN LOPTEV.pdf,"Samara Lyceum of Information Technology 
Sep 2017 – Jun 2019 
"
17507,source/IVAN LOPTEV.pdf,"Received a gold medal for academic excellence. 
"
17508,source/IVAN LOPTEV.pdf,"WORK EXPERIENCE 
"
17509,source/IVAN LOPTEV.pdf,"Linear Algebra Teaching Assistant 
Sep 2020 – Jun 2021 
"
17510,source/IVAN LOPTEV.pdf,"Higher School of Economics 
 
Moscow, Russia 
"
17511,source/IVAN LOPTEV.pdf,"Software Engineering Intern 
Jul 2020 – Sep 2020 
"
17512,source/IVAN LOPTEV.pdf,"Huawei 
Moscow, Russia 
"
17513,source/IVAN LOPTEV.pdf,"Ported an OS performance analysis system from Linux to Windows 10. Implemented a GUI for OS performance 
analysis tool using Python and Tcl/Tk. 
"
17514,source/IVAN LOPTEV.pdf,"Algorithms Teaching Assistant 
Aug 2019 
"
17515,source/IVAN LOPTEV.pdf,"Summer Informatics School 
Laagna, Estonia 
"
17516,source/IVAN LOPTEV.pdf,"Developed front-end for a sports website using HTML5, CSS3 and JavaScript. 
"
17517,source/IVAN LOPTEV.pdf,"Python Developer 
Jun 2018 – Aug 2018 
"
17518,source/IVAN LOPTEV.pdf,"SamExpress 
Samara, Russia 
"
17519,source/IVAN LOPTEV.pdf,"Developed and maintained some scrapers, including one that searches applications on a website and sends information 
about them on e-mail using Selenium and SMTP libraries. Developed a program which makes a raw Excel document 
readable using xlrd, xlwt and xlutils libraries. 
"
17520,source/IVAN LOPTEV.pdf,"SKILLS 
"
17521,source/IVAN LOPTEV.pdf,"Programming Languages 
C++, Python, C, Bash 
"
17522,source/IVAN LOPTEV.pdf,"Technologies 
Git/GitHub/GitLab, Windows, Linux 
"
17523,source/IVAN LOPTEV.pdf,"Languages 
native Russian, advanced English, beginner German 
"
17524,source/IVAN LOPTEV.pdf," 
PROJECTS 
"
17525,source/IVAN LOPTEV.pdf,"Hash Map. Implemented hash map with full functionality using separate chaining with linked list in C++. 
"
17526,source/IVAN LOPTEV.pdf,"External Sorting. Implemented external sorting (the algorithms splits all input into blocks, sorts them separately, 
and then ends up with a sorted array by recursively merging K array’s segments) using C++. 
"
17527,source/IVAN LOPTEV.pdf,"ACADEMIC ACHIEVEMENTS 
"
17528,source/IVAN LOPTEV.pdf,"• All-Russian Informatics Olympiad Awardee. 
"
17529,source/IVAN LOPTEV.pdf,"• Winner of ”Vyshaia Proba” Informatics Olympiad and all-Siberian Informatics Olympiad. 
"
17530,source/IVAN LOPTEV.pdf,"• Master at Codeforces. 
"
17531,source/IVAN LOPTEV.pdf,"HOBBIES 
"
17532,source/IVAN LOPTEV.pdf,"• Teaching school students algorithms and data structures individually. 
"
17533,source/IVAN LOPTEV.pdf,"• Attending healthy lifestyle. 
"
17534,source/IVAN LOPTEV.pdf,"• Studying two foreign languages: English and German. 
"
17535,source/ELIZAVETA FEDOSEEVA.docx,"ELIZAVETA FEDOSEEVA
"
17536,source/ELIZAVETA FEDOSEEVA.docx,"Berlin, Germany
"
17537,source/ELIZAVETA FEDOSEEVA.docx,"Contacts: fedoaava.eltr@gmail.com | LinkedIn | Telegram
"
17538,source/ELIZAVETA FEDOSEEVA.docx,"SUMMARY
"
17539,source/ELIZAVETA FEDOSEEVA.docx,"Creative and goal-oriented Frontend Developer with knowledge of building and maintaining web applications.   Proficient in 
HTML, CSS, JavaScript, and React; plus modern libraries and frameworks. Adept at identifying  opportunities  to  enhance 
front-end design and improve the user experience.
"
17540,source/ELIZAVETA FEDOSEEVA.docx,"EXPERIENCE
"
17541,source/ELIZAVETA FEDOSEEVA.docx,"Frontend  Developer
Jul 2020 - Nov 2021
"
17542,source/ELIZAVETA FEDOSEEVA.docx,"Hexlet.io
Online course
"
17543,source/ELIZAVETA FEDOSEEVA.docx,"• Learned and implemented knowledge of JavaScript, React, Redux, HTML/CSS in pet-projects.
• Performed coding, testing, CI/CD pipeline and maintenance of pet projects.
• Collaborated and worked with mentors and students on assigned tasks and study projects. Solved around 80 tasks on 
Hexlet.io and performed new features and methods in them.
"
17544,source/ELIZAVETA FEDOSEEVA.docx,"PROJECTS
"
17545,source/ELIZAVETA FEDOSEEVA.docx,"Google  Books  Search  app
Sep 2023 - Sep 
2023
Deploy: Books Search page
GitHub page: GitHub page project
"
17546,source/ELIZAVETA FEDOSEEVA.docx,"• Developed Google Books Search application using React, JavaScript, Redux (RTK-query), React-router-dom.
• Created multiple functionalities such as filtering by categories, sorting, displaying detailed book page and pagination.
• Database interaction such as getting books from Google API handled by Redux (RTK-query).
"
17547,source/ELIZAVETA FEDOSEEVA.docx,"Social Media app
Nov 2021 - Jan 2022
"
17548,source/ELIZAVETA FEDOSEEVA.docx,"Deploy: Social Media page (Email: free@samuraijs.com Password: free)
GitHub page: GitHub page project
"
17549,source/ELIZAVETA FEDOSEEVA.docx,"• Developed a frontend social network web application using React, Redux Toolkit, JavaScript, and Material UI as a 
user interface.
"
17550,source/ELIZAVETA FEDOSEEVA.docx,"• Created multiple functionalities such as liking posts, adding/deleting posts to a user’s wall, following/unfollowing friends, 
changing a profile photo, editing settings, and login/logout system.
"
17551,source/ELIZAVETA FEDOSEEVA.docx,"• Database interaction such as posts, users and comments handled by Redux Toolkit.
"
17552,source/ELIZAVETA FEDOSEEVA.docx,"Slack-simulator  app
Oct 2021 - Nov 2021
"
17553,source/ELIZAVETA FEDOSEEVA.docx,"Deploy: Slack page
GitHub page: GitHub page project
"
17554,source/ELIZAVETA FEDOSEEVA.docx,"• Developed slack-like messenger web application using React, JavaScript, Redux Toolkit, and Formik as forms and 
inputs in the application and React-Bootstrap as a user interface.
"
17555,source/ELIZAVETA FEDOSEEVA.docx,"• Created multiple functionalities such as adding/deleting a chat group, writing messages, and login/logout system.
• Database interaction such as messages and groups handled by Redux Toolkit.
"
17556,source/ELIZAVETA FEDOSEEVA.docx,"EDUCATION
"
17557,source/ELIZAVETA FEDOSEEVA.docx,"Frontend  Developer, Hexlet.io
Jul 2020 - Nov 2021
"
17558,source/ELIZAVETA FEDOSEEVA.docx,"Specialist in Economics,
"
17559,source/ELIZAVETA FEDOSEEVA.docx,"Faculty of Finance and Credit, Moscow Power Engineering Institute (MPEI)
Sep 2009 - May 2014
"
17560,source/ELIZAVETA FEDOSEEVA.docx,"SKILLS
"
17561,source/ELIZAVETA FEDOSEEVA.docx,"Programming languages: JavaScript (ES6+), TypeScript, HTML/CSS
Frameworks: React, NextJS, Redux Toolkit (RTK-query), Jest, Material-UI, Styled Components, Bootstrap
Developer Tools: Git, VS Code, Postman, FSD architecture, REST Api, Axios
"
17562,source/Victor Ivaniushenko.pdf,"Victor Ivaniushenko
"
17563,source/Victor Ivaniushenko.pdf,"nbgtr.ivaniushenko@gmail.com
Linkedin
"
17564,source/Victor Ivaniushenko.pdf,"Education
"
17565,source/Victor Ivaniushenko.pdf,"LVIV POLYTECHNIC NATIONAL UNIVERSITY
SEP 2019—JUN 2023
"
17566,source/Victor Ivaniushenko.pdf,"Computer Science, Artiﬁcial Intelligence — Bachelor, 3rd year (GPA: 3.47 / 4)
"
17567,source/Victor Ivaniushenko.pdf,"Relevant coursework: Algorithms and Data structures, Linear Algebra, Statistics and
"
17568,source/Victor Ivaniushenko.pdf,"Probability, Calculus, Databases, Operating Systems, Computer Architecture, OOP
"
17569,source/Victor Ivaniushenko.pdf,"Experience
"
17570,source/Victor Ivaniushenko.pdf,"MEMBER OF NON-PROFIT ORGANIZATION BEST LVIV
MAR 2020—PRESENT
"
17571,source/Victor Ivaniushenko.pdf,"Organizer and lector of BBC: BEST Beat Course 2021
"
17572,source/Victor Ivaniushenko.pdf,"–
Reached the audience through the webpage I created using React.js, so 30
"
17573,source/Victor Ivaniushenko.pdf,"students applied to the course
"
17574,source/Victor Ivaniushenko.pdf,"–
Taught participants a process of music production and got 14 students without
"
17575,source/Victor Ivaniushenko.pdf,"previous experience to compose a track
"
17576,source/Victor Ivaniushenko.pdf,"Organizer and designer of BEST Training Week`9
"
17577,source/Victor Ivaniushenko.pdf,"–
Designed and developed the informational website for students to apply to, so
"
17578,source/Victor Ivaniushenko.pdf,"106 participants rated the project as 9/10 on average and project design as 4/5
"
17579,source/Victor Ivaniushenko.pdf,"Personal Projects
"
17580,source/Victor Ivaniushenko.pdf,"DIGITAL MENU FOR RESTAURANTS WITH ORDERS MANAGEMENT STARTUP DEC 2021—NOV 2021
"
17581,source/Victor Ivaniushenko.pdf,"–
Designed and developed menu application using Django & PostgreSQL for backend
"
17582,source/Victor Ivaniushenko.pdf,"and React.js for frontend
– Containerized with Docker and described AWS infrastructure with Terraform
"
17583,source/Victor Ivaniushenko.pdf,"KEYBOARD SAMPLER
SEP 2021
"
17584,source/Victor Ivaniushenko.pdf,"Turns your computer keyboard into a sampler so you can record sound for each key
"
17585,source/Victor Ivaniushenko.pdf,"– Designed and developed an app using React.js
"
17586,source/Victor Ivaniushenko.pdf,"– Implemented CI/CD pipeline with GitHub Actions using Docker
"
17587,source/Victor Ivaniushenko.pdf,"ANNOUNCEMENT SERVICE REST API (COURSEWORK)
DEC 2020
"
17588,source/Victor Ivaniushenko.pdf,"–
Designed and implemented RESTful backend with user management using
"
17589,source/Victor Ivaniushenko.pdf,"Flask for message board
"
17590,source/Victor Ivaniushenko.pdf,"Skills
"
17591,source/Victor Ivaniushenko.pdf,"Languages: Python / JavaScript / SQL / Bash
"
17592,source/Victor Ivaniushenko.pdf,"Technologies: Git / Docker / AWS / Terraform / React.js
"
17593,source/Idar Kashaev.docx,"Idar Kashaev
Software Developer (.NET/C#)
Experience: 8 years 
tel. +7-929-582-11-14
"
17594,source/Idar Kashaev.docx,"TECHNICAL EXPERTISE
"
17595,source/Idar Kashaev.docx,"Programming Languages
C#, SQL, VBA, Python, JavaScript, HTML, CSS
"
17596,source/Idar Kashaev.docx,"Operating Systems
Windows, Linux
"
17597,source/Idar Kashaev.docx,"Databases
PostgreSQL, MS SQL Server, Couchbase, Cosmos DB, ArangoDB
"
17598,source/Idar Kashaev.docx,"Technologies
.NET, .NET Core, ASP.NET ( MVC / Web API), Microsoft Orleans,
Dapper, Entity Framework, SQLite, Django, React, Angular
"
17599,source/Idar Kashaev.docx,"Other
GIt, CI/CD, DI, Agile/Scrum, Docker, Azure, AWS
"
17600,source/Idar Kashaev.docx,"PROFESSIONAL EXPERIENCE
"
17601,source/Idar Kashaev.docx,"Project: MyQ - Smart Home and Smart Garage (January 2019 – now) 
https://www.myq.com/
"
17602,source/Idar Kashaev.docx,"Team Lead
Creating an application for remotely locks management.
"
17603,source/Idar Kashaev.docx,"Tools and environment: Azure, MS SQL, microservices, Web API, IoT 
Languages and Technologies: C# / .NET Framework, RabbitMQ, MQTT,
"
17604,source/Idar Kashaev.docx,"Responsibilities:
• Manage developers’ team and control stick to the terms;
• Improve application’s functionality, find and fixing bugs in code;
• Refactoring code;
"
17605,source/Idar Kashaev.docx,"Tools and environment: Octopus, Azure DevOps, Postman, RabbitMQ
Languages and Technologies: C# / .NET Core, Microservices, ASP.NET Core Web API, Microsoft 
SQL
"
17606,source/Idar Kashaev.docx,"Project: KREO Plan (January 2017 – January 2019) 
https://www.kreo.net/
"
17607,source/Idar Kashaev.docx,"Senior Software Engineer
"
17608,source/Idar Kashaev.docx,"This is an international project for European and American market. Single, cloud-based integrated 
platform for construction of cost estimation, scheduling and bidding. The aim is to take off quantities, 
estimate costs, produce Gantt chart and 4D model, run scenarios, optimize cost and duration and
"
17609,source/Idar Kashaev.docx,"IS Soft – Minsk, Belarus
"
17610,source/Idar Kashaev.docx,"KREO Soft – Minsk, Belarus
"
17611,source/Idar Kashaev.docx,"price bids in record time.
"
17612,source/Idar Kashaev.docx,"Responsibilities:
• Creating architecture of application in accordance with the requirements;
• Creating and estimating tasks for remotely working employees;
• Managing software development team;
• Checking the work results of a team;
"
17613,source/Idar Kashaev.docx,"Tools and environment: Linux, AWS, Docker, Postgres, Git
Languages and Technologies: C# / .NET Core, Microsoft Orleans Framework, 
ASP.NET Core Web API, React, HTML, CSS (SASS)
"
17614,source/Idar Kashaev.docx,"Project: Internal projects (August 2013 – January 2017) 
https://aeroclub.ru/
"
17615,source/Idar Kashaev.docx,".NET Developer (Full-stack)
"
17616,source/Idar Kashaev.docx,"Employee management system. Application allows sign up employee, visualize company structure, 
show map of the office.
"
17617,source/Idar Kashaev.docx,"Responsibilities:
• Built ASP.NET MVC/SQL-based websites for corporate needs;
• Developed various business objects and user interfaces;
• Performed refactoring of legacy code;
• Performed automation of functionality and unit-testing;
• Maintained software documentation;
• Provided support of current document management system;
"
17618,source/Idar Kashaev.docx,"Tools and environment: Microsoft SQL Server, IIS, TFS, JIRA
Languages and Technologies: .NET/C#, t-SQL, JavaScript, AngularJS, Bootstrap, Material Design.
"
17619,source/Idar Kashaev.docx,"Project: Online surveys (January 2012 – August 2013) 
https://www.gfk.com/
"
17620,source/Idar Kashaev.docx,"Software developer
"
17621,source/Idar Kashaev.docx,"Design and develop online surveys for the market research. 
"
17622,source/Idar Kashaev.docx,"Responsibilities:
• Performed programming questionnaires in systems for CATI / CAPI / CAWI surveys;
• Provided technical support and consultation on the survey program;
"
17623,source/Idar Kashaev.docx,"Tools and environment: JIRA, Visual Studio
Languages and Technologies: VBA, JavaScript, HTML, CSS, SPSS, Perl
"
17624,source/Idar Kashaev.docx,"EDUCATION
"
17625,source/Idar Kashaev.docx,"Bachelor’s degree
"
17626,source/Idar Kashaev.docx,"Faculty of Information Technologies 
"
17627,source/Idar Kashaev.docx,"Russian State Social University
"
17628,source/Idar Kashaev.docx,"Aeroclub – Moscow, Russia
"
17629,source/Idar Kashaev.docx,"GfK – Moscow, Russia
"
17630,source/Alex Morozko.pdf,"Alex Morozko
"
17631,source/Alex Morozko.pdf,"+374 (91) 000 253
aaan.morozko01@gmail.com
github.com/ol-aaarozko
"
17632,source/Alex Morozko.pdf,"Education
Saint Petersburg State University
July 2023
"
17633,source/Alex Morozko.pdf,"Bachelor of Software and Administration of Information Systems
GPA: 4.72 out of 5
"
17634,source/Alex Morozko.pdf,"Experience
Software Engineer, Ark networks − Yerevan, Armenia
Oct 2022 − Present
"
17635,source/Alex Morozko.pdf,"• Expanded RNIC test coverage by 50% by implementing test cases using InfiniBand Verbs API
• Collaborated with a 30-member industrial team in improving a proprietary distributed multi-threaded HW
"
17636,source/Alex Morozko.pdf,"NIC verification system written in C and Bash
"
17637,source/Alex Morozko.pdf,"• Augmented the expectation subsystem to validate VirtIO-Net packet receive filtering features
"
17638,source/Alex Morozko.pdf,"Embedded Software Engineer, OKTET Labs − Saint Petersburg, Russia
Oct 2019 − Oct 2022
"
17639,source/Alex Morozko.pdf,"• Accelerated auxiliary kernel loading on Wi-Fi routers by 65% by migrating firmware loading code from user
"
17640,source/Alex Morozko.pdf,"space to a kernel thread
"
17641,source/Alex Morozko.pdf,"• Designed and implemented API for using the serial port device file before mounting a root filesystem
• Accelerated OpenOnload fuzzing by 50x times using memory snapshots fuzzing technique
• Discovered one critical bug in an open-source user-level network stack OpenOnload by utilizing fuzzing
• Developed a Linux kernel module to store serial device logs from the start of the system, which allowed to
"
17642,source/Alex Morozko.pdf,"identify three unaddressed kernel crashes
"
17643,source/Alex Morozko.pdf,"• Maintained LED subsystem in U-Boot for diverse Wi-Fi router models, enabling LED control within U-Boot
"
17644,source/Alex Morozko.pdf,"Projects
Nyx-Net contribution
github.com/nyx-fuzz/packer/pull/23
"
17645,source/Alex Morozko.pdf,"• Extended an open-source fuzzer Nyx-Net with the capability of fuzzing socket API-intercepting libraries by
"
17646,source/Alex Morozko.pdf,"implementing real network mode
"
17647,source/Alex Morozko.pdf,"• Accelerated OpenOnload fuzzing speed by 50x times using extended Nyx-Net
"
17648,source/Alex Morozko.pdf,"AFLNet contribution
github.com/aflnet/aflnet/pull/70
"
17649,source/Alex Morozko.pdf,"• Extended an open-source fuzzer AFLNet, allowing it to fuzz applications in a separate network namespace
• Discovered one critical bug in an OpenOnload application accelerator by fuzzing it with AFLNet
"
17650,source/Alex Morozko.pdf,"PCAP Parser
github.com/ol-imorozko/pcap-parser
"
17651,source/Alex Morozko.pdf,"• Developed a C++ PCAP parser for a subset of the SPECTRA SIMBA public market data feed
• Employed design patterns for easily extendable and flexible code, enabling seamless integration with future
"
17652,source/Alex Morozko.pdf,"updates and protocols
"
17653,source/Alex Morozko.pdf,"Exec-on-board tool
github.com/ol-imorozko/exec-on-board
"
17654,source/Alex Morozko.pdf,"• Developed a single-binary Telnet client + TFTP server to facilitate work with embedded devices
"
17655,source/Alex Morozko.pdf,"Achievements
Russian National Olympiad in Informatics − Semi-Finals Winner
Mar 2019
"
17656,source/Alex Morozko.pdf,"• Semi-finals of the largest computer science competition for high school students in Russia
• 62nd place out of more than 18000 participants
"
17657,source/Alex Morozko.pdf,"Skills
"
17658,source/Alex Morozko.pdf,"Languages: C, C++, Bash, Python, OCaml, SQL
Technologies: RDMA, Fuzzing, Networking, TCP/IP, Kernel Bypass, Git, Make
"
17659,source/Oleg Protsenko.pdf,"Oleg Protsenko
"
17660,source/Oleg Protsenko.pdf,"425 Ballantrae Dr, Winnipeg, MB, R3T 6H6
"
17661,source/Oleg Protsenko.pdf,"Mobile: (431) 000-1091
fiaaadvert@gmail.com
"
17662,source/Oleg Protsenko.pdf,"https://www.linkedin.com/in/viaaaeslavprotsenko
"
17663,source/Oleg Protsenko.pdf,"/
"
17664,source/Oleg Protsenko.pdf,"SUMMARY
"
17665,source/Oleg Protsenko.pdf,"Experienced QA Automation Tester with a strong background in designing, developing, and executing automated test
scripts for web, mobile, and desktop applications. Proficient in multiple programming languages and test automation
tools, with a proven track record of improving software quality and efficiency. Skilled in collaborating with
cross-functional teams and integrating automation into CI/CD pipelines for rapid and reliable software delivery.
"
17666,source/Oleg Protsenko.pdf,"WORK EXPERIENCE
"
17667,source/Oleg Protsenko.pdf,"QA Software Tester, Identity Labs, NY
Jan 2023 - Aug 2023
"
17668,source/Oleg Protsenko.pdf,"●
Develop and document software testing plans
"
17669,source/Oleg Protsenko.pdf,"●
Install software and hardware and configure operating system software in preparation for testing
"
17670,source/Oleg Protsenko.pdf,"●
Execute and document results of software application tests and information and telecommunication systems tests
"
17671,source/Oleg Protsenko.pdf,"●
Develop and implement software and information system testing policies and procedures
"
17672,source/Oleg Protsenko.pdf,"●
Document and report deviations from specifications and tolerances
"
17673,source/Oleg Protsenko.pdf,"QA Software Tester, AB SOFT, Odessa, Ukraine
Jan 2022 - Dec 2022
"
17674,source/Oleg Protsenko.pdf,"●
Performed bug investigation (UI + API Heroku testing)
"
17675,source/Oleg Protsenko.pdf,"●
Develop and document software testing plans
"
17676,source/Oleg Protsenko.pdf,"●
Maintained deployment control
"
17677,source/Oleg Protsenko.pdf,"●
Opened tickets for bugs (Jira) and assignments for the development department
"
17678,source/Oleg Protsenko.pdf,"●
Managed the ETA development department to fix bugs and review the resolution, including granting permissions
for deployment and managing the release process
"
17679,source/Oleg Protsenko.pdf,"●
Wrote test cases and documentation, as well as new tests to test innovations
"
17680,source/Oleg Protsenko.pdf,"●
Collaborated with external services: AWS, NetSuite, SalesForce
"
17681,source/Oleg Protsenko.pdf,"●
Performed framework optimization
"
17682,source/Oleg Protsenko.pdf,"EDUCATION
"
17683,source/Oleg Protsenko.pdf,"College of Industrial Automation at the Academy of Refrigeration, Odesa, Ukraine
2014-2018
"
17684,source/Oleg Protsenko.pdf,"Bachelor in Software Development
"
17685,source/Oleg Protsenko.pdf,"VOLUNTEERING
"
17686,source/Oleg Protsenko.pdf,"QA Software Tester, R9 Adverstisment, London, UK
Jan 2023 - Present
"
17687,source/Oleg Protsenko.pdf,"Startup
"
17688,source/Oleg Protsenko.pdf,"●
Develop and document software testing plans
"
17689,source/Oleg Protsenko.pdf,"●
Install software and hardware and configure operating system software in preparation for testing
"
17690,source/Oleg Protsenko.pdf,"●
Execute and document results of software application tests and information and telecommunication systems tests
"
17691,source/Oleg Protsenko.pdf,"HARD SKILLS:
"
17692,source/Oleg Protsenko.pdf,"Languages: Java 8.0, JavaScript
Software: Intelijj Idea , Visual Studio Code, Postman
Technical Skills: JSON · REST · JIRA · Salesforce.com · Git - Selenium WebDriver, TestNG, AssertJ, Maven, Jenkins -
Cypress - SCRUM, HTML , API
"
17693,source/Ivan Sandalov.docx,"Ivan Sandalov
Senior QA Engineer
"
17694,source/Ivan Sandalov.docx,"    sand_i@hey.com      
+491755290000
      Munich, Germany
   
"
17695,source/Ivan Sandalov.docx,"Summary
"
17696,source/Ivan Sandalov.docx,"12+ years of extensive experience as a Senior QA Engineer. I am a strong advocate and an evangelist for software quality. I 
enjoy complex tasks requiring research and self-development. My goal is to find a challenging QA position and grow as a 
professional, especially in test automation.
"
17697,source/Ivan Sandalov.docx,"Professional Skills
"
17698,source/Ivan Sandalov.docx,"Manual\\Automation   Testing
Exploratory Testing
Python Java
"
17699,source/Ivan Sandalov.docx,"Analysis and Research
Problem Solving
"
17700,source/Ivan Sandalov.docx,"JetBrains 
"
17701,source/Ivan Sandalov.docx,"Senior QA Engineer 
"
17702,source/Ivan Sandalov.docx,"08/2014 - present
"
17703,source/Ivan Sandalov.docx,"JetBrains Security 
"
17704,source/Ivan Sandalov.docx,"Analyst 01/2019 - 
"
17705,source/Ivan Sandalov.docx,"12/2019
"
17706,source/Ivan Sandalov.docx,"JetBrains
"
17707,source/Ivan Sandalov.docx,"QA Team Lead 
"
17708,source/Ivan Sandalov.docx,"02/2018 - 06/2019
"
17709,source/Ivan Sandalov.docx,"Genesys/Alcatel-Lucent 
"
17710,source/Ivan Sandalov.docx,"DevOps    Engineer 
"
17711,source/Ivan Sandalov.docx,"09/2013 - 08/2014
"
17712,source/Ivan Sandalov.docx,"Genesys/Alcatel-Lucent 
"
17713,source/Ivan Sandalov.docx,"Senior QA Engineer 
"
17714,source/Ivan Sandalov.docx,"09/2011 - 10/2013
"
17715,source/Ivan Sandalov.docx,"Exigen Services 
"
17716,source/Ivan Sandalov.docx,"Senior QA Engineer 
"
17717,source/Ivan Sandalov.docx,"12/2010 - 09/2011
"
17718,source/Ivan Sandalov.docx,"Work experience
"
17719,source/Ivan Sandalov.docx,"Performing functional testing of various IntelliJ platform subsystems, including 
Application Servers, JavaEE, JSP, GWT, Docker, Internal Documentation.
Automation testing of the IntelliJ IDEA, using Kotlin, and an internal tool based on 
the Robot Framework. This led to a reduction of the smoke test time at least by 
50%.
As a dedicated Core team QA helping several lead developers to deliver updates and 
fixes to the mission-critical functionality, like licensing, indexing, VFS, IDE 
updates. Performing code reviews.
Member of an IntelliJ Release Working group. My responsibility is cross- product 
coordination and task distribution.
"
17720,source/Ivan Sandalov.docx,"Handled security incidents and performed penetration testing of the company 
products.
Discovered several security issues including publicly disclosed CVE-2020- 7913.
"
17721,source/Ivan Sandalov.docx,"Started 20% internal feature usage statistics project from the ground up, including 
functional testing of data collectors on the IDE side, ETL jobs on the backend (AWS), 
and frontend web UI testing with Python and Selenium.
Led QA part of the project from 2 members (1 QA) to 20 members (3 QA)
"
17722,source/Ivan Sandalov.docx,"Automated deployment of the Genesys Call Center solutions using Chef, Ruby, and 
Python to the AWS (EC2, RDS, R53)
As a team, we reduced solution configuration time from 2 months per customer to 
1 day per customer using lego block architecture for our automation.
"
17723,source/Ivan Sandalov.docx,"I performed system, regression, and user acceptance testing of the reporting 
applications.
Integration testing of the ETL services using complex SQL queries.
"
17724,source/Ivan Sandalov.docx,"Performed functional testing of the Deutsche Bank London middle office corporate 
actions processing system capable of handling the bank's global settlement 
requirements for securities, dividends calculation, and position management.
Participated in on-call shifts to provide support for the bank analytics team outside 
of business hours
"
17725,source/Ivan Sandalov.docx,"BCC
"
17726,source/Ivan Sandalov.docx,"Senior QA Engineer 
"
17727,source/Ivan Sandalov.docx,"03/2010 - 12/2010
"
17728,source/Ivan Sandalov.docx,"Oberon Media 
"
17729,source/Ivan Sandalov.docx,"QA Engineer 
"
17730,source/Ivan Sandalov.docx,"09/2008 - 12/2009
"
17731,source/Ivan Sandalov.docx,"Work experience
"
17732,source/Ivan Sandalov.docx,"Performed testing of the IPTV solution for the biggest Telecom operator in Russia.
Cross-platform testing of various supported devices, including   set-top-boxes, TV 
apps, and mobile apps (IOS, Android).
"
17733,source/Ivan Sandalov.docx,"Manual testing of web sites developed using ASP.NET
"
17734,source/Ivan Sandalov.docx,"Moscow University of Industry 
and Finance
"
17735,source/Ivan Sandalov.docx,"2014 - 2017
"
17736,source/Ivan Sandalov.docx,"Education
"
17737,source/Ivan Sandalov.docx,"Bachelor of Computer Science
"
17738,source/Ivan Sandalov.docx,"Certificates
"
17739,source/Ivan Sandalov.docx,"2013
ISTQB Foundation
"
17740,source/Pavel Proskurnikov.docx,"Pavel Proskurnikov
"
17741,source/Pavel Proskurnikov.docx,"Bremen, Germany
"
17742,source/Pavel Proskurnikov.docx,"(+49) 1620004363   |
milaeaaao@gmail.com   |
iaaai.dev   |   
 Iaaaaee   |   
 pavel-paaakurnikov
"
17743,source/Pavel Proskurnikov.docx,"Experience  
"
17744,source/Pavel Proskurnikov.docx,"Digital Security (Audit Department, Research)
"
17745,source/Pavel Proskurnikov.docx,"• Place: Russia, Saint Petersburg
• Dates: June ‑ August 2021, 3 months
• Researched persistence methods in different OS types (Windows/Linux) (github)
• Made cheatsheets for methods of persistence in Windows and Linux
• Implemented a tool for persistence automation in Linux systems.
"
17746,source/Pavel Proskurnikov.docx,"JetBrains (Software Engineer, Internship)
• Place: Germany, Bremen
• Dates: June ‑ August 2023, 3 months
• Implemented assembly language (NASM) in ReSharper
• Implemented lexer, syntax parsing, hints, errors highlighting, and analyzing
• Performance optimizations by using performance profilers.
JetBrains (Software Engineer, Work student)
• Place: Germany, Bremen
• Dates: November 2023 ‑ May 2024, 7 months
• Diploma work (Details hidden for now)
Achievements  
"
17747,source/Pavel Proskurnikov.docx,"04.2021 Finished 15th out of ~1000 participants, prize‑winner, Saint Petersburg state university math Olympiad
"
17748,source/Pavel Proskurnikov.docx,"Russia 
"
17749,source/Pavel Proskurnikov.docx,"03.2020 Finished in top 5% among ~1500 participants, prize‑winner, ”Phystech” math Olympiad (MIPT)
"
17750,source/Pavel Proskurnikov.docx,"Russia 
"
17751,source/Pavel Proskurnikov.docx,"10.2021 Finished 9th (red team ”Wetox”), Standoff, cybersecurity competition between blue and red teams
"
17752,source/Pavel Proskurnikov.docx,"Russia 
"
17753,source/Pavel Proskurnikov.docx,"06.2021 Finished 7th out of 200 teams, CTF Zone, cybersecurity competition in the format ”capture the flag”
"
17754,source/Pavel Proskurnikov.docx,"Worldwid
e
"
17755,source/Pavel Proskurnikov.docx,"Skills  
"
17756,source/Pavel Proskurnikov.docx,"Programming Languages
C/C++ (advanced), C# (advanced), Python (intermediate), Bash 
(intermediate)
"
17757,source/Pavel Proskurnikov.docx,"Spoken Languages
English (~C1, advanced), German (A1+, learning), Russian (native)
"
17758,source/Pavel Proskurnikov.docx,"Technologies & Frameworks
Linux (advanced), Windows (intermediate), Docker (advanced), Git 
(advanced), Apache/Ngnix (intermediate)
"
17759,source/Pavel Proskurnikov.docx,"Professional Certifications
HTB CPTS
"
17760,source/Pavel Proskurnikov.docx,"Projects  
"
17761,source/Pavel Proskurnikov.docx,"Nintendo Entertainment System emulator (github)
"
17762,source/Pavel Proskurnikov.docx,"• Languages & Frameworks : C++, Boost, Cmake, Qt
• Worked in a team of 3.
• The program can run digitized cartridges that had been used by real NES.
• Emulates all meaningful hardware components like CPU, CPU BUS, PPU, RAM/ROM, mappers, and controller.
• Implemented functionality like ”Cheat engine”, which allows the user to search and change values in ROM/RAM, 
and play through the network.
"
17763,source/Pavel Proskurnikov.docx,"• Implemented by me: CPU, CPU BUS emulations, ”Cheat engine” logic and play through the network.
"
17764,source/Pavel Proskurnikov.docx,"PDB‑extractor (github)
"
17765,source/Pavel Proskurnikov.docx,"• Languages & Frameworks: C# (without any additional libraries)
• Receives the list of PE files from the command line and extracts a PDB file location
• Parses a PDB file information in different streams and prints it in the console
"
17766,source/Pavel Proskurnikov.docx,"Console chat (github)
"
17767,source/Pavel Proskurnikov.docx,"• Languages & Frameworks: Python3, SqlAlchemy, Flask, Gunicorn
• Creating groups for chatting
• Sending/getting messages by the Flask routes, saving messages history using SqlAlchemy
"
17768,source/Pavel Proskurnikov.docx,"• Possibility of multi‑processing by Gunicorn
"
17769,source/Pavel Proskurnikov.docx,"Education  
"
17770,source/Pavel Proskurnikov.docx,"Constructor University Bremen (2022 Sep ‑ 2024 Jun, Bachelor)
Bremen, Germany
"
17771,source/Pavel Proskurnikov.docx,"• Bachelor of Computer Science program, taking additional JetBrains courses in addition to the university classes
"
17772,source/Pavel Proskurnikov.docx,"Higher School of Economics (2021 Sep ‑ 2022 Jul) (GPA 8.62/10)
Saint Petersburg, Russia
"
17773,source/Pavel Proskurnikov.docx,"• Faculty of mathematics and computer science, bachelor of ”Applied Mathematics and Informatics” program
"
17774,source/Marat Drozdov.docx,"Mobile: +1-484-716-4549
"
17775,source/Marat Drozdov.docx,"Skills
Languages:
JAVASCRIPT, TYPESCRIPT, HTML/CSS.
"
17776,source/Marat Drozdov.docx,"Application:
JIRA, GitLab, Bitbucket, Figma, Invision, Splunk, Postman, Swagger, Mural, Jenkins Tech stack:
Angular 2+, ReactJS, Vite, Ngrx, Redux, RxJS, Flow, SASS, LESS, npm,
Tailwind CSS, Node.js, Flowbite, Puppeteer, Jenkins, OpenShift
W ebpack, gulp, grunt, Storybook, Highcharts.js, Three.js, Charts.js, Jquery.
"
17777,source/Marat Drozdov.docx,"Testing:
Jest, Karma, Jasmine, Cypress, Stryker, PACT, Axe, JAWS. 
Methodologies:
Waterfall, Kanban, Scrum.
"
17778,source/Marat Drozdov.docx,"Experience
Virtusa
Full-time
Lead UI Engineer
October 2022 - Present
"
17779,source/Marat Drozdov.docx,"-
Designed and implemented platform React JS application
"
17780,source/Marat Drozdov.docx,"-
Implemented micro front end architecture using Vite Federation and React JS
"
17781,source/Marat Drozdov.docx,"-
Conducted technical interviews
"
17782,source/Marat Drozdov.docx,"-
Raised test coverage from 50 to 95%
"
17783,source/Marat Drozdov.docx,"-
Onboarded and mentored senior engineers
"
17784,source/Marat Drozdov.docx,"-
Implemented npm uikit library
"
17785,source/Marat Drozdov.docx,"EPAM Systems USA
Full-time
Lead Software engineer
Mar 2020 –
"
17786,source/Marat Drozdov.docx,"October2022
-
Created Angular components library using ng-packagr and storybook which helped to break down monolith application 
into multiple micro-frontends.
"
17787,source/Marat Drozdov.docx,"-
Built angular micro-frontends which resulted in reduced regression testing time by 50% and simplified release procedure 
by making it independent for each team.
"
17788,source/Marat Drozdov.docx,"-
Cover core features of application with Cypress tests which improved the overall health of the code base.
"
17789,source/Marat Drozdov.docx,"-
Conducted technical interviews for external candidates as certified tech interviewer with 75% hire rate.
"
17790,source/Marat Drozdov.docx,"-
Developed large module for creating tasks for non-commercial open source application Autie.io
"
17791,source/Marat Drozdov.docx,"EPAM Systems RUS
Full-time
Software Engineer, Senior Software engineer
May 2018 – Mar 2020
"
17792,source/Marat Drozdov.docx,"-
Implemented mobile version for the internal EPAM application using Angular 12 from the scratch, which resulted in raised 
number of participants and improvement of usage metrics.
"
17793,source/Marat Drozdov.docx,"-
Established quality gates for the project by adding pre-commit hooks and PRs validation checks in addition to code review 
guidelines. Raised unit and integration test coverage from 62 to 89% by managing the tech debt and prioritizing backlog.
"
17794,source/Marat Drozdov.docx,"-
Migrated ReactJS application from Flow to Typescript which improved the health of the code base and lead to the reduced 
number of errors.
"
17795,source/Marat Drozdov.docx,"-
Built analytics library using JS that added value for project management and ability to track analytics via splun dashboard.
"
17796,source/Marat Drozdov.docx,"Bell integrator
Full-time
Software engineer
Jan 2018 – May 2018
"
17797,source/Marat Drozdov.docx,"-
Implemented application for the National Banking system, using Knockout.js and typescript, built vocabular service and 
integrated it into the system that helped to improve performance by using Rx.js.
"
17798,source/Marat Drozdov.docx,"-
Worked with UX and accessibility team on improving page accessibility using HTML properties and W3C standards.
"
17799,source/Marat Drozdov.docx,"-
Initiated integration test implementation which lead to raising coverage from 0 to 60% for a quarter using jest, which helped to 
reduce number of defects by half.
"
17800,source/Marat Drozdov.docx,"SIBUR Holding LLC
Full-time
Software engineer
May 2017 – Jan 2018
"
17801,source/Marat Drozdov.docx,"-
Designed architecture and built web application using ReactJS for accounting department, application was nominated and awarded 
“Innovation of the year”.
"
17802,source/Marat Drozdov.docx,"-
Built multipage learning system for new employees onboarding, which made the process automated using native JS and CSS, 
later migrating it to React JS which made application fast and lightweight.
"
17803,source/Marat Drozdov.docx,"Builda Team
Full-time
Software engineer
Jun 2016 – May 2017
"
17804,source/Marat Drozdov.docx,"-
Made pixel perfect one-page websites from Figma designs using Jquery, JS and CSS.
"
17805,source/Marat Drozdov.docx,"-
Improved SEO metrics for existing webpages by using semantic HTML and analyzing tools
"
17806,source/Marat Drozdov.docx,"-
Worked on making existing webpages responsive using Bootstrap, media queries, css-grids and flex-boxes.
"
17807,source/Marat Drozdov.docx,"Education
"
17808,source/Marat Drozdov.docx,"State Linguistics University of Nizhniy Novgorod , Masters in Public Relations 2010-2015
"
17809,source/Vadim Brezovsky.pdf," 
"
17810,source/Vadim Brezovsky.pdf," 
"
17811,source/Vadim Brezovsky.pdf,"Vadim Brezovsky 
"
17812,source/Vadim Brezovsky.pdf," 
"
17813,source/Vadim Brezovsky.pdf,"Java Software Developer 
"
17814,source/Vadim Brezovsky.pdf," 
"
17815,source/Vadim Brezovsky.pdf," 
"
17816,source/Vadim Brezovsky.pdf,"Summary 
"
17817,source/Vadim Brezovsky.pdf," 
"
17818,source/Vadim Brezovsky.pdf,"• 
Experience in commercial software development - 1 year as Java developer. 
"
17819,source/Vadim Brezovsky.pdf,"• 
Have 4 months of remote work experience. 
"
17820,source/Vadim Brezovsky.pdf,"• 
Practical work with Python, Bash and SQL. 
"
17821,source/Vadim Brezovsky.pdf,"• 
Good work in team. Easy to learn. Admirable analytical skills. 
"
17822,source/Vadim Brezovsky.pdf," 
"
17823,source/Vadim Brezovsky.pdf,"Skills 
"
17824,source/Vadim Brezovsky.pdf," 
"
17825,source/Vadim Brezovsky.pdf,"• 
Java: Spring Framework (Boot, MVC, Data), Gradle, Maven, Hibernate, JUnit. 
"
17826,source/Vadim Brezovsky.pdf,"• 
JavaScript: React, npm. 
"
17827,source/Vadim Brezovsky.pdf,"• 
Databases: SQL (SQLite, PostgreSQL, MS SQL Server). 
"
17828,source/Vadim Brezovsky.pdf,"• 
Other skills: Linux (primary OS), Git, AWS, HTML, CSS, Bootstrap, Jenkins, Bash, 
Python. 
"
17829,source/Vadim Brezovsky.pdf," 
"
17830,source/Vadim Brezovsky.pdf,"Employment 
"
17831,source/Vadim Brezovsky.pdf," 
"
17832,source/Vadim Brezovsky.pdf,"• 
STiM (Nov 2019 - Present) 
◦ Wialon Analytics – analytical system for cars sensors monitoring: 
"
17833,source/Vadim Brezovsky.pdf,"▪ Designed and implemented the system (both front and backend) from scratch. 
"
17834,source/Vadim Brezovsky.pdf,"Technologies: Java, JavaScript, React, SQLite, MS SQL Server. 
"
17835,source/Vadim Brezovsky.pdf," 
"
17836,source/Vadim Brezovsky.pdf,"Awards and Initiatives 
"
17837,source/Vadim Brezovsky.pdf," 
"
17838,source/Vadim Brezovsky.pdf,"• 
Hackathon""#BRESTHACK2018""- 3rd place as a team member of 2 people: 
◦ Developed product from scratch to MVP in a limited time (only 48h). 
◦ Prepared and presented our product (experience with public speaking). 
"
17839,source/Vadim Brezovsky.pdf,"• 
Brest Python Meetup (Feb 29, 2019) - co-organizer and speaker. 
"
17840,source/Vadim Brezovsky.pdf," 
"
17841,source/Vadim Brezovsky.pdf,"Languages 
"
17842,source/Vadim Brezovsky.pdf," 
"
17843,source/Vadim Brezovsky.pdf,"• 
English – B1 (Intermediate). 
"
17844,source/Vadim Brezovsky.pdf,"• 
Russian – Native. 
"
17845,source/Vadim Brezovsky.pdf," 
"
17846,source/Vadim Brezovsky.pdf,"Education 
"
17847,source/Vadim Brezovsky.pdf," 
"
17848,source/Vadim Brezovsky.pdf,"• 
Brest State Polytechnic College - Mechanical Technical (2016 – 2020). 
"
17849,source/Elena Araslanova.docx,"Software Engineer
"
17850,source/Elena Araslanova.docx,"Elena Araslanova
"
17851,source/Elena Araslanova.docx,"araslanova.elen.a@gmail.com | Visa sponsorship required
"
17852,source/Elena Araslanova.docx,"TECHNICAL SKILLS
"
17853,source/Elena Araslanova.docx,"Languages: C++, Python, SQL, Go
Developer Tools: Git, Docker, Linux
Domain Knowledge: machine learning, deep learning, computer vision
Libraries: C++ - stl, gtest, Qt, ffmpeg; Python - the majority of ML libraries, OpenCV, pytest
"
17854,source/Elena Araslanova.docx,"EXPERIENCE
"
17855,source/Elena Araslanova.docx,"Software Engineer (Machine Learning), C++ + ML + Python
06/19 - 12/20
"
17856,source/Elena Araslanova.docx,"Video Analysis Technologies
"
17857,source/Elena Araslanova.docx,"• Developed completely new modules for C++ face analysis library, integrated 10+ deep learning 
pipelines into the library, including Python/C/C# bindings to deliver DL models to customers;
"
17858,source/Elena Araslanova.docx,"• Patched 3 opensource libraries, added CI with TDD, increased researchers’ work processes x2 times;
"
17859,source/Elena Araslanova.docx,"• Built 4 cross platform demo applications for customers with parallel data processing;
"
17860,source/Elena Araslanova.docx,"• Wrote backend for data collection services, collected a database of 500 000 domain-specific images in 
6 months; developed pipelines for video preprocessing and generation of synthetic frames to increase 
quality of data;
"
17861,source/Elena Araslanova.docx,"• Conduct code review for interns;
"
17862,source/Elena Araslanova.docx,"• Completed a computer vision research task; built and made 2 production updates
"
17863,source/Elena Araslanova.docx,"of 2D Face anti-spoofing classifier (increased ROC AUC from 0.92 to 0.97), tried 5 NN approaches.
"
17864,source/Elena Araslanova.docx,"Python Developer, 10 h/week, Python + ML
01/19 - 12/19
"
17865,source/Elena Araslanova.docx,"Skoltech university laboratory, Neural Architecture Search project for Huawei
"
17866,source/Elena Araslanova.docx,"• Reproduced 6 of the latest articles and compared 
performance. Prepared summaries for 4 meetings with 
Huawei ;
"
17867,source/Elena Araslanova.docx,"• The work became a basis of my MSc thesis.
"
17868,source/Elena Araslanova.docx,"Data Analyst, Python + SQL
04/17 - 03/18
"
17869,source/Elena Araslanova.docx,"Home Credit and Finance Bank
"
17870,source/Elena Araslanova.docx,"• Improved the customer journey: created and tested hypotheses, visualized results
"
17871,source/Elena Araslanova.docx,"and pitched conclusions for product managers and marketing director: retention was improved 
by 10%, 1 successful card product was launched;
"
17872,source/Elena Araslanova.docx,"• Reduced time of report building from hours to minutes.
"
17873,source/Elena Araslanova.docx,"EDUCATION
"
17874,source/Elena Araslanova.docx,"Yandex School of Data Analysis
MSc-level, 
Computer 
"
17875,source/Elena Araslanova.docx,"Science The most selective master program in Russia (3% enrollment rate, 40% dropout rate)
"
17876,source/Elena Araslanova.docx,"2018 - ’21 Higher School 
"
17877,source/Elena Araslanova.docx,"of Economics & Skoltech
MSc, 
Data 
"
17878,source/Elena Araslanova.docx,"Science
Worked in a university laboratory for 1 year
2018 - ’20
"
17879,source/Elena Araslanova.docx,"Higher School of Economics
BSc, 
Applied 
"
17880,source/Elena Araslanova.docx,"Mathematics
"
17881,source/Elena Araslanova.docx,"QS World University Rankings: top 100 in Mathematics, top 200 in Computer Science
2014 - ’18
"
17882,source/Leonid Brovtsev.docx,"Leonid Brovtsev
"
17883,source/Leonid Brovtsev.docx,"Software Engineer
"
17884,source/Leonid Brovtsev.docx,"Moscow, Russian Federation
+7 (916) 000-29-64
luaaandodok@gmail.com
"
17885,source/Leonid Brovtsev.docx,"Experience
"
17886,source/Leonid Brovtsev.docx,"December 2020 - PRESENT
Wargaming, Moscow - Software Engineer
"
17887,source/Leonid Brovtsev.docx,"https://wotblitz.com The Moscow ofﬁce of Belarusian game company
"
17888,source/Leonid Brovtsev.docx,"I work as a game developer in World of Tanks Blitz project. The team I work in 
develops new gameplay features on the client side. I mainly use C++ and a local 
custom built engine now.
"
17889,source/Leonid Brovtsev.docx,"April 2018 - December 2020
Yandex Taxi, Moscow - Software Engineer
"
17890,source/Leonid Brovtsev.docx,"https://taxi.yandex.com Russian ride hailing service
"
17891,source/Leonid Brovtsev.docx,"I worked as a software developer in a strong team. Our project was a complex system 
"
17892,source/Leonid Brovtsev.docx,"using microservices and a lot of internal Yandex’s tools. Responsibility of my team 
"
17893,source/Leonid Brovtsev.docx,"was about everything related to B2B. I used Python (80% of time) and C++ (20% of 
"
17894,source/Leonid Brovtsev.docx,"time) on my job: Python 2/3 , C++17, aiohttp, twisted, MongoDB, PostgreSQL.
"
17895,source/Leonid Brovtsev.docx,"July 2017 - March 2018
Gett, Moscow - fiunior Software Develofier
"
17896,source/Leonid Brovtsev.docx,"https://gett.com The Moscow ofﬁce of Israel ride hailing company
"
17897,source/Leonid Brovtsev.docx,"I was a part of Full-Stack developer team that created web apps for Russian drivers 
and cab companies. We used Python3, Django, PostgreSQL, celery, JS, React, Redux, 
webpack.
"
17898,source/Leonid Brovtsev.docx,"September 2014 - July 2017
National Research Nuclear University MEPhI, Moscow - Laboratory Assistant
"
17899,source/Leonid Brovtsev.docx,"http://www.nevod.mephi.ru/en/ Experimental Physics Laboratory
"
17900,source/Leonid Brovtsev.docx,"I used to develop reliable software for scientiﬁc research. Software that I wrote 
was used to control of extensive air showers station (NEVOD-EAS) and also 
worked on various data processing scripts. I used C++11, Qt, boost::asio, 
Python3, Flask, NumPy.
"
17901,source/Leonid Brovtsev.docx,"Education
"
17902,source/Leonid Brovtsev.docx,"September 2013 - July 2017
National Research Nuclear University MEPhI, Moscow - Bachelor’s degree
"
17903,source/Leonid Brovtsev.docx,"Experimental nuclear physics
"
17904,source/Aldar Myagky.pdf,"Aldar MyAgKY
"
17905,source/Aldar Myagky.pdf,"@nemyagky | iald.mag.web@gmail.com | 7-996-000-01-45 | github/naayagky | Russia, Saint Petersburg
"
17906,source/Aldar Myagky.pdf,"WORK EXPERIENCE
"
17907,source/Aldar Myagky.pdf,"• SELF-EMPLOYED
| FuLLSTAcK DEVELOPER
Saint Petersburg | June 2020 – June 2021
"
17908,source/Aldar Myagky.pdf,"– Virtual keyboard, showing all available hotkeys for Figma, IDE redactor, etc. shortcutter.ru
– Participation in a three-month accelerator with a psychology project for 16-23 years old people
– Software for an animal shelter, transmitting a real-time image from cameras to the administration
– Participation in 4-5 smaller projects. More about this period in the projects section below
"
17909,source/Aldar Myagky.pdf,"• SIDENIS | ANGuLAR DEVELOPER
Saint Petersburg | March 2020 - June
2020
"
17910,source/Aldar Myagky.pdf,"– Developing huge Front-end software for an insurance company via Angular; NgRx on Front-end side,
"
17911,source/Aldar Myagky.pdf,"Node.js, Express.js on Back-end microservice side. Agile, autotesting, calls with foreign analytics
"
17912,source/Aldar Myagky.pdf,"– Was responsible for developing new Angular pages, REST API endpoints, bug fixes, etc.
"
17913,source/Aldar Myagky.pdf,".
"
17914,source/Aldar Myagky.pdf,"• EDISON | ANGuLAR DEVELOPER
Kemerovo | June 2019 – January
2020
"
17915,source/Aldar Myagky.pdf,"Software for airport-like medical terminals, used for measuring pressure, doing an alcohol text,
etc. Was responsible for:
"
17916,source/Aldar Myagky.pdf,"– Communications with physical USB equipment via Node.js + SerialPort
– Electron.js app configuration & Linux installation
– Angular + Electron.js desktop app developing. Helping with Angular Front-end admin panel
– Creating electronic certifications for medical examinations results
"
17917,source/Aldar Myagky.pdf,"PROJECTS
"
17918,source/Aldar Myagky.pdf,"• SHORTCUTTER
ANGuLAR, ELEcTRON.js, NODE.js, C++,
WiNAPI
"
17919,source/Aldar Myagky.pdf,"Virtual keyboard, showing all available hotkeys for Figma, IDE redactor, etc. Angular, Node.js.
Windows/macOS installation via Electron.js. Includes 8 C++ and 4 Python dependencies
"
17920,source/Aldar Myagky.pdf,"• YANHO
"
17921,source/Aldar Myagky.pdf,"Acceleration with a project, helping young people get psychology help. During the acceleration 150 castdev
have been completed, 7 hypotheses have been tested and the first sales have been made
"
17922,source/Aldar Myagky.pdf,"• ZEFIR
ANGuLAR, WEBRTC,
ExPRESS.js, C++
"
17923,source/Aldar Myagky.pdf,"Software for an animal shelter, used to look after the pets. C++ REST API server, used to manage webcams,
Angular + WebRTC Front-End website, Node.js microservices
"
17924,source/Aldar Myagky.pdf,"• REPEAT ENGLISH
ANGuLAR NATIVE, NGRx, FLuTTER,
FIREBASE
"
17925,source/Aldar Myagky.pdf,"Android & IOs app, used to learning English words by interval method. At first was written via
AngularNative, then it was rewritten via Dart+Flutter. SQLite&Firebase.
"
17926,source/Aldar Myagky.pdf,"• OTHER
"
17927,source/Aldar Myagky.pdf,"Participating in projects like online canvas game, VK MiniApps application. three.js 3D scene
rendering, image from binary generator, etc.
"
17928,source/Aldar Myagky.pdf,"EDUCATION
"
17929,source/Aldar Myagky.pdf,"• LICEUM 62
Kemerovo | 2019
"
17930,source/Aldar Myagky.pdf,"FINISHED 9TH GRADE AND GOT A jOB IMMEDIATELY. FINISHED 11TH GRADE REMOTELY
"
17931,source/Aldar Myagky.pdf,"SKILLS
"
17932,source/Aldar Myagky.pdf,"Angular, NgRx, RxJs, Node.js, Express.js, Electron.js, Socket.io, Three.js, Angular Native, Dart, Flutter
"
17933,source/Aldar Myagky.pdf,"1
"
17934,source/Vladyslav Tyshchenko.docx,"Vladyslav Tyshchenko
"
17935,source/Vladyslav Tyshchenko.docx,"Sergey@gmail.com | +1 (587) 000-7226 | linkedin.com/in/vlaaaysh
"
17936,source/Vladyslav Tyshchenko.docx,"Education
"
17937,source/Vladyslav Tyshchenko.docx,"Taras Shevchenko National University of Kyiv
Sep 2019 – Jun 2023 
Bachelor of Science in Computer Science, Minor in Data Analytics
Kyiv, Ukraine
"
17938,source/Vladyslav Tyshchenko.docx,"Skills
"
17939,source/Vladyslav Tyshchenko.docx,"Programming Languages: Python, C++, SQL, HTML, CSS
"
17940,source/Vladyslav Tyshchenko.docx,"Libraries: Flask, Pandas, NumPy, Matplotlib, Seaborn, Plotly, Scikit-learn, TensorFlow
"
17941,source/Vladyslav Tyshchenko.docx,"Tools: MS SQL Server, PostgreSQL, Tableau, Power BI, Excel, LibreOffice, VMware Workstation, Linux
"
17942,source/Vladyslav Tyshchenko.docx,"Languages: English (Upper Intermediate), Ukrainian (Native), Russian (Fluent)
"
17943,source/Vladyslav Tyshchenko.docx,"Experience
"
17944,source/Vladyslav Tyshchenko.docx,"Blockchain Analyst
Jan 2022 – Sep 2022
"
17945,source/Vladyslav Tyshchenko.docx,"Hedge fund
moscow
"
17946,source/Vladyslav Tyshchenko.docx,"￿ Conducted extensive research on blockchain technologies, cryptocurrencies, and decentralized 
protocols across various blockchain platforms.
"
17947,source/Vladyslav Tyshchenko.docx,"￿ Prepared research reports summarizing the findings and presented them to the team.
"
17948,source/Vladyslav Tyshchenko.docx,"￿ Managed Linux virtual machines using VMware Workstation, ensuring smooth operations through 
routine snapshots and adherence to documentation.
"
17949,source/Vladyslav Tyshchenko.docx,"￿ Explored trading technologies and analyzed a range of indicators to identify cryptocurrency market 
correlations.
"
17950,source/Vladyslav Tyshchenko.docx,"￿ Developed new databases and optimized the process of automatically populating cryptocurrency price 
data directly from the blockchain, utilizing Python and the GraphQL API in conjunction with The Graph 
protocol.
"
17951,source/Vladyslav Tyshchenko.docx,"￿ Utilized Python, Excel and Google Sheets for data analysis, reporting, and updates.
"
17952,source/Vladyslav Tyshchenko.docx,"Junior Data Analyst
Aug 2021 - Dec 2021
"
17953,source/Vladyslav Tyshchenko.docx,"Coral Travel
moscow
"
17954,source/Vladyslav Tyshchenko.docx,"￿ Collaborated closely with the analytics and sales teams, providing them with up-to-date and processed 
data.
"
17955,source/Vladyslav Tyshchenko.docx,"￿ Executed SQL queries to extract, manipulate, and analyze large datasets, contributing to the 
optimization of database performance.
"
17956,source/Vladyslav Tyshchenko.docx,"￿ Processed, formatted, and automated data using Excel to further adjust service prices.
"
17957,source/Vladyslav Tyshchenko.docx,"￿ Compiled reports, identified areas for improvement, and made suggestions based on findings.
"
17958,source/Vladyslav Tyshchenko.docx,"Courses
"
17959,source/Vladyslav Tyshchenko.docx,"Intermediate SQL – Calgary Public Library (Issued Oct 2023)
"
17960,source/Vladyslav Tyshchenko.docx,"Python 3 Programming – Calgary Public Library (Issued Aug 2023)
"
17961,source/Azamat Tsiamruk.docx,"our APIs please visit: https://products.aspose.com/words/
"
17962,source/Azamat Tsiamruk.docx,"Software Engineer with work experience in Ad-Tech, Entertainment and Logistics domains.
"
17963,source/Azamat Tsiamruk.docx,"Contacts
"
17964,source/Azamat Tsiamruk.docx,"wtsaaaruk@gmail.com |
aaademar-tsiamruk |
wtaaamruk |
+385 91 0003 670 
"
17965,source/Azamat Tsiamruk.docx,"Experience
"
17966,source/Azamat Tsiamruk.docx,"Software Engineer
Oct 2020 – Present
"
17967,source/Azamat Tsiamruk.docx,"SENLA - Software Engineering Laboratory
Zagreb, Croatia
"
17968,source/Azamat Tsiamruk.docx,"• Improved data replication ETL process, which increased revenue by 6%
"
17969,source/Azamat Tsiamruk.docx,"• Developed API support for new ad types, which speeds up the business process by 30%
"
17970,source/Azamat Tsiamruk.docx,"• Led the development of a service for Salesforce integration
"
17971,source/Azamat Tsiamruk.docx,"• Developed LDAP based application authentication and authorization system
"
17972,source/Azamat Tsiamruk.docx,"Software Engineer
Jul – Sep 2020
"
17973,source/Azamat Tsiamruk.docx,"Banuba
Minsk, Belarus
"
17974,source/Azamat Tsiamruk.docx,"• Five successful deployments of architecture improvements targeting union of API’s
"
17975,source/Azamat Tsiamruk.docx,"• Created ETL processes for Data Warehouse, which speeds up sales data analysis by 60%
"
17976,source/Azamat Tsiamruk.docx,"Software Engineer
Jul 2017 – Jul 2020
"
17977,source/Azamat Tsiamruk.docx,"IBA Group
Minsk, Belarus
"
17978,source/Azamat Tsiamruk.docx,"• Decreased server response time by 2x for business-critical data management module
"
17979,source/Azamat Tsiamruk.docx,"• Migrated build system with build speed decreased from 17 minutes to 5 minutes
"
17980,source/Azamat Tsiamruk.docx,"• Implemented validation system with flexible validation rules mechanism which works in a 
"
17981,source/Azamat Tsiamruk.docx,"multi-threaded environment
"
17982,source/Azamat Tsiamruk.docx,"• Helped with setup of log collection framework using ElasticSearch Fluentd and Kibana (EFK)
"
17983,source/Azamat Tsiamruk.docx,"• Created a runtime generator of dynamic Kafka listeners that serves one of the basic building 
"
17984,source/Azamat Tsiamruk.docx,"blocks for a low-code app configuration system
"
17985,source/Azamat Tsiamruk.docx,"our APIs please visit: https://products.aspose.com/words/
"
17986,source/Azamat Tsiamruk.docx,"Skills
"
17987,source/Azamat Tsiamruk.docx,"Languages: English (B2), German (A1), Croatian (A1+), Belarusian (Native), Russian (Native)
"
17988,source/Azamat Tsiamruk.docx,"Programming Languages: Java, Kotlin, JavaScript, SQL, Go
"
17989,source/Azamat Tsiamruk.docx,"Frameworks: Spring Family (Web, Data, Security, Cloud Gateway), JPA (Hibernate), ReactJS, MobX 
"
17990,source/Azamat Tsiamruk.docx,"Developer Tools: PostgreSQL, Apache Kafka, ElasticSearch, Amazon AWS (Kinesis, Redshift, S3, 
"
17991,source/Azamat Tsiamruk.docx,"DynamoDB, Lambda, ECS, EC2), Liquibase, Git
"
17992,source/Azamat Tsiamruk.docx,"Education
"
17993,source/Azamat Tsiamruk.docx,"School of Business and Management of Technology of BSU
Belarus, Minsk
"
17994,source/Azamat Tsiamruk.docx,"Specialist, Computer Software Engineering
2017 – 2019
"
17995,source/Azamat Tsiamruk.docx,"IT Academy
Belarus, Minsk
"
17996,source/Azamat Tsiamruk.docx,"Bootcamp, Java Development
2016 – 2017
"
17997,source/Azamat Tsiamruk.docx,"Belarusian State Pedagogical University
Belarus, Minsk
"
17998,source/Azamat Tsiamruk.docx,"Specialist, History Teacher
2010 – 2016
"
17999,source/Stanislav Gavrilov.pdf,"Stanislav Gavrilov
"
18000,source/Stanislav Gavrilov.pdf,"Montreal, Canada
Email : mraaaagavrilov@gmail.com
"
18001,source/Stanislav Gavrilov.pdf,"Mobile : +1-000-931-7854
LinkedIn : aaaygavrilov
"
18002,source/Stanislav Gavrilov.pdf,"EXPERIENCE
"
18003,source/Stanislav Gavrilov.pdf,"• Ubisoft
Montreal, Canada
"
18004,source/Stanislav Gavrilov.pdf,"Online Developer
Sep 2019 - Present
"
18005,source/Stanislav Gavrilov.pdf,"Development and operations (DevOps) of Cloud-Native backend RESTful web services on AWS that scale in the cloud and
that are hit by millions of users every day (hundreds of thousands of concurrent users per service). From API Design,
Implementation, Continuous Delivery and Maintenance to Support.
Working with multiple distant teams to achieve a common goal.
"
18006,source/Stanislav Gavrilov.pdf,"◦ Reduced legacy codebase by 20% by migrating old monolithic core service to run in the cloud.
◦ Built an internal tool about shadow-testing that reduced the number of production issues. (C#, Python ) Experienced
"
18007,source/Stanislav Gavrilov.pdf,"with resource provisioning on AWS using different techniques, including Cloud Formation Template and
Troposphere/Sceptre.
Developed tooling that handles accounts data migration from MSSQL to AWS Aurora, which lead to saving at least 30
minutes/day per team member. (Python, Bash, AWS)
"
18008,source/Stanislav Gavrilov.pdf,"• Contractor
Munich, Germany
"
18009,source/Stanislav Gavrilov.pdf,"Lead Software Engineer
2018 - 2019
"
18010,source/Stanislav Gavrilov.pdf,"Development backend RESTful web service of a fitness class booking system in Go. Took ownership of a project shortly
before the release and managed to meet all the deadlines. Experienced with Docker, and multiple databases, including
MongoDB (On Prem and DigitalOcean), PostgreSQL, from the development and performance optimization to
operations. Experienced with payment workflows using Stripe as well as client passport implementation. (Go, PostgresSQL,
JavaScript)
Experienced with ethereum blockchain network, developing smart contracts using Solidity for insurance policy
contracts.
Singly developed from scratch a full working Go based a low latency/high throughput web-chat on top of
gorilla-WebSockets decorated with a distributed cache layer for read heavy parts. (Go, PostgreSQL, Redis)
"
18011,source/Stanislav Gavrilov.pdf,"• AutoScout24
Munich, Germany
"
18012,source/Stanislav Gavrilov.pdf,"Senior Software Engineer
Oct 2018 - Sep 2019
"
18013,source/Stanislav Gavrilov.pdf,"Development of backend event-driven microservices on top of Scala, Akka and Kafka and that are hit by millions of users
every day across Europe (hundreds of thousands of concurrent users per service). Created CI/CD workflow utilizing
Python, Shell, on top of Jenkins. (Scala, Bash, AWS, Kafka)
Reduced legacy codebase by 30% by migrating old monolithic web service to event-driven microservice architecture on top
of Scala, Akka, and Kafka. Improved availability by introducing monitoring and alerting solutions with DataDog and
OpsGenie.
Reduced amortization cost of AWS infrastructure by implementing a separate Kafka processor that is responsible for
soft-cleanup of the orphan images. (Scala, Kafka, S3, DynamoDb)
Implemented tooling that handles AWS scenarios (SSM parameters, assuming roles, etc.) which lead to saving at
least an hour/week per team member. (Bash, Go, AWS)
"
18014,source/Stanislav Gavrilov.pdf,"• Carl Zeiss Microscopy GmbH
Munich, Germany
"
18015,source/Stanislav Gavrilov.pdf,"Software Engineer B
Apr 2017 - Sep 2018
"
18016,source/Stanislav Gavrilov.pdf,"Helped and onboarded new hires, created short-term, and long-term goals and supported them along the way
Improved fail-safe by fixing memory leaks causing the crash of the software while trying to import
high-resolution snaps. Reduced time needed to finalize an experiment by introducing a digital signature
lead to saving time for inter-department communication.(Python, C#)
Fixed more than 25 bugs over a year timeframe while analyzing the Carl Zeiss image segmentation and reporting
engine. Migrated legacy grain segmentation algorithm into the new modern technologies. (C++)
"
18017,source/Stanislav Gavrilov.pdf,"• Congree Language Technologies GmbH
Karlsbad, Germany
"
18018,source/Stanislav Gavrilov.pdf,"Software Developer
Apr 2014 - Mar 2017
"
18019,source/Stanislav Gavrilov.pdf,"◦ Achieved at least 30% code quality improvement by integrating a static-code analyzer with SonarQube.
"
18020,source/Stanislav Gavrilov.pdf,"Accomplished scalability and fail-safe improvement by implementing a thin REST layer on top of
language-check service. Improved performance by at least 40% by adding a cache layer for read-heavy parts of the
system.(Java, C#)
Speed up document check by 15 % by implementing a new Congree API and migrating all the existing editor-plugins
to it. (Java, C#, C++)
Developed robust tooling that handles many test scenarios & enables automated deployment in test env,
reducing time-to-test from weeks to days (JavaScript, Java, Vmware vSphere).
Reduced deployment time by almost 80% by implementing a distributed deployment system, leading to saving 30% of time
spent by solution specialists on the customer side. (JavaScript, C#)
"
18021,source/Stanislav Gavrilov.pdf,"• Andera, Inc.
Providence, RI, USA
"
18022,source/Stanislav Gavrilov.pdf,"Software Developer - remotely from Russia
Jun 2011 - May 2013
"
18023,source/Stanislav Gavrilov.pdf,"Bulk rates processing and import tool from CSV to Oracle and provides command interface on top for scheduling data
processing. Also created a strategy for saving rates history to FTP and SFTP servers. (C#)
Web application used by online account opening system for financial institutions.Involved in features such as delivery time
optimization, tracking, queuing, and testing. Designed and implemented an overview dashboard for the multi-branch
financial institutions. (JavaScript)
"
18024,source/Stanislav Gavrilov.pdf,"EDUCATION
"
18025,source/Stanislav Gavrilov.pdf,"• Tomsk Polytechnic University
"
18026,source/Stanislav Gavrilov.pdf,"Master of Science in Computer Science
"
18027,source/Stanislav Gavrilov.pdf,"• Tomsk Polytechnic University
"
18028,source/Stanislav Gavrilov.pdf,"Bachelor of Science in Computer Science
"
18029,source/Stanislav Gavrilov.pdf,"SIDE PROJECTS
"
18030,source/Stanislav Gavrilov.pdf,"• gochat (in progress)
Golang based web-chat on top of gorilla-websockets decorated with a cache layer (Go, Redis,
"
18031,source/Stanislav Gavrilov.pdf,"PostgresSQL, gRPC)
"
18032,source/Stas Nasonov.docx,"please visit: https://products.aspose.com/words/
"
18033,source/Stas Nasonov.docx,"Copyright 2003-2024 Aspose Pty Ltd.
"
18034,source/Stas Nasonov.docx,"Technical Skills
"
18035,source/Stas Nasonov.docx,"Stas Nasonov
"
18036,source/Stas Nasonov.docx,"Data Engineer
"
18037,source/Stas Nasonov.docx,"st.m.nasonov@gmai
"
18038,source/Stas Nasonov.docx,"l.com
"
18039,source/Stas Nasonov.docx,"+79087556743
"
18040,source/Stas Nasonov.docx,"• Languages: Python, SQL, Shell, Scala
"
18041,source/Stas Nasonov.docx,"• Databases: Postgres, Greenplum, Hadoop
"
18042,source/Stas Nasonov.docx,"• Technologies: Spark, Kafka, Airflow
"
18043,source/Stas Nasonov.docx,"• Operating Systems: Linux (Arch, Debian, Ubuntu), Windows
"
18044,source/Stas Nasonov.docx,"Previous Employment
"
18045,source/Stas Nasonov.docx,"Jan RPRQ – Now Yandex Taxi, Software Developer
"
18046,source/Stas Nasonov.docx,"• Integrated data warehouse with Salesforce CRM platform
"
18047,source/Stas Nasonov.docx,"• Wrote testing system for query-based loaders
"
18048,source/Stas Nasonov.docx,"• Depersonalized over QPPGB of personal data
"
18049,source/Stas Nasonov.docx,"• Reviewed a solution for data transfer to a remote servers
"
18050,source/Stas Nasonov.docx,"• Delivered new modeling features into data warehouse
"
18051,source/Stas Nasonov.docx,"• Developed entities in detailed data store
"
18052,source/Stas Nasonov.docx,"• Created analytical reports in data mart
"
18053,source/Stas Nasonov.docx,"• Made reports at internal meetings about new features
"
18054,source/Stas Nasonov.docx,"Mar RPRP – Dec RPRPSeverstal Digital, Data Engineer
"
18055,source/Stas Nasonov.docx,"• Partially refactored Python project to PostgreSQL increasing overall speed QP-fold
"
18056,source/Stas Nasonov.docx,"• Created a data model for CV projects in metallurgical production
"
18057,source/Stas Nasonov.docx,"• Migrated existing performance and metrics dashboard from Influx to InfluxR.P
"
18058,source/Stas Nasonov.docx,"• Designed and delivered lambda-like architecture for materials processing
"
18059,source/Stas Nasonov.docx,"• Implemented Airflow into data platform
"
18060,source/Stas Nasonov.docx,"• Tested and reviewed custom NiFi processors and controller services
"
18061,source/Stas Nasonov.docx,"• Successfully delivered ETL pipelines meeting deadlines
"
18062,source/Stas Nasonov.docx,"May RPQ9 – Feb RPRPGlowbyte Consulting, Consultant
"
18063,source/Stas Nasonov.docx,"please visit: https://products.aspose.com/words/
"
18064,source/Stas Nasonov.docx,"• Created a program for BACS log-file parsing
"
18065,source/Stas Nasonov.docx,"• Developed a program for extracting Impala logs to Oracle database
"
18066,source/Stas Nasonov.docx,"• Contributed to a wrapper for Kafka HDFS sink connector
"
18067,source/Stas Nasonov.docx,"Other Experience
"
18068,source/Stas Nasonov.docx,"Aug RPRQ Globaldatanet, Contractor Data Engineer
"
18069,source/Stas Nasonov.docx,"• Contributed to data model for cost optimization project
"
18070,source/Stas Nasonov.docx,"• Refactored stored procedure for R-fold performance gain
"
18071,source/Stas Nasonov.docx,"• Migrated database from Heroku to AWS
"
18072,source/Regina DASHKEVICH.docx,"Regina DASHKEVICH
"
18073,source/Regina DASHKEVICH.docx,"CONTACT INFORMATION:
+375 (29) 1000603
dashkevich.aaaaka@mail.ru
LinkedIn: https://www.linkedin.com/in/aaaa-dashkevich-6a6995190/ 
Telegram: @aaaa_dashkevich
"
18074,source/Regina DASHKEVICH.docx,"SUMMARY
"
18075,source/Regina DASHKEVICH.docx,"I know the basics of programming in C++, C#, JavaScript; HTML and CSS.
I know the main directions in IT and corresponding jobs of IT specialists, their differences in grades.
I am able to use various tools for searching candidates (x-Ray, Boolean Search, etc.) and work with 
specialized resources, such as Linkedin, GitHab, Dribble, Behance, etc.
"
18076,source/Regina DASHKEVICH.docx,"I also was engaged in research of the labor market in the IT field: salaries, bonuses, benefits, trends of 
the market.
"
18077,source/Regina DASHKEVICH.docx,"WORK EXPERIENCE:
"
18078,source/Regina DASHKEVICH.docx,"March 2022 – now, Sunmait Technologies, www.sunmait.com/
Lead IT-Recruiter
-
Mentor and motivate team of recruiters
"
18079,source/Regina DASHKEVICH.docx,"-
Maintain day-to-day operations in accordance with the company processes
"
18080,source/Regina DASHKEVICH.docx,"-
Manage the end-to-end recruitment process with a team of consultants
"
18081,source/Regina DASHKEVICH.docx,"-
Optimize approaches and processes based on analysis, metrics, results
"
18082,source/Regina DASHKEVICH.docx,"-
Guide employees in professional growth and career development
"
18083,source/Regina DASHKEVICH.docx,"-
Approve hiring and firing requests within the department
"
18084,source/Regina DASHKEVICH.docx,"-
Prepare/forecast budgets, schedule expenditures, and monitor variances
"
18085,source/Regina DASHKEVICH.docx,"+Responsibilities of Senior IT-Recruiter
"
18086,source/Regina DASHKEVICH.docx,"Accomplishments:
-Conducted audit of hiring process and fixed them
-Coached and mentored team members (conducted 30+ workshops and coaching sessions)
-Developed KPI and bonus system and implemented it
-Budgeting of the department
-Entered new markets of hiring
-Developed a marketing strategy from recruiting side
-Implementing HR metrics
"
18087,source/Regina DASHKEVICH.docx,"October 2021 – March 2022, Administrative Resource, www.ares.by
Team Lead IT-Recruiter
-
Mentor and motivate team of consultants
"
18088,source/Regina DASHKEVICH.docx,"-
Maintain orderly day-to-day operations in line with company protocol
"
18089,source/Regina DASHKEVICH.docx,"-
Keep abreast of market trends and provide insights to clients
"
18090,source/Regina DASHKEVICH.docx,"-
Participate in pre-sales activities
"
18091,source/Regina DASHKEVICH.docx,"-
Manage the end-to-end recruitment process with a team of consultants
"
18092,source/Regina DASHKEVICH.docx,"-
Manage projects on salary researches in IT Market
"
18093,source/Regina DASHKEVICH.docx,"+Responsibilities of Senior IT-Recruiter
"
18094,source/Regina DASHKEVICH.docx,"August 2020 – October 2021, Administrative Resource, www.ares.by
Senior IT-Recruiter
-
Full-life cycle recruitment experience from sourcing to hiring (middle / senior / lead / 
TOP- managers);
-
Incoming resumes analysis;
"
18095,source/Regina DASHKEVICH.docx,"-
Vacancies publishing;
"
18096,source/Regina DASHKEVICH.docx,"-
Communication with candidates;
"
18097,source/Regina DASHKEVICH.docx,"-
Conducting online and one-to-one interviews with candidates;
"
18098,source/Regina DASHKEVICH.docx,"-
Support of candidates at all stages of reviewing;
"
18099,source/Regina DASHKEVICH.docx,"-
International search;
"
18100,source/Regina DASHKEVICH.docx,"-
Dealing with different sources / social networks;
"
18101,source/Regina DASHKEVICH.docx,"-
Job offer formation;
"
18102,source/Regina DASHKEVICH.docx,"-
Checking candidates English language proficiency;
"
18103,source/Regina DASHKEVICH.docx,"-
Monitoring of the labor market, providing analytical and well-documented reports
"
18104,source/Regina DASHKEVICH.docx,"August 2019 – August 2020, Administrative Resource, www.ares.by
IT-Recruiter
-
Full-life cycle recruitment experience from sourcing to hiring (middle / senior / lead / 
TOP- managers);
-
Incoming resumes analysis;
"
18105,source/Regina DASHKEVICH.docx,"-
Vacancies publishing;
"
18106,source/Regina DASHKEVICH.docx,"-
Communication with candidates;
"
18107,source/Regina DASHKEVICH.docx,"-
Conducting online and one-to-one interviews with candidates;
"
18108,source/Regina DASHKEVICH.docx,"-
Support of candidates at all stages of reviewing;
"
18109,source/Regina DASHKEVICH.docx,"-
International search;
"
18110,source/Regina DASHKEVICH.docx,"-
Dealing with different sources / social networks;
"
18111,source/Regina DASHKEVICH.docx,"-
Job offer formation;
"
18112,source/Regina DASHKEVICH.docx,"-
Checking candidates English language proficiency;
"
18113,source/Regina DASHKEVICH.docx,"-
Monitoring of the labor market, providing analytical and well-documented reports.
"
18114,source/Regina DASHKEVICH.docx,"EDUCATION:
"
18115,source/Regina DASHKEVICH.docx,"Belarusian State University of Informatics and Radioelectronics, 2022 
"
18116,source/Regina DASHKEVICH.docx,"Minsk State Linguistic University, 2017
"
18117,source/Regina DASHKEVICH.docx,"ADDITIONAL EDUCATION:
"
18118,source/Regina DASHKEVICH.docx,"2022
Strategic recruitment, Laba
"
18119,source/Regina DASHKEVICH.docx,"2022
Basic Negotiation Tactics, Probusiness
"
18120,source/Regina DASHKEVICH.docx,"2021
Professional recruiting, Administrative Resource
"
18121,source/Regina DASHKEVICH.docx,"2021
Intro to IT, LeverX
"
18122,source/Regina DASHKEVICH.docx,"2021
HRPR, SkAcademy
"
18123,source/Regina DASHKEVICH.docx,"2021
Author's course 'The Art of Manipulation', Art Gasparov
"
18124,source/Regina DASHKEVICH.docx,"2020
Oratory courses, Dmitry Smirnov School of Oratory
"
18125,source/Regina DASHKEVICH.docx,"2020
Training ""How to sell an elephant"", Digital Unicorn
"
18126,source/Regina DASHKEVICH.docx,"2019
Training ""Effective recruiting"", VRP Consulting, Indigo
"
18127,source/Regina DASHKEVICH.docx,"2019
Anti-conference TRUEMinsk
"
18128,source/Валаев Георгий.docx,"Валаев Георгий Георгиевич
+7 (925) 3700088, WhatsApp, Telegram 
n@vaaaev.ru
"
18129,source/Валаев Георгий.docx,"Эксперт по информационной безопасности
"
18130,source/Валаев Георгий.docx,"Краткое описание:
В течение долгого времени я успешно руководил комплексными проектами в области 
информационной безопасности. Мой опыт также включает управление коммерческими 
проектами, в том числе продажи и поставку программных решений в области информационной 
безопасности. Я формировал бизнес-стратегии, оптимизировал процессы и работал с 
вендорами, чтобы достичь планируемых результатов.
"
18131,source/Валаев Георгий.docx,"Мой опыт включает роль заместителя начальника отдела управления проектами цифровой 
трансформации, где я успешно завершил несколько проектов в этой области. В Российском 
Фонде Информации при Минприроды России я организовывал и управлял проектами по 
созданию Государственных Информационных систем (ГИС) с учетом нормативных актов №
№ 149-ФЗ, 152-ФЗ, ПП РФ № 563, 676, 313 и т.д. Я принимал непосредственное участие в 
написании и согласовании концепций ГИС ""Охота"" и ГИС ""Природные Территории"". Кроме 
того, я успешно реализовал проект внедрения ведомственной ИС АРМ МЭДО ДСП, включая 
согласование МуИН в соответствующих структурах, выделение бюджета и развертывание 
системы. Я также участвовал в создании пакетов проектной и тендерной документаци. Мои 
навыки руководителя включают в себя разработку и реализацию стратегических планов отдела.
"
18132,source/Валаев Георгий.docx,"До этого, в рамках ИТ-интегратора, после Value-added дистрибьютора решений 
информационной безопасности, я занимался продажей решений ИБ. Я работал в роли 
аккаунт менеджера, продукт-менеджера и руководителя проектов внедрения ИБ. Мои 
обязанности включали опережающую коммуникацию с заказчиками и интеграторами, 
оформление бизнес-требований, управление выбором решений, развитие партнерских 
отношений, продажи и управление проектами внедрения, включая управление проектной 
командой, участие в во встречах, конференциях и вебинарах.
"
18133,source/Валаев Георгий.docx,"Я имею опыт в разработке мер безопасности для заказчиков финансового сектора на основе 
PCI DSS, положений ЦБ РФ 683-П, 684-П, 672-П, 719-П, 747-П, 757-П ГОСТ 5780.* и т.д.
"
18134,source/Валаев Георгий.docx,"Сейчас я активно прорабатываю тему импортозамещения средств информационной 
безопасности с помощью продуктов ИБ отечественных производителей или 
правообладателей.
"
18135,source/Валаев Георгий.docx,"Краткий опыт работы.
Заместитель начальника отдела управления проектами цифровой трансформации:
успешно завершил несколько проектов в области цифровой трансформации;
руководил внедрением комплексных решений на всех этапах жизненного цикла проектов.
"
18136,source/Валаев Георгий.docx,"Менеджер по работе с ключевыми заказчиками:
управление отношениями с ключевыми клиентами; 
руководство проектами внедрения решений; 
консультации по продукту, демонстрации и тестирование. 
Образование:
высшее техническое образование (МАИ факультет Радиоэлектроники);
высшее образование в области информационной безопасности (Образовательный центр 
Информзащита).
Языки:
Русский (родной); 
Английский (свободно); 
Немецкий (технический). 
Дополнительные 
навыки:
коммуникативные навыки;
организационные способности; 
умение работать в команде; 
аналитическое мышление; 
управление временем; 
готовность к командировкам.
Работа с офисными пакетами, системами документооборота.
Python, Bash скрипты, администрирование рабочих мест и серверов Linux
"
18137,source/Валаев Георгий.docx,"Полный опыт работы:
Российский Фонд Информации Минприроды России. 2022- 2023.
https://rfi.mnr.gov.ru
ИТ-проекты в пользу Министерства Природы Российской Федерации, системная интеграция, 
автоматизация технологических и бизнес-процессов предприятия, ИТ-консалтинг.
"
18138,source/Валаев Георгий.docx,"Заместитель начальника отдела управления проектами цифровой трансформации. 
Обязанности:
"
18139,source/Валаев Георгий.docx,"Участие в формировании требований к государственной информационной системе (ГИС, 
ФГИС), включая требования по информационной безопасности;
"
18140,source/Валаев Георгий.docx,"описание выявленных проблем, решение которых возможно средствами системы, описание 
требований к системе, включая определение требований к информационной системе защиты 
информации и допустимых затрат на разработку, ввод в действие и эксплуатацию системы;
"
18141,source/Валаев Георгий.docx,"создание и согласование концепции ГИС, включая создание и согласование концепции, ТЗ 
на создание системы с учетом модели угроз безопасности, а также уровней защищенности 
персональных данных при их обработке в информационных системах персональных данных в 
зависимости от угроз безопасности этих данных и требований;
"
18142,source/Валаев Георгий.docx,"управление ее созданием в соответствии с постановлением № 676 и другими НПА; 
участие в создании нормативно-правового обоснования создания ГИС;
участие в разработке и согласовании проектных документов; 
участие в организации закупок через ЕИС Госзакупки;
участие в разработке и согласовании рабочей документации, создание, ввод в действие, 
аттестация по требованиям ИБ.
Результаты работы:
"
18143,source/Валаев Георгий.docx,"инициирован ряд проектов по созданию федеральных государственных информационных 
систем в области охраны природы;
"
18144,source/Валаев Георгий.docx,"успешно выполнен проект по внедрению АРМ МЭДО ДСП.
"
18145,source/Валаев Георгий.docx,"Web-Control. Дистрибьютор решений информационной безопасности. 2015-2022.
www.web-control.ru
Информационная безопасность, value added дистрибуция решений ИБ, собственная 
разработка ПО «PAM Space».
"
18146,source/Валаев Георгий.docx,"Аккаунт-менеджер/Продукт-менеджер/Руководитель проектов внедрения. 
Обязанности:
"
18147,source/Валаев Георгий.docx,"понимание принципов SOC;
организация работ в соответствии с НПА: ГОСТ 57580.**, 187-ФЗ, 152-ФЗ, 683П, 747П и 
другими;
"
18148,source/Валаев Георгий.docx,"построение архитектуры ИБ на основе МуиН;
управление продажами комплексных проектов (программные решения по ИБ), включая 
помощь во встраивании решений ИБ в архитектуру информационной безопасности 
заказчиков, как правило, банков;
"
18149,source/Валаев Георгий.docx,"управление коммуникациями с конечными заказчиками и системными интеграторами; 
участие в проектах в роли продавца, руководителя проекта;
взаимодействие с вендорами, подбор решений, заключение договоров с поставщиками, 
оптимизация условий сотрудничества в роли менеджера по продукту;
"
18150,source/Валаев Георгий.docx,"интервьюирование заказчика, экспресс-обследование, аналитика, формализация бизнес- 
требований, комплексная проработка технических решений, согласование условий, подписание 
контрактов;
"
18151,source/Валаев Георгий.docx,"формирование команды проекта. Контроль реализации проекта на всех этапах, обеспечение 
выполнения функциональных требований, управление изменениями, сроками и качеством;
"
18152,source/Валаев Георгий.docx,"поддержка и развитие партнеров, кросс-продажи.
"
18153,source/Валаев Георгий.docx,"Достижения: обеспечил успешную реализацию проектов для ряда крупных заказчиков 
(финансовые институты).
Публикации:
""Код в доступе: на российских заводах массово игнорируют кибербезопасность"" - 
https://iz.ru/1326483/ivan-chernousov/kod-v-dostupe-na-rossiiskikh-zavodakh-massovo- 
ignoriruiut-kiberbezopasnost
Видео ""Web-Control на канале ITD"" - https://www.youtube.com/watch?v=WoxSAWQ-0Og 
Статья ""Информационная безопасность в веб-интерфейсах"" - 
http://cs.groteck.ru/IB_1_2021/20/index.html
Видео ""Web-Control на конференции IT Security Meetup
"" - https://www.youtube.com/watch?v=wus5WzFBRec&t=6s
"
18154,source/Валаев Георгий.docx,"Т1 Интеграция. 2009-2015.
Продавец. 
Обязанности:
"
18155,source/Валаев Георгий.docx,"лидирование комплексных проектов по продажам решений информационной безопасности, 
таких как спам-фильтрация, веб-фильтрация, файерволлинг, SIEM, DLP и др., а также 
решений по оптимизации и управлению инкассациями и потоками наличных денежных 
средств и мобильному банкингу;
"
18156,source/Валаев Георгий.docx,"выстраивание процессов взаимодействия с заказчиками и согласование условий 
сотрудничества;
"
18157,source/Валаев Георгий.docx,"аналитика, проработка решений под требования заказчика, проведение презентаций; 
сопровождение клиентов на всех этапах проекта и предоставление постпродажной
"
18158,source/Валаев Георгий.docx,"поддержки;
"
18159,source/Валаев Георгий.docx,"обеспечение исполнения функциональных требований заказчика и контроль работы 
проектной команды;
"
18160,source/Валаев Георгий.docx,"обеспечение экономической эффективности операционной деятельности.
"
18161,source/Валаев Георгий.docx,"Достижения:
"
18162,source/Валаев Георгий.docx,"реализован проект поставки оборудования Cisco на сумму 3 млн. долларов; 
карьерный рост: (01.2009 – 05.2012) Менеджер по продуктам.
"
18163,source/Валаев Георгий.docx,"ООО ""Техносфера"", ""Ritzio"", игорный бизнес. 2003- 2009.
Заместитель руководителя отдела внедрения и анализа. 
Обязанности:
"
18164,source/Валаев Георгий.docx,"управление проектами внедрения ERP системы в компаниях холдинга в Северо-западном 
регионе России, странах Балтии, Чехии, Румынии и Германии;
"
18165,source/Валаев Георгий.docx,"организация процессов технической поддержки игровых аппаратов под брендом ""Вулкан""; 
руководство проектной командой из 10 человек - подбор, обучение, мотивация и развитие
"
18166,source/Валаев Георгий.docx,"персонала, постановка и распределение задач, контроль результатов;
"
18167,source/Валаев Георгий.docx,"планирование стратегии развития информационных систем, управление коммуникациями, 
рисками и сроками;
"
18168,source/Валаев Георгий.docx,"организация и сопровождение пилотирования, внедрения и тиражирования решений во 
всей системе холдинга, включая низкоуровневую интеграцию множества конечных систем;
"
18169,source/Валаев Георгий.docx,"проведение тестирований, управление изменениями, развитие продукта и оценка 
эффективности результатов;
Достижения: реализовано внедрение https://acresmanufacturing.com/ в промышленную 
эксплуатацию;
"
18170,source/Валаев Георгий.docx,"реализовано внедрение системы отчетности как части распределенной системы управления 
бизнесом (ERP, собственная разработка) в региональных компаниях Румынии и Латвии.
"
18171,source/Валаев Георгий.docx,"Карьерный рост: заместитель руководителя отдела внедрения и анализа он-лайн систем.
"
18172,source/Валаев Георгий.docx,"ООО ""УНИКУМ-СПМ"". 2000-2003.
www.unicum.ru
Продажа и поддержка игровых и вендинговых аппаратов.
"
18173,source/Валаев Георгий.docx,"Координатор сервисной службы. 
Обязанности:
"
18174,source/Валаев Георгий.docx,"организация гарантийного и постгарантийного обслуживания электронной техники с 
персоналом до 10 человек;
Инженер сервисной службы. 
Обязанности:
"
18175,source/Валаев Георгий.docx,"монтаж и настройка электронного оборудования; 
поддержка заказчиков.
"
18176,source/Валаев Георгий.docx,"Карьерный рост: инженер - координатор сервисной службы.
"
18177,source/Валаев Георгий.docx,"ТОО «СВИФТ». Автомобильный бизнес. 1994-2000.
Владение и управление магазином запасных частей для легковых автомобилей Европейского 
и Японского производства.
"
18178,source/Валаев Георгий.docx,"СТОА иномарок европейского производства. 1992-1994.
Заведующий складом
Ведение склада, планирование остатка, заказ, логистика запчастей и расходных материалов;
"
18179,source/Валаев Георгий.docx,"Компания по прокату автомобилей. 1992.
Инженер.
Обязанности:
"
18180,source/Валаев Георгий.docx,"управление сменой механиков по направлениям WAG, BMW;
"
18181,source/Валаев Георгий.docx,"автоэлектроника и автомобильные компьютеры. Диагностика и ремонт.
"
18182,source/Валаев Георгий.docx,"Научно-исследовательский институт приборостроения им. В.В. Тихомирова. 1984-
1992.
www.niip.ru
Ведущий инженер-конструктор РЭА. 
Обязанности:
"
18183,source/Валаев Георгий.docx,"участие в разработке системы управления вооружением истребителя-перехватчика; участие 
в настройке и испытаниях радиолокационного прицельного комплекса.
"
18184,source/Валаев Георгий.docx,"Карьерный рост: инженер - старший инженер - ведущий инженер.
"
18185,source/Валаев Георгий.docx,"Высшее образование:
АНО ДПО ""Учебный центр ""Информзащита"", специалист по информационной безопасности; 
МАИ, факультет радиоэлектроники летательных аппаратов, инженер.
"
18186,source/Валаев Георгий.docx,"Курсы повышения квалификации — по запросу. 
Языки — английский, С1.
Права — категория А, В.
"
18187,source/Nikita Ivanov.pdf,"Nikita Ivanov 
"
18188,source/Nikita Ivanov.pdf," 
 
 
"
18189,source/Иванова Валерия.docx,"Иванова Валерия Дмитриевна
"
18190,source/Иванова Валерия.docx,"Россия, Москва│ Тел.: (+7)-937-000-50-59│ Email: linostaaaas@gmail.com
"
18191,source/Иванова Валерия.docx,"ОБРАЗОВАНИЕ
МГУ имени М. В. Ломоносова
2019 - 2023
"
18192,source/Иванова Валерия.docx,"Бакалавр по направлению “Экономика”:
"
18193,source/Иванова Валерия.docx,"●
Перевелась в группу повышенной академической нагрузки (Сентябрь 2020);.
"
18194,source/Иванова Валерия.docx,"●
Не боюсь брать сложные предметы по выбору: Эконометрика-2, Теория Игр, 
Дифференциальные уравнения, Методы оптимальных решений, Поведенческая 
экономика;
"
18195,source/Иванова Валерия.docx,"●
Прошла курсы Машинного обучения, Корпоративных финансов и Практической 
эконометрики.
"
18196,source/Иванова Валерия.docx,"МГУ имени М. В. Ломоносова
2023 - 
наст. Получаю магистерскую степень по направлению “Анализ данных в экономике”
"
18197,source/Иванова Валерия.docx,"ОПЫТ РАБОТЫ
Ozon fresh
Стажер-аналитик
июль 2023 - наст.
"
18198,source/Иванова Валерия.docx,"●
Написание запросов в Vertica, Clickhouse, Rezon;
"
18199,source/Иванова Валерия.docx,"●
Исправление кода в python, создание дагов в airflow;
"
18200,source/Иванова Валерия.docx,"●
Создание отчетов в superset & grafana для бизнеса.
"
18201,source/Иванова Валерия.docx,"Citymakers
Младший финансовый аналитик
май 2023 - июнь 2023
"
18202,source/Иванова Валерия.docx,"●
Построение финансовой модели, оценка объектов недвижимости;
"
18203,source/Иванова Валерия.docx,"●
Создание объединенной базы реестра застройщиков из 9000 json nested файлов.
"
18204,source/Иванова Валерия.docx,"Онлайн школа Вебиум
2019 - 2020
"
18205,source/Иванова Валерия.docx,"Куратор по физике. Подготовила 25 учеников к сдаче ЕГЭ по физике:
"
18206,source/Иванова Валерия.docx,"●
Один из учеников сдал экзамен на 100/100;
"
18207,source/Иванова Валерия.docx,"●
Двое поступили в МГТУ им. Баумана, один человек поступил в ВШЭ на бюджетной 
основе.
"
18208,source/Иванова Валерия.docx,"ДОПОЛНИТЕЛЬНЫЕ АКТИВНОСТИ
"
18209,source/Иванова Валерия.docx,"●
High Quality Award 15% в Cup Moscow 2021, Английская секция, Case Crackers.
"
18210,source/Иванова Валерия.docx,"●
Участие в кейс-чемпионате BCG & Ozon Fintech Case Battle 2022
"
18211,source/Иванова Валерия.docx,"●
Тинькофф образование, таргетинг, совместный проект
Ноябрь - Декабрь 2021
"
18212,source/Иванова Валерия.docx,"●
Deep Learning School 1 семестр от МФТИ + Анализ данных в индустрии от Тинькофф 
Февраль 2021 - наст.
"
18213,source/Иванова Валерия.docx,"Хобби: Совмещала 3 танцевальных стиля 1,5 года (12 ч/нед); Пропустила только 2 тренировки 
за 4 года занятий танцами; Выиграла 3 раза номинации по импровизации в танцевальных 
фестивалях и баттлах.
"
18214,source/Иванова Валерия.docx,"ТЕХНИЧЕСКИЕ НАВЫКИ
"
18215,source/Иванова Валерия.docx,"●
Английский (B2), Французский (A2-B1).
"
18216,source/Иванова Валерия.docx,"●
SQL (Vertica, Clickhouse), R studio (эконометрика и машинное обучение), Python 
(NumPy, Pandas, Matplotlib, ML & DL библиотеки), DataGrip, PyCharm, Jupyter 
Notebook, Excel, Gretl, PowerPoint, Notion, Word.
"
18217,source/ANDREY PODKIDYSHEV.pdf,"ANDREY PODKIDYSHEV
"
18218,source/ANDREY PODKIDYSHEV.pdf,"Email : paaaidyshev.as@phystech.edu tg: KusokaaPT
"
18219,source/ANDREY PODKIDYSHEV.pdf,"Mobile : +7 925 0003843
"
18220,source/ANDREY PODKIDYSHEV.pdf,"SKILLS
•
Development: Python, Bash, Git, C++, Docker, Jira/YouTrack, Flask and OpenAPI, React(base), Spark(base)
"
18221,source/ANDREY PODKIDYSHEV.pdf,"•
ML: Pandas, Scipy, Numpy, Matplotlib, Sklearn, PyTorch, Catboost, XGBoost, Prophet, Statsmodels
"
18222,source/ANDREY PODKIDYSHEV.pdf,"•
Analytics: SQL, A/B testing, Hypothesis testing, Statsmodels, Plotly
"
18223,source/ANDREY PODKIDYSHEV.pdf,"•
DL: Pytorch, Pytorch-forecasting, DL in NLP, DL in CV (base), Practical RL (base)
"
18224,source/ANDREY PODKIDYSHEV.pdf,"•
Knowledge: Algorithms, Data Structures, Machine Learning, Deep Learning in CV/NLP fundamental, Concurrent
Computing, Distributed Systems, LATEX, Natural Language Processing
"
18225,source/ANDREY PODKIDYSHEV.pdf,"EXPERIENCE
"
18226,source/ANDREY PODKIDYSHEV.pdf,"x5 Retail Group
Moscow, Russia
"
18227,source/ANDREY PODKIDYSHEV.pdf,"•
Data Analyst
Feb 2021 - Present
"
18228,source/ANDREY PODKIDYSHEV.pdf,"Created new features for exist scoring model that improves AUC metric. Now, I am in process of developing new scoring model, creating
features for improving scoring metrics and creating full pipeline.
"
18229,source/ANDREY PODKIDYSHEV.pdf,"BostonGene
Moscow, Russia
"
18230,source/ANDREY PODKIDYSHEV.pdf,"•
Developer, ’Named entity recognition service’
Jun 2020 - Feb 2021
"
18231,source/ANDREY PODKIDYSHEV.pdf,"Developed service that allows a user to manually markup abstracts of oncology articles with the opportunity to use an auto-recognition
NER system. I built a full-stack web site in React with Flask and SQLAlchemy.
"
18232,source/ANDREY PODKIDYSHEV.pdf,"Moscow Institute of Physics and Technology
Moscow, Russia
"
18233,source/ANDREY PODKIDYSHEV.pdf,"•
Undergraduate Teaching Assistant, ”Applied Mathematical Statistics” course
Sep 2020 - Dec 2020
"
18234,source/ANDREY PODKIDYSHEV.pdf,"Developed assignments for students in Jupyter Notebook format. The tasks were about: point estimation, confidence interval, bootstrap
method, properties of statistical estimates, methods for finding estimates, testing statistical hypotheses, linear regression.
"
18235,source/ANDREY PODKIDYSHEV.pdf,"Tinkoff Bank
Moscow, Russia
"
18236,source/ANDREY PODKIDYSHEV.pdf,"•
Analyst Intern
Jun 2019 - Sep 2019
"
18237,source/ANDREY PODKIDYSHEV.pdf,"Built a robust machine learning model to predict next month’s credit card utilization. Achieved better quality using additional models
such as KMeans for clustering. I resorted to using Tableau to fast and easy reports for my colleagues.
"
18238,source/ANDREY PODKIDYSHEV.pdf,"PROJECTS
"
18239,source/ANDREY PODKIDYSHEV.pdf,"Time series forecasting library [Bachelor thesis]
Tinkoff bank, Moscow, Russia
"
18240,source/ANDREY PODKIDYSHEV.pdf,"Jun. 2020 - Present
"
18241,source/ANDREY PODKIDYSHEV.pdf,"Developed an AutoML library for time series forecasting. It has an ability to work with the external feature(like weather or dollar
exchange rate). Created own architrave which makes it easy to add new models. Today it includes a lot of models such as
Prophet(Facebook), Catboost(Yandex), DeepAR(Amazon), SARIMAX(statsmodels), and Deep Learning models from gluonTS and
pytorch-forecasting libraries.
"
18242,source/ANDREY PODKIDYSHEV.pdf,"Style Transfer asynchronous telegram bot [Pet project]
Online, Solo project
Dec. 2020 - Feb 2021
"
18243,source/ANDREY PODKIDYSHEV.pdf,"Developed telegram asynchronous bot with a simple queue scheduler, deployed it to Heroku. Implemented two styles of transfer
algorithms. The first is vanilla NST, I used the VGG19 model, took some convolution layers, and used special content/style loss to
create a new picture. The second is the cycleGan. The third is API solution by DeepMind.
"
18244,source/ANDREY PODKIDYSHEV.pdf,"The third considered way of styling is API solution by DeepMind.
"
18245,source/ANDREY PODKIDYSHEV.pdf,"EDUCATION
"
18246,source/ANDREY PODKIDYSHEV.pdf,"Moscow Institute of Physics and Technology
Moscow, Russia
"
18247,source/ANDREY PODKIDYSHEV.pdf,"Computer Science
Sept. 2017 - Jul. 2021
"
18248,source/ANDREY PODKIDYSHEV.pdf,"Average score - 4.55/5.00 (top 10% of the course)
Math courses: Mathematical statistics, Probability Theory, Higher Mathematics, Optimization methods
Computer Science courses: Machine Learning, Deep Learning coursers(NLP, CV, RL - basics), Data Engineering, C++,
Python, Algorithms and Data Structures, Distributed computing, Databases
"
18249,source/ANDREY PODKIDYSHEV.pdf,"ADDITIONAL EDUCATION
"
18250,source/ANDREY PODKIDYSHEV.pdf,"Open Courses
Online classes
"
18251,source/ANDREY PODKIDYSHEV.pdf,"Coursera and DL coursers
Jun. 2019 - Feb. 2021
"
18252,source/ANDREY PODKIDYSHEV.pdf,"Machine Learning and Data Analyses specialization (by Yandex)
"
18253,source/ANDREY PODKIDYSHEV.pdf,"Python programming, Continuous Delivery and DevOps, C++ programming, NLP YSDA course, CS231n (CV by Stanford)
"
18254,source/Innokentiy ZORYCH.docx,"Innokentiy ZORYCH
"
18255,source/Innokentiy ZORYCH.docx,"Email: zoraaamaxim@gmail.com
LinkedIn:@45ks-zorych
"
18256,source/Innokentiy ZORYCH.docx,"Phone: +380005810593
"
18257,source/Innokentiy ZORYCH.docx,"EDUCATION
M.S. Degree in Computer Integrated Systems
National Technical University of Agriculture
Department of Automation of Computer Systems(Graduation: Jan 2020)
"
18258,source/Innokentiy ZORYCH.docx,"PROFESSIONAL EXPERIENCE
Lead Software Engineer -- SoftServe Inc. -- Sep 2020 to Present
"
18259,source/Innokentiy ZORYCH.docx,"●
I managed a team of 15+ engineers, analyzed the requirements and dependencies between the teams' tasks.
"
18260,source/Innokentiy ZORYCH.docx,"●
Worked on improving the architecture of the e-commerce solution to improve its reusability based on low-code 
strategy.
"
18261,source/Innokentiy ZORYCH.docx,"●
Participated in software quality analysis.
"
18262,source/Innokentiy ZORYCH.docx,"Senior Software Engineer -- SoftServe Inc. -- Jan 2018 to Sep 2020
"
18263,source/Innokentiy ZORYCH.docx,"●
Worked on the design of systems and components.
"
18264,source/Innokentiy ZORYCH.docx,"●
Developed applications for different domains.
"
18265,source/Innokentiy ZORYCH.docx,"●
Conducted software migrations.
"
18266,source/Innokentiy ZORYCH.docx,"Software Engineer -- Andersen Lab -- Feb 2017 to Jan 2018
"
18267,source/Innokentiy ZORYCH.docx,"●
I reduced the processing time of the call center operator by 13% by simplifying the process of identifying the 
user's problem.
"
18268,source/Innokentiy ZORYCH.docx,"●
Conducted training sessions for colleagues.
"
18269,source/Innokentiy ZORYCH.docx,"Software Engineer -- Code IT -- Nov 2016 to Jan 2017
"
18270,source/Innokentiy ZORYCH.docx,"●
I have optimized graphics rendering speed by 80% by rewriting graphic containers to vector graphics.
"
18271,source/Innokentiy ZORYCH.docx,"Junior / Intern Software Engineer -- GetBetter -- Oct 2015 to Nov 2016
"
18272,source/Innokentiy ZORYCH.docx,"●
Accelerated the processing time of patient's labs and vitals by 18% by systematizing patient data and 
their analyzes.
"
18273,source/Innokentiy ZORYCH.docx,"PROJECTS
Health Care System
"
18274,source/Innokentiy ZORYCH.docx,"●
I managed the migration from an outdated legacy system to a new platform, thereby speeding up the rendering of 
the application by 11% and reducing the number of existing bugs by 54%.
"
18275,source/Innokentiy ZORYCH.docx,"Analysis risks of Supply chain distribution
"
18276,source/Innokentiy ZORYCH.docx,"●
Together with the team, I developed a risk analysis system for interaction with suppliers of parts, thereby providing 
the customer with the necessary set of risk data to select the most suitable suppliers for the equipment purchase.
"
18277,source/Innokentiy ZORYCH.docx,"Communication System
"
18278,source/Innokentiy ZORYCH.docx,"●
Developing a solution to optimize and process incoming calls for call center employees.
"
18279,source/Innokentiy ZORYCH.docx,"Game app
"
18280,source/Innokentiy ZORYCH.docx,"●
My goal was looking for solutions to optimize games for the client, by applying different rendering strategies, 
modernizing visual containers, etc.
"
18281,source/Innokentiy ZORYCH.docx,"Health Care System
"
18282,source/Innokentiy ZORYCH.docx,"●
I have worked on designing patient data analysis to improve physician processing times.
"
18283,source/Innokentiy ZORYCH.docx,"TECHNICAL SKILLS
Current Stack: Java, JavaScript, TypeScript, HTML & CSS, frameworks as Angular, React, Vue, NodeJS.
Databases: MySQL, NoSQL, Postgres, DynamoDB, MongoDB.
Clouds: AWS with products.
Skills: Software Engineering, Web Development, Backend Development, Leading, Mentoring.
"
18284,source/Innokentiy ZORYCH.docx,"CERTIFICATIONS
Microsoft Certified Professional
"
18285,source/Nikolay Rakitnykh.docx,"Nikolay 
Rakitnykh
Software Engineer
"
18286,source/Nikolay Rakitnykh.docx,"LinkedIn
"
18287,source/Nikolay Rakitnykh.docx,"111rakitnykh@gmail.com
"
18288,source/Nikolay Rakitnykh.docx,"+7 960 718 360 00
"
18289,source/Nikolay Rakitnykh.docx,"Moscow, Russia 
Visa sponsorship required
"
18290,source/Nikolay Rakitnykh.docx,"A highly-skilled software engineer with 9+ years of experience in SDLC/ Programming, Software Architecture and 
Team Management. A result-oriented person with effective clean coding practices, including design, unit testing, 
and peer code-reviews. Strong ability to quickly learn and utilize new technologies.
"
18291,source/Nikolay Rakitnykh.docx,"EXPERIENCE
"
18292,source/Nikolay Rakitnykh.docx,"Project: Blockchain core. Smart contract programming language.
"
18293,source/Nikolay Rakitnykh.docx,"●
Developed a new parser and compiler of the smart contract language.
"
18294,source/Nikolay Rakitnykh.docx,"●
Created specification of the smart contract web IDE improvements, implemented a backend module that 
provides syntax and compiler data and led its integration.
"
18295,source/Nikolay Rakitnykh.docx,"●
Profiled and optimized the code. The improvement increased the speed of the blockchain importing 
process by 46% (from 72 to 39 hours).
"
18296,source/Nikolay Rakitnykh.docx,"●
Analyzed users' comments, made a requirement list and optimized the language code according to it. The 
improvement decreased the smart contract system usage cost and its maintenance by 30%.
"
18297,source/Nikolay Rakitnykh.docx,"●
Leading a process of release planning which includes creation and gathering ideas, analytics, specification 
development and task creation.
"
18298,source/Nikolay Rakitnykh.docx,"●
Initiated optimization of the release planning process and created a set of measures to avoid deadline 
problems.
"
18299,source/Nikolay Rakitnykh.docx,"●
Leading a team of 4 software engineers.
"
18300,source/Nikolay Rakitnykh.docx,"Project: Online travel agency (tour and lodging search and reservations).
"
18301,source/Nikolay Rakitnykh.docx,"●
Designed a distributed system for search and aggregation of tours, which replaced the previous monolithic 
application. Implemented main modules of the system. It allowed the team to manage the app instance 
amount in a more flexible manner, according to load, and saved around 15% of the server rent budget.
"
18302,source/Nikolay Rakitnykh.docx,"●
Developed a subsystem for aggregation of peculiar errors and statistics of backend performance and their 
visualization.
"
18303,source/Nikolay Rakitnykh.docx,"●
Developed automated hotel names-mapping and photo-tagging modules using machine learning tools: 
CatBoost, TensorFlow. Reduced handwork for content managers.
"
18304,source/Nikolay Rakitnykh.docx,"●
Led a team of 3 software engineers.
"
18305,source/Nikolay Rakitnykh.docx,"●
Involved in all full stack development processes on 4 different projects.
"
18306,source/Nikolay Rakitnykh.docx,"●
Developed an error prediction system (Healthcare - insurance reports) which included: data preparation, 
cycles of prototyping and result analysis.
"
18307,source/Nikolay Rakitnykh.docx,"●
Taught myself Scala and rewrote two core modules of an outdated Java project. This revealed the 
advantages of the new language to the team and led to rewriting the whole project.
"
18308,source/Nikolay Rakitnykh.docx,"Jan 2019 – Present
Software Engineer & Team Lead at Waves Platform, (Moscow, Russia)
"
18309,source/Nikolay Rakitnykh.docx,"Software Engineer & Team Lead at Onlinetours, (Moscow, Russia)
Jun 2015 – Dec 2018
"
18310,source/Nikolay Rakitnykh.docx,"Apr 2012 – Jun 2015
Full Stack Developer at EPAM Systems Inc., (Tver, Russia)
"
18311,source/Nikolay Rakitnykh.docx,"TECHNICAL SKILLS
"
18312,source/Nikolay Rakitnykh.docx,"●
Java, Scala, Python, JavaScript, R
"
18313,source/Nikolay Rakitnykh.docx,"●
Spring, Hibernate, Kafka, Jenkins, AWS, Nginx, ElasticSearch, Docker, Kubernetes
"
18314,source/Nikolay Rakitnykh.docx,"EDUCATION
"
18315,source/Nikolay Rakitnykh.docx,"Tver State University (Tver, Russia)
"
18316,source/Nikolay Rakitnykh.docx,"●
Master's degree: Fundamental Informatics and Information Technologies in July 2013
"
18317,source/Nikolay Rakitnykh.docx,"●
Bachelor's degree: Information Technology in July 2011
"
18318,source/Valera Yeliesichev.docx,"Valera Yeliesichev
"
18319,source/Valera Yeliesichev.docx,"250-000-8913 | toaaaque@gmail.com | linkedin.com/in/anatoly-eleaaahev/ | Portfolio | Creston, BC, Canada
"
18320,source/Valera Yeliesichev.docx,"SUMMARY
"
18321,source/Valera Yeliesichev.docx,"UI/UX Designer with 4+ years of experience developing digital design solutions for responsive web and mobile 
applications. Expertise in landing pages, six-time #madeontilda award recipient for modern design showcase. No-
code developer with knowledge in HTML, CSS.
"
18322,source/Valera Yeliesichev.docx,"EXPERIENCE
"
18323,source/Valera Yeliesichev.docx,"UI/UX  Designer
September 2022 – February 2023
"
18324,source/Valera Yeliesichev.docx,"1A Auto
USA, Remote
"
18325,source/Valera Yeliesichev.docx,"• Restructured core design system, reducing development costs by 30% through the use of custom components
"
18326,source/Valera Yeliesichev.docx,"• Managed design and development teams, introducing a design-review process that that boosted overall 
productivity by an impressive 70%, along with a substantial reduction in bugs
"
18327,source/Valera Yeliesichev.docx,"• Collaborated with product managers, front-end developers, and the marketing team, optimizing the Product Detail 
Page to achieve a 20% increase in user engagement, which led to a 15% boost in sales conversions.
"
18328,source/Valera Yeliesichev.docx,"• Conducted comprehensive demo presentations for product owners, utilizing Figma prototypes to illustrate 
design concepts and functionality, facilitating informed decision-making.
"
18329,source/Valera Yeliesichev.docx,"UI/UX  Designer
March 2021 – March 2022
"
18330,source/Valera Yeliesichev.docx,"Shelter PMS
Moscow, Russia
"
18331,source/Valera Yeliesichev.docx,"• Designed an internal app for mobile and web for hotel guests, achieving a 25% improvement in overall 
guest engagement, significantly enhancing the hotel’s digital guest experience.
"
18332,source/Valera Yeliesichev.docx,"• As the designer and developer, I created a captivating promo landing page for a new product launch, earning 
a #madeontilda award achieving a substantial boost in user engagement and sales
"
18333,source/Valera Yeliesichev.docx,"• Created a successful commercial offer template that played a key role in selling our products to major 
market players, leading to notable sales growth
"
18334,source/Valera Yeliesichev.docx,"• Revamped the social media visual keycode, boosting awareness and creating a more impactful online presence
"
18335,source/Valera Yeliesichev.docx,"• Improved email engagement by implementing a compelling style leading to a 10% increase in open rates, a 15% 
rise in click-through rates, and a 20% improvement in overall email interaction.
"
18336,source/Valera Yeliesichev.docx,"UI/UX  Designer
April 2017 – June 2020
"
18337,source/Valera Yeliesichev.docx,"Sape
Moscow, Russia
"
18338,source/Valera Yeliesichev.docx,"• Single-handedly revamped the web and mobile interface for a critical product, contributing to a significant 20% 
rise in daily active users and a substantial 25% boost in average session duration.
"
18339,source/Valera Yeliesichev.docx,"• Led and finalized designs for 10+ projects, delivering over 100 unique screens.
"
18340,source/Valera Yeliesichev.docx,"• Played a key role in driving refinements and successfully introduced a comprehensive design system.
"
18341,source/Valera Yeliesichev.docx,"• Developed dynamic promotional materials for social networks, resulting in a 20% rise in audience engagement 
and notable brand expansion
"
18342,source/Valera Yeliesichev.docx,"EDUCATION
"
18343,source/Valera Yeliesichev.docx,"V.I. Vernadsky Taurida National University
Kyiv, Ukraine
"
18344,source/Valera Yeliesichev.docx,"Bachelor’s Degree in Philology (French Translator)
September 2013 – June 2018
"
18345,source/Valera Yeliesichev.docx,"SKILLS
"
18346,source/Valera Yeliesichev.docx,"Digital Product Design, User Experience (UX), User Interface (UI), Web Design, iOS Design, Material Design, 
Wireframing & Rapid Prototyping, Design Concepts, Design Systems, Design Sprints, Figma & Adobe Apps, 
Framer, AB-testing, Pro-Activity, Collaborating, Communication, Self-Driving, Understanding Engineering 
Requirements
"
18347,source/Valera Yeliesichev.docx,"LANGUAGES
"
18348,source/Valera Yeliesichev.docx,"English: Upper Intermediate (B2) 
"
18349,source/Valera Yeliesichev.docx,"French: Upper Intermediate (B2) 
Romanian: Native
Ukrainian: Lower Elementary (A2)
Russian: Native
"
18350,source/Denis Korenyako.pdf,"Denis Korenyako
"
18351,source/Denis Korenyako.pdf,"Product Designer with 15+ years of background in UI/UX.
Experience in producing efficient user-centered design
solutions from defining the problem to delivering a final
product. Strong skills in ideation and art direction. Able to
function as a project leader as well as an individual contributor.
Passionate about customer experience and all aspects of design.
"
18352,source/Denis Korenyako.pdf,"PORTFOLIO
"
18353,source/Denis Korenyako.pdf,"Phone:
+7 (905) 000-4567
"
18354,source/Denis Korenyako.pdf,"Email: den89@mail.com
"
18355,source/Denis Korenyako.pdf,"LinkedIn: www.linkedin.com/in/korenyaaa8k
"
18356,source/Denis Korenyako.pdf,"Country of residence: Russia, ready to relocate, Visa
assistance needed
"
18357,source/Denis Korenyako.pdf,"www.portfolio.url
SKILLS
"
18358,source/Denis Korenyako.pdf,"UX: prototypes, mockups, analysis, user
flows, personas
"
18359,source/Denis Korenyako.pdf,"EXPERIENCE
"
18360,source/Denis Korenyako.pdf,"Digital Manager — De Fonseca, Moscow
"
18361,source/Denis Korenyako.pdf,"MAY 2018 - PRESENT
"
18362,source/Denis Korenyako.pdf,"Italian home slippers brand №1
"
18363,source/Denis Korenyako.pdf,"•
Managed all digital activities of De Fonseca in Russia.
"
18364,source/Denis Korenyako.pdf,"•
Designed the global website with localization in multiple
languages.
"
18365,source/Denis Korenyako.pdf,"•
Created a UX that resulted in 53% increase of conversion rate.
"
18366,source/Denis Korenyako.pdf,"•
Built and delivered a digital strategy which led to a 388%
increase of online sales
"
18367,source/Denis Korenyako.pdf,"•
Increased brand awareness and achieved 5x increase in branded
search traffic
"
18368,source/Denis Korenyako.pdf,"Art Director — Leto, Moscow
"
18369,source/Denis Korenyako.pdf,"AUGUST 2016 - APRIL 2018
"
18370,source/Denis Korenyako.pdf,"Russian leading digital agency, part of Ark Scholz & Friends Group
"
18371,source/Denis Korenyako.pdf,"•
Oversaw the art direction and design for a variety of clients
including Anheuser-Busch, Bosch, Ferrero, Hyundai, Imperial
Tobacco, Mercedes- Benz, PepsiCo, Philip Morris, KFC,
Kotányi, Mazda, SCA (Essity), Pizza Hut, Saint-Gobain,
Unilever, Valio, X5 Group.
"
18372,source/Denis Korenyako.pdf,"•
Led the UX/UI of the client’s internal app from scratch to delivery
that
effectively saved POS maintenance costs up to 70%
"
18373,source/Denis Korenyako.pdf,"•
Led the website design for a leading food retailer from
analytics and user research to production-ready UI.
"
18374,source/Denis Korenyako.pdf,"•
Built new internal processes for rapid design and prototyping with
InVision
and Marvel
"
18375,source/Denis Korenyako.pdf,"Tools: Figma, Photoshop, InVision, Marvel, Excel, PowerPoint,
Jira
"
18376,source/Denis Korenyako.pdf,"Methodologies: Agile, Design Thinking, Customer Development,
Customer Journey Map, Jobs-to-be done
"
18377,source/Denis Korenyako.pdf,"LICENSES & CERTIFICATIONS
"
18378,source/Denis Korenyako.pdf,"Google Digital Garage,
The Fundamentals of digital marketing
"
18379,source/Denis Korenyako.pdf,"JUNE 2021
"
18380,source/Denis Korenyako.pdf,"Google Analytics, Google Analytics Individual
Qualification
"
18381,source/Denis Korenyako.pdf,"JUNE 2021
"
18382,source/Denis Korenyako.pdf,"Accenture, Digital Skills: User Experience
"
18383,source/Denis Korenyako.pdf,"MAY 2020
"
18384,source/Denis Korenyako.pdf,"Designer — KupiVIP, Moscow
"
18385,source/Denis Korenyako.pdf,"NOVEMBER 2015 - AUGUST 2016
"
18386,source/Denis Korenyako.pdf,"Largest Russian flash sales website, backed by Accel, Intel and
Mangrove
"
18387,source/Denis Korenyako.pdf,"•
Designed the website with 1,5 million MAU being the only
UX/UI designer in the company.
"
18388,source/Denis Korenyako.pdf,"•
Accomplished project in a strict deadline timeframe
"
18389,source/Denis Korenyako.pdf,"Designer — SpaceBox, Moscow
"
18390,source/Denis Korenyako.pdf,"MAY 2014 - OCTOBER 2015
"
18391,source/Denis Korenyako.pdf,"Design consultancy specialized in e-commerce and large-scale intranet
portals
"
18392,source/Denis Korenyako.pdf,"•
Designed a CRM for the biggest Russian online library.
"
18393,source/Denis Korenyako.pdf,"•
Conceptualized the intranet UI for one of the largest real estate
companies
"
18394,source/Denis Korenyako.pdf,"•
Successfully designed websites for six company clients.
"
18395,source/Denis Korenyako.pdf,"EDUCATION
"
18396,source/Denis Korenyako.pdf,"Russian Academy
of Public Administration, Moscow — Diploma
"
18397,source/Denis Korenyako.pdf,"NOVEMBER 2005 - AUGUST 2006
"
18398,source/Denis Korenyako.pdf,"Passed final exam with Distinction Television director,
Diploma
"
18399,source/Denis Korenyako.pdf,"Moscow State University of Printing Arts, Moscow
— Uncompleted
"
18400,source/Denis Korenyako.pdf,"SEPTEMBER 1996 - JANUARY 2001
"
18401,source/Denis Korenyako.pdf,"Completed 5173 hours towards a BFA.
"
18402,source/Denis Korenyako.pdf,"EXPERIENCE (continued)
"
18403,source/Denis Korenyako.pdf,"Product Manager — Apartama, Moscow
"
18404,source/Denis Korenyako.pdf,"SEPTEMBER 2011 - FEBRUARY 2014
"
18405,source/Denis Korenyako.pdf,"Startup, social commerce platform and furnishing marketplace
"
18406,source/Denis Korenyako.pdf,"•
Initiated and completed redesign that led to a 5% (1:20) conversion.
"
18407,source/Denis Korenyako.pdf,"•
Boosted number of user registrations, increased customer purchases by 34%
"
18408,source/Denis Korenyako.pdf,"•
Progressed with the company's growth, beginning as a designer and promoted to
product manager.
"
18409,source/Denis Korenyako.pdf,"•
Spearheaded a cross-functional team of 5.
"
18410,source/Denis Korenyako.pdf,"Lead Web Designer — KM, Moscow
"
18411,source/Denis Korenyako.pdf,"SEPTEMBER 2010 - AUGUST 2011
"
18412,source/Denis Korenyako.pdf,"The oldest Russian news portal and encyclopedia
"
18413,source/Denis Korenyako.pdf,"•
Led redesign of the main website with 3+ million MAU
"
18414,source/Denis Korenyako.pdf,"•
Created 120+ unique pages ahead of schedule.
"
18415,source/Denis Korenyako.pdf,"Designer — RBC Soft, Moscow
"
18416,source/Denis Korenyako.pdf,"AUGUST 2009 - SEPTEMBER 2010
"
18417,source/Denis Korenyako.pdf,"Major Russian software company, part of RBC (RosBusinessConsulting) media group
"
18418,source/Denis Korenyako.pdf,"•
Designed
Russian
government
websites
for
Ministry
of
Telecom
and
Mass
"
18419,source/Denis Korenyako.pdf,"Communications,
Ministry
of
Economic
Development
and
Federal
Service
for
"
18420,source/Denis Korenyako.pdf,"Supervision in Education and Science.
"
18421,source/Denis Korenyako.pdf,"•
Developed numerous PowerPoint decks which helped to secure over $5
million in funding and investments.
"
18422,source/Denis Korenyako.pdf,"Designer, DJEM Solutions, Moscow
"
18423,source/Denis Korenyako.pdf,"OCTOBER 2007 – MARCH 2009
"
18424,source/Denis Korenyako.pdf,"Art Director, BCD Group, Moscow
"
18425,source/Denis Korenyako.pdf,"MAY 2003 – SEPTEMBER 2007
"
18426,source/Denis Korenyako.pdf,"Art Director, New Publishing Projects, Moscow
"
18427,source/Denis Korenyako.pdf,"JULY 2002 – MAY 2003
"
18428,source/Denis Korenyako.pdf,"Web Designer, EuroAddress, Moscow
"
18429,source/Denis Korenyako.pdf,"OCTOBER 2001 – JUNE 2002
"
18430,source/Denis Korenyako.pdf,"Designer, Gazeta.ru, Moscow
"
18431,source/Denis Korenyako.pdf,"SEPTEMBER 1999 – OCTOBER 2001
"
18432,source/Denis Korenyako.pdf,"Web Designer, Triumvirate, Moscow
"
18433,source/Denis Korenyako.pdf,"OCTOBER 1998 — MAY 1999
"
18434,source/Denis Korenyako.pdf,"Game Artist, ElectroTECH Multimedia, Moscow
"
18435,source/Denis Korenyako.pdf,"SEPTEMBER 1997 — MARCH 1998
"
18436,source/Viktor Portianka.docx,"E-mail: portyanka.viiik@gmail.com
"
18437,source/Viktor Portianka.docx,"Software engineers aim at a business experience result, maintainability of the codebase and high 
performance, to give users the best. Good team player, like to help and ready for constructive 
criticism, because this is the best way to create a successful product. Ready to learn new and 
happy to help others to learn. Aimed to understand the full business flow.
"
18438,source/Viktor Portianka.docx,"Experience
"
18439,source/Viktor Portianka.docx,"10/2019 to current
Software Engineer
"
18440,source/Viktor Portianka.docx,"Skycell AG - Zurich, Switzerland
"
18441,source/Viktor Portianka.docx,"● Performed deep refactoring of the application, which decreased 
the time of feature creation 4 times.
"
18442,source/Viktor Portianka.docx,"● Defined code styles, set linter, and provided a code review 
process that significantly increased code quality and application 
reliability.
"
18443,source/Viktor Portianka.docx,"● Proposed and implemented a GitLab commit pipeline to prevent 
merging of code with styling errors or broken tests.
"
18444,source/Viktor Portianka.docx,"● Implemented visual regression testing of the application.
"
18445,source/Viktor Portianka.docx,"● Mentored junior developers and teammates in React and 
development processes.
"
18446,source/Viktor Portianka.docx,"01/2018 to 08/2019
Software Engineer
"
18447,source/Viktor Portianka.docx,"Ciklum - Kyiv, Ukraine.
"
18448,source/Viktor Portianka.docx,"● Developed the solution on how to increase test coverage. Made a 
workshop ""how to write testable code with react"".
"
18449,source/Viktor Portianka.docx,"● Increased performance of the team by and code readability by 
defining code styles and adding code linters.
"
18450,source/Viktor Portianka.docx,"● Improved error handling in the application by the component that 
handles this automatically.
"
18451,source/Viktor Portianka.docx,"04/2017 to 12/2017
Software Engineer
"
18452,source/Viktor Portianka.docx,"Innovecs - Kyiv, Ukraine
"
18453,source/Viktor Portianka.docx,"● Created MVP of the video streaming service to connect doctors 
and patients in three months.
"
18454,source/Viktor Portianka.docx,"● Designed and implemented application front-end infrastructure, 
defined code styles, and new feature release processes. Which 
"
18455,source/Viktor Portianka.docx,"made implementing new features reliable.
"
18456,source/Viktor Portianka.docx,"● Onboarded front-end team (interviewed candidates and mentored 
new teammates).
"
18457,source/Viktor Portianka.docx,"● Integrated third-party WebRTC SDK, implemented wrapper to use 
SDK, and created documentation for the wrapper.
"
18458,source/Viktor Portianka.docx,"02/2016 to 04/2017
Software Engineer
"
18459,source/Viktor Portianka.docx,"DataArt - Dnipro, Ukraine
"
18460,source/Viktor Portianka.docx,"● Improved way of handling API calls, defined a way to use 
redux-saga and created a small workshop for teammates.
"
18461,source/Viktor Portianka.docx,"● Fixed problems with performance on displaying a huge amount of 
data.
"
18462,source/Viktor Portianka.docx,"● Onboarding and mentoring junior developers.
"
18463,source/Viktor Portianka.docx,"04/2014 to 02/2016
Web Developer
"
18464,source/Viktor Portianka.docx,"Freelance
"
18465,source/Viktor Portianka.docx,"● Created real-time graphics with React.
"
18466,source/Viktor Portianka.docx,"● Created an interactive lesson of biology, that gave the ability for 
students to dissect a frog.
"
18467,source/Viktor Portianka.docx,"● Created layout for the 3D panorama player using HTML/CSS.
"
18468,source/Viktor Portianka.docx,"Education
"
18469,source/Viktor Portianka.docx,"Master of Computer Science, Dnipro National University of O.Honchar
"
18470,source/Viktor Portianka.docx,"Skills
"
18471,source/Viktor Portianka.docx,"●
Web-based software engineering
"
18472,source/Viktor Portianka.docx,"●
Advanced problem-solving skills
"
18473,source/Viktor Portianka.docx,"●
New employee mentoring
"
18474,source/Viktor Portianka.docx,"●
Business analysis
"
18475,source/Viktor Portianka.docx,"●
JavaScript (React, React-native, 
"
18476,source/Viktor Portianka.docx,"Node.js, GraphQL),Webpack, 
"
18477,source/Viktor Portianka.docx,"gulp
"
18478,source/Viktor Portianka.docx,"●
Golang, Java, C++
"
18479,source/Viktor Portianka.docx,"●
PostgreSQL, MongoDB
"
18480,source/Viktor Portianka.docx,"●
Docker, docker-compose
"
18481,source/Anzola AMANBEK.pdf,"Anzola AMANBEK
"
18482,source/Anzola AMANBEK.pdf,"+77070007850 • ralkog07@gmail.com • linkedin.com/in/aaaabek-faizolla • https://github.com/aaaugg
"
18483,source/Anzola AMANBEK.pdf,"EDUCATION
Kazakh British Technical University
Graduating May 2025
"
18484,source/Anzola AMANBEK.pdf,"B.S. Computer Systems and Software
3.64/4.00 GPA
"
18485,source/Anzola AMANBEK.pdf,"Relevant coursework: Algorithms and Data Structure, OOP, Discrete Math, Calculus, Linear Algebra
"
18486,source/Anzola AMANBEK.pdf,"TECHNICAL SKILLS
Languages: JavaScript, Golang, Python, C++, Java
Frameworks and Databases: React.js, Node.js (Express), Django, ,PostgreSQL, Angular, Gin
Technologies: Git, Linux, Redux, Docker, Rest API, Postman Swagger, Kafka, Clean Architecture
"
18487,source/Anzola AMANBEK.pdf,"EXPERIENCE
Ligeia.AI, Almaty, KZ
FrontEnd Developer
Jan 2023 – Jun 2023
"
18488,source/Anzola AMANBEK.pdf,"• Stack:React.js, Redux, Python(Django)
"
18489,source/Anzola AMANBEK.pdf,"• Collaborated with a team of 5 to design a factory-speciﬁc website using Django (backend), PostgreSQL (database),
"
18490,source/Anzola AMANBEK.pdf,"and React.js (frontend).
"
18491,source/Anzola AMANBEK.pdf,"• Crafted a real-time area chart widget using React.js and d3, enhancing data visualization capabilities.
"
18492,source/Anzola AMANBEK.pdf,"• Automated UOM data extraction from POSC sources with Python, achieving a 20% faster scraping speed; used
"
18493,source/Anzola AMANBEK.pdf,"beautifulsoup4 and pandas for data transformation into CSV.
"
18494,source/Anzola AMANBEK.pdf,"• Engaged in daily team discussions emphasizing code reviews and task planning, ensuring high code quality
"
18495,source/Anzola AMANBEK.pdf,"and alignment with project goals.
"
18496,source/Anzola AMANBEK.pdf,"APPRENTICESHIP
Nfactorial Incubator 2022, Almaty, KZ Full Stack Web Development Bootcamp Participant Jun 2022 – Aug 2022
"
18497,source/Anzola AMANBEK.pdf,"• Among 4,000 applicants, earned a spot among 150 selected participants in the 10-week international Bootcamp
"
18498,source/Anzola AMANBEK.pdf,"• Focusing on HackerRank algorithmic contests, soft skills, and educational potential, while gaining expertise in the
"
18499,source/Anzola AMANBEK.pdf,"MERN stack for independent full-stack web application development,
"
18500,source/Anzola AMANBEK.pdf,"• Extensive knowledge of Linux, Git, and client-server architecture through practical assignments, and creating a
"
18501,source/Anzola AMANBEK.pdf,"React.js-based web app for anime quote discovery.
"
18502,source/Anzola AMANBEK.pdf,"PROJECTS
"
18503,source/Anzola AMANBEK.pdf,"Anisearch
Jun 2022 – Aug 2022
"
18504,source/Anzola AMANBEK.pdf,"Building React app that helps users to ﬁnd an anime quote based on keywords.
Link to project
"
18505,source/Anzola AMANBEK.pdf,"• Stack:React.js, Node.js
"
18506,source/Anzola AMANBEK.pdf,"• Developed a React application for discovering anime quotes based on keywords, integrated the AnimeChan API for
"
18507,source/Anzola AMANBEK.pdf,"random quotes, and Achieved a 20% improvement in performance by leveraging expertise in React hooks and
addressing and resolving codebase issues.
"
18508,source/Anzola AMANBEK.pdf,"Golang e-commerce app
Apr 2023 - May 2023
"
18509,source/Anzola AMANBEK.pdf,"Led team of four to design and develop an e-commerce app
Link to project
"
18510,source/Anzola AMANBEK.pdf,"• Stack:Golang, PostgreSQL, Docker
"
18511,source/Anzola AMANBEK.pdf,"• Implemented normalized tables for various user roles and items in PostgreSQL, bolstered security with JWT
"
18512,source/Anzola AMANBEK.pdf,"authentication for user registration and login, streamlined server and database orchestration using Docker Com-
pose, and created a Golang-based RESTful API to facilitate seamless CRUD operations for data management.
"
18513,source/Nina Pugacheva.docx,"linkedin.com/in/aaaaa-
pugacheva (+36) 20 0007 
9923
"
18514,source/Nina Pugacheva.docx,"Nina 
Pugacheva
"
18515,source/Nina Pugacheva.docx,"Senior Data Scientist
"
18516,source/Nina Pugacheva.docx,"isaaaaacheva@ya.ru
"
18517,source/Nina Pugacheva.docx,"Data Scientist with 5+ years of experience in Machine Learning development for various projects in 
banking, telecommunication, and marketing areas. I have a proven track record of leading and managing a 
team of 4 professionals, including Data Scientists and Data Engineers. I possess a strong ability to 
communicate effectively with both business stakeholders and development teams, honed through my 
experience working as an ML engineer in consulting. My current responsibilities include leading a team of 4 
individuals, which comprises Data Scientists and Data Engineers. My role encompasses task assignment, 
prioritization, conducting code reviews, and establishing streamlined intra-team processes.
"
18518,source/Nina Pugacheva.docx,"SKILLS
"
18519,source/Nina Pugacheva.docx,"Programming
Python, R, SQL, Git, Bash, Apache Airflow
"
18520,source/Nina Pugacheva.docx,"Quantitative Research
Machine Learning, Mathematical statistics, Mathematical optimization, A/B testing, 
hypothesis testing Domain Knowledge
Pricing optimization, Marketing optimization, Supply Chain 
Finance, Next Best Action, Credit Risks Databases
HDFS, Google bigQuery, PostgreSQL, Oracle 
Database, PL/SQL
Data science toolkits
Pandas, Polars, Scikit-learn, Tensorflow, Keras, PyTorch, Numpy, Catboost
"
18521,source/Nina Pugacheva.docx,"Visualization Tools
Plotly, matplotlib, Seaborn, basic RShiny
"
18522,source/Nina Pugacheva.docx,"HIGHLIGHTED TECHNICAL EXPERIENCE
"
18523,source/Nina Pugacheva.docx,"Senior Data Scientist -> Data Science Team Lead / Online banking marketplace
Nov 2021 — 
Present
• Built an anti-fraud ML model tailored for detecting spurious clients reviews, subsequently packaging 
it as a service. The implementation of this pipeline within our business processes resulted in 20% 
reduction in the workload of the moderation team.
"
18524,source/Nina Pugacheva.docx,"• Implemented a Machine Learning approach for managing a Google Ads budget. As a result, costs for 
treated traffic streams were reduced by up to 15% while the conversion rate remained the same.
"
18525,source/Nina Pugacheva.docx,"• Developed a framework for selecting the best retention marketing channel, leading to an increase in 
overall conversion rates by 10% and cost savings of 20%.
"
18526,source/Nina Pugacheva.docx,"Data Scientist / Glowbyte Consulting LLC
Jan 2019 — Oct 
2021
• Project: Implemented Value-Based Pricing framework for credit offering in AlfaBank (Russian Bank 
TOP-10). The solution consisted of ML models and decision-making engine, and was required to 
cover over 3 million loan offers monthly.
"
18527,source/Nina Pugacheva.docx,"• Project: Developed Next Best Action framework for managing both revenue and risks of personal 
marketing communications in Megafon (a Russian major telecommunication company). Covering 
marketing campaigns above 17 million monthly users. The treatment group turned out to be 20-30% 
more profitable than the control group.
"
18528,source/Nina Pugacheva.docx,"• Project: Built a model for credit risk estimating based on the Supply Chain Finance (SCF) approach 
for Otkritie Bank. The implementation provided an assessment of the large and medium-sized 
businesses.
"
18529,source/Nina Pugacheva.docx,"• Project: Developed an Exposure At Default (EAD) risk model.
"
18530,source/Nina Pugacheva.docx,"Junior Data Scientist / Dentsu Aegis Network
Aug 2018 — Jan 
2019
Developed 5+ forecasting systems of seasonal sales for advertisement holdings.
EDUCATION
"
18531,source/Nina Pugacheva.docx,"Specialist Degree in Computer Science, National Research Nuclear University MEPHI - Moscow Engineering Physics 
"
18532,source/Nina Pugacheva.docx,"Institute, Russia Additional course: Machine learning and data analysis, MIPT & Yandex at Coursera.org
"
18533,source/Nina Pugacheva.docx,"PUBLICATIONS
"
18534,source/Nina Pugacheva.docx,"ENG: ML&DS shades of Credit Risk Management. Part I.
RU: ML&DS shades of Credit Risk Management. Exposure 
at default RU: Machine learning in banking pricing. VBP
"
18535,source/Nina Pugacheva.docx,"PROFESSIONAL ACTIVITIES
"
18536,source/Nina Pugacheva.docx,"• Conducting public talks about the business application of Machine Learning.
• Engaged in 1:1 mentorship with a junior teammate, helping develop technical skills such as SQL and 
Python, as well as systems design and OOP.
"
18537,source/Nina Pugacheva.docx,"• Developed library and visualization tool for building ML models and evaluating the impact of manually 
quantized predictors. Launching and leading this project with junior and mid-level coworkers as a 
side-project that eventually became part of the company-wide ModelOps solution.
"
18538,source/Arseniy Konev.pdf,"Arseniy Konev
"
18539,source/Arseniy Konev.pdf,"ML/DL specialist
"
18540,source/Arseniy Konev.pdf,"arsenkonev@gmail.com · Moscow,
"
18541,source/Arseniy Konev.pdf,"Russia
"
18542,source/Arseniy Konev.pdf,"EXPERIENCE
"
18543,source/Arseniy Konev.pdf,"• Yandex
"
18544,source/Arseniy Konev.pdf,"Machine Learning Developer - Moscow, Russia Developing
"
18545,source/Arseniy Konev.pdf,"video recommender system. I work on the whole pipeline:
"
18546,source/Arseniy Konev.pdf,"logs processing/data collection/model
"
18547,source/Arseniy Konev.pdf,"training/AB-testing/models deployment
"
18548,source/Arseniy Konev.pdf,"March 2020 onwards
"
18549,source/Arseniy Konev.pdf,"• Yandex.Market
"
18550,source/Arseniy Konev.pdf,"Intern analyst
"
18551,source/Arseniy Konev.pdf,"Developed a recommender system for categories. Re-
"
18552,source/Arseniy Konev.pdf,"sponsibilities: data collection/model training/AB- testing
"
18553,source/Arseniy Konev.pdf,"May - August 2019
"
18554,source/Arseniy Konev.pdf,"EDUCATION
"
18555,source/Arseniy Konev.pdf,"• M.S. Data Science
"
18556,source/Arseniy Konev.pdf,"Skoltech
"
18557,source/Arseniy Konev.pdf,"Developing DL models for multimodal trajectory pre-
"
18558,source/Arseniy Konev.pdf,"diction for self-driving cars
"
18559,source/Arseniy Konev.pdf,"2018-2021
"
18560,source/Arseniy Konev.pdf,"• B.S. Physics
"
18561,source/Arseniy Konev.pdf,"Lomonosov Moscow State University
"
18562,source/Arseniy Konev.pdf,"2014-2018
"
18563,source/Arseniy Konev.pdf,"AWARDS & RECOGNITION
"
18564,source/Arseniy Konev.pdf,"• Open AI Caribbean Challenge
"
18565,source/Arseniy Konev.pdf,"Rooftops classification using satellite data. Used CNN
"
18566,source/Arseniy Konev.pdf,"models + smart stacking
"
18567,source/Arseniy Konev.pdf,"3/1425
"
18568,source/Arseniy Konev.pdf,"Link to a post in organizers‘ blog
"
18569,source/Arseniy Konev.pdf,"• Kaggle Lyft Motion Prediction for Au-
"
18570,source/Arseniy Konev.pdf,"tonomous Vehicles
"
18571,source/Arseniy Konev.pdf,"Bronze: 68 / 925 teams
"
18572,source/Arseniy Konev.pdf,"The task was to predict the trajectory of the agents
"
18573,source/Arseniy Konev.pdf,"(cars/bikes/pedestrians etc) around the autonomous
"
18574,source/Arseniy Konev.pdf,"vehicle. I combined different approaches of pretrained
"
18575,source/Arseniy Konev.pdf,"CNNs and self-implemented graph nets
"
18576,source/Arseniy Konev.pdf,"AWARDS & RECOGNITION
"
18577,source/Arseniy Konev.pdf,"• International hackathon Ice Vision Chal-
"
18578,source/Arseniy Konev.pdf,"lenge
"
18579,source/Arseniy Konev.pdf,"The task was to detect road sings with the inference
"
18580,source/Arseniy Konev.pdf,"time restriction
"
18581,source/Arseniy Konev.pdf,"6 / 26
"
18582,source/Arseniy Konev.pdf,"Link
"
18583,source/Arseniy Konev.pdf,"SKILLS
"
18584,source/Arseniy Konev.pdf,"• Technologies
"
18585,source/Arseniy Konev.pdf,"Python, Pytorch, TensorFlow, ML stack (numpy, scipy,
"
18586,source/Arseniy Konev.pdf,"pandas, sklearn etc), SQL
"
18587,source/Arseniy Konev.pdf,"• Math
"
18588,source/Arseniy Konev.pdf,"Machine Learning / Deep Learning (implemented con-
"
18589,source/Arseniy Konev.pdf,"volutional nn using pure numpy, writing formulas for
"
18590,source/Arseniy Konev.pdf,"backprops) / Numerical Linear Algebra / Large Scale
"
18591,source/Arseniy Konev.pdf,"Optimization / Advanced Statistical Methods
"
18592,source/Arseniy Konev.pdf,"• Languages
"
18593,source/Arseniy Konev.pdf,"Russian (native speaker), English (fluent)
"
18594,source/Arseniy Konev.pdf,"PROJECTS
"
18595,source/Arseniy Konev.pdf,"• Optimal Control of Satellite Model via
"
18596,source/Arseniy Konev.pdf,"Neural Networks [pdf]
"
18597,source/Arseniy Konev.pdf,"comparison
of
deep
learning
and
reinforcement
"
18598,source/Arseniy Konev.pdf,"approaches to the task of optimal control of satellite
"
18599,source/Arseniy Konev.pdf,"model
"
18600,source/Arseniy Konev.pdf,"• A�ention/decision maps [pdf]
"
18601,source/Arseniy Konev.pdf,"Detecting
regions
of MRI responsible for health
"
18602,source/Arseniy Konev.pdf,"problem
"
18603,source/Leonid Kolesnikov.pdf,"Leonid Kolesnikov
"
18604,source/Leonid Kolesnikov.pdf,"+7(981)000-58-13 | aaahka0264@gmail.com | linkedin.com/in/saaaka0264 | github.com/saaaka0264
"
18605,source/Leonid Kolesnikov.pdf,"SKILLS
"
18606,source/Leonid Kolesnikov.pdf,"Technologies: JavaScript, TypeScript, React, Inferno, HTML5, CSS3, SASS/SCSS, CSS-modules, styled-components, PostCSS, Redux,
Redux Toolkit, Redux-thunk, Redux-saga, Jest, Mocha, Chai, Enzyme, React Testing Library, axios, MUI, Bootstrap, lodash, Gulp.js,
Webpack, Git, Jenkins, Sonar, JSON, AJAX, REST, GraphQL, Node.js, Express, Mongoose, Webstorm, MacOS
Key Competencies: Algorithms and Data Structure, Computer Networks, REST API
Key Social Skills: Effective communication, Conflict resolution, Active listening, Empathy, Partnerships and Risk Managment,
Respect
Languages: English - B1, Deutsch - A1, Russian - Native
"
18607,source/Leonid Kolesnikov.pdf,"EXPERIENCE
"
18608,source/Leonid Kolesnikov.pdf,"Sberbank of Russia
Saint Petersburg, Russia
"
18609,source/Leonid Kolesnikov.pdf,"Software Engineer
December 2020 – until now
"
18610,source/Leonid Kolesnikov.pdf,"• Implemented 1 user interface for editing data on banking products from scratch
"
18611,source/Leonid Kolesnikov.pdf,"• Improved application for precious metals with legacy code in record time (received a certificate of merit)
"
18612,source/Leonid Kolesnikov.pdf,"• Built 1 large user interface with coins for millions of users
"
18613,source/Leonid Kolesnikov.pdf,"Andersen Lab
Saint Petersburg, Russia
"
18614,source/Leonid Kolesnikov.pdf,"Software Engineer
March 2017 – December 2020
"
18615,source/Leonid Kolesnikov.pdf,"• Created several landing pages, 2 loan calculators for real estate exchange
"
18616,source/Leonid Kolesnikov.pdf,"• Constructed a credit broker UI for largest Russian online bank. Main platform support
"
18617,source/Leonid Kolesnikov.pdf,"• Constructed a component with registration and form builder for designing polls
"
18618,source/Leonid Kolesnikov.pdf,"• Made a simple management platform hosting
"
18619,source/Leonid Kolesnikov.pdf,"PROJECTS
"
18620,source/Leonid Kolesnikov.pdf,"Internal business platform | JavaScript, React, Redux, Jest, CSS Modules
November 2022 – until now
"
18621,source/Leonid Kolesnikov.pdf,"• Initiated project, described documentation and basis of application, played a key role in its formation and laid
"
18622,source/Leonid Kolesnikov.pdf,"foundation for its success
"
18623,source/Leonid Kolesnikov.pdf,"• Reviewed code
"
18624,source/Leonid Kolesnikov.pdf,"• Cooperated with team, participating in agile scrum events
"
18625,source/Leonid Kolesnikov.pdf,"• Task statuses in Jira
"
18626,source/Leonid Kolesnikov.pdf,"• Designed architecture
"
18627,source/Leonid Kolesnikov.pdf,"• Created and support 1 user interface for editing data on banking products
"
18628,source/Leonid Kolesnikov.pdf,"• Achieved success in enhancing performance (JSDoc, unit tests)
"
18629,source/Leonid Kolesnikov.pdf,"Bars catalog | JavaScript, TypeScript, React, Redux, Jest, CSS Modules
December 2020 – until now
"
18630,source/Leonid Kolesnikov.pdf,"• Delivered code review
"
18631,source/Leonid Kolesnikov.pdf,"• Participated in Scrum events (sprints, daily, sprint planning, estimation)
"
18632,source/Leonid Kolesnikov.pdf,"• Navigated through tight timelines while tackling extensive layout modifications to meet project requirements
"
18633,source/Leonid Kolesnikov.pdf,"• Assumed core responsibility for planning end estimation of project tasks and timelines ensuring efficient project
"
18634,source/Leonid Kolesnikov.pdf,"management
"
18635,source/Leonid Kolesnikov.pdf,"• Task statuses in Jira
"
18636,source/Leonid Kolesnikov.pdf,"• Improved application for precious metals with legacy code in record time (received a certificate of merit)
"
18637,source/Leonid Kolesnikov.pdf,"• Fixed more bugs
"
18638,source/Leonid Kolesnikov.pdf,"• Honed code (unit tests, typescript)
"
18639,source/Leonid Kolesnikov.pdf,"Coin catalog (Sberbank) | JavaScript, TypeScript, React, Redux, Jest, CSS Modules
December 2020 – until now
"
18640,source/Leonid Kolesnikov.pdf,"• Provided code review
"
18641,source/Leonid Kolesnikov.pdf,"• Facilitated in Scrum events (sprints, daily, sprint planning, estimation)
"
18642,source/Leonid Kolesnikov.pdf,"• Took an active role in business side development, involving initiation and troubleshooting of business and
"
18643,source/Leonid Kolesnikov.pdf,"development process
"
18644,source/Leonid Kolesnikov.pdf,"• Task statuses in Jira
"
18645,source/Leonid Kolesnikov.pdf,"• Communicated with other teams (about design, etc.)
"
18646,source/Leonid Kolesnikov.pdf,"• Fixed bugs and support main pages
"
18647,source/Leonid Kolesnikov.pdf,"• Introduced a variety of new features to elevate user experience
"
18648,source/Leonid Kolesnikov.pdf,"• Built 1 large user interface with coins for millions of users
"
18649,source/Leonid Kolesnikov.pdf,"• Implementing new features
"
18650,source/Leonid Kolesnikov.pdf,"• Maintained various smaller projects on request
"
18651,source/Leonid Kolesnikov.pdf,"• Enhanced code (unit tests, typescript)
"
18652,source/Leonid Kolesnikov.pdf,"PropertyGuru Group | TypeScript, React, Redux, Redux-Thunk, Mocha, Chai
August 2019 – December 2020
"
18653,source/Leonid Kolesnikov.pdf,"• Initializing a new project
"
18654,source/Leonid Kolesnikov.pdf,"• Wrote several landing pages and 2 loan calculators
"
18655,source/Leonid Kolesnikov.pdf,"• Cooperated with team, participating in agile scrum events
"
18656,source/Leonid Kolesnikov.pdf,"Internet banking | JavaScript, React (Inferno), Redux, Webpack, CSS Modules, PostCSS June 2018 – August 2019
"
18657,source/Leonid Kolesnikov.pdf,"• Devised 1 credit broker interface
"
18658,source/Leonid Kolesnikov.pdf,"• Main broker platform support
"
18659,source/Leonid Kolesnikov.pdf,"• Communicated with other teams
"
18660,source/Leonid Kolesnikov.pdf,"• Managed without sprints from release to release (on average 2 weeks)
"
18661,source/Leonid Kolesnikov.pdf,"Choicely | JavaScript, React (Inferno), Redux, Webpack, CSS Module, PostCSS
October 2017 – June 2018
"
18662,source/Leonid Kolesnikov.pdf,"• Made 1 component with registration and 1 form builder
"
18663,source/Leonid Kolesnikov.pdf,"• Honed code
"
18664,source/Leonid Kolesnikov.pdf,"• Rewrote project to React from Inferno
"
18665,source/Leonid Kolesnikov.pdf,"• Analyzed code
"
18666,source/Leonid Kolesnikov.pdf,"• Participated in Scrum events (sprints, daily, retrospective)
"
18667,source/Leonid Kolesnikov.pdf,"Majordomo (Andersen Lab) | JavaScript, React, Bootstrap, CSS
March 2017 – October 2017
"
18668,source/Leonid Kolesnikov.pdf,"• Initializing a new project
"
18669,source/Leonid Kolesnikov.pdf,"• Devised a platform designed for hosting management
"
18670,source/Leonid Kolesnikov.pdf,"• Developing components and binding to API
"
18671,source/Leonid Kolesnikov.pdf,"• Facilitated in Scrum events (sprints, daily)
"
18672,source/DMIRTII TKACHENKO.pdf,"Python 
"
18673,source/DMIRTII TKACHENKO.pdf,"Unix 
"
18674,source/DMIRTII TKACHENKO.pdf,"SQL 
"
18675,source/DMIRTII TKACHENKO.pdf,"Jira 
"
18676,source/DMIRTII TKACHENKO.pdf,"HTML 
"
18677,source/DMIRTII TKACHENKO.pdf," 
"
18678,source/DMIRTII TKACHENKO.pdf,"DMIRTII TKACHENKO 
"
18679,source/DMIRTII TKACHENKO.pdf,"EDUCATION 
 
"
18680,source/DMIRTII TKACHENKO.pdf,"Taras Shevchenko National University 
"
18681,source/DMIRTII TKACHENKO.pdf,"Bachelor in Computer Science 
"
18682,source/DMIRTII TKACHENKO.pdf," Aug 2014 – June 2018 
Kyiv, UA 
"
18683,source/DMIRTII TKACHENKO.pdf,"Taras Shevchenko National University 
"
18684,source/DMIRTII TKACHENKO.pdf,"Masters in Computer Science 
"
18685,source/DMIRTII TKACHENKO.pdf," Aug 2018 – June 2020 
Kyiv, UA 
"
18686,source/DMIRTII TKACHENKO.pdf," 
EXPERIENCE 
 
"
18687,source/DMIRTII TKACHENKO.pdf,"Data Operator 
"
18688,source/DMIRTII TKACHENKO.pdf,"Ring Ukraine 
"
18689,source/DMIRTII TKACHENKO.pdf," Nov 2017 – Oct 2018 
Kyiv, UA 
"
18690,source/DMIRTII TKACHENKO.pdf,"• Labeling the objects on images and video frames using various 
"
18691,source/DMIRTII TKACHENKO.pdf,"labeling tools on Mac OS. 
"
18692,source/DMIRTII TKACHENKO.pdf,"• Working closely with a development team that supports and 
"
18693,source/DMIRTII TKACHENKO.pdf,"improves the labeling tool and R&D team that uses the data 
produced. 
"
18694,source/DMIRTII TKACHENKO.pdf,"• Providing feedback on the tool, and contributing to creating a 
"
18695,source/DMIRTII TKACHENKO.pdf,"labeling manual. 
"
18696,source/DMIRTII TKACHENKO.pdf,"• Analyzing videos and assign them to defined categories. 
• Moderation of the multimedia content. 
• Create reports based on the labeling results. 
"
18697,source/DMIRTII TKACHENKO.pdf," 
"
18698,source/DMIRTII TKACHENKO.pdf,"Community manager 
"
18699,source/DMIRTII TKACHENKO.pdf,"Data Science UA 
"
18700,source/DMIRTII TKACHENKO.pdf," Nov 2019 – May 2020 
Kyiv, UA 
"
18701,source/DMIRTII TKACHENKO.pdf,"• SMM and Content-management (Facebook, Instagram, Tele- 
"
18702,source/DMIRTII TKACHENKO.pdf,"gram, LinkedIn, YouTube). 
"
18703,source/DMIRTII TKACHENKO.pdf,"• FB advertising setup. 
• E-mail marketing. 
• Event-management. 
• Public relations. 
• Project management. 
"
18704,source/DMIRTII TKACHENKO.pdf,"LANGUAGES 
 
"
18705,source/DMIRTII TKACHENKO.pdf,"Ukrainian 
English 
German 
"
18706,source/DMIRTII TKACHENKO.pdf,"TECHNICAL SKILLS 
 
"
18707,source/DMIRTII TKACHENKO.pdf," 
"
18708,source/DMIRTII TKACHENKO.pdf,"ACHIEVEMENTS 
 
"
18709,source/DMIRTII TKACHENKO.pdf,"Computer vision hackathon winner(2nd 
place) 
• Application “AR Visual Presence System”. 
• Collaborated with 4 teammates to build an 
"
18710,source/DMIRTII TKACHENKO.pdf,"amazing user experience. 
"
18711,source/DMIRTII TKACHENKO.pdf," 
CERTIFICATES 
 
"
18712,source/DMIRTII TKACHENKO.pdf,"Programming for Everybody (Getting 
Started with Python) 
"
18713,source/DMIRTII TKACHENKO.pdf,"Coursera 
"
18714,source/DMIRTII TKACHENKO.pdf," June 2020 
Kyiv, UA 
"
18715,source/DMIRTII TKACHENKO.pdf,"Programming for Everybody (Python 
Data Structures 
"
18716,source/DMIRTII TKACHENKO.pdf,"Coursera 
"
18717,source/DMIRTII TKACHENKO.pdf," June 2020 
Kyiv, UA 
"
18718,source/DMIRTII TKACHENKO.pdf,"Networking Essentials 
"
18719,source/DMIRTII TKACHENKO.pdf,"Cisco 
"
18720,source/DMIRTII TKACHENKO.pdf," May 2015 
Kyiv, UA 
"
18721,source/DMIRTII TKACHENKO.pdf,"IELTS 
"
18722,source/DMIRTII TKACHENKO.pdf,"British Council 
"
18723,source/DMIRTII TKACHENKO.pdf," May 2015 
Kyiv, UA 
"
18724,source/DMIRTII TKACHENKO.pdf," 
VOLUNTEER 
 
"
18725,source/DMIRTII TKACHENKO.pdf,"Developer Student Club 
"
18726,source/DMIRTII TKACHENKO.pdf,"Google 
"
18727,source/DMIRTII TKACHENKO.pdf," Jan – May 2020 
Kyiv, UA 
"
18728,source/DMIRTII TKACHENKO.pdf,"Hackathon Expert Group 
"
18729,source/DMIRTII TKACHENKO.pdf,"Taras Shevchenko National University 
"
18730,source/DMIRTII TKACHENKO.pdf," Sep 2017-May 2020 
Kyiv, UA 
"
18731,source/DMIRTII TKACHENKO.pdf,"Data Science Conference #8 
"
18732,source/DMIRTII TKACHENKO.pdf,"Data Science UA 
"
18733,source/DMIRTII TKACHENKO.pdf," Oct 2019 
Kyiv, UA 
"
18734,source/EGOR SADIBEKOV .pdf,"EGOR SADIBEKOV - SOFTWARE ENGINEER 
"
18735,source/EGOR SADIBEKOV .pdf," | email: sadibe11111@gmail.com phone: (+7) 7073219111 | 
"
18736,source/EGOR SADIBEKOV .pdf,"Summary: Experienced product-oriented software engineer with 2+ years in fintech, driven by a strong passion 
for building secure, scalable, and efficient systems that can serve millions of users. 
"
18737,source/EGOR SADIBEKOV .pdf," 
"
18738,source/EGOR SADIBEKOV .pdf,"EDUCATION 
M.S. in Information Systems 
2022 – 2024 
"
18739,source/EGOR SADIBEKOV .pdf,"at Kazakh British Technical University 
Research: Assessing brain development in children by analyzing brain signals (EEG) with Python and ML. 
"
18740,source/EGOR SADIBEKOV .pdf,"B.A. in Political Science 
2018 – 2022 
"
18741,source/EGOR SADIBEKOV .pdf,"at Nazarbayev University 
"
18742,source/EGOR SADIBEKOV .pdf," 
WORK EXPERIENCE 
Software Engineer at Kaspi.kz (60B evaluation, LSE listed - KAKZF) 
05/2022 – Present 
"
18743,source/EGOR SADIBEKOV .pdf,"TechStack: Java 17, Kotlin, Kubernetes 
Almaty, Kazakhstan 
"
18744,source/EGOR SADIBEKOV .pdf,"● 
Proposed and implemented a solution, integrating JWT security authorization and Redis caching, 
resulting in an 80% reduction in database queries. 
"
18745,source/EGOR SADIBEKOV .pdf,"● 
Reduced backend service latency from 1500 ms to 300 ms by implementing parallel decomposition of 
workers and asynchronous programming in a collaborative team setting. 
"
18746,source/EGOR SADIBEKOV .pdf,"● 
Developed a reactive rate limiter microservice in Java, bolstering security against denial-of-service 
attacks as part of a cross-functional team. 
"
18747,source/EGOR SADIBEKOV .pdf,"● 
Spearheaded the creation of a mobile service for secure data management, leading to a remarkable 
95% increase in positive user reviews. 
"
18748,source/EGOR SADIBEKOV .pdf,"● 
Optimized Spring unit and integration tests by 70% through abstract class inheritance, contributing 
to more efficient daily continuous integration processes. 
"
18749,source/EGOR SADIBEKOV .pdf,"● 
Implemented Kafka-based event control, enabling auditing for 80% of business processes, such as 
online credit transactions. 
"
18750,source/EGOR SADIBEKOV .pdf,"Software Engineer at Sberbank (the largest digital ecosystem in Russia) 
05/2021 – 04/2022 
"
18751,source/EGOR SADIBEKOV .pdf,"TechStack: Python, Apache Airflow, Kafka 
Moscow, Russia 
"
18752,source/EGOR SADIBEKOV .pdf,"● 
Implemented a ranking system based on statistical algorithms in Python, leveraging Apache Airflow 
for workflow orchestration. This led to a remarkable productivity increase of over 80%. 
"
18753,source/EGOR SADIBEKOV .pdf,"● 
Engineered a Python-based smart push notification algorithm, integrated with Kafka for real-time 
event streaming. This algorithm increased revenue by 150% through timely debt collection reminders. 
"
18754,source/EGOR SADIBEKOV .pdf,"● 
Proposed and successfully executed a strategy to minimize systematic deviations from 60 to a core 
15, significantly enhancing data analysis quality and the performance of existing algorithms. 
"
18755,source/EGOR SADIBEKOV .pdf,"TECHNOLOGIES & SKILLS 
Java | Kotlin | Python | Git | Kubernetes, Docker | Apache Kafka, Airflow | Camunda BPM | OpenCV | SQL 
(PostgreSQL, MySQL), NoSQL (Redis, MongoDB) | Effective team worker | Problem solver 
"
18756,source/EGOR SADIBEKOV .pdf,"PROJECTS 
Restaurant booking 
/restaurant-book 
"
18757,source/EGOR SADIBEKOV .pdf,"● 
Developed a Kotlin backend using reactive programming, incorporating both CQRS and Event 
Sourcing design patterns. Supports asynchronous reservation of restaurant places. 
"
18758,source/EGOR SADIBEKOV .pdf,"Blog Posting Application 
/simple-blog-application 
"
18759,source/EGOR SADIBEKOV .pdf,"● 
Built a Spring Boot-based application with Java backend and Vue.js frontend that enables authorized 
users to publish and read blog posts on any topic. 
"
18760,source/EGOR SADIBEKOV .pdf,"Car model Recognizer 
/car-model-recognizer 
"
18761,source/EGOR SADIBEKOV .pdf,"● 
Implemented a Java computer vision algorithm using convolutional neural network, capable of 
identifying car models based on car images. 
"
18762,source/Pavel Fedotov.docx,"1
"
18763,source/Pavel Fedotov.docx,"@TechLead (Ex-Google Tech Lead)
"
18764,source/Pavel Fedotov.docx,"I've reviewed hundreds of engineering resumes. Here's a recap on some of 
my best tips below. More interview training with ex-Google and ex-Facebook 
engineers at http://techinterviewpro.com/
"
18765,source/Pavel Fedotov.docx,"The 10-second rule
"
18766,source/Pavel Fedotov.docx,"Take 10 seconds to scan your resume from the beginning, reading through it quickly 
(as if you had a dozen other resumes to get through). This may involve reading only 
the first half-page, scanning the first 5 words of each sentence/bullet point.
"
18767,source/Pavel Fedotov.docx,"What do you see? If it's all over the place with fluff words, weak verbs, and shows 
weakness, chances are your resume will get thrown out because 10 seconds is 
probably about as much time as a recruiter/hiring manager is going to give you.
"
18768,source/Pavel Fedotov.docx,"Here's what you need to ensure:
"
18769,source/Pavel Fedotov.docx,"● The first words at the top of your resume should be very software-developer 
oriented, around developing, implementing, creating, and building:
"
18770,source/Pavel Fedotov.docx,"○ ""Developed a REST API in X using Python and Java...""
○ ""Built a full-stack web app and launched to 1000 users...""
○ ""Taught myself GoLang and implemented a framework for a 
webserver..."" That's starting to sound like a candidate we might be 
interested in.
"
18771,source/Pavel Fedotov.docx,"● The resume should flow in sentence structure, explaining one after another 
in active verbs what you have personally done. There's a rhythm here: ""Built 
X, Created Y, Developed Z, Implemented A, Built ..."" If you are breaking up 
the resume with statements rather than actions like ""GeoPickV3: A project to 
terraform the geoclusters,"" that halts the readability of the resume with fluff 
words that explain absolutely nothing, and switching the subject between 
you, your project, your team, and your company causes mental breaks. The 
subject should be you.
"
18772,source/Pavel Fedotov.docx,"● It should be clear that you are a strong developer for the targeted role within 
the first few
moments of reading your resume. If it is not strong, you need to rephrase your 
resume.
"
18773,source/Pavel Fedotov.docx,"Pitfalls:
"
18774,source/Pavel Fedotov.docx,"● Don't use non-engineering words like ""Documented,"" ""Supported,"" 
"
18775,source/Pavel Fedotov.docx,"2
"
18776,source/Pavel Fedotov.docx,"""Troubleshooted, ""Automated unit-testing,"" etc., You are not applying to be 
tech-support here or a documentation writer, so there's no need to 
highlight those points. Just like how you wouldn't highlight that you can 
cook, even though the company may need a few good cooks -- that's not 
what you're expecting to do here.
"
18777,source/Pavel Fedotov.docx,"3
"
18778,source/Pavel Fedotov.docx,"● At the top, don't list low-priority information like hobbies, extracurriculars, or 
irrelevant skills like Photoshop, Premiere, Excel. Move these towards the 
bottom of the resume, or just leave out skills that may dilute your resume.
"
18779,source/Pavel Fedotov.docx,"● Don't spend too much time explaining what the company does or what the 
team does. Explain what you personally did.
"
18780,source/Pavel Fedotov.docx,"Tell a Story
"
18781,source/Pavel Fedotov.docx,"Descriptions should tell a story.
"
18782,source/Pavel Fedotov.docx,"It is absolutely useless to list a bunch of technical jargon that no one knows. Imagine 
reading a laundry list of:
"
18783,source/Pavel Fedotov.docx,"● Implemented X (version 238200)
● Implemented Y in SprintSpark 3
● Implemented Z using GeoLoaderXX1
"
18784,source/Pavel Fedotov.docx,"It just doesn't matter what someone implemented if there is no story behind it.
"
18785,source/Pavel Fedotov.docx,"Even worse, many people don't explain the languages used, and these technologies 
are often all proprietary so there is no way to reuse the skillset.
"
18786,source/Pavel Fedotov.docx,"Saying that you ""Implemented Carraform v2.0 and launched to Prexo SpringSuite"" is like 
saying nothing, and yet most resumes are absolutely littered with phrases like this.
"
18787,source/Pavel Fedotov.docx,"I would recommend you explain your descriptions in a format of
[ACCOMPLISHMENT, IMPACT, CHALLENGE]
"
18788,source/Pavel Fedotov.docx,"This 3 components tell a complete story. For instance, you might say ""Developed a 
server-side layout engine in iOS by teaching myself GoLang to automate 1000+ 
antiquated manual layouts. Working with a coworker, this began as an ambiguous 
project that I drove to completion and launched company-wide."" This is far more 
impactful and relatable, since it explains what you did, why it was hard, and what 
the validation of that work was.
"
18789,source/Pavel Fedotov.docx,"Less is more.
"
18790,source/Pavel Fedotov.docx,"Focus on a few very strong points and develop those, instead of a long list of bullet 
point features, none of which seem very interesting for anyone to care about. If you 
have a big accomplishment, spend more time on your resume to talk about that. The 
fact is that any bullet point could have an amazing story behind it, but you need to 
reveal that story.
"
18791,source/Pavel Fedotov.docx,"I once saw a resume with a ""Co-founder"" role and yet there was a single 5-word 
bullet point. ""Co-founded a company and launched X."" That looks... disgenuine. 
"
18792,source/Pavel Fedotov.docx,"4
"
18793,source/Pavel Fedotov.docx,"Was this real? What were
"
18794,source/Pavel Fedotov.docx,"the challenges and impact? Is this worth talking about? Obviously not if the 
candidate didn't have much to say about it.
"
18795,source/Pavel Fedotov.docx,"It's about you. Not about your accomplishment
"
18796,source/Pavel Fedotov.docx,"What many candidates fail to realize is that I want to know what you, as an 
individual, did. Not what your company did.
Not what your team 
did. Not what your 
project did. What you 
did.
"
18797,source/Pavel Fedotov.docx,"Because the fact is, the only thing you're able to bring to my team is you.
"
18798,source/Pavel Fedotov.docx,"So I want to know about your personal contributions to a project. That's it -- what 
type of character are you, what skills do you have, how did you apply those skills, 
what motivates you. It doesn't matter if your company is ""the worldclass leader in B2B 
enterprise solutions with 50,000 clients,"" if the only task you did was write tooling 
documentation.
"
18799,source/Pavel Fedotov.docx,"So, don't worry so much about listing every little accomplishment like how you 
""Implemented Terraform in CarbOS using Carabide."" Nothing in that sentence is 
usable or translatable. But if you were to say ""Taught myself Carabide in 2 months 
and collaborated with 3 teams to lead development of Terraform, launching with 
CarbOS..."" That tells me a lot more about your ability to learn, your collaboration 
skills, and your passion for creating.
"
18800,source/Pavel Fedotov.docx,"Show. Don't tell.
"
18801,source/Pavel Fedotov.docx,"Every bad resume seems to have a portion where the candidate will say:
"
18802,source/Pavel Fedotov.docx,"""I am hardworking, enthusiastic, and passionate. I am a great communicator, have 
excellent teamwork skills, and am perfect!""
"
18803,source/Pavel Fedotov.docx,"You're telling me, but you're not showing me. What reason do I have to believe you?
"
18804,source/Pavel Fedotov.docx,"If you're such a great communicator, you should have the stories to back that up -- 
instead of telling me that you can communicate, show me that through a story about 
how you ""Mentored your team through weekly presentations, leading to the adoption of 
the ViewModel pattern in the codebase.""
"
18805,source/Pavel Fedotov.docx,"If you're passionate, tell me about a pet project you started.
"
18806,source/Pavel Fedotov.docx,"If you're hardworking, tell me about how you taught yourself a new language 
"
18807,source/Pavel Fedotov.docx,"and shipped it under a tight deadline.
"
18808,source/Pavel Fedotov.docx,"The resume is where these stories paint a picture 
"
18809,source/Pavel Fedotov.docx,"of you. It is your personal marketing brochure, not 
"
18810,source/Pavel Fedotov.docx,"a fact-sheet.
"
18811,source/Pavel Fedotov.docx,"What in here isn't BS?
"
18812,source/Pavel Fedotov.docx,"A trained resume reviewer will be scanning for fake, BS stories. For a resume to 
standout, it needs to contain validation. You validate your skills by explaining the 
results -- the impacts of your work. Some tips here:
"
18813,source/Pavel Fedotov.docx,"● For each story, list the impact. Instead of saying ""Implemented X,"" say 
""Implemented X, and was featured in the TechCrunch."" Or ""... this work was 
adopted to the wider team."" Or ""... saving $XX thousands of dollars,"" or ""... and 
sped up developer velocity.""
"
18814,source/Pavel Fedotov.docx,"● I've seen resumes with 10 pet projects, and yet not a single link to the project 
website or github or anything. Where's the evidence of any of this? Were these 
worthless projects that were trashed?
"
18815,source/Pavel Fedotov.docx,"● Put in concrete technical details where they count to substantiate your 
claims. If you have a one-liner ""Developed the iPhone,"" that's just not 
believable. But if you can expand on that with all the relevant technologies & 
challenges, that makes your claim believable. Grounding the claim in reality 
makes it impressive.
"
18816,source/Pavel Fedotov.docx,"People won't click on your links.
"
18817,source/Pavel Fedotov.docx,"A lot of candidates put links in their resume, which is great. But just know that 90% 
of people will not be going through the hassle of opening each and every link.
"
18818,source/Pavel Fedotov.docx,"I've seen a number of resumes where people say ""Built Project Maven 
(github.com/myproject)."" The description here isn't sufficient and it needs to stand on 
its own - you can't assume anyone will go to these links.
"
18819,source/Pavel Fedotov.docx,"● If you have links, it may help to have a single personal page (yourname.com), 
rather than a dozen links to your github, linkedin, facebook, twitter, personal 
page, project page1, project page2, etc., Who's going to open all of that?
"
18820,source/Pavel Fedotov.docx,"● Make the links easy to type, using a shortener or custom domain.
● If someone takes the time to open any of these, make sure the projects look 
good. If I waste 5 minutes of my time to check out your personal GitHub, and 
"
18821,source/Pavel Fedotov.docx,"it's just scrap waste projects... guess where your resume's going too?
"
18822,source/Pavel Fedotov.docx,"Target your resume to the role.
"
18823,source/Pavel Fedotov.docx,"A lot of candidates get confused about ""facts"" vs ""story"". Your resume is not a fact 
sheet. It is a targeted story, subjectively told in an effort to persuade a biased 
decision.
"
18824,source/Pavel Fedotov.docx,"If you worked in a ""Hardware Engineer"" role and now you want to do Software 
Engineering... do you talk about your hardware work? If you can cook, do you talk 
about that? If you worked as an Uber driver, do you list that? The answer to all of 
these is ""no.""
"
18825,source/Pavel Fedotov.docx,"Depending on the role at hand, you want to highlight just the relevant skills. Even if 
at your last job 10% of the work was Python, if you're applying for a Python role you 
want to be gushing about all the Python development that you did. ""Implemented X 
in Python. Used Python to do Y. Taught myself Python frameworks Django and Flask 
to do Z.""
"
18826,source/Pavel Fedotov.docx,"If the role is for Machine Learning, focus in on those keywords.
If it's for a web frontend engineer, focus in on your web 
"
18827,source/Pavel Fedotov.docx,"javascript skills. If you aim for everything, you'll hit nothing.
"
18828,source/Pavel Fedotov.docx,"You must code.
"
18829,source/Pavel Fedotov.docx,"The hilarious thing is sometimes people apply for SWE roles and yet they don't seem 
to want to actually code. They'll go into the interviews and say:
"
18830,source/Pavel Fedotov.docx,"● I don't code anymore. I'm more into strategy.
● I lead projects.
● I managed my team and coordinated them.
● I'm a co-founder and CEO.
● I'm an entrepreneur.
● I have leadership skills.
● I'm a great communicator and team player.
"
18831,source/Pavel Fedotov.docx,"I once saw a resume where the top 3 experiences were ""Co-Founder"", ""Co-Founder, 
""CTO."" OK, maybe you should go apply to be a cofounder then? Because this role is 
for coder.
"
18832,source/Pavel Fedotov.docx,"Too many people don't want to code, or think they're ""above the code."" Many 
"
18833,source/Pavel Fedotov.docx,"resumes I've read seem reluctant to mention code or languages. People might say 
""Created X, Y, and Z and shipped this project, leading and coordinating development 
on X."" Well, where in this sentence did you actually do coding?
"
18834,source/Pavel Fedotov.docx,"Let's put it this way: If you've applied for a SWE role, you're expected to 
code. Not to waltz around the office in a suit going to meetings with the VP of 
Sales.
"
18835,source/Pavel Fedotov.docx,"So show the languages, frameworks, and technologies that you're using.
"
18836,source/Pavel Fedotov.docx,"A lot of people will bucket all of that into the bottom of their resume under ""Skills: C, 
Python, Javascript"" and never mention any of these again in the rest of their resume. 
That is simply not very convincing evidence that you can actually code. It doesn't 
explain how well you can code.
"
18837,source/Pavel Fedotov.docx,"Formatting
"
18838,source/Pavel Fedotov.docx,"Let's talk about formatting. It matters.
"
18839,source/Pavel Fedotov.docx,"● Single page. If you are using more than a single page, you are rambling. 
Trim it down because no one has time to read all of this stuff. Highlight just 
your best, most recent work like a brochure.
"
18840,source/Pavel Fedotov.docx,"●
Single Column. Double-column layouts and fancy fonts/graphics generally 
just distract and people can accidentally skip portions of your resume. It 
doesn't flow.
"
18841,source/Pavel Fedotov.docx,"●
Fully spell the names of companies. Which looks better? ""VMWare"" or 
""VMWare, Inc.""? The mental weight of the fully-spelled name makes it look 
more official and professional.
"
18842,source/Pavel Fedotov.docx,"●
Fully spell the names of your degree & education. Similarly, don't 
short-change your 4-year degree (if you have one) by saying ""Majored in 
cs at Ohio state."" Make it look good. ""Bachelor's of Science in Computer 
Science. Ohio State, 2004. 3.80 GPA."" That's better. It may even be 
appropriate here to list additonal activities, honor societies,
relevant coursework & projects to bulk up the education a little more so that 
it's not just a one-liner.
"
18843,source/Pavel Fedotov.docx,"●
Grammar check.
"
18844,source/Pavel Fedotov.docx,"●
Spelling check.
"
18845,source/Pavel Fedotov.docx,"●
Capitalization check.
"
18846,source/Pavel Fedotov.docx,"●
No photos. In the US, it is illegal to discriminate based on age, 
gender, race, or appearance. Don't put photos on your resume for 
that purpose.
"
18847,source/Pavel Fedotov.docx,"●
Your name. I've been toying with this idea recently, but it's something to 
think about. Let's pretend you have a name like ""Xheycho Yining Sundarabai 
Xylophone."" I'm sure it's a beautiful name in your language, but it doesn't 
look familiar for many people. I've seen some colleagues with 
unpronounceable names and they say ""Just call me Bobby,"" or ""Just call me 
Shay"" and that instantly seems to make them more relatable. Think about it -- 
"
18848,source/Pavel Fedotov.docx,"your name is your personal brand and is to be memorable. It paints a picture 
about the person behind the resume. It may help to put something like: 
""Shay"" (Xheycho Yining Sundarabai Xylophone). (Up to you though, this is 
just a theory).
"
18849,source/Pavel Fedotov.docx,"●
Age. Age discrimination is absolutely illegal. If age is a concern for you, 
consider removing your graduation dates. No one will ask you to list those, 
because it is illegal.
"
18850,source/Pavel Fedotov.docx,"The objective.
"
18851,source/Pavel Fedotov.docx,"Not everyone needs an objective.
"
18852,source/Pavel Fedotov.docx,"But, if you have a broad background, an objective may help focus your resume and 
clarify your intentions -- especially if you're switching fields, people may get thrown 
off. An objective is a quick way to briefly explain what's going on here, instead of 
allowing a person to read the resume once, become confused at your history, then 
read it again, then think about the open roles, then try to figure out if there's any 
mistake here, etc.,
"
18853,source/Pavel Fedotov.docx,"Oftentimes, I'll see a candidate's resume and it's all over the place. There's a little of 
everything. So I ask myself, ""First of all, what type of role is this person going for? iOS? 
Android? Backend?
Frontend? Machine Learning? Graphics? Are they even interested in graphics?""
"
18854,source/Pavel Fedotov.docx,"This is one reason you need to focus your resume, as mentioned above. An 
objective is a tool for helping you do that if you feel your background is wandering 
all over the place.
"
18855,source/Pavel Fedotov.docx,"Last Impressions count.
"
18856,source/Pavel Fedotov.docx,"Every resume has a first impression.
And every resume leaves a last 
impression. This is the last thing on there.
Make it look good and make it count.
"
18857,source/Pavel Fedotov.docx,"I've seen some resumes that just end with something forgettable like:
"
18858,source/Pavel Fedotov.docx,"Education
bs in biology at Canvers Institute, 2008
"
18859,source/Pavel Fedotov.docx,"Does that look good to you? bleh.
I think even if you were to list a few fun facts about you as a person like a cool 
hobby, a cool project, or next to your education list some neat 
clubs/activities/coursework you did that can make your resume more memorable.
"
18860,source/Pavel Fedotov.docx,"Make yourself seem like someone people want to bring in to personally meet.
"
18861,source/Pavel Fedotov.docx,"Ready to fast-track your career in tech?
"
18862,source/Pavel Fedotov.docx,"Visit http://techinterviewpro.com/ and join our community.
"
18863,source/Alan Ulubayev.docx,"Education
"
18864,source/Alan Ulubayev.docx,"Suleyman Demirel University
Almaty, Kaskelen district
"
18865,source/Alan Ulubayev.docx,"Faculty of Engineering and Natural Sciences
Aug. 2016 – May 2020
"
18866,source/Alan Ulubayev.docx,"Projects
"
18867,source/Alan Ulubayev.docx,"Alfa-Bank (App store) | ATFBank (App store) | Altyn-i (App store)|
"
18868,source/Alan Ulubayev.docx,"Experience
"
18869,source/Alan Ulubayev.docx,"iOS developer
Feb 2020 – Ongoing
"
18870,source/Alan Ulubayev.docx,"Alfa-Bank Kazakhstan
"
18871,source/Alan Ulubayev.docx,"• Decreased build time by comparing carthages and pods
"
18872,source/Alan Ulubayev.docx,"• Explored new technologies and shared findings with the team
"
18873,source/Alan Ulubayev.docx,"iOS developer
Sep – Jan 2020
"
18874,source/Alan Ulubayev.docx,"DAR
"
18875,source/Alan Ulubayev.docx,"• Worked on network layer which can be reused in every project
"
18876,source/Alan Ulubayev.docx,"• Configured push notifications of the project
"
18877,source/Alan Ulubayev.docx,"iOS developer
Jul 2019 – Sep 2020
"
18878,source/Alan Ulubayev.docx,"ATFBank
"
18879,source/Alan Ulubayev.docx,"• Head of the development iOS team
"
18880,source/Alan Ulubayev.docx,"• Developed and launched the application from scratch in over 60 k people (Rating: 4.7)
"
18881,source/Alan Ulubayev.docx,"• Worked closely with product managers and designers to define a rich iOS experience for the user
"
18882,source/Alan Ulubayev.docx,"• Configured architecture and security of the application
"
18883,source/Alan Ulubayev.docx,"• Improved product quality through code reviews
"
18884,source/Alan Ulubayev.docx,"• Performed technical designs and implementation of the application
"
18885,source/Alan Ulubayev.docx,"Internship
Jan 2019 – May 2019
"
18886,source/Alan Ulubayev.docx,"Infin-IT Solution
"
18887,source/Alan Ulubayev.docx,"• Worked on mobile-banking applications
"
18888,source/Alan Ulubayev.docx,"• Fixed bugs
"
18889,source/Alan Ulubayev.docx,"• Refactored codes
"
18890,source/Alan Ulubayev.docx,"• Added new functionalities like filter for dates and custom reusable views
"
18891,source/Alan Ulubayev.docx,"Skills
"
18892,source/Alan Ulubayev.docx,"Swift, Java, Multi-threading, CI/CD, Fastlane, Dependency Injection, Reactive programming patterns (RX), 
SOLID, Clean Swift architecture (VIP), VIPER, MVVM
"
18893,source/Dmitrii DUBCHAK.docx,"Dmitrii DUBCHAK
"
18894,source/Dmitrii DUBCHAK.docx,"DATA ENGiNEER
"
18895,source/Dmitrii DUBCHAK.docx,"Russia, Amur obl
"
18896,source/Dmitrii DUBCHAK.docx,"(+7) 900-000-00-00 (telegram, whatsapp)   |
0000000@gmail.com   |   
 dubchak-0000000
"
18897,source/Dmitrii DUBCHAK.docx,"Summary  
"
18898,source/Dmitrii DUBCHAK.docx,"Senior Data Engineer in TOP 1 pharmaceutical company in the region. Current stack: MSSQL, Python, Apache 
Spark, AWS. 10+ years of experience in developing intensive applications in large companies, 3+ years of 
experience as a Data Engineer. Interested in developing better methods for solving complex problems, 
learning new technologies and tools. Knowledge of algorithms and data structures.
"
18899,source/Dmitrii DUBCHAK.docx,"Work Experience  
"
18900,source/Dmitrii DUBCHAK.docx,"Amurpharmacy
Russia
"
18901,source/Dmitrii DUBCHAK.docx,"Senior Data Engineer
april 2017 ‑ До н.в.
"
18902,source/Dmitrii DUBCHAK.docx,"• Implemented ELT in python to store a large volume of business information in AWS(S2, Redshift), which led to 
"
18903,source/Dmitrii DUBCHAK.docx,"a 22 % reduc‑ tion in storage costs
"
18904,source/Dmitrii DUBCHAK.docx,"• Rewrote ELT from python scripts to Apache Spark with execution on Amazon EMR, which led to a 24 % 
"
18905,source/Dmitrii DUBCHAK.docx,"reduction in ELT runtime and a 12 % reduction in costs
"
18906,source/Dmitrii DUBCHAK.docx,"• Designed and implemented a project for collecting, storing and processing data in AWS from temperature 
"
18907,source/Dmitrii DUBCHAK.docx,"sensors in phar‑ macies, as a result of which it was possible to reduce the cost of destroying drugs by 85 %
"
18908,source/Dmitrii DUBCHAK.docx,"• Built the full lifecycle of all corporate business intelligence in the company
• Worked with the business to collect business requirements, wrote technical documentation, and 
"
18909,source/Dmitrii DUBCHAK.docx,"developed business intel‑ ligence functions to meet those needs
"
18910,source/Dmitrii DUBCHAK.docx,"• Provided technical training, support, troubleshooting and training for business users
• DWH in MSSQL
• ETL in Python, Spark
• BI: Power BI
"
18911,source/Dmitrii DUBCHAK.docx,"Amurpharmacy
Russia
"
18912,source/Dmitrii DUBCHAK.docx,"Software Engineer
april 2006 ‑ april 2017
"
18913,source/Dmitrii DUBCHAK.docx,"Projects:
"
18914,source/Dmitrii DUBCHAK.docx,"• Bonus system. Managed by a team of 3 developers
• Bulk storage of medicines at the warehouse. Implemented automated testing of the system, which 
"
18915,source/Dmitrii DUBCHAK.docx,"made it possible to deliver the project 15% faster (1 week ahead of schedule)
"
18916,source/Dmitrii DUBCHAK.docx,"• Labeling of medicinal products. I wrote the main libraries that all developers of this project used
• Dynamic pricing in pharmacies. Engaged independent consultants to maximize the company’s profit
• Robot warehouse in the pharmacy. Collaborated with Spanish developers of the system for faster 
"
18917,source/Dmitrii DUBCHAK.docx,"implementation
"
18918,source/Dmitrii DUBCHAK.docx,"• Online pharmacy. Developed dashboards for marketers to better manage marketing promotions
"
18919,source/Dmitrii DUBCHAK.docx,"Police department
Russia
"
18920,source/Dmitrii DUBCHAK.docx,"SQL developer
august 2004 ‑ april 2006
"
18921,source/Dmitrii DUBCHAK.docx,"• Collecting and Analyzing Data Using SQL from Oracle Database
"
18922,source/Dmitrii DUBCHAK.docx,"Education  
"
18923,source/Dmitrii DUBCHAK.docx,"Amur State University
Russia
"
18924,source/Dmitrii DUBCHAK.docx,"Master‘s degree in Applied Mathematics
1999 ‑ 2004
"
18925,source/Dmitrii DUBCHAK.docx,"• Faculty of Computer Science
"
18926,source/Dmitrii DUBCHAK.docx,"VALERA DUBCHAK
RESUME
1
"
18927,source/Ivan Sosnov.docx,"Ivan Sosnov
"
18928,source/Ivan Sosnov.docx,"ivansosnov2001@gmail.com +48 57 000 54 32 Linkedin GitHub
"
18929,source/Ivan Sosnov.docx,"Front-end Developer
"
18930,source/Ivan Sosnov.docx,"I like to create beautiful and user­friendly interfaces and learn something new. I’m open to learn new 
technologies about the stack, but prefer to develop with modern technologies such as Vue.js, React.js, etc. 
I'm able to complete duties on time while maintaining a high­quality service. Good team player with 
excellent communication skills.
"
18931,source/Ivan Sosnov.docx,"Technical Skills
"
18932,source/Ivan Sosnov.docx,"Front-end: JavaScript(ES6, TypeScript), Vue.js(Nuxt, Vuex, Vuetify), HTML5, CSS(Sass/Less, 
Tailwind, Bootstrap), Chart.js, Storybook, REST API, Git, Gulp, Webpack; CMS: WordPress, Wix;
Other: C++(basics), SQL Server, MongoDB, Firebase, Linux, VS Code, Figma, Zeplin, SCRUM (Jira, 
Bitbucket, Bamboo, GilLab).
"
18933,source/Ivan Sosnov.docx,"Professional Experience
"
18934,source/Ivan Sosnov.docx,"Group BWT, Moscow
Front-end Developer (11/2020 — present)
Technologies: Vue.js(Vuex/Vuetify), TypeScript, Chart.js, Jest, Storybook, CSS, HTML5.
Key Achievements:
"
18935,source/Ivan Sosnov.docx,"•
implemented storybook for all components.
"
18936,source/Ivan Sosnov.docx,"YouTeam, Moscow
Front-end and Wordpress Developer (06/2019 — 11/2020) Technologies: 
Vue.js(Vuex/Vuetify), TypeScript, CSS, HTML5, WordPress. Key 
Achievements:
"
18937,source/Ivan Sosnov.docx,"•
participating in fast­growing startup product creation;
"
18938,source/Ivan Sosnov.docx,"•
launching more than 9 Product Hunts that occupied the top 3 positions;
"
18939,source/Ivan Sosnov.docx,"•
developed analytics that allows you to monitor the clicks of the platform and at the same 
time increase the conversion by 3 times;
"
18940,source/Ivan Sosnov.docx,"•
SEO optimizations.
"
18941,source/Ivan Sosnov.docx,"Education
"
18942,source/Ivan Sosnov.docx,"Bachelor of Computer Science (2019 ­ present)
Andrzej Frycz Modrzewski Krakow University, Krakow, Poland
"
18943,source/Ivan Sosnov.docx,"Junior Specialist of Computer systems and networks (2015­2019) 
Novorozdilskyy Polytechnic College, Lviv, Ukraine
"
18944,source/Dmitry Dumnov.docx,"Evaluatio
n Only. 
Created 
with 
Aspose.W
ords. 
Copyright 
2003-2024 
Aspose 
Pty Ltd.
"
18945,source/Dmitry Dumnov.docx,"SUMMAR
Y
"
18946,source/Dmitry Dumnov.docx,"Dmitry Dumnov
"
18947,source/Dmitry Dumnov.docx,"Senior Software Developer
"
18948,source/Dmitry Dumnov.docx,"+7 904 034 40 00 | dmiii@dumnov.com | 
"
18949,source/Dmitry Dumnov.docx,"linkedin.com/in/dmiiidumnov |
"
18950,source/Dmitry Dumnov.docx,"Creative and passionate Backend Engineer with 8+ years experience in developing, maintaining and supporting 
regular and high-loaded software using a modern stack of technologies, following Design Patterns, DRY, 
KISS, SOLID, Clean Code principles and DevOps culture. Articulate communicator and remote worker.
"
18951,source/Dmitry Dumnov.docx,"EXPERIENCE
"
18952,source/Dmitry Dumnov.docx,"Cloud Developer
Windisch, Switzerland (Remote) (Full-Time 
"
18953,source/Dmitry Dumnov.docx,"Contract)
SAP
Oct. 2018 – Present
"
18954,source/Dmitry Dumnov.docx,"• Developed several microservices using Spring Boot and Java on different business domains
• Made an API with highest load ratio 15 times faster by SQL optimizations
• Created a coding productivity workshop for more than 100 developers
• Participated in rotating on-call duties, including incident management
• Contributed to the platform which allowed to apply Event-Driven-Design
• Upgrade the services from Java 8 to Java 11
• Leaded the memory tuning of Java-based Apps
• Improved Integration tests approach, which allowed increase case coverage, prevent problems and 
"
18955,source/Dmitry Dumnov.docx,"considerably reduced test flakiness
"
18956,source/Dmitry Dumnov.docx,"Software Engineer
Chicago, IL (Remote),(Part-Time 
"
18957,source/Dmitry Dumnov.docx,"Contract)
Chicago Deal Vault
Jun 2017 – Feb 
"
18958,source/Dmitry Dumnov.docx,"2018
"
18959,source/Dmitry Dumnov.docx,"• Familiarized myself with a new subject - real estate, within a short time
• Implemented a mortgage calculator
• Implemented a direct mail distribution subsystem
• Implemented a generator of analytical reports
"
18960,source/Dmitry Dumnov.docx,"Lead Java Developer
Moscow, Russia
"
18961,source/Dmitry Dumnov.docx,"BSC
Apr 2014 – Oct 2018
"
18962,source/Dmitry Dumnov.docx,"• Took the lead of a small team of developers on a server for Mobile Bank App Server for Top-3 Russian 
Bank
"
18963,source/Dmitry Dumnov.docx,"• Took the lead of a small team of developers on a server for Stock Analytics Apps Server for Top-10 
Russian Broker
"
18964,source/Dmitry Dumnov.docx,"• Switched a huge legacy project from SVN to Git, which allowed to establish a proper code reviews and 
"
18965,source/Dmitry Dumnov.docx,"run more agile release process
"
18966,source/Dmitry Dumnov.docx,"• Developed a customer support chat on bank web application for Top-3 Russian Bank
"
18967,source/Dmitry Dumnov.docx,"• Made several prototypes of Internet Banks within a short time which helped the organization to win 
"
18968,source/Dmitry Dumnov.docx,"contracts
"
18969,source/Dmitry Dumnov.docx,"• Mentored a group of Junior Developers
• Contacted directly with customers about technical details and issues
• Made a backend of a dashboard app for Top-5 Russian Broker
"
18970,source/Dmitry Dumnov.docx,"Junior  Developer
Vladimir, Russia
"
18971,source/Dmitry Dumnov.docx,"FGI ARRIAH
Jun 2012 – Apr 2014
"
18972,source/Dmitry Dumnov.docx,"• Significantly improved the functionality of the Federal Service for Veterinary and Phytosanitary 
"
18973,source/Dmitry Dumnov.docx,"Surveillance official website, thus, the information on global trade and episootic situation became more 
structured and detailed
"
18974,source/Dmitry Dumnov.docx,"TECHNICAL SKILLS
"
18975,source/Dmitry Dumnov.docx,"Languages: Java, Kotlin, GO, SQL, JavaScript, HTML/CSS
Frameworks: Spring(Boot, Cloud, Web, Security, DM etc..), Hibernate, JSF, Liferay
Version Control: Git, Mercurial
CI/CD: Jenkins, Bamboo, GitHub Actions, Mesos, Marathon, Ansible, 
Docker Special Technologies: Kafka, ElasticSearch, Hystrix, Hazelcast, 
Redis, Mockito Databases: Oracle, MySQL, PostgreSQL, MongoDB
Industry Standards: Microservices, REST API, RPC, SOAP, Event-Driven Architecture, Domain-
Driven Design, Test-Driven Development
"
18976,source/Dmitry Dumnov.docx,"EDUCATION
"
18977,source/Dmitry Dumnov.docx,"Vladimir State University
Vladimir, Russia
"
18978,source/Dmitry Dumnov.docx,"Bachelor of Information Systems
Sep. 2007 – June 
"
18979,source/Dmitry Dumnov.docx,"2011
"
18980,source/Dima Samoylov.docx,"Dima Samoylov
"
18981,source/Dima Samoylov.docx,"+7 (707) 000-76-27 | aaaenesmlv@gmail.com | linkedin.com/in/eaaanesmlv
"
18982,source/Dima Samoylov.docx,"ABOUT
"
18983,source/Dima Samoylov.docx,"A Software Engineer with 5 years of extensive experience in designing, developing, and maintaining robust 
backend applications. My focus is mainly in the .NET ecosystem. Enthusiastic about enhancing my core skills 
while also keeping up with the latest industry trends and best practices.
"
18984,source/Dima Samoylov.docx,"EXPERIENCE
"
18985,source/Dima Samoylov.docx,"Kaspersky
Moscow, Russia
"
18986,source/Dima Samoylov.docx,"Research Developer
Apr. 2021 – Aug. 2023
"
18987,source/Dima Samoylov.docx,"• Developed and maintained a development environment for anti-malware records, complete with 
an integrated version control system and support for distributed compilation across multiple 
platforms.
"
18988,source/Dima Samoylov.docx,"• Implemented a command-line tool to facilitate the creation of Visual Studio projects and the generation 
of C++ DLLs for debugging purposes, which significantly improved the workflow for malware analysts.
"
18989,source/Dima Samoylov.docx,"• Created a log analysis tool that helped to identify recurring problems and establish connections 
between seemingly unrelated issues, which enhanced team troubleshooting capabilities.
"
18990,source/Dima Samoylov.docx,"• Collaborated with a team to employ an application metric collection system, integrating it with Grafana 
for dashboards and alerts, resulting in reduced incident response times from hours to minutes.
"
18991,source/Dima Samoylov.docx,"• Accomplished the migration of the anti-malware records from Perforce to Git.
"
18992,source/Dima Samoylov.docx,"• Developed a plugin that performs static code analysis of a domain-specific programming language.
"
18993,source/Dima Samoylov.docx,"• Migrated a project CI pipeline from TeamCity to Azure DevOps.
"
18994,source/Dima Samoylov.docx,"Komdiagnostika
Orenburg, Russia
"
18995,source/Dima Samoylov.docx,"Software Engineer
Aug. 2018 – Apr. 2021
"
18996,source/Dima Samoylov.docx,"• Developed and maintained a software solution for vibration-based condition monitoring, 
automated spectrum analysis and predictive maintenance.
"
18997,source/Dima Samoylov.docx,"• Implemented a database disk usage prediction system, enhancing monitoring capabilities.
"
18998,source/Dima Samoylov.docx,"• Participated in application profiling and optimization and accelerated spectrum harmonic 
analysis algorithm up to four times.
"
18999,source/Dima Samoylov.docx,"• Engineered a portable device for vibration analysis, including designing the UI layout, developing 
the application architecture, and implementing the software for data collection and analysis.
"
19000,source/Dima Samoylov.docx,"EDUCATION
"
19001,source/Dima Samoylov.docx,"Orenburg State University
Orenburg, Russia
"
19002,source/Dima Samoylov.docx,"Master of Science in Mathematics and Computer Science
Sep. 2016 – Jun. 2018
"
19003,source/Dima Samoylov.docx,"Orenburg State University
Orenburg, Russia
"
19004,source/Dima Samoylov.docx,"Bachelor of Science in Mechanical Engineering
Sep. 2012 – Jun. 2016
"
19005,source/Dima Samoylov.docx,"TECHNICAL SKILLS
"
19006,source/Dima Samoylov.docx,"Languages: C#, PowerShell, Python, SQL. Familiar with C/C++, Haskell 
"
19007,source/Dima Samoylov.docx,"Frameworks: .NET, .NET Framework, WPF. Familiar with ASP.NET Core Developer 
Tools: Git, TFS, TeamCity, Azure DevOps, Elasticsearch, Grafana Libraries: NUnit, 
xUnit, Serilog, NLog, Benchmark.NET, Dapper
"
19008,source/IVAN IVANOV.docx,"Evaluation 
Only. Created 
with 
Aspose.Word
s. Copyright 
2003-2024 
Aspose Pty 
Ltd.
IVAN 
IVANOV
"
19009,source/IVAN IVANOV.docx,"Lead Software Engineer with an emphasis in Frontend with 8 years of commercial software development & leadership 
experience including high-loaded real-time streaming applications and advanced data-visualisation. Focused on 
architecting, developing, maintaining and leading sophisticated web-based solutions.
"
19010,source/IVAN IVANOV.docx,"Experience   
"
19011,source/IVAN IVANOV.docx,"Technical leadership & management of one of the company streams (30 people). Performance stream is an area 
dedicated to the monitoring, alerting and assumptions about fuel and cost savings for the commercial maritime industry.
As a Technical Project Manager (Sep 2020 – Present):
–
Work closely to the Head of Products to align the technical solutions to product vision, product strategy and 
key objectives in long-term roadmaps.
"
19012,source/IVAN IVANOV.docx,"–
Delivered 4 products for the last year which are used in more than 200 customer 
vessels. As a Technical Lead (Oct 2018 – Sep 2020):
–
Developed a highly-loaded stream application for live vessel performance monitoring and alerting
"
19013,source/IVAN IVANOV.docx,"–
Developed the live data-visualisation customer-facing dashboard using React and Highcharts
"
19014,source/IVAN IVANOV.docx,"–
Improved platform architecture and increased scalability: migrated monolith backend to a microservices, set up client-
server relations using gRPC and GraphQL with Golang, improved CI/CD process
"
19015,source/IVAN IVANOV.docx,"Frontend Chapter Lead (Oct 2018 – Sep 2020):
–
Set up a microfrontends framework and the frontend monorepo. Improved code reusability. Introduced Typescript, 
Storybook, Styled Components and variety of FE tooling.
"
19016,source/IVAN IVANOV.docx,"–
Led the frontend chapter to ensure the technical alignment between 20+ Frontend developers.
"
19017,source/IVAN IVANOV.docx,"–
Set up a mentorship program for frontend developers and defined a learning curve. Led the hiring process.
"
19018,source/IVAN IVANOV.docx,"–
Improved CI/CD process for the FE monorepo – made it 6 times faster (30m to 5m), created the admin dashboard 
which improved deployment process and permissions management process
"
19019,source/IVAN IVANOV.docx,"With the team of 4 Frontend Engineers team architectured and delivered the dashboard for live data visualisation and 
monitoring for the Smart Home IoT devices. Adopted React, Typescript, Redux and Apollo along with GraphQL, set up 
CI/CD with GitlabCI. Delivered MVP’s and POC’s for the company stand on Mobile World Congress 2017 in Barcelona 
integrated with real IoT devices. Developed REST API and GraphQL services using Node.js. Participated in educational & 
mentorship programs. Participated in the hiring process.
"
19020,source/IVAN IVANOV.docx,"Was working as a front-end developer for ab.ua - one of the biggest Ukrainian car selling marketplaces.
Rearchitectured monolith FE application to a variety of Single Page Applications, changed the company front-end technologies 
pool, encouraged moving away from Python Django Templates, CoffeeScript and Backbone.js to ES6 and React + Redux 
which has improved maintainability and responsiveness of the customer-facing app.
"
19021,source/IVAN IVANOV.docx,"Was working as a front-end developer for a local web studio which was designing and selling commercial landing pages and 
other web sites using either CMS’s like Joomla, WordPress and Django Templates
Delivered about 20 projects to production. Improved company front-end toolset and daily engineering processes.
"
19022,source/IVAN IVANOV.docx,"Was working as a freelance front-end developer with a small group of enthusiasts. Have delivered dozens of websites for a 
variety of local commercial brands and music bands using CMS’s like Joomla and WordPress.
"
19023,source/IVAN IVANOV.docx,"Ninety Percent of Everything – Technical Project 
Manager
120 people; 80 engineers; 5 streams; 10 persons per team
"
19024,source/IVAN IVANOV.docx,"Oct 2018 – Present 
time
"
19025,source/IVAN IVANOV.docx,"Media Group Autocentre – Front-end Engineer
Nov 2015 - Sep 2016
"
19026,source/IVAN IVANOV.docx,"Geeny by Telefónica NEXT [via GlobalLogic] – Senior Front-end Engineer
Dec 2016 - Oct 2018
"
19027,source/IVAN IVANOV.docx,"Mamontova Design – Front-end Engineer
Nov 2014 - Oct 2015
"
19028,source/IVAN IVANOV.docx,"Freelance – Front-end Engineer
Mar 2012 - Sep 2016
"
19029,source/IVAN IVANOV.docx,"Education   
"
19030,source/IVAN IVANOV.docx,"Extracurricular Activities   
"
19031,source/IVAN IVANOV.docx,"CactusHack Kyiv 2017 - 2nd place/AngelHack Lviv 2016 - Finalist: Developed prototype of GitHub-like system for 
musicians to collaborate on projects, with features like preservation of the history of changes, visualization of notes sheet and 
"
19032,source/IVAN IVANOV.docx,"online editor
"
19033,source/IVAN IVANOV.docx,"National Technical University of Ukraine ”Igor Sikorsky Kyiv Polytechnic Institute”
Master of Science in Computer Engineering
"
19034,source/IVAN IVANOV.docx,"CactusHack Kyiv 2016 - 1st place: In 48 hours with a team of 2 developers implemented ML-based platform for 
remote learning, that had features like attention tracking, live streaming and fraud protection
"
19035,source/IVAN IVANOV.docx,"GlobalLogic Worldwide UI/UX Contest 2017 – 2nd place: Together with UI/UX designer created the mobile app for 
smart public city parking that had features like live availability tracking and booking.
"
19036,source/Pavel Paveluc.pdf,"Luxembourg, Luxembourg
Luxembourg, Blue card
Pavel Paveluc
"
19037,source/Pavel Paveluc.pdf,"+352-000-118-082
"
19038,source/Pavel Paveluc.pdf,"slaaaase@gmail.com
"
19039,source/Pavel Paveluc.pdf,"Employment
Senior Software Engineer
Docler Holding
September 2018 – Present
"
19040,source/Pavel Paveluc.pdf,"I am working on the payment system for a high load Media project with millions of users per day.
Our team is responsible for all payment processing operations at Doclerholding main streaming services.
"
19041,source/Pavel Paveluc.pdf,"· Transform
the
business
requirements
into
deployment/development
tasks
with
the
next
"
19042,source/Pavel Paveluc.pdf,"implementation.
"
19043,source/Pavel Paveluc.pdf,"· Leading a team of 1 software developer.
"
19044,source/Pavel Paveluc.pdf,"Refactoring Legacy Code Base
· Document and implementing a solution architecture for the frontend part of the payment system of
"
19045,source/Pavel Paveluc.pdf,"high-volume customer-facing portal reducing the TTM (time-to-market) by 20% ensuring high code
maintainability.
"
19046,source/Pavel Paveluc.pdf,"· Document current high-level system data flows which result in a 20% onboarding time decrease.
Infrastructure
· Implemented a visual tool for generating the entry point of our payment system which reduced the
"
19047,source/Pavel Paveluc.pdf,"amount of time needed for manual testing by 25%.
"
19048,source/Pavel Paveluc.pdf,"· Implemented and launched an End to End testing system connected to the CI/CD pipeline which reduced
"
19049,source/Pavel Paveluc.pdf,"the amount of time needed for manual testing by 25%.
"
19050,source/Pavel Paveluc.pdf,"Other
· Member of the on-call rotation;
"
19051,source/Pavel Paveluc.pdf,"Other experience
Software Engineer- Frontend @DoclerHolding (2018-2019)
· Front-end development project focused on streaming. (Typescript,React.js, styled-components.)
"
19052,source/Pavel Paveluc.pdf,"Full-stack Web engineer @Big Data Federation, Inc. (2017-2018)
· Implemented and Deployed a rich dashboard application from scratch used for showing financial data
"
19053,source/Pavel Paveluc.pdf,"with predictions.
"
19054,source/Pavel Paveluc.pdf,"· Led a team of 2 frontend software engineers.
· Designed reusable user interface components in D3.js, React, and Javascript ES6.
· Writing unit tests using Mocha and Enzyme.
"
19055,source/Pavel Paveluc.pdf,"Full-stack Web engineer @Leads-Trade SRL (2016-2017)
· Front-end and Back-end development projects.
· Multi-Client real-time WebSocket application integrated into a tool for capturing leads.
"
19056,source/Pavel Paveluc.pdf,"Full-stack Web engineer @Fruitware SRL (2014-2016)
Building web projects from scratch with WordPress CMS, Laravel, Opencart, and other open-source content
management systems.
Creating fully responsive html5 templates from provided designs and integrating them in cms.
Education
"
19057,source/Pavel Paveluc.pdf,"Chisinau, Republic of Moldova
Academy of Economic Studies
2012-2016
"
19058,source/Pavel Paveluc.pdf,"· Bachelor’s degree in Information Technologies(IT), 2012.
Languages and Technologies:
Typescript, Javascript, Node.js, D3.js React.js, Vue.js, PHP, Linux,
Databases: MongoDB, MySQL.
"
19059,source/Malik Raiskhanov .pdf,"Malik Raiskhanov iOS
Software Engineer Almaty,
Kazakhstan Willing to
relocate
"
19060,source/Malik Raiskhanov .pdf,"ra684hanov.a@gmail.com
"
19061,source/Malik Raiskhanov .pdf,"+7 701 000 32 00
"
19062,source/Malik Raiskhanov .pdf,"https://linkedin.com/in/as
"
19063,source/Malik Raiskhanov .pdf,"aaahan-r/
"
19064,source/Malik Raiskhanov .pdf,"https://leetcode.com/As
"
19065,source/Malik Raiskhanov .pdf,"ylaaanR/
"
19066,source/Malik Raiskhanov .pdf,"EXPERIENCE
“Kolesa Group”
Almaty, Kazakhstan
"
19067,source/Malik Raiskhanov .pdf,"iOS Developer (Kolesa.kz, Krisha.kz, Market.kz, Avtoelon.uz)
September 2017 –
"
19068,source/Malik Raiskhanov .pdf,"present
"
19069,source/Malik Raiskhanov .pdf,"● Designed and implemented saving search queries with further notiﬁcations about new
"
19070,source/Malik Raiskhanov .pdf,"positions, which resulted in higher retention and Daily Active Users
"
19071,source/Malik Raiskhanov .pdf,"● Designed and implemented chat features such as sending images, audio messages, location
"
19072,source/Malik Raiskhanov .pdf,"and own adverts, which resulted in more contacts and retention
"
19073,source/Malik Raiskhanov .pdf,"● Developed balance top up and NPS modules, that are used across several projects
● Refactored legacy domain models code, leading to 15% less memory consumption and 20%
"
19074,source/Malik Raiskhanov .pdf,"less network traﬀic usage
"
19075,source/Malik Raiskhanov .pdf,"● Developed an impact analysis script to identify if a project build needs to be ran on CI/CD when
"
19076,source/Malik Raiskhanov .pdf,"making changes in common modules, which led to shorter build queues and less build waiting
time
"
19077,source/Malik Raiskhanov .pdf,"EDUCATION
"
19078,source/Malik Raiskhanov .pdf,"International Information Technology University, Almaty, Kazakhstan
Sep 2014 – Jun
"
19079,source/Malik Raiskhanov .pdf,"2018
● Bachelor of Engineering and Technology in Information Systems (GPA 3.73/4.0)
"
19080,source/Malik Raiskhanov .pdf,"Schmalkalden University of Applied Sciences, Thuringia, Germany
Oct 2016 – Feb
"
19081,source/Malik Raiskhanov .pdf,"2017
● Exchange semester
"
19082,source/Malik Raiskhanov .pdf,"● Implemented chat module as part of the coursework project (Android, Java, Firebase Messaging)
"
19083,source/Malik Raiskhanov .pdf,"TECHNICAL SKILLS
"
19084,source/Malik Raiskhanov .pdf,"Languages: Swift, Objective-C
Technologies and Frameworks: iOS SDK, UIKit, Autolayout, MVC, GCD, AVFoundation,
CoreLocation, APNS, REST API, Cocoapods, Git, CI/CD, Fastlane
"
19085,source/Malik Raiskhanov .pdf,"ACTIVITIES
"
19086,source/Malik Raiskhanov .pdf,"Gave two talks at the Kolesa MeetUp on topics:
"
19087,source/Malik Raiskhanov .pdf,"● “How we implemented audio messages in chat”, https://youtu.be/J6_jHLBE0HM (Russian)
2020
"
19088,source/Malik Raiskhanov .pdf,"● “Debugging in Xcode”
2018
"
19089,source/Malik Raiskhanov .pdf,"ACHIEVEMENTS
● 1st place at Kolesa Internal Hackathon with “Car Make and Model recognition” project
2019
"
19090,source/Malik Raiskhanov .pdf,"● ACM ICPC Quarter-ﬁnals participant in Northern-Eurasian Region, Almaty
2015
"
19091,source/Alex Boreiko.docx,"Pavel Kukushkin
"
19092,source/Alex Boreiko.docx,"+7(909)683-00-06 | kukushaaa@gmail.com |
"
19093,source/Alex Boreiko.docx,"TECHNICAL SKILLS
"
19094,source/Alex Boreiko.docx,"Languages: Java, C#, SQL, XMl, VoiceXML, SOAP. REST
Developer Tools: Git, Visual Studio, IntelliJ, Eclipse, Orchestration Designer, SVN, Pentaho
Avaya Systems: Voice Portal,Experience Portal, Proactive Outreach Manager, Elite Multichannel, Interaction 
Center, Callback Assist
Avaya Skills: Administration, Configuration, Development, Support
Omilia Systems: DiaManT, DeepASR, Conversation Studio, OmAccounts, OmIVR,Apache Tomcat,MS 
SQL DB,CentOS, RedHat, Avaya Linux,Windows Server
Other Systems: UniMRCP (Installation, Configuration with Avaya), Nanosemantic (chat bots integration 
with Avaya), Yandex Cloud (ASR/TTS Integration with Avaya), 7twenty (Installation), WebIm—ThreadsIm 
(Agregators of social media. Integration with Avaya EMC)
"
19095,source/Alex Boreiko.docx,"EXPERIENCE
"
19096,source/Alex Boreiko.docx,"Software  engineer
September 2014 – November 
2020
LLC”Oberon”
Russia, Moscow
"
19097,source/Alex Boreiko.docx,"• Job responsibilities mainly included working with Avaya systems, more specifically, installing, 
"
19098,source/Alex Boreiko.docx,"configuring and maintaining these systems (see the Technical Skills section). Additionally, a significant 
part of the working time was occupied by the development of integration components for various customers, 
most of which were focused on AAEP and POM systems (application development + integration 
components written in Java), as well as the EMC. (C#). Furthermore, recently there has been active 
work with the Omilia IVR system, including installation of this system and application development for 
our client (xml+java classes), and with unimrp. (installation and administration)
"
19099,source/Alex Boreiko.docx,"Senior Software Engineer
December 2020 - 
"
19100,source/Alex Boreiko.docx,"present
LLC”Oberon”
Russia, Moscow
"
19101,source/Alex Boreiko.docx,"• The actual duties of managing a team of 3 people were added
"
19102,source/Alex Boreiko.docx,"PROJECTS I’M PROUD OF
"
19103,source/Alex Boreiko.docx,"Universal Questionnaire (Avaya POM): An application for Proactive Outreach Manager, which interprets 
a pseudo natural language to describe the survey script, this allows you to change the system behavior (modify 
the survey) by adjusting the text file, which does not require the involvement of developers.
POM Agent Desktop (Avaya POM + EMC): A plug-in for the Avaya Elite Multichannel Desktop 
system that allows the agent to work with all POM capabilities in the EMC Desktop window. Based on 
POM Agent API Oberon Gateway Omnichannel (Avaya EMC—WebIm—ThreadsIm—mfms): An 
integration service that provides interaction between aggregators of multimedia channels and the Avaya 
contact center. The program expands
the capabilities of the Elite Multichannel system, providing the ability to communicate via social media. 
networks and messengers. The service has integration with the CRM system to ensure a single history of all 
customer chats and calls. Development for the Oberon service center: Omilia app that provides a self-
service options for customers of the company’s service center to work with their requests. An application that 
provides synchronization between the schedule of company attendants and their Google calendar, with an 
SMS notification at a specified time before duty.
"
19104,source/Alex Boreiko.docx,"EDUCATION
"
19105,source/Alex Boreiko.docx,"Moscow Technical University of Communications and Information Science
Russia, 
"
19106,source/Alex Boreiko.docx,"Moscow
Bachelor of Information Systems and Technology
2011 – 2015
"
19107,source/Oleg Ushakov.docx,"Oleg Ushakov
"
19108,source/Oleg Ushakov.docx,"Berlin Germany | maaaay4@gmail.com | +4910002154726
"
19109,source/Oleg Ushakov.docx,"Experienced Fullstack Developer with 10+ years of solid experience in software 
development. Over the last 4 years has been working with React for the front-end, 
Node.js for the back-end and a variety of AWS services. Looking for a job in a product 
based company where I can master my skills, gain new experience, design architecture 
and bring as much value as I can to the codebase. Have extensive knowledge of 
methodology, tools and techniques as in front-end and back-end development 
technologies. I am very attentive to details, self-motivated and always try to expand my 
knowledge.
"
19110,source/Oleg Ushakov.docx,"Technical skills
"
19111,source/Oleg Ushakov.docx,"● Front-End: JavaScript, Vue, React, Redux, Angular, TypeScript, Websockets, 
jQuery, Ajax, HTML5, CSS3, Less, Sass
"
19112,source/Oleg Ushakov.docx,"● Back-End: Node.js, Express, Nest.js, PHP, Symfony
● AWS: Lambda, Step Fn, SQS, SNS, Cognito, S3, API Gateway
● Database: MySQL, ElasticSearch, PostgreSQL, MongoDB
● APIs: RESTful and Soap, OpenApi, GraphQL, Google, PayPal, Stripe
● QA: Jest, Mocha, Sinon, PHPUnit, TDD
● Agile collaboration tool: JIRA, Confluence (Atlassian), GitHub
● Content management system: WordPress, EzPublish
"
19113,source/Oleg Ushakov.docx,"Education
"
19114,source/Oleg Ushakov.docx,"09/2004 - 06/2009, Kharkiv National University of Radioelectronics, Ukraine 
System Programming, Bachelor diploma in system programming
"
19115,source/Oleg Ushakov.docx,"Work Experience
"
19116,source/Oleg Ushakov.docx,"06/2020 - presents, Comtravo Gmbh, Berlin, Germany
"
19117,source/Oleg Ushakov.docx,"Tech Stack: Node.js, Typescript, AWS (Lambda, Step Fn, SQS, SNS, Cognito), 
React.js, GraphQL, MongoDB, Elasticsearch, Microservices, Terraform, Stripe
"
19118,source/Oleg Ushakov.docx,"● Backend engineering and development
● Designing and implementing test cases (test-driven development)
● Node.js app development
● Architecture design (service-oriented + event-driven)
● Refactoring and re-engineering the existing code base safely
"
19119,source/Oleg Ushakov.docx,"01/2019 - 05/2020, FTI Touristik, Berlin, Germany
"
19120,source/Oleg Ushakov.docx,"Tech Stack: Node.js, Typescript, Angular, MongoDB, Firebase, Microservices
"
19121,source/Oleg Ushakov.docx,"● Develop a portal to book cars and hotels
● Ensure that basket, ordering, fulfillment, payment and notification parts of the 
system are flawlessly functioning
"
19122,source/Oleg Ushakov.docx,"● Integration with a number of external APIs
● Architecture design
● Defining coding standards(linter rules, Prettier, Sonarqube, etc)
● Conducting PR reviews
"
19123,source/Oleg Ushakov.docx,"11/2015 - 12/2018, Infolox, Lindau, Germany
"
19124,source/Oleg Ushakov.docx,"Tech Stack: PHP, Symfony, jQuery, Mysql, Stripe
"
19125,source/Oleg Ushakov.docx,"● Develop product-catalogs for industrial customers
● Integrating with CRM and PIM systems
● Develop core libraries
"
19126,source/Oleg Ushakov.docx,"06/2009 - 10/2015, Solvelabs, Kharkiv, Ukraine
"
19127,source/Oleg Ushakov.docx,"Tech Stack: ASP, PHP, Symfony, MySql, Angular.js, WordPress,
"
19128,source/Oleg Ushakov.docx,"● develop sites for dating, real estate, and logistic companies.
● develop different sites based on WordPress
"
19129,source/IVAN VOVCHUK.docx,"IVAN VOVCHUK
"
19130,source/IVAN VOVCHUK.docx,"PROFILE
Front-End Software Engineer with 6 years of software development 
experience working with advanced visualization and artificial intelligence 
solutions. 
Focused 
on 
architecting 
developing 
and 
maintaining 
sophisticated healthcare-focused web-based AI result explorer.
"
19131,source/IVAN VOVCHUK.docx,"phone:
+1 111-111-
1111
e-mail:
"
19132,source/IVAN VOVCHUK.docx,"ooooooo@gmail.co
"
19133,source/IVAN VOVCHUK.docx,"m
"
19134,source/IVAN VOVCHUK.docx,"SKILLS
"
19135,source/IVAN VOVCHUK.docx,"Angular 
TypeScript 
JavaScript 
Angular 
Material Web 
APIs
"
19136,source/IVAN VOVCHUK.docx,"RxJS
three.js 
Karma/Jasmin
e ASP.NET 
Core REST
"
19137,source/IVAN VOVCHUK.docx,"MS SQL
Entity 
Framework 
Microservices
"
19138,source/IVAN VOVCHUK.docx,"Git 
GitLab 
Jenkin
s 
Docke
r
Agile/Scrum
"
19139,source/IVAN VOVCHUK.docx,"WORK EXPERIENCE
"
19140,source/IVAN VOVCHUK.docx,"Software Engineer
February 2019 - 
Present
TeraRecon, Inc., Raleigh-Durham-Chapel Hill Area, NC
"
19141,source/IVAN VOVCHUK.docx,"￿
Implemented contour pushing algorithm that moved the application to the next level of advanced 
polyline manipulations.
"
19142,source/IVAN VOVCHUK.docx,"￿
Implemented control point interpolation that enriched Eureka Explorer with powerful feature and 
increased sales attractiveness.
"
19143,source/IVAN VOVCHUK.docx,"￿
Architect, design, and implement a number of key components like study panel, search panel, copy to 
clipboard functionality, support for enhanced theming, REST API for microservice architecture.
"
19144,source/IVAN VOVCHUK.docx,"￿
Technologies: Angular 8, Web APIs, TypeScript, JavaScript, HTML, CSS, LESS, ASP.NET Core, C#, 
Entity Framework, MS SQL, Microservices, Docker, Agile/Scrum, Karma/Jasmine.
"
19145,source/IVAN VOVCHUK.docx,"Full Stack Software Engineer
October 2015 – January 
2019
AMC Bridge LLC, Waltham, MA (Khmelnytskyi office, Ukraine)
"
19146,source/IVAN VOVCHUK.docx,"￿
Mainly frontend and some backend development for running fluid and air simulations and run desktop 
software offerings through VNC in the browser.
"
19147,source/IVAN VOVCHUK.docx,"￿
Implemented several key features: flow for setting up multiple simulations with different parameters, 
geometry viewers with parts comparison, new UI stuff based on Angular 5.
"
19148,source/IVAN VOVCHUK.docx,"￿
Cloud solution creation increased revenue twice as engineers became able to run simulations remotely 
in the cloud instead of just desktop installation.
"
19149,source/IVAN VOVCHUK.docx,"￿
Technical mentorship in a project with one junior developer in creating an Autodesk Inventor add-in to 
open
Inventor’s assemblies in Web VR via browser.
"
19150,source/IVAN VOVCHUK.docx,"￿
Technologies: JavaScript, AngularJS, Angular 5, three.js, TypeScript, Groovy, Grails.
"
19151,source/IVAN VOVCHUK.docx,".NET Full Stack Developer
March 2015 – October 
2015
AMC Bridge LLC, Waltham, MA (Khmelnytskyi office, Ukraine)
"
19152,source/IVAN VOVCHUK.docx,"￿
Implemented a web service for tracking employees’ tasks and work time.
"
19153,source/IVAN VOVCHUK.docx,"￿
Back-and front-end development.
"
19154,source/IVAN VOVCHUK.docx,"￿
Technologies: JavaScript, ASP.NET, MS SQL.
"
19155,source/IVAN VOVCHUK.docx,"EDUCATION
"
19156,source/IVAN VOVCHUK.docx,"Khmelnytskyi National University, Khmelnytskyi, Ukraine
September 2016 – June 
2018
MS in Computer Science
"
19157,source/IVAN VOVCHUK.docx,"Ternopil State Medical University, Ternopil, Ukraine
September 2001 – June 
2007
MS in Pharmacology
"
19158,source/Oleg Burdeniuc.docx,"Oleg Burdeniuc
"
19159,source/Oleg Burdeniuc.docx,"LinkedIn • iaaasburdeiuk@gmail.com • (253)000-4088 • Redmond, WA
"
19160,source/Oleg Burdeniuc.docx,"Summary
"
19161,source/Oleg Burdeniuc.docx,"With more than 4 years of experience as a Business Systems Analyst, I've participated in diverse projects, including 
mobile app and web services development, feature enhancement, and system/platform integrations.
"
19162,source/Oleg Burdeniuc.docx,"Here is a brief overview of my experience:
"
19163,source/Oleg Burdeniuc.docx,"1.
Analyzing customer business and technical requirements and issues, and proposing solutions.
"
19164,source/Oleg Burdeniuc.docx,"2.
Designing, building, testing, and implementing enhancements to meet functional requirements.
"
19165,source/Oleg Burdeniuc.docx,"3.
Providing production support and continuous system troubleshooting, maintenance, monitoring, and training.
"
19166,source/Oleg Burdeniuc.docx,"4.
Managing application-related tasks, projects, processes, and documentation to meet customer requirements.
"
19167,source/Oleg Burdeniuc.docx,"5.
Coordinating internal and external resources to accomplish identified application tasks.
"
19168,source/Oleg Burdeniuc.docx,"Technical Skills
"
19169,source/Oleg Burdeniuc.docx,"Requirements Analysis | Software Documentation | Troubleshooting Issues | Log Analysis | Kibana | Testing | Postman | 
SQL | Agile | Systems Integration | API | ESB | Data Migration | Json | XML | UML | BPMN | Jira | Confluence |
"
19170,source/Oleg Burdeniuc.docx,"SIBERIAN.PRO
Business System 
Analyst
"
19171,source/Oleg Burdeniuc.docx,"Experience
"
19172,source/Oleg Burdeniuc.docx,"Remote
"
19173,source/Oleg Burdeniuc.docx,"Custom Development Projects
May 2022 – Jun 2023
"
19174,source/Oleg Burdeniuc.docx,"●
Collaborated with business stakeholders, facilitating requirement gathering sessions, and crafting 
comprehensive functional specifications for systems and applications using Jira and Confluence.
"
19175,source/Oleg Burdeniuc.docx,"●
Identified and analyzed business processes, modeled business processes and requirements using BPMN and 
UML, pinpointed bottlenecks, and proposed optimization solutions resulting in a 25% reduction in process 
cycle time and a 15% increase in overall productivity.
"
19176,source/Oleg Burdeniuc.docx,"●
Prepared more than 15 feature lists for new custom development projects, including analytical evaluation and 
architectural descriptions. As a result, the company secured 4 new custom development projects.
"
19177,source/Oleg Burdeniuc.docx,"●
As part of mentoring, provided a detailed description and documentation of the requirements gathering and 
analysis process, as well as the technical documentation writing process. This optimization led to an enhanced 
onboarding experience for new employees, resulting in a 30-40% reduction in onboarding time.
"
19178,source/Oleg Burdeniuc.docx,"●
Structured sprints, prioritized, and managed task backlog, resulting in the successful implementation of an MVP 
product 2 weeks ahead of the planned schedule.
"
19179,source/Oleg Burdeniuc.docx,"SBERLEASING
Remote
"
19180,source/Oleg Burdeniuc.docx,"System Analyst
Systems Integration Project
Jan 2021 – Apr 2022
"
19181,source/Oleg Burdeniuc.docx,"●
Executed a project aimed at optimizing integration flows, leading to an enhancement in data exchange 
efficiency and a processing speed boost of up to 25%. Described over 20 integrations of varying 
complexity and architecture.
"
19182,source/Oleg Burdeniuc.docx,"●
Conducted testing for each new integration interaction using Postman and SQL to significantly reduce 
time to market and minimize developers' efforts.
"
19183,source/Oleg Burdeniuc.docx,"●
Restructured service-to-service communication from direct interactions to integration via ESB (Enterprise Service 
Bus). As a result, key non-functional requirements of the system, such as scalability, security, performance, and 
maintainability, were improved.
"
19184,source/Oleg Burdeniuc.docx,"●
Performed research and root cause analysis in logs using Kibana to determine the causes of issues and find 
approaches to resolve identified problems
"
19185,source/Oleg Burdeniuc.docx,"YANDEX
Remote
"
19186,source/Oleg Burdeniuc.docx,"Business System Analyst
Technical Support System Project
Aug 2019 – Dec 2020
"
19187,source/Oleg Burdeniuc.docx,"●
Contributed to the development of a new platform for technical support services, resulting in a reduction 
of company expenses by $110,000 annually on the use of a third-party platform.
"
19188,source/Oleg Burdeniuc.docx,"●
Successfully migrated all data and the entire technical support structure to the new platform, ensuring 
smooth operations and achieving a 20% reduction in data migration time.
"
19189,source/Oleg Burdeniuc.docx,"●
Optimized ticket routing by utilizing system-integrated automation capabilities, resulting in an 18-30% 
improvement in average ticket processing speed.
"
19190,source/Oleg Burdeniuc.docx,"Education
"
19191,source/Oleg Burdeniuc.docx,"Dubna State University
Dubna, Russia
"
19192,source/Oleg Burdeniuc.docx,"Bachelor’s degree, Systems Analysis and Management (2012-2016).
"
19193,source/BALAMANOVA KATE.docx,"BALAMANOVA 
KATE
"
19194,source/BALAMANOVA KATE.docx,"EDUCATION
"
19195,source/BALAMANOVA KATE.docx,"+77012119111 | balamanova111@gmail.com |
"
19196,source/BALAMANOVA KATE.docx,"International Information Technology University
Bachelor of Information Systems
Sep. 2016 – May 2022
"
19197,source/BALAMANOVA KATE.docx,"FH Schmalkalden University of Applied Sciences
Exchange student of faculty Information Technologies
Oct. 2018 – Feb 2019
"
19198,source/BALAMANOVA KATE.docx,"EXPERIENCE
"
19199,source/BALAMANOVA KATE.docx,"KCELL JSC
"
19200,source/BALAMANOVA KATE.docx,"Software Developer | Java Spring, flyway, mybatis, redis, RabbitMQ
Sep 2020 – now
"
19201,source/BALAMANOVA KATE.docx,"• Worked on back-end side of new corporate site of company from 0 to launch
• Experience on project migrated from monolith to microservices
• Started to write code review for colleagues
• Support junior SD
"
19202,source/BALAMANOVA KATE.docx,"Junior Software Developer |React, Java Spring, Oracle, PostgreSQL, RabbitMQ, JDBC
Jul 2019 – Aug 2020
"
19203,source/BALAMANOVA KATE.docx,"• Worked to optimize internal web-site which process million of users
• E-Registry project for accountant and clients
• Logger and validation starter
• Work together with DevOpses to migrate projects from VM to kubernetes
"
19204,source/BALAMANOVA KATE.docx,"Zero To One Labs
"
19205,source/BALAMANOVA KATE.docx,"Mobile Developer Intern| React Native
Jun 2018 – Aug 2018
"
19206,source/BALAMANOVA KATE.docx,"• Took part in a coding boot camp where implemented various cross-platform mobile apps using 
technologies such as React Native, GraphQL and Firebase
"
19207,source/BALAMANOVA KATE.docx,"AWARDS & ACHIEVEMENTS
"
19208,source/BALAMANOVA KATE.docx,"International Student Scientiﬁc and Practical Conference ""Youth, Science and Innovation - 
2020"", 2nd place
First President Scholarship Winner between students of our country (Scholarship for top 50 
students in KZ)
Honor of Yessenov`s Foundation Scholarship for achievements of study and activities 
between students in the country.
"
19209,source/BALAMANOVA KATE.docx,"3rd place: Demo Presentation at nFactorial Incubator 2018 honor application for abbiturents 
which help to select future career and university, got 3rd place out of approximately 100 mobile apps by the end of 
Bootcamp.
"
19210,source/BALAMANOVA KATE.docx,"VOLUNTEERING & OTHER ACTIVITIES
"
19211,source/BALAMANOVA KATE.docx,"Volunteer in “Club Dobryakov” which organizes charity events in city Almaty
2018 – 2020
"
19212,source/BALAMANOVA KATE.docx,"Organizer and Leader of enthnic ensemble in university, every year the number of students is growing 2016 – 2020
"
19213,source/BALAMANOVA KATE.docx,"Student Mentor of Hackathon organized by UNICEF.
2016   Sep
"
19214,source/BALAMANOVA KATE.docx,"Volunteer on “2017 Universade Winter Sport Games” International student`s sports federation.
2017 Feb
"
19215,source/BALAMANOVA KATE.docx,"TECHNICAL SKILLS
"
19216,source/BALAMANOVA KATE.docx,"Programming Languages: Java, JavaScript,
"
19217,source/BALAMANOVA KATE.docx,"Framework & Tools: Spring Boot, React, React Native, GraphQL, flyway, myBatis, Oracle, PostgreSQL, Spring Data, 
FeignCloud, JUnit,
Languages: English (Intermediate), Russian(Native Speaker)
"
19218,source/Nickolay Wolozin.docx,"Nickolay Wolozin
"
19219,source/Nickolay Wolozin.docx,"Warsaw, Poland
"
19220,source/Nickolay Wolozin.docx,"WORK EXPERIENCE
"
19221,source/Nickolay Wolozin.docx,"CLUDO | Junior Software Engineer
November 2019 - Present | Warsaw, Poland
"
19222,source/Nickolay Wolozin.docx,"Built service to calculate clients statistics data to 
build a
dashboard on web page (Java, Java Service Wrapper, 
Redis, SQL, Javascript, JQuery).
Developed web-based applications using latest tools, 
such as:
ASP.NET Core, RabbitMQ, Redis.
Implemented time logging tool that increased 
effeciently of Development Team by 20% (Javascript, 
Node.JS, Jira SDK).
"
19223,source/Nickolay Wolozin.docx,"Online Casino Project | Associate Software Engineering
November 2018 - March 2019 | Remote
"
19224,source/Nickolay Wolozin.docx,"Implemented over 100 - server-site logic for slot 
games (C++, SQL).
Developed tool to generate values for slot games 
(WPF, C#,
.NET).
Provided support in testing process.
"
19225,source/Nickolay Wolozin.docx,"Black Rose Projects | Junior Game Developer
March 2019 - November 2019 | Sosnowiec, Poland
"
19226,source/Nickolay Wolozin.docx,"Processed porting 2 PC-games projects on Nintendo 
Switch Platform that were published on Nintendo 
Store (C# - Unity, C++ - Unreal Engine 4).
Developed Telegram Bot to follow the project 
building process (C#, Telegram Bot API, 
Heroku SDK).
"
19227,source/Nickolay Wolozin.docx,"SKILLS
"
19228,source/Nickolay Wolozin.docx,"TECHNICAL SKILLS
"
19229,source/Nickolay Wolozin.docx,"Proficient with:
Kotlin • C# • Java • SQL
Familiar with:
C++ • Javascript
Summary:
Experience in troubleshooting/debugging, 
knowledge about algorithms and data 
structures.
"
19230,source/Nickolay Wolozin.docx,"TECHNICAL PROJECTS
"
19231,source/Nickolay Wolozin.docx,"Phold | Android Application
Summer 2020 - Present
"
19232,source/Nickolay Wolozin.docx,"Developing an complex project based on Google Maps 
API and internal REST API to show people old photos of 
places where they are.
"
19233,source/Nickolay Wolozin.docx,"Technologies used:
Kotlin • C# • Java • SQL • Android SDK • ASP.NET • 
Microsoft Azure.
"
19234,source/Nickolay Wolozin.docx,"HOBBIES
"
19235,source/Nickolay Wolozin.docx,"Music-making • Gaming • Stand-up
"
19236,source/Nickolay Wolozin.docx,"EDUCATION
"
19237,source/Nickolay Wolozin.docx,"The University of Silesia | Katowice Bachelor of 
Science in Computer Science SEP 2016 
- Present
"
19238,source/Nickolay Wolozin.docx,"Member of scientific circle (Android Development) 
September 2016 - May 2018
Participant of one week game development 
competition in Trnava June 2018. Lead of white 
team.
"
19239,source/Nickolay Wolozin.docx,"CONTACT
"
19240,source/Nickolay Wolozin.docx,"Phone:
+48577540000
Email:
1246432nick@gmail.com
"
19241,source/Малиновский Аркадий.pdf,"Навыки
"
19242,source/Малиновский Аркадий.pdf,"Малиновский
"
19243,source/Малиновский Аркадий.pdf,"Аркадий
"
19244,source/Малиновский Аркадий.pdf,"(914)-755-0000 |
"
19245,source/Малиновский Аркадий.pdf,"gaaaawi@galqiwi.ru |
"
19246,source/Малиновский Аркадий.pdf,"@galaawi |
galaawi
"
19247,source/Малиновский Аркадий.pdf,"Языки программирования : C++, Python, SQL (PostgreSQL, SQLite)
Технологии : linux, git, docker, pycharm/clion
"
19248,source/Малиновский Аркадий.pdf,"Образование
"
19249,source/Малиновский Аркадий.pdf,"Студент бакалавриата МФТИ, 3 курс
09/2019 – настоящее
"
19250,source/Малиновский Аркадий.pdf,"Физтех-школа Прикладной Математики и Информатики (ФПМИ)
Долгопрудный, Московская область
"
19251,source/Малиновский Аркадий.pdf,"Pet проекты
"
19252,source/Малиновский Аркадий.pdf,"vk.com/udfbot
09/2020 — 01/2021
"
19253,source/Малиновский Аркадий.pdf,"4.6к пользователей
"
19254,source/Малиновский Аркадий.pdf,"• Бот для создания простых дипфейков на основе first order motion model,
"
19255,source/Малиновский Аркадий.pdf,"• Использовались Python, Docker, Flask, requests, sqlite.
"
19256,source/Малиновский Аркадий.pdf,"vk.com/png2pdf
07/2020
"
19257,source/Малиновский Аркадий.pdf,"452 пользователя
"
19258,source/Малиновский Аркадий.pdf,"• Бот для конвертации png в pdf,
"
19259,source/Малиновский Аркадий.pdf,"• Использовались Python, requests, imagemagick.
"
19260,source/Малиновский Аркадий.pdf,"habr.galqiwi.ru
11/2019
"
19261,source/Малиновский Аркадий.pdf,"268 пользователей
"
19262,source/Малиновский Аркадий.pdf,"• Проект показывает графики сна пользователей хабра, собирая статистику комментирования,
"
19263,source/Малиновский Аркадий.pdf,"• Использовались Django, Pillow, requests.
"
19264,source/Малиновский Аркадий.pdf,"Достижения
"
19265,source/Малиновский Аркадий.pdf,"Золотая медаль на международной олимпиаде по физике,
Дважды абсолют, четырежды победитель всероссийской олимпиады по физике, Дважды
призёр всероссийской олимпиады по математике.
"
19266,source/Малиновский Аркадий.pdf,"Опыт работы
"
19267,source/Малиновский Аркадий.pdf,"Terra Quantum
08/2020 –
"
19268,source/Малиновский Аркадий.pdf,"настоящее
ML Engeneer
"
19269,source/Малиновский Аркадий.pdf,"• Разработал GPT-based пайплайн для диалогового бота, применяемый во внутреннем продукте компании,
"
19270,source/Малиновский Аркадий.pdf,"• Использовались huggingface, pytorch, docker.
"
19271,source/Victor Babenko.docx,"Berlin, Germany | +49 000 4255723 | a.baaanko.e@gmail.com
"
19272,source/Victor Babenko.docx,"EXPERIENCE
"
19273,source/Victor Babenko.docx,"Shoop Germany GmbH
"
19274,source/Victor Babenko.docx,"Front-End Developer (Angular, 
Ionic)
"
19275,source/Victor Babenko.docx,"Berlin, Germany
"
19276,source/Victor Babenko.docx,"August 2020 – Present
"
19277,source/Victor Babenko.docx,"Currently, I am working as a part of the Core Development Team, participating in the development of Web 
Application, Ionic Mobile Application, and Support System.
"
19278,source/Victor Babenko.docx,"● Implement complex features as Two-Factor-Auth, Onboarding Flow, Support Ticket System
"
19279,source/Victor Babenko.docx,"● Increased E2E and Unit tests coverage by 25%
"
19280,source/Victor Babenko.docx,"● Migrated apps to the strict mode, that improved DX and project’s overall reliability
"
19281,source/Victor Babenko.docx,"● Participated in constant project’s architecture refactoring
"
19282,source/Victor Babenko.docx,"● Responsible for making releases, including App Store and Google Play
"
19283,source/Victor Babenko.docx,"Shiji Deutschland GmbH
"
19284,source/Victor Babenko.docx,"Front-End Developer & Report Engine 
Expert
"
19285,source/Victor Babenko.docx,"(ReactJS, EmberJS, 
AngularJS)
"
19286,source/Victor Babenko.docx,"Berlin, Germany
"
19287,source/Victor Babenko.docx,"May 2018 – August 2020
"
19288,source/Victor Babenko.docx,"Worked on the development of one of the biggest Property Management Systems for the European market. 
Worked as Leading Front-End Developer in the Integration and Reporting teams.
"
19289,source/Victor Babenko.docx,"● Developed an architecture, initiated and maintained dedicated Micro Front-End Module
"
19290,source/Victor Babenko.docx,"● Conducted many workshops and onboarding sessions
"
19291,source/Victor Babenko.docx,"● Maintained project’s web-components base
"
19292,source/Victor Babenko.docx,"● Closely collaborated with other teams, participated in app’s architecture decision making
"
19293,source/Victor Babenko.docx,"● Analytics Report Writing using Stimulsoft Report Engine and PostgreSQL
"
19294,source/Victor Babenko.docx,"EXPERIENCE (continued)
"
19295,source/Victor Babenko.docx,"Skynix LLC
"
19296,source/Victor Babenko.docx,"Front-End Developer (AngularJS, 
ReactJS)
"
19297,source/Victor Babenko.docx,"Kyiv, Ukraine
"
19298,source/Victor Babenko.docx,"October 2017 – May 2018
"
19299,source/Victor Babenko.docx,"Worked on several projects in the medical sphere.
"
19300,source/Victor Babenko.docx,"● Developed and maintained many SPA projects from scratch
"
19301,source/Victor Babenko.docx,"● SPA performance optimization
"
19302,source/Victor Babenko.docx,"● Designed complex JavaScript animations
"
19303,source/Victor Babenko.docx,"● Wrote technical articles for the corporate blog
"
19304,source/Victor Babenko.docx,"ModXart
"
19305,source/Victor Babenko.docx,"Front-End Developer
"
19306,source/Victor Babenko.docx,"Kyiv, Ukraine
"
19307,source/Victor Babenko.docx,"December 2016 – October 2017
"
19308,source/Victor Babenko.docx,"Worked on the development of different websites and SPAs.
"
19309,source/Victor Babenko.docx,"● Designed UI plugins
"
19310,source/Victor Babenko.docx,"● Optimized websites performance
"
19311,source/Victor Babenko.docx,"● Designed various messenger bots
"
19312,source/Victor Babenko.docx,"EDUCATION
"
19313,source/Victor Babenko.docx,"Industrial Economic 
College of National 
Aviation University
"
19314,source/Victor Babenko.docx,"Associate's degree in Electronics Engineering and 
Computer Science
"
19315,source/Victor Babenko.docx,"Kyiv, Ukraine
"
19316,source/Victor Babenko.docx,"2013 – 2017
"
19317,source/Andrey Maximov.pdf,"Andrey Maximov 
Full-Stack Developer 
"
19318,source/Andrey Maximov.pdf," amaximov.off@gmail.com  
"
19319,source/Andrey Maximov.pdf," +7916793111 
"
19320,source/Andrey Maximov.pdf," 
"
19321,source/Andrey Maximov.pdf,"PROFILE 
"
19322,source/Andrey Maximov.pdf," 
"
19323,source/Andrey Maximov.pdf," 
"
19324,source/Andrey Maximov.pdf,"Full-stack developer adept in working in both 
front-end and backend development processes 
with 3 year of experience in Python, Django 
REST, JS, React, SQL. Well versed in 
programming 
design, 
development, 
and 
"
19325,source/Andrey Maximov.pdf,"implementation of functional specifications. 
Knowledge of different programming languages 
and various development tools and frameworks. 
"
19326,source/Andrey Maximov.pdf," 
 
SKILLS 
 
"
19327,source/Andrey Maximov.pdf,"Python 
Django REST, FastAPI, Celery, libraries (pdfkit, 
xlsxwriter, datetime, etc) 
"
19328,source/Andrey Maximov.pdf,"NodeJS 
React, MobX, Redux, Math, Canvas 
"
19329,source/Andrey Maximov.pdf,"SQL 
PostgreSQL, MySQL 
"
19330,source/Andrey Maximov.pdf,"Git version control 
"
19331,source/Andrey Maximov.pdf,"Docker 
"
19332,source/Andrey Maximov.pdf,"CI/CD pipelines 
"
19333,source/Andrey Maximov.pdf,"HTML & CSS 
"
19334,source/Andrey Maximov.pdf,"Agile methodologies 
"
19335,source/Andrey Maximov.pdf,"Security and data protection 
"
19336,source/Andrey Maximov.pdf,"Troubleshooting and debugging 
"
19337,source/Andrey Maximov.pdf," 
"
19338,source/Andrey Maximov.pdf," 
"
19339,source/Andrey Maximov.pdf," 
PROJECTS 
 
"
19340,source/Andrey Maximov.pdf,"Microservice Application 
 
"
19341,source/Andrey Maximov.pdf,"Python, Apache Kafka, Zookeeper, 
KafkaConnector, Docker, Postgresql, MongoDB, 
Elasticsearch 
02/2023 – 03/2023 
Creating a microservice application using 
Apache Kafka to update the information 
between databases. 
"
19342,source/Andrey Maximov.pdf,"Development of a Secure Smart Home 
Management Service  
JavaScript, React, Mobx, Docker, CI/CD 
09/2022 – 06/2023 
Development of client's part of security service 
and automation of smart home management 
processes using JS React. The system has a 
dynamic smart home design module which was 
developed using library Mobx and Canvas 
component. 
"
19343,source/Andrey Maximov.pdf,"Parser for data collection 
 
"
19344,source/Andrey Maximov.pdf,"Python (selenium, browsermobproxy, json, 
requests) 
08/2023 – 08/2023 
The parser for collecting data from a website 
using a proxy server and API requests. 
"
19345,source/Andrey Maximov.pdf,"Development of a Graphical Application 
Using the MVC Pattern 
 
"
19346,source/Andrey Maximov.pdf,"QT, SQL 
09/2022 – 11/2022 
A graphical application that writes/reads data 
from a database entity to/from a local file on a 
computer. 
"
19347,source/Andrey Maximov.pdf,"Development of a Client-Server Application 
with Database Design and Creation  
QT, SQL 
01/2022 – 05/2022 
The client-server application that works with 
SQL server. The software part was developed in 
QT. The client can add, edit and delete records. 
A relational database was designed and created. 
"
19348,source/Andrey Maximov.pdf,"French Numbers Parser 
 
"
19349,source/Andrey Maximov.pdf,"Python (re library) 
12/2022 – 01/2023 
A software that converts numbers written in 
French in cursive into Roman numerals. 
"
19350,source/Andrey Maximov.pdf,"Team collaboration and communication 
 
 
"
19351,source/Andrey Maximov.pdf,"EDUCATION 
"
19352,source/Andrey Maximov.pdf," 
PROFESSIONAL EXPERIENCE 
 
"
19353,source/Andrey Maximov.pdf,"Full-Stack Developer 
Information Technology Center 
08/2022 – present | Moscow, Russia 
 Created 10+ API modules 
  Developed 50+ different React components 
 Provided interaction of a client and server 
"
19354,source/Andrey Maximov.pdf,"components 
"
19355,source/Andrey Maximov.pdf," Code review 
 Worked directly with the database 
 Configured Docker and CI/CD 
(Python Django REST, JavaScript React, SQL, 
Docker, CI/CD) 
"
19356,source/Andrey Maximov.pdf," 
"
19357,source/Andrey Maximov.pdf," 
"
19358,source/Andrey Maximov.pdf,"Bachelor of Technology - BTech / 
Information Systems and Technologies 
MIREA (Russian Technological University) 
Thesis: Development of a Secure Smart Home 
Management Service 
"
19359,source/Andrey Maximov.pdf," 
"
19360,source/Andrey Maximov.pdf,"LANGUAGES 
"
19361,source/Andrey Maximov.pdf," 
"
19362,source/Andrey Maximov.pdf," 
"
19363,source/Andrey Maximov.pdf,"English 
"
19364,source/Andrey Maximov.pdf,"Russian 
"
19365,source/Андрей Васильев.docx,"Основной опыт:
"
19366,source/Андрей Васильев.docx,"●
Успешные проекты полного цикла с использованием BPM модуля от старта исследований до 
запуска усовершенствованных бизнес сервисов в 3-х крупных корпорациях (X5, РЖД, РЭЦ).
"
19367,source/Андрей Васильев.docx,"●
Эксперт по внедрению решений на платформе SAP (> 1.3 млн. табельных номеров в РЖД).
"
19368,source/Андрей Васильев.docx,"●
6-ти летний опыт работы программистом на проектах разработки ERP систем.
"
19369,source/Андрей Васильев.docx,"●
Множество проектов с большим количеством интеграционных сервисов со смежными системами
(более десятка интеграций в одном проекте).
"
19370,source/Андрей Васильев.docx,"●
Проекты автоматизации процессов со сложным бизнес контекстом (более 40 процессов, более 100
типов пользовательских операций).
"
19371,source/Андрей Васильев.docx,"Навыки, знания технологий и достижения:
"
19372,source/Андрей Васильев.docx,"●
Большой опыт работы с бизнес требованиями и техническими заданиями.
"
19373,source/Андрей Васильев.docx,"●
Эксперт по внедрению сервисных решений.
"
19374,source/Андрей Васильев.docx,"●
Инструменты BPM моделирования - Camunda modeler, lucidchart, draw.io, Visio.
"
19375,source/Андрей Васильев.docx,"●
Успешный опыт применения Agile методологий, включая Scrum и Kanban, профессиональное 
использование MS Project, Jira, Confluence, Trello.
"
19376,source/Андрей Васильев.docx,"●
Продвинутый пользователь MS Office (Excel, Word, Powerpoint).
"
19377,source/Андрей Васильев.docx,"●
SAP HR Certificated Consultant, 1C Enterprise программист, VBA, Postman (тестирование сервисов).
"
19378,source/Андрей Васильев.docx,"●
Отличные навыки коммуникации и командной работы, внимателен к деталям.
"
19379,source/Андрей Васильев.docx,"История работы:
Руководитель проекта, INNOTECH, Москва.
Март 2022 – Ноябрь 2022 – Проект разработки системы процессинга наличного оборота в банке.
"
19380,source/Андрей Васильев.docx,"Директор проекта, 7PRO. Москва
Май 2021 – Март 2022 – Проектирование и внедрение сервисов g2b для государственных услуг. Camunda BPM.
"
19381,source/Андрей Васильев.docx,"Директор проекта, IT2G. Москва
Октябрь. 2020 – Май 2021 – Разработка технического задания на системы электронного обучения 
государственного портала мэрии Москвы.
"
19382,source/Андрей Васильев.docx,"Директор проектов, РЖД. Москва
Сентябрь 2017 – Октябрь 2020 - Проект полного цикла по разработки и внедрению новой HR подсистемы для 
РЖД с полным редизайном бизнес процессов заказчика (применение BPMN).
"
19383,source/Андрей Васильев.docx,"Директор проектов, IBS. Москва
Октябрь 2013 – Сентябрь 2017- IT лидер внедрения аутсорсинговых HR сервисов для X5.
"
19384,source/Андрей Васильев.docx,"Руководитель проекта, РЖД. Москва
Dec. 2006 – Oct. 2013 – Проект разработки и внедрения SAP HR системы в РЖД.
"
19385,source/Андрей Васильев.docx,"Программист, Консультант. Газпром
Sep. 2002 – Dec. 2006 - Разработка и внедрение ERP систем для различных ДЗО и подразделений Газпром.
"
19386,source/Андрей Васильев.docx,"Образование:
"
19387,source/Андрей Васильев.docx,"2002, Казанский Государственный Технический Университет имени А.Н. Туполева. Диплом с отличием. 2006, 
"
19388,source/Андрей Васильев.docx,"SAP Certificated Consultant, module HR, Software Components: SAP R/3 4.6C
"
19389,source/Андрей Васильев.docx,"2007, Планирование и управление проектами в Microsoft Project
"
19390,source/Андрей Васильев.docx,"Андрей Васильев
Бизнес аналитик, BPM, Интеграция, Сервисные 
"
19391,source/Андрей Васильев.docx,"решения
"
19392,source/Андрей Васильев.docx,"(KZ) +7 705 000 83 99; e-mail: 876.st.vasilyev@gmail.com
Tel: @drVasilev, in: https://www.linkedin.com/in/makaaa-vasilev-
"
19393,source/Андрей Васильев.docx,"23a46282/
"
19394,source/Андрей Васильев.docx,"Языки: English: B1- Intermediate; Russian native
"
19395,source/Ann_Mokhan.docx,"Sunny Isles 
linkedin.com/in/mokhan-1a836000
"
19396,source/Ann_Mokhan.docx,"Ann 
MOKHAN
"
19397,source/Ann_Mokhan.docx," (+1) 682-217-1111
"
19398,source/Ann_Mokhan.docx,"  aaamokhan@gmail.com
"
19399,source/Ann_Mokhan.docx,"A QA AUTOMATION ENGINEER WITH 4+ YEARS OF EXPERIENCE WITH GREAT ATTENTION TO DETAILS, AN 
"
19400,source/Ann_Mokhan.docx,"EXCELLENT ACADEMIC RECORD, WITH GOOD UNDERSTANDING OF SOFTWARE DEVELOPMENT LIFECYCLE, GOOD 
"
19401,source/Ann_Mokhan.docx,"KNOWLEDGE OF SOFTWARE TESTING CONCEPTS AND METHODOLOGIES. LOOKING FOR A CHALLENGING ROLE IN A 
"
19402,source/Ann_Mokhan.docx,"HIGH-LEVEL PROFESSIONAL ENVIRONMENT TO UTILIZE
"
19403,source/Ann_Mokhan.docx,"MY TECHNICAL, MATH AND COMMUNICATION SKILLS.
"
19404,source/Ann_Mokhan.docx,"  EXPERIENCE
Quality Assurance Automation Engineer
MarTech Stack LLC
Oct 2019 – Dec 
2020
●
Developed, modified, and executed software test plans, automated scripts, and programs for testing.
"
19405,source/Ann_Mokhan.docx,"●
Increased the productivity of forms by analyzing test results, providing feedback, and consulting with 
development engineers in the resolution of various problems.
"
19406,source/Ann_Mokhan.docx,"●
Tracked software problems and verified their correction. Coordinated necessary testing 
resources to meet deadlines.
"
19407,source/Ann_Mokhan.docx,"QA Engineer
IT Royalty
Feb 2014 – Dec 
2014
●
Investigated and analyzed requirements, specifications and technical documents for creating and 
maintaining well designed test documentation (test plans and test cases).
"
19408,source/Ann_Mokhan.docx,"●
Designed and executed complex SQL scripts to maintain data. Performed black-box testing, 
integration, regression, smoke, positive/negative testing.
"
19409,source/Ann_Mokhan.docx,"QA Automation Software Testing Engineer
SmartSoft
Jan 2013 – Jan 
2014 GMSP Risk Feed Quality Monitor: tool for checking big amounts of financial data via di￿erent 
business rules. Start-up company specialized in development and support of custom web and back-end 
solutions.
●
Participated in daily/weekly meetings in accordance with Agile principles.
"
19410,source/Ann_Mokhan.docx,"●
Performed functional manual testing of UI (Web application).
"
19411,source/Ann_Mokhan.docx,"●
Implemented and maintained QA Automation tests using Selenium Webdriver and C#
"
19412,source/Ann_Mokhan.docx,"Junior Software Testing Engineer
HealthCorp
Jun 2011 – Jul 
2012
● Analyzed specification, added details, wireframes and screenshots to it.
● Performed functional manual testing on di￿erent phases of testing cycle.
● Performed usability testing. Reported issues into an owned bug-tracking system.
"
19413,source/Ann_Mokhan.docx,"SKILLS
"
19414,source/Ann_Mokhan.docx,"● Experience in Selenium (Webdriver), C#.
● Experience in SQL (MS SQL).
● Experience in Waterfall and Agile (Scrum, Kanban) methodologies.
● Experience in preparing and maintaining testing/technical documentation.
"
19415,source/Ann_Mokhan.docx,"● Strong communication and self-organizing skills, troubleshooting and problem-solving skills.
● Strong work ethics, passionate and detail oriented, focused on result and quality, creative thinking, 
initiative and committed to project goals. Team player.
"
19416,source/Ann_Mokhan.docx,"  EDUCATION
Minsk, Belarus
Belarusian State University
2008 - 2009
"
19417,source/Ann_Mokhan.docx,"Master's degree, Mathematics
"
19418,source/Ann_Mokhan.docx,"Minsk, Belarus
Belarusian State University
2005 - 2008
"
19419,source/Ann_Mokhan.docx,"Bachelor's degree (diploma cum laude) in Mathematics and computer science
"
19420,source/Vadim Bozhenko.pdf," 
"
19421,source/Vadim Bozhenko.pdf," 
"
19422,source/Vadim Bozhenko.pdf,"Main skills 
Python 2/3, Golang, Bash, 
Linux/Unix, git, gitflow, Ansible 
"
19423,source/Vadim Bozhenko.pdf,"Secondary skills 
C/C++, Ruby, PHP, JS, Java 8+, 
SQL/NoSQL DBs 
"
19424,source/Vadim Bozhenko.pdf,"Python frameworks 
Django, Flask, SQLAlchemy, 
Asyncio, Celery, pytest 
"
19425,source/Vadim Bozhenko.pdf,"Linux Distributions 
Ubuntu 14.04+, Debian 8+, SLES 
12+, CentOS 6+ 
"
19426,source/Vadim Bozhenko.pdf,"Databases and key-value 
storages 
"
19427,source/Vadim Bozhenko.pdf,"PostgreSQL, MySQL/MariaDB, 
MongoDB, Redis 
"
19428,source/Vadim Bozhenko.pdf,"Windows knowledge 
Windows Server 2012+, Windows 
7+, Active Directory management, 
Samba (SMB/CIFS) 
"
19429,source/Vadim Bozhenko.pdf,"Containers and virtualization 
technologies 
"
19430,source/Vadim Bozhenko.pdf,"Docker, Kubernetes, LXC, KVM, 
QEMU 
"
19431,source/Vadim Bozhenko.pdf,"CI/CD tools 
Azure DevOps, Gitlab CI, Jenkins 
"
19432,source/Vadim Bozhenko.pdf,"Misc. utilities 
Zabbix, Postfix, maintaining 
package repositories 
"
19433,source/Vadim Bozhenko.pdf," 
"
19434,source/Vadim Bozhenko.pdf,"SKILLS 
"
19435,source/Vadim Bozhenko.pdf," 
"
19436,source/Vadim Bozhenko.pdf," 
"
19437,source/Vadim Bozhenko.pdf," 
"
19438,source/Vadim Bozhenko.pdf," 
"
19439,source/Vadim Bozhenko.pdf," 
"
19440,source/Vadim Bozhenko.pdf," 
"
19441,source/Vadim Bozhenko.pdf," 
"
19442,source/Vadim Bozhenko.pdf," 
"
19443,source/Vadim Bozhenko.pdf," 
"
19444,source/Vadim Bozhenko.pdf," 
"
19445,source/Vadim Bozhenko.pdf," 
"
19446,source/Vadim Bozhenko.pdf,"Vadim Bozhenko 
"
19447,source/Vadim Bozhenko.pdf,"Location:  Haifa, Israel 
"
19448,source/Vadim Bozhenko.pdf,"Email:  caudadragojjj@gmail.com 
"
19449,source/Vadim Bozhenko.pdf," 
"
19450,source/Vadim Bozhenko.pdf," 
"
19451,source/Vadim Bozhenko.pdf," 
 
 
"
19452,source/Vadim Bozhenko.pdf," 
 
 
"
19453,source/Vadim Bozhenko.pdf," 
"
19454,source/Vadim Bozhenko.pdf," 
"
19455,source/Vadim Bozhenko.pdf," 
"
19456,source/Vadim Bozhenko.pdf,"English 
Upper-Intermediate/B2 
"
19457,source/Vadim Bozhenko.pdf,"Russian 
Native/C2 
"
19458,source/Vadim Bozhenko.pdf,"Ukrainian 
Native/C2 
"
19459,source/Vadim Bozhenko.pdf,"Hebrew 
Beginner/A2 
"
19460,source/Vadim Bozhenko.pdf," 
"
19461,source/Vadim Bozhenko.pdf,"custom cloud services and using SecureBoot 
"
19462,source/Vadim Bozhenko.pdf,"• 
Jira 
"
19463,source/Vadim Bozhenko.pdf," 
"
19464,source/Vadim Bozhenko.pdf,"03/2018 – 08/2019, 03/2020 - Present 
"
19465,source/Vadim Bozhenko.pdf,"Software Developer/DevOps, Cybervision (USA), Kyiv 
Ukraine, In-office/Remote 
Responsibilities: 
"
19466,source/Vadim Bozhenko.pdf,"• 
Developing application for installing custom Hadoop 
distro on hundreds of servers (Java, Python, Bash, 
Ansible) 
"
19467,source/Vadim Bozhenko.pdf,"• 
Migration to Python 3 while having option to run code 
with Python 2.6+ 
"
19468,source/Vadim Bozhenko.pdf,"• 
Improving product integration for AWS, GCP and Azure 
"
19469,source/Vadim Bozhenko.pdf,"• 
Developing custom Ansible modules, improving existing 
"
19470,source/Vadim Bozhenko.pdf,"• 
Writing internal documentation 
"
19471,source/Vadim Bozhenko.pdf,"• 
Tests and general refactoring 
"
19472,source/Vadim Bozhenko.pdf,"• 
Jira 
"
19473,source/Vadim Bozhenko.pdf,"07/2017 – 03/2018 
"
19474,source/Vadim Bozhenko.pdf,"Software Developer/System Administrator, 
BitBullCapital (CA, USA), Remote 
Responsibilities: 
"
19475,source/Vadim Bozhenko.pdf,"• 
Data extraction from various blockchain APIs (Python) 
"
19476,source/Vadim Bozhenko.pdf,"• 
Data normalization for MongoDB/Relation DBs 
"
19477,source/Vadim Bozhenko.pdf,"• 
Creating and maintaining infrastructure in AWS 
(Windows and Linux) 
"
19478,source/Vadim Bozhenko.pdf,"• 
Bash programming 
"
19479,source/Vadim Bozhenko.pdf,"10/2016 – 07/2017 
"
19480,source/Vadim Bozhenko.pdf,"Software Developer/System Administrator, ABC holding 
ltd (Poland), Kyiv Ukraine, Remote 
Responsibilities: 
"
19481,source/Vadim Bozhenko.pdf,"• 
Developing a hosting panel in Python 2/3 
"
19482,source/Vadim Bozhenko.pdf,"• 
Migration to Python 3 
"
19483,source/Vadim Bozhenko.pdf,"• 
Hardening Linux server, Kernel tuning 
"
19484,source/Vadim Bozhenko.pdf,"• 
Configuring mail servers 
"
19485,source/Vadim Bozhenko.pdf,"• 
Maintaining a Debian repository 
"
19486,source/Vadim Bozhenko.pdf,"• 
Developing CI/CD tools in Python/Bash 
"
19487,source/Vadim Bozhenko.pdf,"• 
Redmine 
"
19488,source/Vadim Bozhenko.pdf,"01/2016 – 10/2016 
"
19489,source/Vadim Bozhenko.pdf,"System Administrator, Softico (Ukraine), Kyiv Ukraine, 
In office 
Responsibilities: 
"
19490,source/Vadim Bozhenko.pdf,"• 
Maintaining existing on-site infrastructure 
"
19491,source/Vadim Bozhenko.pdf,"• 
Developing service tools in Python 
"
19492,source/Vadim Bozhenko.pdf,"• 
Maintaining VPN, internals Windows servers, websites 
"
19493,source/Vadim Bozhenko.pdf," 
 
 
"
19494,source/Vadim Bozhenko.pdf," 
 
 
"
19495,source/Vadim Bozhenko.pdf," 
"
19496,source/Vadim Bozhenko.pdf," 
"
19497,source/Vadim Bozhenko.pdf," 
"
19498,source/Vadim Bozhenko.pdf," 
"
19499,source/Vadim Bozhenko.pdf," 
Citizenship 
Ukraine 
"
19500,source/Vadim Bozhenko.pdf,"Residency 
Israel 
"
19501,source/Vadim Bozhenko.pdf,"Work permit Israel, Ukraine 
"
19502,source/Vadim Bozhenko.pdf," 
"
19503,source/ASLAN TOLEUBAY.docx,"ASLAN TOLEUBAY
"
19504,source/ASLAN TOLEUBAY.docx,"+7(707) 134-00-02 ￿ Almaty, Kazakhstan 
"
19505,source/ASLAN TOLEUBAY.docx,"EDUCATION
"
19506,source/ASLAN TOLEUBAY.docx,"Master of Computer Science, University of Tsukuba
2021- Expected 2023
"
19507,source/ASLAN TOLEUBAY.docx,"Bachelor of Engineering in Electrical and Electronic Engineering, Nazarbayev University2016 - 
2020
"
19508,source/ASLAN TOLEUBAY.docx,"SKILLS
"
19509,source/ASLAN TOLEUBAY.docx,"Technical  Skills
Python (Keras, TensorFlow), Embedded C, LaTex, MATLAB, GIT, Scrum, 
"
19510,source/ASLAN TOLEUBAY.docx,"Confluence, Agile Dev
Skills
Scrum, Confluence, Agile Development, LeanDS
"
19511,source/ASLAN TOLEUBAY.docx,"EXPERIENCE
"
19512,source/ASLAN TOLEUBAY.docx,"ML engineer/Data scientist
Aug 2020 - Currently
"
19513,source/ASLAN TOLEUBAY.docx,"VEON – Beeline Kazakhstan
Almaty,  Kazakhstan
"
19514,source/ASLAN TOLEUBAY.docx,"• Working on Deep Learning models’ optimization and Computer vision models’ improvement. 
"
19515,source/ASLAN TOLEUBAY.docx,"Implemented attention network to liveness aware face recognition system in TensorFlow, which increased 
the accuracy of the base model by 3% without compromising the model’s computational time
"
19516,source/ASLAN TOLEUBAY.docx,"Cofounder  and  CTO
Dec 2019 – Aug 2020
"
19517,source/ASLAN TOLEUBAY.docx,"Startup QT Analytics
Nur-Sultan,  Kazakhstan
"
19518,source/ASLAN TOLEUBAY.docx,"• Proposed a driver behavior classification for better customer service and comprehensive risk assessment 
"
19519,source/ASLAN TOLEUBAY.docx,"based on Machine Learning algorithms using sensor data taken from mobile phone.
"
19520,source/ASLAN TOLEUBAY.docx,"• Agreed to launch a pilot project with Astana LRT, however, due to pandemic the project was canceled
"
19521,source/ASLAN TOLEUBAY.docx,"Research  Assistant
Dec 2019 – Aug 2020
"
19522,source/ASLAN TOLEUBAY.docx,"Neuromorphic Hardware and AI group
Nur-Sultan,  Kazakhstan
"
19523,source/ASLAN TOLEUBAY.docx,"• Worked with Deep Learning Networks. Optimized and developed the Binarized Neural Network (BNN) in 
"
19524,source/ASLAN TOLEUBAY.docx,"TensorFlow for its application in hardware circuits, which allows the power reduction for up to 10-15% of 
dropped neurons without compromising the performance accuracy
"
19525,source/ASLAN TOLEUBAY.docx,"• Published a book chapter called “Getting Started with TensorFlow Deep Learning”
"
19526,source/ASLAN TOLEUBAY.docx,"Visiting  Research  Student
Dec 2019 – Dec 2019
"
19527,source/ASLAN TOLEUBAY.docx,"University of Tsukuba
Tsukuba, Japan
"
19528,source/ASLAN TOLEUBAY.docx,"• Was one of 3 applicants selected from Kazakhstan. Shared experience in the field of AI, Technology and 
"
19529,source/ASLAN TOLEUBAY.docx,"Science
"
19530,source/ASLAN TOLEUBAY.docx,"Visiting  Research  Student
Jul 2019 – Aug 2019
"
19531,source/ASLAN TOLEUBAY.docx,"KAIST Control Laboratory ”Ctrl Lab”
Daejeon, South Korea
"
19532,source/ASLAN TOLEUBAY.docx,"• Implemented Reinforcement Learning Proximal Policy Optimization algorithm to make a humanoid robot 
"
19533,source/ASLAN TOLEUBAY.docx,"walk and run in the gym environment;
"
19534,source/ASLAN TOLEUBAY.docx,"PUBLICATIONS
"
19535,source/ASLAN TOLEUBAY.docx,"Neural lightweight hardware cryptography for computationally restricted devices. Final 
year capstone project.
"
19536,source/ASLAN TOLEUBAY.docx,"Analog Brain-inspired Computing - Stochastic Dropout Crossbar Neural Nets. Second 
"
19537,source/ASLAN TOLEUBAY.docx,"author,  Journal paper submitted to IEEE TBioCAS. Current status: Awaiting reviewer scores.
"
19538,source/ASLAN TOLEUBAY.docx,"Daily Transformer Electric Vehicle Charging Capacity Prediction Using a Recurrent Neural 
Network.
Fourth author, Journal paper submitted to Energies. Current status: Under review.
"
19539,source/ASLAN TOLEUBAY.docx,"EXTRA-CURRICULAR ACTIVITIES
"
19540,source/ASLAN TOLEUBAY.docx,"• Head of Organizing committee of IEEE student chapter Visited KTZ railway company field and 
"
19541,source/ASLAN TOLEUBAY.docx,"identified problems that can be solved using AI. Organized competition, where the best solutions were 
awarded valuable prizes (300000 KZT, Laptop, Airpods) by KTZ. Provided further possibility of 
commercialization of the projects in cooperation with NURIS. As a result, received the certificate of 
Appreciation from IEEE Kazakhstan for contribution for the development of IEEE student branch 
and for being an outstanding student mentor.
"
19542,source/ASLAN TOLEUBAY.docx,"• Co-founder and president of Eco-Vehicles Club Organized information sessions about Shell Eco 
"
19543,source/ASLAN TOLEUBAY.docx,"marathons and popularized it among students. Conducted university-wide SOLIDWORKS software 
courses. As a result, NU students participate in Shell Eco marathon contest each year.
"
19544,source/Miron MEDVEDEV.pdf,"Miron MEDVEDEV
"
19545,source/Miron MEDVEDEV.pdf,"+995 593 000 923
"
19546,source/Miron MEDVEDEV.pdf,"eaaavedvq@gmail.com ⋄ LinkedIn ⋄ GitHub
"
19547,source/Miron MEDVEDEV.pdf,"OBJECTIVE
AI and Data Science professional with hands-on experience in model development, deployment, NLP and data analysis.
Seeking challenging opportunities to further develop and apply my skills.
"
19548,source/Miron MEDVEDEV.pdf,"EDUCATION
"
19549,source/Miron MEDVEDEV.pdf,"Master of Science in Applied Economics, Higher School of Economics
2020-2022
"
19550,source/Miron MEDVEDEV.pdf,"Bachelor of Economics, Higher School of Economics
2016-2020
"
19551,source/Miron MEDVEDEV.pdf,"EXPERIENCE
Machine Learning Engineer, Amberdata
Nov 2022 - Present
"
19552,source/Miron MEDVEDEV.pdf,"• Increased news video accessibility by 30% by developing and deploying a neural network for subtitle generation using
"
19553,source/Miron MEDVEDEV.pdf,"FastAPI and RabbitMQ.
"
19554,source/Miron MEDVEDEV.pdf,"• Improved the information retrieval speed by 20% by implementing a Q&A model using BERT and FAISS index.
"
19555,source/Miron MEDVEDEV.pdf,"• Elevated the F1 score to 90% in opinion detection for Unified State Exam essays by fine-tuning BERT.
"
19556,source/Miron MEDVEDEV.pdf,"• Enhanced user profile accuracy by 15% by training a model on clickstreams to produce user embeddings.
"
19557,source/Miron MEDVEDEV.pdf,"• Raised targeted marketing efficiency by 30% by contributing to a team project to classify users based on socio-
"
19558,source/Miron MEDVEDEV.pdf,"demographic characteristics.
"
19559,source/Miron MEDVEDEV.pdf,"• Streamlined internal decision-making by supporting the analytics team in developing 5 Superset dashboards using
"
19560,source/Miron MEDVEDEV.pdf,"PySpark and Hive.
"
19561,source/Miron MEDVEDEV.pdf,"AI Researcher, SkillCup
May 2023 - June 2023
"
19562,source/Miron MEDVEDEV.pdf,"• Boosted content creation rate by 20% by engineering a system that autonomously generates multiple-choice questions
"
19563,source/Miron MEDVEDEV.pdf,"using FRED-T5 and ruGPT-3.
"
19564,source/Miron MEDVEDEV.pdf,"• Managed end-to-end project phases including client communication, leading to successful deployment on Yandex
"
19565,source/Miron MEDVEDEV.pdf,"DataSphere.
"
19566,source/Miron MEDVEDEV.pdf,"Data Science Intern, SBERBANK
July 2021 - Oct 2021
"
19567,source/Miron MEDVEDEV.pdf,"• Increased organizational transparency by visualizing inter-departmental connections using NetGraphX and Graphviz.
"
19568,source/Miron MEDVEDEV.pdf,"• Achieved CER = 0.065 and WER = 0.157 by leading a Russian Handwriting Recognition project using a state-of-the-art
"
19569,source/Miron MEDVEDEV.pdf,"architecture. Link to the project on GitHub
"
19570,source/Miron MEDVEDEV.pdf,"• Accelerated issue resolution time by 10% by employing LDA to categorize frequent problems in Jira tickets.
"
19571,source/Miron MEDVEDEV.pdf,"SKILLS
"
19572,source/Miron MEDVEDEV.pdf,"Programming
Python, SQL, R, Git, Linux, Bash, LATEX
"
19573,source/Miron MEDVEDEV.pdf,"Libraries
Pytorch, Numpy, Tensorflow, FastAPI, Pyspark, Deepspeed, Pyspark, XGboost, Pandas,
Scikit-learn, Matplotlib, Plotly, Seaborn
"
19574,source/Miron MEDVEDEV.pdf,"Tools
Hive, Superset, RabbitMQ, Yandex DataSphere
"
19575,source/Miron MEDVEDEV.pdf,"Languages
English, Russian
"
19576,source/Miron MEDVEDEV.pdf,"HOBBIES
"
19577,source/Miron MEDVEDEV.pdf,"• Passionate about climbing.
• Enthusiastic follower of For-
"
19578,source/Miron MEDVEDEV.pdf,"mula 1 racing.
"
19579,source/Miron MEDVEDEV.pdf,"• Enjoy watching and analyz- ing
"
19580,source/Miron MEDVEDEV.pdf,"films.
"
19581,source/Miron MEDVEDEV.pdf,"• Active listener of various mu- sic
"
19582,source/Miron MEDVEDEV.pdf,"genres.
"
19583,source/Miron MEDVEDEV.pdf,"• Avid football fan and player.
• Active E-sports fan, rooting for
"
19584,source/Miron MEDVEDEV.pdf,"9Pandas
"
19585,source/Михалько Людмила.docx,"+7 (916) 000 49 05
okok.mikhalko@outlook.com 
www.linkedin.com/ookoa-mikhalko
"
19586,source/Михалько Людмила.docx,"Обо мне
"
19587,source/Михалько Людмила.docx,"Руководитель проектов с более чем 20-летним опытом работы в ИТ сфере для различных отраслей: 
телекоммуникации, фармацевтика, нефтегазовая отрасль, промышленность.
Успешный опыт в реализации решений и проектов различной степени сложности от внедрения ERP систем и 
их компонентов, внедрения платформенных и инфраструктурных решений до разработки и внедрения 
мобильных приложений.
"
19588,source/Михалько Людмила.docx,"Опыт и достижения
"
19589,source/Михалько Людмила.docx,"Цифровые технологии и платформы
02/2016 – 06/2023 
ИТ подразделение компаний ЕвроХим и СУЭК. ЕвроХим один из крупнейших мировых производителей 
удобрений, СУЭК является одной из ведущих угольно-энергетических компаний в мире.
"
19590,source/Михалько Людмила.docx,"Руководитель программы проектов
"
19591,source/Михалько Людмила.docx,"￿
Управление проектами и программой проектов различного уровня сложности.
"
19592,source/Михалько Людмила.docx,"￿
Оценка стоимости затрат на внедрение цифровых инициатив, защита необходимости 
внедрения инициатив и защита бюджета.
"
19593,source/Михалько Людмила.docx,"￿
Управление распределенными командами на проектах.
"
19594,source/Михалько Людмила.docx,"￿
Решение вопросов развития инфраструктуры для целей проекта.
"
19595,source/Михалько Людмила.docx,"￿
Поиск технических решений для повышения надежности инфраструктуры.
"
19596,source/Михалько Людмила.docx,"￿
Формирование ресурсного плана, планирование работ по проектам, подготовка проектной 
документации, контроль и управление сроками проектов, контроль исполнения бюджета, 
управление изменениями и рисками проектов.
"
19597,source/Михалько Людмила.docx,"￿
Собеседование и найм специалистов для проектов.
"
19598,source/Михалько Людмила.docx,"￿
Координация работ по контрактации с подрядчиками.
"
19599,source/Михалько Людмила.docx,"￿
Участие в проработке и согласовании бизнес-процессов, методологических вопросов и 
выработке решений по направлению Ремонты.
"
19600,source/Михалько Людмила.docx,"￿
Координация вопросов по закупке оборудования и лицензий для проектов. 
Достижения
"
19601,source/Михалько Людмила.docx,"￿
Организовала внедрение системы Мобильный ТОиР на предприятиях группы, руководила проектом 
по доработке приложения на основании функциональных требований заказчика. Проект вывела в 
тираж на предприятиях Дивизиона Горнорудный и Дивизиона Удобрения. Внедрение системы 
Мобильный ТОиР позволило сократить внеплановые простои оборудования на 10%.
"
19602,source/Михалько Людмила.docx,"￿
Инициировала и выступила заказчиком внедрения системы для управления 
корпоративными мобильными устройствами Mobile Device Management. Система
позволила на 60% сократить время на обслуживание корпоративных мобильных устройств на 
предприятиях компании.
"
19603,source/Михалько Людмила.docx,"￿
Нашла способ на 90% сократить затраты на обеспечение инфраструктуры проекта, внедрила 
его в эксплуатацию.
"
19604,source/Михалько Людмила.docx,"￿
Разработала и защитила программу проектов по автоматизации ТОиР на общую сумму больше 1 
млрд. рублей.
"
19605,source/Михалько Людмила.docx,"￿
Решила вопрос по альтернативному лицензированию системы после ухода зарубежного вендора, 
что позволило продолжить использование системы и искать варианты импортозамещения в 
плановом режиме.
"
19606,source/Михалько Людмила.docx,"￿
Организовала закупку оборудования через параллельный импорт, что позволило
приобрести для предприятий компании оборудование, которое попало под санкции.
"
19607,source/Михалько Людмила.docx,"AT-Consulting
06/2011 – 02/2016
"
19608,source/Михалько Людмила.docx,"ИТ, Интеграция, разработка.
Внедрение и сервисная поддержка сложных информационных систем, управленческий и операционный 
бизнес-консалтинг, разработка ПО на заказ и ИТ-аутсорсинг.
"
19609,source/Михалько Людмила.docx,"Функциональный лидер
"
19610,source/Михалько Людмила.docx,"￿
Руководство командой консультантов и разработчиков.
"
19611,source/Михалько Людмила.docx,"￿
Формирование планов по развертыванию и настройке ERP системы.
"
19612,source/Михалько Людмила.docx,"￿
Разработка схем учета затрат и архитектурных решений.
"
19613,source/Михалько Людмила.docx,"￿
Согласовывание с заказчиком и контроль исполнения принятых решений.
"
19614,source/Михалько Людмила.docx,"￿
Разработка технических заданий на интеграцию между системами.
"
19615,source/Михалько Людмила.docx,"￿
Внедрение модулей логистики, производства, учета затрат, финансов ERP системы в качестве лидера 
по направлению.
"
19616,source/Михалько Людмила.docx,"Достижения:
"
19617,source/Михалько Людмила.docx,"￿
Структурировала работу функциональных команд проекта, помогла устранить противоречия между 
командами, что позволило найти решения для нескольких сложных кросс функциональных процессов 
и обеспечило быстрый запуск этих процессов в промышленную эксплуатацию на стороне заказчика.
"
19618,source/Михалько Людмила.docx,"￿
Реализовала функционал (кадровые справки, бухгалтерские справки, оформление полисов ДМС), 
который помог сотрудникам заказчика заказывать необходимые документы онлайн, а кадровым 
службам структурировать и облегчить их работу.
"
19619,source/Михалько Людмила.docx,"￿
Реализовала функционал учета международного роуминга в ERP системе, функционал помог 
обеспечить прозрачный учет международного роуминга.
"
19620,source/Михалько Людмила.docx,"Образование
"
19621,source/Михалько Людмила.docx,"Пермский технический университет,
Экономика и управление промышленным предприятием,
Инженер-Экономист
2001
"
19622,source/Михалько Людмила.docx,"Тренинги
"
19623,source/Михалько Людмила.docx,"Управление ИТ-проектами, Высшая школа экономики
2020
"
19624,source/Михалько Людмила.docx,"Анализ и моделирование бизнес-процессов, Высшая школа экономики
2020
"
19625,source/Михалько Людмила.docx,"Дополнительная информация
"
19626,source/Михалько Людмила.docx,"￿
Английский B1.
"
19627,source/Михалько Людмила.docx,"￿
Oracle
e-Business
Suite:
Inventory,
Oracle
Receivables,
Oracle
Purchasing,
Process 
Manufacturing, Enterprise Asset Management.
"
19628,source/Михалько Людмила.docx,"￿
Oracle Fusion Cloud: Manufacturing, Maintenance.
"
19629,source/Михалько Людмила.docx,"￿
SAP 4HANA: SAP PM.
"
19630,source/Михалько Людмила.docx,"￿
Jira, Confluence, Trello.
"
19631,source/Михалько Людмила.docx,"￿
PowerPoint.
"
19632,source/Михалько Людмила.docx,"￿
Активно изучаю новые технологии: цифровые двойники, системы предиктивной аналитики, VR, AR.
"
19633,source/Ross  Magauin.docx,"EDUCATION
"
19634,source/Ross  Magauin.docx,"• Nazarbayev University
Astana, Kazakhstan
Bachelor of Science in Computer Science
Aug 2021 - Expected May 2025
"
19635,source/Ross  Magauin.docx,"Relevant Coursework: Algorithms, Formal Languages, Programming Languages, Computer Systems and 
Organization, Performance and Data Structures, Artificial Intelligence, Database Systems, Software Engineering.
"
19636,source/Ross  Magauin.docx,"SKILLS SUMMARY
"
19637,source/Ross  Magauin.docx,"• Languages: Proficient in GoLang, Python, and Java. Familiar with C++ and C.
"
19638,source/Ross  Magauin.docx,"• Backend & API Development: Developed RESTful services using Gin, Gorilla Mux, and Django REST Framework. 
Experienced with gRPC, RPC, and Protocol Buffers for microservices communication.
"
19639,source/Ross  Magauin.docx,"• Database Management: Proficient with relational databases (SQLite, PostgreSQL) and NoSQL solutions (MongoDB, Redis). 
Familiar with database indexing using B-trees and Hash Indexes.
"
19640,source/Ross  Magauin.docx,"• Containerization & Deployment: Containerized applications using Docker and orchestrated deployments with Kubernetes on 
AWS.
"
19641,source/Ross  Magauin.docx,"• Testing:  Prioritized unit testing for software reliability, utilizing tools like gomock for database mocking.
"
19642,source/Ross  Magauin.docx,"• Data Structures & Algorithms: Solid understanding of core data structures and algorithms, including Sorting, Searching, 
Dynamic Programming, and Graph processing.
"
19643,source/Ross  Magauin.docx,"EXPERIENCE
"
19644,source/Ross  Magauin.docx,"dev.house
Astana, Kazakhstan
"
19645,source/Ross  Magauin.docx,"Backend Developer
Sep 2022 - July 2023
"
19646,source/Ross  Magauin.docx,"• Developed REST API services in Golang using Gin and leveraged gRPC for efficient data flow and robust error handling.
"
19647,source/Ross  Magauin.docx,"• Managed and optimized Redis, NoSQL, and SQL databases, ensuring high performance and reliable data persistence.
"
19648,source/Ross  Magauin.docx,"• Containerized applications using Docker, enhancing scalability and ensuring consistent environments across 
deployments.
"
19649,source/Ross  Magauin.docx,"• Prioritized software reliability through rigorous unit testing, leading to a significant improvement in code quality and 
system stability.
"
19650,source/Ross  Magauin.docx,"PROJECTS
"
19651,source/Ross  Magauin.docx,"• Vehicle Management System (VMS) Backend: Led the backend development for the Vehicle Management System at 
Nazarbayev University using Golang. Developed robust APIs for vehicle registration, driver assignments, and real-time location
updates. Managed database operations with PostgreSQL, ensuring data integrity and security. Collaborated with frontend and iOS 
teams for seamless integration. Implemented user authentication, optimized performance for handling over 1000 vehicles, and 
ensured data backup and recovery mechanisms. Technologies: Golang, PostgreSQL, Google Maps API. Github link
"
19652,source/Ross  Magauin.docx,"• SimpleBank Backend Service: Developed a comprehensive backend web service in Go for a banking system. The service 
provides RESTful HTTP APIs for account management, balance tracking, and money transfers between accounts. Leveraged Gin 
framework for API development, Docker for containerization, and Kubernetes for deployment on AWS. The project also 
incorporates advanced features like gRPC APIs, asynchronous processing using Redis, and security enhancements with JWT, 
PASETO, and user authentication. Github link
"
19653,source/Ross  Magauin.docx,"• GRPC Project: Developed a Go-based GRPC service for managing transactions, encompassing a GRPC server and client, both 
designed in Go, with interfaces and message types defined via Protocol Buffers. Github link
"
19654,source/Ross  Magauin.docx,"• E-commerce REST API: Developed an E-commerce REST API in Go. The project includes API endpoints for managing users 
and orders. The data models are defined in Go. Github link
"
19655,source/Ross  Magauin.docx,"• Document Delivery System (Backend): Developed the backend for an electrical government project that enables users to 
request and deliver official documents efficiently. Implemented full CRUD operations and integrated a distance-based pricing 
algorithm using Django REST framework. Github link
"
19656,source/Ross  Magauin.docx,"HONORS AND AWARDS
"
19657,source/Ross  Magauin.docx,"◦
"
19658,source/Ross  Magauin.docx,"• International Physics Olympiad (IPHO)
2020, 2019
"
19659,source/Ross  Magauin.docx,"Silver (Top 25%), Bronze (Top 25%) medals ∼350 participants
"
19660,source/Ross  Magauin.docx,"• European Physics Olympiad (EuPHO)
2020
"
19661,source/Ross  Magauin.docx,"Gold (Top 5%) medal ∼270 participants
"
19662,source/Ross  Magauin.docx,"• Asian Physics Olympiad (APHO)
2019
"
19663,source/Ross  Magauin.docx,"Bronze (Top 25%) medal and Best experimentator (Top 1%) award ∼220 participants
"
19664,source/Semen Ivanov.pdf,"SEMEN IVANOV
"
19665,source/Semen Ivanov.pdf,"Moscow, Russia · +99856990099
Email: semenIvanov54@gmail.com · linkedin.com/in/semenIvanov65
"
19666,source/Semen Ivanov.pdf,"I am a Cyber Security specialist with five years of experience in Penetration
Testing, Security Architecture and Computer Forensics. Currently I am working
as a Security Analyst for ORG. My role involves security assessment and
penetration testing processes.
The main responsibilities of my role include:
"
19667,source/Semen Ivanov.pdf,"●
Threat Intelligence analysis services;
"
19668,source/Semen Ivanov.pdf,"●
Analytical support of information security assessment;
"
19669,source/Semen Ivanov.pdf,"●
Preparing penetration testing and web application security assessment reports;
"
19670,source/Semen Ivanov.pdf,"●
Collaboration with Customer to present results and recommendations;
"
19671,source/Semen Ivanov.pdf,"●
Developing various scripts in Python to improve department workflows.
"
19672,source/Semen Ivanov.pdf,"I am an OSCP (Offensive Security Certified Professional) holder and currently
passing the ‘Advance web attack exploitation course’ by Offensive Security team to
obtain OSWE (Offensive Security Web Expert). In addition, I have experience in
the Security System Architecture development for customers based on outlined
client requirements (most of them based on Russian law (GDPR)).
I consider myself to be a focused and enthusiastic young person with strong
organizational and people skills. My hobbies are hiking, cycling and other sports
activities. In my current team I have implemented a hiking program for team
building purposes.
"
19673,source/Semen Ivanov.pdf,"EXPERIENCE
"
19674,source/Semen Ivanov.pdf,"SEP 2018 - PRESENT (2 YEAR 10 MONTHS +)
SECURITY ANALYST, ORG
As a Security Analyst, I work closely with infrastructure and web application
penetration teams. I participate in security assessment and penetration
testing projects. The role includes:
"
19675,source/Semen Ivanov.pdf,"●
Providing Threat Intelligence analysis services;
"
19676,source/Semen Ivanov.pdf,"●
Analytical support of information security assessment;
"
19677,source/Semen Ivanov.pdf,"●
Preparing penetration testing and web application security assessment reports;
"
19678,source/Semen Ivanov.pdf,"●
Developing various scripts in Python to automate routine jobs.
"
19679,source/Semen Ivanov.pdf,"JUL 2017 - SEP 2018 (1 YEAR 3 MONTHS)
CYBER SECURITY ARCHITECT, ORG
As a Security Architect, I developed security system architecture for
customers based on the outlined requirements (most of them based on
Russian law (GDPR)). My main responsibilities included:
"
19680,source/Semen Ivanov.pdf,"●
Development of security system architecture for customers;
"
19681,source/Semen Ivanov.pdf,"●
Preparation of technical and commercial proposals, calculation of specifications;
"
19682,source/Semen Ivanov.pdf,"●
Organizing workshops with clients to assist with identification of their business needs in
terms of providing the appropriate Information Security;
"
19683,source/Semen Ivanov.pdf,"●
Designing and Implementing vulnerability management processes;
"
19684,source/Semen Ivanov.pdf,"●
Preparing and implementing Inside/Outside information security audits including web,
Wi-Fi, infrastructure etc.
"
19685,source/Semen Ivanov.pdf,"In 2018, I was involved in the Standoff game on Positive Hack Days
conference with team SVR (defenders’ side).
"
19686,source/Semen Ivanov.pdf,"MAY 2016 - NOV 2016 (7 MONTHS)
FORENSIC SPECIALIST, ORG (CONTRACT ROLE)
As part of this role I was responsible for:
"
19687,source/Semen Ivanov.pdf,"●
The forensic technology services and was involved in a large fraud investigation FCPA
(Foreign Corrupt Practices Act);
"
19688,source/Semen Ivanov.pdf,"●
Engagement in the CIS (Commonwealth of Independent States) and Europe as a part of
the Fraud Investigation team.
"
19689,source/Semen Ivanov.pdf,"These engagements typically involved imaging of computers and servers,
data recovery, processing and analysis.
"
19690,source/Semen Ivanov.pdf,"JAN 2015 - DEC 2015 (1 YEAR)
FORENSIC SPECIALIST, ORG
"
19691,source/Semen Ivanov.pdf,"The main duties of this role included:
●
Forensic investigation technician support in fraud investigation for a big industrial
company focusing on the full complex of all eDiscovery processes and related
procedures;
"
19692,source/Semen Ivanov.pdf,"●
Participation in preparation of notarized electronic evidence for Russian civil court;
"
19693,source/Semen Ivanov.pdf,"●
Assistance in creation and preparation of infrastructure for remote secure review of
evidence for international investigation;
"
19694,source/Semen Ivanov.pdf,"●
Co-Creator of Forensic technology laboratory focusing on sustainability, building and
development of the Team, designing and setting up the forensic technology solutions
data center with the eDiscovery and computer forensic software and hardware.
"
19695,source/Semen Ivanov.pdf,"AUG 2007 - JUN 2008 (11 MONTHS)
TECHNICAL SERVICES ENGINEER, ORG
Full life-cycle of warranty service for Servers, PC, Laptops & peripheral
devices. The role included:
"
19696,source/Semen Ivanov.pdf,"●
Communication with the client;
"
19697,source/Semen Ivanov.pdf,"●
Identifying issue in PC, Server or peripheral devices;
"
19698,source/Semen Ivanov.pdf,"●
Repairing warranty devices and installing the requested software.
"
19699,source/Semen Ivanov.pdf,"EDUCATION
"
19700,source/Semen Ivanov.pdf,"2008 - 2014
SPECIALIST DIPLOMA, NNN STATE TECHNICAL UNIVERSITY
Informatics and Control Systems Department, Information Security Chair.
Average score is 4.5 out of 5
"
19701,source/Semen Ivanov.pdf,"DEC 2013 - MAY 2014 (6 MONTHS)
ORG
Final internship in Org Company: Responsible for Imaged devices with FTK
Imager software, UFED and Tableau Write-Blockers devices. Forensically
analyzed disk images with EnCase software for illegal actions or activities
"
19702,source/Semen Ivanov.pdf,"2
"
19703,source/Semen Ivanov.pdf,"2004 - 2008
DIPLOMA OF SECONDARY VOCATIONAL, COLLEGE OF RADIO-ELECTRONICS
Computer Systems Networking and Telecommunications Chair
"
19704,source/Semen Ivanov.pdf,"SKILLS
"
19705,source/Semen Ivanov.pdf,"●
Penetration Testing with Kali Linux
"
19706,source/Semen Ivanov.pdf,"●
Threat & Vulnerability Management
"
19707,source/Semen Ivanov.pdf,"●
Python & Bash scripting
"
19708,source/Semen Ivanov.pdf,"●
Security Architecture Design
"
19709,source/Semen Ivanov.pdf,"●
Network Security
"
19710,source/Semen Ivanov.pdf,"●
Burp Suite
"
19711,source/Semen Ivanov.pdf,"●
Metasploit framework
"
19712,source/Semen Ivanov.pdf,"●
Checkmarx SAST
"
19713,source/Semen Ivanov.pdf,"●
Microsoft products
"
19714,source/Semen Ivanov.pdf,"●
Knowledge of Jira and Conﬂuence
"
19715,source/Semen Ivanov.pdf,"CERTIFICATIONS
"
19716,source/Semen Ivanov.pdf,"●
Offensive Security Certified Professional (OSCP) - Offensive Security. Certificate ID: OS-XXXXXX
"
19717,source/Semen Ivanov.pdf,"●
Check Point Certified Security Administrator (CCSA) - Check Point Software Technologies,Ltd.
Issued Feb 2018 - Expires Feb 2020 Certificate ID: XXXXXXXX
"
19718,source/Semen Ivanov.pdf,"●
Certified Specialist of MaxPatrol vulnerability scanner - Positive Technologies
Issued Oct 2017 - Expires Feb 2019
Certificate ID: XXXXXX
"
19719,source/Semen Ivanov.pdf,"PUBLICATION
"
19720,source/Semen Ivanov.pdf,"Digital Footprint Intelligence Report (в оригинальном резюме кликабельна)
"
19721,source/Semen Ivanov.pdf,"3
"
19722,source/Ivan Ulyanov.pdf,"Ivan Ulyanov
"
19723,source/Ivan Ulyanov.pdf,"(+1) 403-000-6344 | aaaan.ulianov@gmail.com | linkedin.com/in/aaaabur/ | Canada, AB
"
19724,source/Ivan Ulyanov.pdf,"SUMMARY
"
19725,source/Ivan Ulyanov.pdf,"With over a decade in the tech industry, I’ve transitioned from foundational coding of low-latency platforms to steering transformative
projects across diverse domains.
Specializing in TypeScript, React.js, Node.js, and GraphQL, I utilize cloud technologies to craft robust and scalable solutions. My agility
in project development and passion for continuous improvement have led to recognized contributions and leadership roles. Beyond
mere coding, I’ve pioneered custom frameworks, emphasized clean coding practices, and championed collaborative team dynamics.
With an entrepreneurial spirit, I ensure seamless and rapid product evolution, always striving for excellence.
"
19726,source/Ivan Ulyanov.pdf,"EXPERIENCE
"
19727,source/Ivan Ulyanov.pdf,"Full Stack Software Engineer
Oct 2021 – Present
"
19728,source/Ivan Ulyanov.pdf,"Tilla
"
19729,source/Ivan Ulyanov.pdf,"• Identified the need for and led the transition from an Express-based prototype to a robust, production-ready NestJS
"
19730,source/Ivan Ulyanov.pdf,"application, taking full ownership of the project’s success.
"
19731,source/Ivan Ulyanov.pdf,"• Seamlessly migrated the system from REST API to GraphQL, ensuring the integration of industry best practices and
"
19732,source/Ivan Ulyanov.pdf,"providing hands-on coaching to the team for easier adaptation to the new tech stack.
"
19733,source/Ivan Ulyanov.pdf,"• Pioneered the introduction of performance monitoring; upon pinpointing critical inefficiencies, I took responsibility for
"
19734,source/Ivan Ulyanov.pdf,"redesigning the architecture and logic, achieving a remarkable reduction in request delays from 1 minute to almost
instantaneous responses.
"
19735,source/Ivan Ulyanov.pdf,"Software Engineer
Mar 2021 – Oct 2021
"
19736,source/Ivan Ulyanov.pdf,"Deel
"
19737,source/Ivan Ulyanov.pdf,"• Assumed ownership of a vital legacy admin application, collaboratively devising a strategy with team members to overhaul
"
19738,source/Ivan Ulyanov.pdf,"its architectural design.
"
19739,source/Ivan Ulyanov.pdf,"• Introduced pivotal toolbelt enhancements, taking charge of resolving long-standing challenges tied to hot reloading, source
"
19740,source/Ivan Ulyanov.pdf,"mapping, and debugging.
"
19741,source/Ivan Ulyanov.pdf,"• Recognizing the potential of TypeScript and modern architectural methodologies, I actively advocated for
"
19742,source/Ivan Ulyanov.pdf,"company-wide adoption. Taking personal responsibility, I steered the transformation of the admin application,
culminating in a significantly enhanced, clean, and maintainable codebase.
"
19743,source/Ivan Ulyanov.pdf,"Co-Founder, CTO
Mar 2018 – Jun 2021
"
19744,source/Ivan Ulyanov.pdf,"RedFenix
"
19745,source/Ivan Ulyanov.pdf,"• Architected and developed a comprehensive, multifaceted platform which included a variety of web and mobile
"
19746,source/Ivan Ulyanov.pdf,"applications, specialized WiFi captive portals, and a solid NodeJS backend. - Adapting to emerging tech needs, I self-taught
and integrated new technologies related to WiFi networks and firmware development
"
19747,source/Ivan Ulyanov.pdf,"• Managed and technically mentored a developer team, ensuring consistent adherence to coding best practices,
"
19748,source/Ivan Ulyanov.pdf,"effective product development, and efficient deployments.
"
19749,source/Ivan Ulyanov.pdf,"• Oversaw the seamless deployment of all platform components on the Google Cloud Platform, emphasizing
"
19750,source/Ivan Ulyanov.pdf,"scalability and reliability.
"
19751,source/Ivan Ulyanov.pdf,"• Our technical efforts and innovations led us to be part of the Chile SUP program, and I was proud to see our product
"
19752,source/Ivan Ulyanov.pdf,"succeed in a pilot with a major ISP in Ecuador.
"
19753,source/Ivan Ulyanov.pdf,"Senior Software Engineer, Architect
Jan 2018 – Mar 2021
"
19754,source/Ivan Ulyanov.pdf,"Orthodox Union
"
19755,source/Ivan Ulyanov.pdf,"• Played a lead role in redeveloping the company’s internal CRM backend, transitioning to the innovative Event Sourcing
"
19756,source/Ivan Ulyanov.pdf,"approach.
"
19757,source/Ivan Ulyanov.pdf,"• Immersed myself in advanced concepts such as Event Sourcing, CQRS, and Domain-Driven Development. This empowered
"
19758,source/Ivan Ulyanov.pdf,"me to architect a novel and efficient system and enriched the team’s expertise as I shared my insights and learnings.
"
19759,source/Ivan Ulyanov.pdf,"• Successful migration from an older system to a modern, more efficient one earned commendations from both the
"
19760,source/Ivan Ulyanov.pdf,"business department and senior leadership
"
19761,source/Ivan Ulyanov.pdf,"• Originally onboarded for a specific task, my contributions and the tangible impact they delivered led to extended
"
19762,source/Ivan Ulyanov.pdf,"long-term contract, entrusting me with even more responsibilities.
"
19763,source/Ivan Ulyanov.pdf,"Senior Software Developer, Architect
Feb 2016 – Jan 2018
"
19764,source/Ivan Ulyanov.pdf,"RevJetRevJet
"
19765,source/Ivan Ulyanov.pdf,"• Acted as a key troubleshooter for urgent team projects, ensuring timely delivery across multiple company products,
"
19766,source/Ivan Ulyanov.pdf,"bolstering operational efficiency.
"
19767,source/Ivan Ulyanov.pdf,"• Distinguished as a top-tier engineer, I created a social network advertising application from the ground up, which
"
19768,source/Ivan Ulyanov.pdf,"subsequently anchored the company’s go-to-market strategy.
"
19769,source/Ivan Ulyanov.pdf,"Software Engineer
Jan 2015 – Feb 2016
"
19770,source/Ivan Ulyanov.pdf,"TrueDash
"
19771,source/Ivan Ulyanov.pdf,"• Pioneered the adoption of Full Stack development, enabling the team to expedite feature rollouts and efficiently meet
"
19772,source/Ivan Ulyanov.pdf,"business objectives.
"
19773,source/Ivan Ulyanov.pdf,"• Championed OOP best practices, driving the shift to ES6 and a class-centric architecture; mentored the team on code
"
19774,source/Ivan Ulyanov.pdf,"enhancement techniques.
"
19775,source/Ivan Ulyanov.pdf,"• Collaborated with the Backend team to optimize system API, achieving significant reductions in network load and
"
19776,source/Ivan Ulyanov.pdf,"minimizing API calls.
"
19777,source/Ivan Ulyanov.pdf,"Senior Software Engineer
Apr 2014 – Dec 2014
"
19778,source/Ivan Ulyanov.pdf,"NPTV
"
19779,source/Ivan Ulyanov.pdf,"• Together with my team, I developed a cutting-edge reactive framework atop a browser-less engine, incorporating
"
19780,source/Ivan Ulyanov.pdf,"elements like virtual DOM logic, rendering pathways, and layout algorithms.
"
19781,source/Ivan Ulyanov.pdf,"• Showcased the capabilities of this new technology by crafting applications rooted in the framework.
"
19782,source/Ivan Ulyanov.pdf,"• Revitalized my foundational C++ skills, facilitating the creation of an environment anchored in the V8 JavaScript engine.
"
19783,source/Ivan Ulyanov.pdf,"Furthermore, I introduced a remote debugging agent to amplify debugging functionalities for fellow developers.
"
19784,source/Ivan Ulyanov.pdf,"Front-End Software Engineer
Sep 2011 - Mar 2014
"
19785,source/Ivan Ulyanov.pdf,"Spotware Systems (cTrader)
"
19786,source/Ivan Ulyanov.pdf,"• As an early developer on the team, I established foundational elements for a SaaS low-latency trading platform tailored
"
19787,source/Ivan Ulyanov.pdf,"for Forex exchange. This foundation has sustained and facilitated growth for over a decade.
"
19788,source/Ivan Ulyanov.pdf,"• Pioneered a custom JavaScript framework and toolset, emphasizing swift development cycles.
"
19789,source/Ivan Ulyanov.pdf,"• Achieved exceptional optimization, enabling real-time charting, network, and data processing. Impressively, the
"
19790,source/Ivan Ulyanov.pdf,"browser-based performance surpassed that of its C native counterpart.
"
19791,source/Ivan Ulyanov.pdf,"• Stepped up in a leadership capacity to streamline inter-team communication, catalyzing accelerated product
"
19792,source/Ivan Ulyanov.pdf,"evolution.
"
19793,source/Ivan Ulyanov.pdf,"TECHNICAL SKILLS
"
19794,source/Ivan Ulyanov.pdf,"Languages: TypeScript, GraphQL, JavaScript, SQL (Postgres), MongoDB, HTML/CSS
Frameworks: React, Node.js, NestJS, Prisma, Express, Vue, React Native
Tools: Git, Docker, Google Cloud Platform (GCP), Amazon Web Services (AWS)
Other: Software Architecture, Team Coaching, Product Management, Team Leadership, Individual Contributor
"
19795,source/Ivan Ulyanov.pdf,"EDUCATION
"
19796,source/Ivan Ulyanov.pdf,"Altai State Technical University
Master in Computer Science
"
19797,source/Artur Nagimov.pdf,"CONTACT
"
19798,source/Artur Nagimov.pdf,"E-mail: rosaaalav.nagimov@gmail.com Telegram:
@roaaaslavnagimov Tel.: +1 408 000 7296
"
19799,source/Artur Nagimov.pdf,"PROFILE
"
19800,source/Artur Nagimov.pdf,"Frontend developer with 1.5 years of hands-on experience
in React/Next development, having worked in both
corporate and freelance settings. I'm fueled by a strong
passion for continuous learning and professional growth,
and I'm now embarking on a journey to broaden my
expertise to encompass backend development as well.
"
19801,source/Artur Nagimov.pdf,"EDUCATION
"
19802,source/Artur Nagimov.pdf,"FRONTEND DEVELOPER • JULY 2023
"
19803,source/Artur Nagimov.pdf,"Professional certification by Meta
"
19804,source/Artur Nagimov.pdf,"BACHELOR’S DEGREE
APPLIED INFORMATICS IN ECONOMICS JULY 2023
Siberian Institute of Business and Information Technology
Tomsk, Russia
"
19805,source/Artur Nagimov.pdf,"KEY SKILLS
"
19806,source/Artur Nagimov.pdf,"Semantic HTML layout React.js
Next.js
JavaScript / TypeScript
CSS preprocessors and libraries Redux and Redux Toolkit
Jest and React Testing Library
"
19807,source/Artur Nagimov.pdf,"LANGUAGES
"
19808,source/Artur Nagimov.pdf,"English (B2) Russian - native.
"
19809,source/Artur Nagimov.pdf,"EXPERIENCE
"
19810,source/Artur Nagimov.pdf,"FRONTEND DEVELOPER • JUNE 2023—PRESENT
"
19811,source/Artur Nagimov.pdf,"Freelance • CA, San Jose
"
19812,source/Artur Nagimov.pdf,"Working on various projects, including:
-
Developing user interfaces and components for a
"
19813,source/Artur Nagimov.pdf,"web-based CRM system (Peredelano Projects,
community-based development). Stack: React,
TypeScript, Vite, Tailwind.
-
Implementing a card game for a
"
19814,source/Artur Nagimov.pdf,"Telegram bot Web App (private customer, solo
development). Stack: React, Redux, SCSS.
-
Creating a functional web application as a landing
"
19815,source/Artur Nagimov.pdf,"page for a mobile app, implemented as a fully static exported
Next.js app with dynamic routing, structure, and language
versions (private customer, only frontend developer on the
team). Stack: Next.js (SSG), TypeScript, Jest, SCSS.
"
19816,source/Artur Nagimov.pdf,"FRONTEND DEVELOPER • AUGUST 2022—MAY 2023
Eventinc
GmbH •
Hamburg,
Germany
Working as a
part of a
development
team.
-
Implemented layout and functional changes, as well
"
19817,source/Artur Nagimov.pdf,"as developed new components, based on Figma mockups.
This included design adjustments and the creation of a
private-data filtering system for the internal messenger to
reduce fraud. Additionally, refactored the filtering system to
enhance its client-side capabilities, thereby decreasing server
usage and the number of API calls.
-
Identified and resolved a wide array of visual bugs,
"
19818,source/Artur Nagimov.pdf,"actively participated in code reviews, and contributed to the
inner-development-QA process.
"
19819,source/Artur Nagimov.pdf,"-
Created unit tests for components using Jest and
"
19820,source/Artur Nagimov.pdf,"React Testing Library. Developed tests for Cypress E2E
testing.
-
Executed the development of A/B tests to
"
19821,source/Artur Nagimov.pdf,"facilitate data-driven decisions regarding new features.
- Engaged in refactoring legacy code.
Stack: Next.js, TypeScript, SCSS, LESS, Jest, Cypress.
"
19822,source/Artur Nagimov.pdf,"FRONTEND DEVELOPER • MARCH 2022—JULY 2022
"
19823,source/Artur Nagimov.pdf,"Freelance • Phnom Penh, Cambodia
"
19824,source/Artur Nagimov.pdf,"Developed static-content SPA’s with inner routing and form
handling, utilizing Bootstrap styles and components, and
based on Figma mockups and existing sites.
Stack: React, React Router (HashRouter), Bootstrap, Redux.
"
19825,source/Anton Garkavy.pdf,"Anton Garkavy 
Email: anton2906x@gmail.com 
"
19826,source/Anton Garkavy.pdf,"Software Engineer Intern 
Mobile: +7-929-111-26-34 
"
19827,source/Anton Garkavy.pdf," 
"
19828,source/Anton Garkavy.pdf,"EDUCATION 
"
19829,source/Anton Garkavy.pdf,"Belarusian State University 
Minsk, Belarus 
"
19830,source/Anton Garkavy.pdf,"Bachelor’s degree in Computer Science 
September 2018 — Expected 2022 
"
19831,source/Anton Garkavy.pdf,"Yandex School of Data Science 
Moscow, Russia 
"
19832,source/Anton Garkavy.pdf,"Master’s level program, Machine Learning development track 
September 2019 — Expected 2021 
"
19833,source/Anton Garkavy.pdf,"Cumulative GPA: 4.63/5.00 
Relevant courses: Probability and Statistics, Machine Learning, Computer Vision, Natural Language Processing, Deep 
Learning, Reinforcement Learning, Python, C++, GoLang, Algorithms and Data Structures, BigData, Parallel and 
Distributed Computations 
"
19834,source/Anton Garkavy.pdf," 
"
19835,source/Anton Garkavy.pdf,"WORK   EXPERIENCE 
"
19836,source/Anton Garkavy.pdf,"Yandex 
Minsk, Belarus 
"
19837,source/Anton Garkavy.pdf,"Software Engineer Intern 
July 2020 — October 2020 
"
19838,source/Anton Garkavy.pdf,"Used Python for exploring machine learning algorithms used to predicting travel times for Yandex.Taxi services with 
50M+ users and 2B+ rides 
Deep neural networks of various architectures were trained, however, incorporating further structure from the road 
network proved difficult 
"
19839,source/Anton Garkavy.pdf,"• Besides exploring machine learning models, I also used C++ for testing & bug fixing taxi backend services 
"
19840,source/Anton Garkavy.pdf,"Yandex 
Moscow, Russia 
"
19841,source/Anton Garkavy.pdf,"Software Engineer Intern 
July 2019 — October 2019 
"
19842,source/Anton Garkavy.pdf,"Used C++ to implement a new approach for finding similar images using state-of-the-art machine learning algorithms 
for Yandex.Images service with 6K+ QPS. Gain a 4x time boost 
"
19843,source/Anton Garkavy.pdf,"• Optimized the logic for determining the similarity of texts. Gain a 1.2x memory reduction 
• Experience with BigData, MapReduce technology 
"
19844,source/Anton Garkavy.pdf,"PROJECTS 
"
19845,source/Anton Garkavy.pdf,"JPEG decoder: Baseline sequential mode of JPEG decoder, written in C++ using OOP and various algorithms such as 
Huffman decoding 
Code style checker for C++: The utility checks the names used in the code for compliance with the Google 
Styleguide, and also looks for potential typos in these names relying on the Levenshtein distance. Written in C++ using 
the Clang tooling library 
Ukrainian-Russian translator: Written in Python with Sklearn library, using embedding space mapping with optimal 
transformation derived from SVD decomposition. Used public dataset with 1M word pairs 
"
19846,source/Anton Garkavy.pdf,"AWARDS 
"
19847,source/Anton Garkavy.pdf,"ACM ICPC, NEERC Western Subregional Contest 
Minsk, Belarus — October, 2018 
"
19848,source/Anton Garkavy.pdf,"• Competition in sports programming among teams of universities of the North Eastern Europe, Western Subregion 
• Place 20/46 — 3rd degree award 
"
19849,source/Anton Garkavy.pdf,"Individual Olympiad in informatics 
Saint-Petersburg, Russia — March 2018 
"
19850,source/Anton Garkavy.pdf,"• Sports programming competition among schoolchildren of Belarus, Russia and Kazakhstan 
• Place 52/374 — 2nd degree award 
"
19851,source/Anton Garkavy.pdf,"Belarusian National Olympiad in Informatics 
Minsk, Belarus — March 2018 
"
19852,source/Anton Garkavy.pdf,"• National level 
• Place 45/124 — 3rd degree award 
"
19853,source/Anton Garkavy.pdf,"Top 5% on Codeforces — Artemx 
"
19854,source/Anton Garkavy.pdf," 
"
19855,source/Anton Garkavy.pdf,"OTHER 
"
19856,source/Anton Garkavy.pdf,"Competitive programming mentor — preparing students for Belarusian National Olympiad in Informatics and other 
programming contests 
"
19857,source/Anton Garkavy.pdf,"• 
• 
"
19858,source/Anton Garkavy.pdf,"• 
"
19859,source/Anton Garkavy.pdf,"• 
"
19860,source/Anton Garkavy.pdf,"• 
"
19861,source/Anton Garkavy.pdf,"• 
"
19862,source/Anton Garkavy.pdf,"• 
"
19863,source/Anton Garkavy.pdf,"• 
"
19864,source/Anton Garkavy.pdf,"• 
"
19865,source/Igor Rodin.pdf,"Igor Rodin 
"
19866,source/Igor Rodin.pdf,"Email: i.rod1245@gmail.com 
Phone: +7 999 735 99 92 
"
19867,source/Igor Rodin.pdf,"About Me 
"
19868,source/Igor Rodin.pdf,"A Senior Frontend Engineer with strong analytics experience. My motivation loop: learn the problem, 
take ownership, make things done, analyze impact. Working with a passion for details and the best 
user experience. Openminded, proactive and focused on delivering results. 
"
19869,source/Igor Rodin.pdf," 
"
19870,source/Igor Rodin.pdf,"Languages/Frameworks 
"
19871,source/Igor Rodin.pdf,"Expert in JavaScript, React, and Redux 
Confident in VueJS 
Proficient in Python, PHP, SQL, Django, and Laravel 
"
19872,source/Igor Rodin.pdf," 
"
19873,source/Igor Rodin.pdf,"Work experience 
"
19874,source/Igor Rodin.pdf,"HubHaus, Growth Engineer / Full Stack Engineer (10/2018 - present) 
"
19875,source/Igor Rodin.pdf,"VueJS universal app architecture + CI/CD configuration (VueJS, Docker, AWS ECS) 
"
19876,source/Igor Rodin.pdf,"Designed and created a VueJS project generator with preconfigured internal packages including authentication 
and a UI toolkit. Prepared npm packages for generator. 
"
19877,source/Igor Rodin.pdf,"Web scraping platform (Python, Scrapy, AWS FireHose) 
"
19878,source/Igor Rodin.pdf,"Designed and created a platform for continuous web scraping. The platform provides an infrastructure for creating 
scrapers, monitoring their progress and measuring data loss. 
"
19879,source/Igor Rodin.pdf,"AWS SageMaker model CI/CD (Docker, Python, AWS ECS) 
"
19880,source/Igor Rodin.pdf,"Dockerized an ML model, created an API wrapper, set up an infrastructure for deployment, and integrated a UI to 
interact with the model. 
"
19881,source/Igor Rodin.pdf,"ergeon, Senior Full Stack Engineer (05/2018 - 10/2018) 
"
19882,source/Igor Rodin.pdf,"Frontend projects migration (React, React SSR, Redux) 
"
19883,source/Igor Rodin.pdf,"ergeon bought the ezhome codebase. Cleaned up and refactored the frontend app for a new product. 
"
19884,source/Igor Rodin.pdf,"ezhome, Senior Frontend Engineer / Architect / Frontend Lead (09/2015 - 05/2018) 
"
19885,source/Igor Rodin.pdf,"A/B test platform and analytics integration for customer-facing apps (Segment, Google Analytics, 
"
19886,source/Igor Rodin.pdf,"Mixpanel, Google Optimize) 
Project lead for analytics integration. Developed naming conventions and event data structures. Guided mobile 
engineers with implementation and reviewed all platform integration results. Interacted with data engineers to 
receive requirements and feedback for analytics data. Implemented and integrated cross-project A/B testing 
platform. 
"
19887,source/Igor Rodin.pdf,"React universal app architecture (React, React SSR, Redux) 
"
19888,source/Igor Rodin.pdf,"Early proponent of universal (isomorphic) app architecture. Developed React-based SSR architecture, discovered 
and fixed many cross-platform problems. Led frontend team to develop apps based on that architecture. 
"
19889,source/Igor Rodin.pdf,"Kibbit, Senior Frontend Developer / Architect (01/2015 - 09/2015) 
"
19890,source/Igor Rodin.pdf,"AngularJS frontend architecture (AngularJS 1.x) 
"
19891,source/Igor Rodin.pdf,"Created an AngularJS app architecture. Led frontend development. 
"
19892,source/Igor Rodin.pdf,"Hotelbook service, Senior Frontend Developer / Architect (06/2014 - 01/2015) 
Flocktory, Senior Developer, Internal Interfaces (12/2013 - 06/2014) 
LinguaLeo, JavaScript Developer (08/2012 - 11/2013) 
"
19893,source/Igor Rodin.pdf,"Education 
"
19894,source/Igor Rodin.pdf,"09/2010 – 01/2012 
Cisco Networking Academy, Obninsk, Kaluga region, Russia 
"
19895,source/Igor Rodin.pdf,"09/2010 – 06/2012 
Master's degree specializing in Information Technology 
Scientific Research Nuclear University MEPhl, Faculty of Cybernetics 
Obninsk, Kaluga region, Russia 
"
19896,source/Igor Rodin.pdf," 
"
19897,source/Igor Rodin.pdf,"09/2006 – 07/2010 
Bachelor’s degree specializing in Computer Systems, Networks and Technologies 
Scientific Research Nuclear University MEPhI, Faculty of Cybernetics 
Obninsk, Kaluga region, Russia 
"
19898,source/Igor Rodin.pdf," 
"
19899,source/Igor Rodin.pdf,"Personality 
"
19900,source/Igor Rodin.pdf,"Strengths 
"
19901,source/Igor Rodin.pdf,"● Spatial thinking 
● Ability to see from another person’s point of view and approach situations from different 
"
19902,source/Igor Rodin.pdf,"perspectives. 
"
19903,source/Igor Rodin.pdf,"Approach to work 
"
19904,source/Igor Rodin.pdf,"● Be flexible, be detail-oriented, and think long term. Always find the right balance between speed and 
"
19905,source/Igor Rodin.pdf,"quality. 
"
19906,source/Igor Rodin.pdf,"● Be passionate about what you are doing and think about the product as a whole. 
● See task/decisions/roadmap from a business/product owner's perspective. Always try to understand 
"
19907,source/Igor Rodin.pdf,"other points of view. 
"
19908,source/Igor Rodin.pdf,"● Having a well-thought-through architecture is the key to success. 
● QA and delivering high-quality products is important. 
"
19909,source/Igor Rodin.pdf," 
Personal Interests 
"
19910,source/Igor Rodin.pdf,"Rock-climbing (was a coach for rock-climbing university team), downhill, cycling 
"
19911,source/Ivan Kalashnikov.docx," 
"
19912,source/Ivan Kalashnikov.docx,"DevOps Engineer
Ivan Kalashnikov
"
19913,source/Ivan Kalashnikov.docx,"Phone
+7 (063) 203-90-00
"
19914,source/Ivan Kalashnikov.docx,"Telegram
@anato00
"
19915,source/Ivan Kalashnikov.docx,"Skype
Anatoliy000
"
19916,source/Ivan Kalashnikov.docx,"Experience
 
"
19917,source/Ivan Kalashnikov.docx,"DevOps Engineer | Paga Group
July 2020 – Present
Making CI/CD pipelines for Python with PostgreSQL, Java and C# applications using Gitlab-CI to Dev, Stage 
and Prod environments included automated security testing (DAST, SAST). Writing Dockerfiles (including 
multistage Dockerfiles). Using Docker images, containers and Docker Swarm in dev and prod environments. 
Making Dev environment on VMWare ESXI server in the office. Building Prod environment in AWS EKS with 
AWS RDS. Deployment microservices to Kubernetes cluster in dev and prod environments. Using Python for 
making notifications to Telegram group after finish pipelines.
"
19918,source/Ivan Kalashnikov.docx,"SysOps/DevOps Engineer | Autonova-D
March 2019 – July 2020
Making CI/CD, using Jenkins, Docker, AWS (RDS, EC2, Autoscaling, Load balancers, Spot instances) in 
prod environment for deploying company’s website (PHP, NodeJS). Set up Windows Server 2016/2019 for 
deploying Active Directory, DNS, Print Server, GPO. Set up SCCM, SCUP, deploying programs through SCCM, 
installing updates on client PCs. Administration Post server Exchange, Edge. Configuring MicroTik, DrayTek 
routers, VPN, DNS, DHCP, Routing, Firewall, NAT, ARP. Troubleshooting. Using Zabbix monitoring with 
Telegram notifications group.
"
19919,source/Ivan Kalashnikov.docx,"System administrator | MIA
June 2013 - Jan 2019 (5 years 8 months)
Installing and administering Active Directory, GPO, DNS, DHCP, VPN. Writing SQL requests. Writing Bash 
scripts. Installing and administering web servers (Apache, Nginx). Complete set and assembly of server devices. 
Support VoIP ""Avaya"". Network device administration. 
"
19920,source/Ivan Kalashnikov.docx,"Skills
"
19921,source/Ivan Kalashnikov.docx,"•Git
• TCP/IP, DNS, DHCP
• Apache, Nginx, HAProxy
"
19922,source/Ivan Kalashnikov.docx,"•Bash
• Python
• Windows, Linux Servers
"
19923,source/Ivan Kalashnikov.docx,"•Docker, Docker Swarm
• Kubernetes
• AD, GPO, WSUS, SCCM
"
19924,source/Ivan Kalashnikov.docx,"•Ansible
• Jenkins, GitLab-CI
• Monitoring: Zabbix
"
19925,source/Ivan Kalashnikov.docx,"•Terraform
• AWS: EC2, VPC, ELB, ASG, Cloud 
"
19926,source/Ivan Kalashnikov.docx,"Formation, IAM, S3, EKS
"
19927,source/Ivan Kalashnikov.docx,"• Automated Security testing 
"
19928,source/Ivan Kalashnikov.docx,"DAST, SAST
"
19929,source/Ivan Kalashnikov.docx,"Education
 
"
19930,source/Ivan Kalashnikov.docx,"IT Education academy (Kyiv)
"
19931,source/Ivan Kalashnikov.docx," 
"
19932,source/Ivan Kalashnikov.docx,"Graduation Year 2020
DevOps engineer
"
19933,source/Ivan Kalashnikov.docx,"National Academy of Internal Affairs (Kyiv)
Graduation Year 2016 
Jurist  
"
19934,source/Ivan Kalashnikov.docx,"College of Municipal Economy (Kyiv)
Graduation Year 2007
Electromechanic
"
19935,source/Ivan Kalashnikov.docx,"Languages
"
19936,source/Ivan Kalashnikov.docx,"English – B1
Russian, Ukrainian – native
"
19937,source/Ivan Kalashnikov.docx,"Additional information
"
19938,source/Ivan Kalashnikov.docx,"Hard-working, friendly and responsible person, team player, quick learner.
"
19939,source/Serj Mkrtchyan.pdf," 
"
19940,source/Serj Mkrtchyan.pdf,"Serj Mkrtchyan 
"
19941,source/Serj Mkrtchyan.pdf,"Worldwide (Remote) 
"
19942,source/Serj Mkrtchyan.pdf," 
"
19943,source/Serj Mkrtchyan.pdf,"    serj.onllll@gmail.com  
"
19944,source/Serj Mkrtchyan.pdf,"Summary 
"
19945,source/Serj Mkrtchyan.pdf,"I am an engineer with very wide range of knowledge, who loves interesting tasks. Always ready to dive into new 
technology/language if it perfectly suits. 
 
"
19946,source/Serj Mkrtchyan.pdf,"Backend: SQL, Python, Golang 
Databases: PostgreSQL, Redis, IBM db2 
"
19947,source/Serj Mkrtchyan.pdf,"Experience 
"
19948,source/Serj Mkrtchyan.pdf,"Software Engineer 
RASSE (I-Teco Group) 
"
19949,source/Serj Mkrtchyan.pdf,"Sep 2017 - Present (3 years 2 months +) 
Developed system of government inspections. 
"
19950,source/Serj Mkrtchyan.pdf," 
"
19951,source/Serj Mkrtchyan.pdf,"Technologies: SQL, PL/SQL, Python, Golang, Java, docker, ETL, bash, git, db2, PostgreSQL, Redis, 
Elasticsearch, CI/CD, Ansible 
"
19952,source/Serj Mkrtchyan.pdf," 
"
19953,source/Serj Mkrtchyan.pdf,"Key Achievements: 
- Expanded system functionality by the terms of reference 
- Gained perfomance and reduced application load by adding several services to monolith 
- Gained system perfomance by optimizing SQL-queries & procedures 
- Designed APIs architecture and developed services 
- Designed architecture of database and entity relations 
- Made system more stable by resolving locks and deadlocks 
- Coordinated works with team lead 
- Successfully migrated all data between old version of system and new one 
- Successfully made 15 releases 
- Integrated with several external systems 
- Automated common routines 
- Worked with rare products like IBM db2, IBM Websphere, AIX, Jython 
- Defended against hacker attack 
"
19954,source/Serj Mkrtchyan.pdf," 
"
19955,source/Serj Mkrtchyan.pdf,"Database Developer 
Elar corporation 
Jun 2016 - Aug 2017 (1 year 3 months) 
I developed and maintained retro-conversion projects (data recognition of old archives, like First World 
War archive and Second World War archives) http://podvignaroda.ru 
"
19956,source/Serj Mkrtchyan.pdf," 
"
19957,source/Serj Mkrtchyan.pdf,"Technologies: 
SQL, T-SQL, VBA, MSSQL, MSAccess, MySQL, ETL 
"
19958,source/Serj Mkrtchyan.pdf," 
"
19959,source/Serj Mkrtchyan.pdf,"Key Achievements: 
- Several finished projects of data recognition 
- Increased accuracy of data by creating vba scripts 
- Increased efficiency of project by integrating dictionaries, T-SQL procedures, special functions etc. 
"
19960,source/Serj Mkrtchyan.pdf," 
"
19961,source/Serj Mkrtchyan.pdf,"  iOS Developer 
"
19962,source/Serj Mkrtchyan.pdf,"Custom project 
Aug 2015 - Oct 2015 (3 months) 
As a university project, I've made an iOS application for dating with locations of every user near you. 
"
19963,source/Serj Mkrtchyan.pdf," 
"
19964,source/Serj Mkrtchyan.pdf,"Technologies: Objective-C, MapKit, Layout Containers, MySQL, php 
Key Achievements: Finished application 
"
19965,source/Serj Mkrtchyan.pdf," 
"
19966,source/Serj Mkrtchyan.pdf,"  Web Developer 
"
19967,source/Serj Mkrtchyan.pdf,"Custom projects 
Oct 2013 - Mar 2014 (6 months) 
As a freelancer I created several websites, mostly landings. My responsibility was everything listed in 
statement of work. Most often: frontend, minor backend changes, server settings 
"
19968,source/Serj Mkrtchyan.pdf," 
"
19969,source/Serj Mkrtchyan.pdf,"Technologies: HTML, CSS, JQuery, php 
Key Achievements: Developed websites with adaptive design as from scratch as working with 
WordPress 
"
19970,source/Serj Mkrtchyan.pdf," 
Education 
"
19971,source/Serj Mkrtchyan.pdf,"  Moscow State University of Economics, Statistics and Informatics (MESI) 
Bachelor's degree 
2011 - 2015 
"
19972,source/Serj Mkrtchyan.pdf," 
Skills 
"
19973,source/Serj Mkrtchyan.pdf,"SQL • Python • Go (Programming Language) • PostgreSQL • Redis • Architecture • IBM Db2 
"
19974,source/Ivan Iarish.docx,"Front End Developer
"
19975,source/Ivan Iarish.docx,"konstantin.yarish@gmail.com • +79530962111
"
19976,source/Ivan Iarish.docx,"Tech-savvy professional with progressive experience decomposing and distributing complex tasks to team 
members. Skilled in striking a balance between functional and aesthetic design. Excel at building reusable code 
for future use, as well as optimizing web pages for maximum speed and scalability. Talent for utilizing a variety 
of markup languages to write web pages, while maintaining brand consistency throughout design. Articulate 
communicator with a credible history of cultivating and maintaining positive collaborations with clients, key 
stakeholders, and senior management to realize organizational goals.
"
19977,source/Ivan Iarish.docx,"Technical Proficiencies
"
19978,source/Ivan Iarish.docx,"JavaScript | CSS | React.js | HTML | Git | Redux.js | SASS | Webpack | Node.js
"
19979,source/Ivan Iarish.docx,"Career Experience
"
19980,source/Ivan Iarish.docx,"OptiSystems, Krasnodar, Russia
2018 – Present
"
19981,source/Ivan Iarish.docx,"Front End Developer
"
19982,source/Ivan Iarish.docx,"Deliver top-notch services as lead front-end developer to meet defined objectives. Leverage proven expertise 
for development of web interfaces with ReactJS, Redux. Develop application architecture to optimize 
performance. Facilitate workflows by refactoring legacy code as well as estimating the labor costs.
"
19983,source/Ivan Iarish.docx,"•
Implemented best practices for testing, performance improvement, and documentation.
"
19984,source/Ivan Iarish.docx,"•
Provided advice to various developers to ensure process and performance improvement.
"
19985,source/Ivan Iarish.docx,"Clinical Oncology Center No. 1, Krasnodar, Russia
2017 – 2018
"
19986,source/Ivan Iarish.docx,"Python Developer
"
19987,source/Ivan Iarish.docx,"Collaborated with team for developing a medical information system. Oversaw integration of development 
module with the Electronic Medical Record.
"
19988,source/Ivan Iarish.docx,"•
Proactively improved a module for uploading data to a third-party service that resulted in 
thousands of new medical cases to be uploaded per day.
"
19989,source/Ivan Iarish.docx,"Regional Association of Builders of Kuban, Krasnodar, Russia
2013 – 2017
"
19990,source/Ivan Iarish.docx,"System Administrator
"
19991,source/Ivan Iarish.docx,"Ensured the unloading of public information on hundreds of construction partner organizations on official 
website of the company.
"
19992,source/Ivan Iarish.docx,"•
Organized an infrastructure for uniting organizational offices in four major cities.
"
19993,source/Ivan Iarish.docx,"Krasnodar Information Technology College, Krasnodar, Russia
2012 – 2013
"
19994,source/Ivan Iarish.docx,"Engineer, Teacher
"
19995,source/Ivan Iarish.docx,"Taught detailed lesson to students regarding the basics of programming and system administration to improve 
"
19996,source/Ivan Iarish.docx,"students’ understanding.
"
19997,source/Ivan Iarish.docx,"Education
"
19998,source/Ivan Iarish.docx,"Higher Education
"
19999,source/Ivan Iarish.docx,"Russian State Social University, Moscow, Russia
"
20000,source/Alan Abdirasul.pdf,"Alan Abdirasul 
Senior Java Software Engineer 
|aаааааааbdirasul@gmail.com 
"
20001,source/Alan Abdirasul.pdf,"Summary 
 
"
20002,source/Alan Abdirasul.pdf,"Experienced Software Engineer with 5+ years of experience participating in all aspects of the software development lifecycle, which includes estimating, 
technical design, implementation documentation, testing, deployment, and support of applications developed for various clients. 
"
20003,source/Alan Abdirasul.pdf,"Skills   
 
"
20004,source/Alan Abdirasul.pdf,"• Programming Languages: Java, Kotlin, JavaScript, TypeScript 
"
20005,source/Alan Abdirasul.pdf,"• Backend Technologies: Spring boot, WebFlux, Gradle, Maven, RabbitMQ, Kafka, WebSocket, Spring Cloud, Hibernate, GraphQL, gRPC 
"
20006,source/Alan Abdirasul.pdf,"• Databases: PostgreSql, MySql, MongoDB, Redis, Oracle Database, R2DBC 
"
20007,source/Alan Abdirasul.pdf,"• Frontend Technologies: React, Redux, HTML, CSS 
"
20008,source/Alan Abdirasul.pdf,"• Software development tools: Git, Github, Gitlab, CodeCommit, CI/CD, CircleCi, Jenkins, Grafana, Prometheus, Graphite, JUnit, Mockito 
"
20009,source/Alan Abdirasul.pdf,"• Cloud: Docker, Kubernetes, AWS, Digital Ocean 
"
20010,source/Alan Abdirasul.pdf,"• Soft Skills: Leadership, communication, problem-solving, adaptability, teamwork, time management, critical thinking, emotional intelligence. 
"
20011,source/Alan Abdirasul.pdf,"Experience   
 
"
20012,source/Alan Abdirasul.pdf,"Lead Java Software Engineer 
Peaksoft 
Chicago, Illinois USA(Remote) 
05/2022 - Present 
"
20013,source/Alan Abdirasul.pdf,"• Deployed and scaled applications on AWS. 
"
20014,source/Alan Abdirasul.pdf,"• Effectively communicated within a multi-disciplined team, across 23 locations and 5 time zones. 
"
20015,source/Alan Abdirasul.pdf,"• Managed task assignments and priorities for timely deliveries. 
"
20016,source/Alan Abdirasul.pdf,"• Collaborated with stakeholders to prioritize system enhancements, boosting business process efficiency by 27%. 
"
20017,source/Alan Abdirasul.pdf,"• Introduced pair programming, elevating code quality by 35% and accelerating project delivery. 
"
20018,source/Alan Abdirasul.pdf,"• Orchestrated successful implementation of microservices architecture for improved scalability. 
"
20019,source/Alan Abdirasul.pdf,"• Mentored and supported 18 junior and middle developers, enhancing code quality by 30%. 
"
20020,source/Alan Abdirasul.pdf," 
"
20021,source/Alan Abdirasul.pdf,"Senior Software Engineer 
Peaksoft 
Chicago, Illinois USA(Remote) 05/2021 - 05/2022 
"
20022,source/Alan Abdirasul.pdf,"• Enhanced application responsiveness and scalability through algorithm optimization.. 
"
20023,source/Alan Abdirasul.pdf,"• Skillfully integrated third-party systems, contributing to a 23% increase in global revenue. 
"
20024,source/Alan Abdirasul.pdf,"• IImplemented and optimized Grafana deployments, elevating application monitoring capabilities. 
"
20025,source/Alan Abdirasul.pdf,"• Automated software delivery processes using CircleCI for efficient deployment. 
"
20026,source/Alan Abdirasul.pdf," 
"
20027,source/Alan Abdirasul.pdf,"Software Engineer 
Inclusive Technology 
Bishkek, Kyrgyzstan(On-site) 
11/2020 - 06/2021 
"
20028,source/Alan Abdirasul.pdf,"• Optimized workflows, reducing development time by 25%. 
"
20029,source/Alan Abdirasul.pdf,"• Orchestrated efficient communication across frontend, backend, and AQA teams, advancing deadlines by 12%. 
"
20030,source/Alan Abdirasul.pdf,"• Guided 6 junior and middle developers, fostering growth and development. 
"
20031,source/Alan Abdirasul.pdf,"• Engineered innovative features, including real-time grammar checking. 
"
20032,source/Alan Abdirasul.pdf,"Full-Stack Developer 
Aksoft 
Bishkek, Kyrgyzstan(On-site) 
05/2018 - 11/2020 
"
20033,source/Alan Abdirasul.pdf,"• Developed scalable applications using Java, JavaScript, React.js, and Redux.js. 
"
20034,source/Alan Abdirasul.pdf,"• Optimized database designs and query performance, resulting in more efficient data management. 
"
20035,source/Alan Abdirasul.pdf,"• Collaborated with cross-functional teams to gather requirements and deliver solutions tailored to client needs. 
"
20036,source/Alan Abdirasul.pdf,"• Implemented CI/CD pipelines using CircleCI, achieving a significant 70% boost in deployment efficiency. 
"
20037,source/Alan Abdirasul.pdf,"• Leveraged Docker for containerization, which reduced deployment time by 32% while improving the app's scalability.. 
"
20038,source/Alan Abdirasul.pdf,"• Managed projects efficiently through the use of Gradle and Maven, facilitating coordinated efforts. 
"
20039,source/Alan Abdirasul.pdf,"• Leveraged Amazon S3 to enhance metadata storage and retrieval within Spring MVC projects. 
"
20040,source/Alan Abdirasul.pdf," 
Education   
 
"
20041,source/Alan Abdirasul.pdf,"Computer Science, Bachelor's Degree 
Kirgizistan-Türkiye Manas Üniversitesi 
09/2017 - 09/2020 
"
20042,source/Alan Abdirasul.pdf,"Mentorship   
 
"
20043,source/Alan Abdirasul.pdf,"• CodeWise Academy: I employed interactive teaching methods, real-world examples, and hands-on coding projects to enhance students' grasp of Java 
programming concepts. I led face-to-face Zoom sessions accommodating diverse language preferences, inspire critical thinking, conduct assessments, and 
have successfully guided over 180 students, with 87 securing jobs, fostering their growth through mentoring and code reviews. (09/2022 - Present) 
• Avenir Education Company: Instructed students in backend development (Spring, Java, JDBC), guiding coding assignments, configuring CI/CD 
pipelines, and leading projects. Mentored 300+ students in web development with Java-based backend systems, conducting code reviews and providing 
career advice for success. 
(03/2020 - 01/2022) 
"
20044,source/Polina Gorbunova.pdf,"Polina Gorbunova
"
20045,source/Polina Gorbunova.pdf,"Backend Software Engineer
"
20046,source/Polina Gorbunova.pdf,"EXPERIENCE
"
20047,source/Polina Gorbunova.pdf,"Teacher Assistant, De Anza College; Cupertino, Ca
January-May 2019
"
20048,source/Polina Gorbunova.pdf,"I was a teacher assistant for Object Oriented Analysis and Design. Developed ﬂow charts, state/event diagrams,
conceptual class diagrams. Tutored students individually and in groups.
"
20049,source/Polina Gorbunova.pdf,"PROJECTS
"
20050,source/Polina Gorbunova.pdf,"Movie app
Python, 2021
"
20051,source/Polina Gorbunova.pdf,"– Used The movie DB API to fetch information on various movies by popular, newly released, search requests.
"
20052,source/Polina Gorbunova.pdf,"– Implemented the backend CRUD operations with SQLite for saving movies to watch/watched list.
–
Increased the loading speed by multithreading API requests to deliver high quality posters for multiple
"
20053,source/Polina Gorbunova.pdf,"movies faster (from ~10 seconds to ~2 seconds).
"
20054,source/Polina Gorbunova.pdf,"– Developed frontend features (grid and slider for movie presentation, bu�on updates) using Tkinter.
"
20055,source/Polina Gorbunova.pdf,"Android Weather Application
JAVA, 2019
"
20056,source/Polina Gorbunova.pdf,"– Created an Android Weather App reading data in JSON from a website.
"
20057,source/Polina Gorbunova.pdf,"– Incorporated in the app the options of changing the location to show the weather.
–
The app has the functionality to open GoogleMaps, copy location to the clipboard and share info
"
20058,source/Polina Gorbunova.pdf,"via message.
"
20059,source/Polina Gorbunova.pdf,"Cursed Zombie Game, TeamLead of 6
C++, 2019
"
20060,source/Polina Gorbunova.pdf,"– Implemented Object Oriented design developing the structure of the game. Used SFML library.
"
20061,source/Polina Gorbunova.pdf,"– Maintained detailed and accurate notes and documentation for various tasks.
– Got the best game award for the CIS29 class.
"
20062,source/Polina Gorbunova.pdf,"Backend for a car store webAPI
JAVA, 2018
"
20063,source/Polina Gorbunova.pdf,"– Created the project that implemented CRUD operations for car database.
"
20064,source/Polina Gorbunova.pdf,"– Server and client side of the API (using proxy design).
– Created self healing code, used multithreading, Tomcat.
"
20065,source/Polina Gorbunova.pdf,"EDUCATION
"
20066,source/Polina Gorbunova.pdf,"De Anza College; Computer Information Science Major GPA 3.98
2019-2021
"
20067,source/Polina Gorbunova.pdf,"Saint Petersburg State University of Aerospace Instrumentation; Management GPA 3.72
2011-2015
"
20068,source/Polina Gorbunova.pdf,"- Bachelor’s Degree, graduated with Honors.
"
20069,source/Polina Gorbunova.pdf,"PUBLICATIONS
"
20070,source/Polina Gorbunova.pdf,"System design for choosing a location for opening a retail store using MATLAB Fuzzy Logic module.
Apr 13, 2015
"
20071,source/Polina Gorbunova.pdf,"SKILLS
"
20072,source/Polina Gorbunova.pdf,"Python, matplotlib, numpy, pandas, BeautifulSoup, Jupyter Notebook, tkinter Java,
Tomcat, JavaEE, Eclipse, AndroidStudio, JDBC, JSP, Core Java),
"
20073,source/Polina Gorbunova.pdf,"C++, STL, DBs, SQL, SQLite, PostgreSQL, JSON, regex, HTML, CSS,
UNIX/LINUX/iOS/MacOS/Windows(CLI), Git.
"
20074,source/Polina Gorbunova.pdf,"Elmsford ct., Cupertino, Ca 95014
"
20075,source/Polina Gorbunova.pdf,"(916) 000 88 83
"
20076,source/Polina Gorbunova.pdf,"polina78.gorbunova@yahoo.com
"
20077,source/Polina Gorbunova.pdf,"h�ps://www.linkedin.com/in/pol-gorbun/
"
20078,source/Polina Gorbunova.pdf,"h�ps://github.com/Gorbunova
"
20079,source/Marat Kydyrsha.docx,"SUMMARY
"
20080,source/Marat Kydyrsha.docx,"Marat Kydyrsha
"
20081,source/Marat Kydyrsha.docx,"+7-778-000-31-50 | saaatkydyrsha@gmail.com 
| linkedin.com/inaaadyrsha | 
github.com/aadyrsh89a
"
20082,source/Marat Kydyrsha.docx,"Frontend Developer with 3 years of experience in designing and implementing SPA apps using Vue.js for 
an international bank with 900k+ B2B/B2C users.
"
20083,source/Marat Kydyrsha.docx,"EXPERIENCE
"
20084,source/Marat Kydyrsha.docx,"Senior  Software  Developer
Nov. 2022 – Present
"
20085,source/Marat Kydyrsha.docx,"Home Credit Bank Kazakhstan
Almaty,  Kazakhstan
"
20086,source/Marat Kydyrsha.docx,"• Increased the efficiency of the identity verification process by 27.7% and accelerated the process by 41 seconds. 
This transformation, driven by the implementation of digital document integration, the addition of a camera access 
notification popup, and clear instructions on how to grant camera access, significantly increased the success rate 
of identity verification for more than 80,000 individuals.
"
20087,source/Marat Kydyrsha.docx,"• Achieved a 10.3% improvement in the OTP (One-Time Password) verification process by enhancing the logic 
for SMS resend requests and resolving bugs, reducing the verification time by 15 seconds.
"
20088,source/Marat Kydyrsha.docx,"• Resolving other equally significant bugs throughout the application led to a 146-second reduction in the 
completion time of the entire process.
"
20089,source/Marat Kydyrsha.docx,"• Pioneered the practice of conducting retrospectives after each sprint, fostering a more efficient and 
productive workflow by systematically identifying areas for improvement.
"
20090,source/Marat Kydyrsha.docx,"• Initiated the implementation of Docker, speeding up the development process.
"
20091,source/Marat Kydyrsha.docx,"• Managed releases and conducted code refactoring.
"
20092,source/Marat Kydyrsha.docx,"Frontend  Developer
Nov 2019 – Oct 2022
"
20093,source/Marat Kydyrsha.docx,"Smart Digital Consulting
Almaty,  Kazakhstan
"
20094,source/Marat Kydyrsha.docx,"• Initiated image optimization by converting them to WebP, resulting in the saving of 2 gigabytes of storage space 
on the server. This led to faster page loading times and an improved user experience.
"
20095,source/Marat Kydyrsha.docx,"• Simplified and standardized HTML emails by breaking down the main components into a modular 
system, facilitating the faster creation and editing of email campaigns while ensuring a consistent brand 
image.
"
20096,source/Marat Kydyrsha.docx,"• As a result of design recommendations, the client accepted and embraced the proposed changes.
"
20097,source/Marat Kydyrsha.docx,"• Mentored and guided 7 interns in their professional development.
"
20098,source/Marat Kydyrsha.docx,"TECHNICAL SKILLS
"
20099,source/Marat Kydyrsha.docx,"Languages: JavaScript, SCSS
Frameworks: Vue.js, Nuxt.js, Vuetify, Vuex, AngularJS, Svelte, Bootstrap
Developer Tools: Git, Docker, WebStorm
Libraries: Innovatrics
"
20100,source/Marat Kydyrsha.docx,"EDUCATION
"
20101,source/Marat Kydyrsha.docx,"International  Information  Technologies  University
Almaty, Kazakhstan
"
20102,source/Marat Kydyrsha.docx,"Bachelor of Computer Science and Software Engineering (concentration: CCNA)
Sep. 2015 – May 2019
"
20103,source/Marat Kydyrsha.docx,"Carnegie Mellon University
Almaty, Kazakhstan
"
20104,source/Marat Kydyrsha.docx,"Accomplished all levels of the Software Development Program (from 1 to 12)
Sep. 2015 – May 2019
"
20105,source/Lilya SUCHKOVA.pdf,"Lilya SUCHKOVA
"
20106,source/Lilya SUCHKOVA.pdf,"+7-(916)-000-90-76 ⬦ ssaaakova@icloud.com
"
20107,source/Lilya SUCHKOVA.pdf,"Moscow ⬦ Russia
"
20108,source/Lilya SUCHKOVA.pdf,"https://www.linkedin.com/in/lil-suchkova/
"
20109,source/Lilya SUCHKOVA.pdf,"Data Scientist and Analyst with solid academic background, 6 years of experience in e-commerce and
banking.
I perform analytics, build and utilize machine learning models for banks’ campaigning in order to
"
20110,source/Lilya SUCHKOVA.pdf,"understand consumer behavior and their preferences, which helps to increase company’s profit and
customer satisfaction.
I am looking for a Data Scientist / Machine Learning Engineer position in the Nordic countries.
"
20111,source/Lilya SUCHKOVA.pdf,"EXPERIENCE
"
20112,source/Lilya SUCHKOVA.pdf,"Rosbank, Soci´et´e G´en´erale Group
Jan 2021 - present
"
20113,source/Lilya SUCHKOVA.pdf,"Data Scientist – Retail Business, Customer Experience Modeling
Moscow
"
20114,source/Lilya SUCHKOVA.pdf,"· Developed model for private loans demand elasticity prediction and conducted A/B test on its effect
· Currently developing models for private loans response rate and refinance take rate predictions
"
20115,source/Lilya SUCHKOVA.pdf,"Tools: Python (numpy, pandas, sklearn, lightGBM), SAS
"
20116,source/Lilya SUCHKOVA.pdf,"SberBank
Sep 2019 - Jan 2021
"
20117,source/Lilya SUCHKOVA.pdf,"Data Scientist – Retail Business, Mass Personalization
Moscow
"
20118,source/Lilya SUCHKOVA.pdf,"· Developed and maintained machine learning models to predict response on investment and savings
"
20119,source/Lilya SUCHKOVA.pdf,"products: deposits, broker accounts and other:
"
20120,source/Lilya SUCHKOVA.pdf,"• My new metal accounts response prediction model increased uplift 3.5x times and generated addi-
"
20121,source/Lilya SUCHKOVA.pdf,"tional NPV of 2.6 mln USD per Q2 2020
"
20122,source/Lilya SUCHKOVA.pdf,"• Developed model for predicting financial literacy level for the project that won Best Social Project award
"
20123,source/Lilya SUCHKOVA.pdf,"at Retail Finance Awards 2020
"
20124,source/Lilya SUCHKOVA.pdf,"· Completed ad-hoc analysis on clients’ savings behavior and helped to design A/B tests for campaign
"
20125,source/Lilya SUCHKOVA.pdf,"efficiency evaluation
Tools: Python (numpy, pandas, sklearn, lightGBM), SQL (Teradata), SAS
"
20126,source/Lilya SUCHKOVA.pdf,"SberBank
Nov 2015 - Sep 2019
"
20127,source/Lilya SUCHKOVA.pdf,"Financial Data Analyst – Treasury, Funds Transfer Pricing
Moscow
"
20128,source/Lilya SUCHKOVA.pdf,"· Developed and maintained model for basis risk premium evaluation for internal funding of long-term projects
"
20129,source/Lilya SUCHKOVA.pdf,"with floating loan rates to mitigate interest rate risk
"
20130,source/Lilya SUCHKOVA.pdf,"· Developed custom-made methods for measuring rationality of exercising embedded options for retail
"
20131,source/Lilya SUCHKOVA.pdf,"deposits (withdrawal and top-up)
"
20132,source/Lilya SUCHKOVA.pdf,"· Completed regular and ad-hoc analytic reports on interest rates, balance sheet structure and dynamics,
"
20133,source/Lilya SUCHKOVA.pdf,"prepared documents for Rates Committee and Assets-Liabilities Management Committee
Tools: MS Excel (+VBA), SQL (MS SQL Server, Teradata), R, Python
"
20134,source/Lilya SUCHKOVA.pdf,"Lamoda
Jun 2015 - Oct 2015
"
20135,source/Lilya SUCHKOVA.pdf,"Data Analyst – Business Development & Customer Insights
Moscow
"
20136,source/Lilya SUCHKOVA.pdf,"· Developed from scratch a report on regional sales and customer preferences’ difference
· Prepared ad-hoc analytics on customer behavior: prepayment systems comparison, orders cancellation
"
20137,source/Lilya SUCHKOVA.pdf,"measurement
"
20138,source/Lilya SUCHKOVA.pdf,"· Maintained regular reports on customer feedback
"
20139,source/Lilya SUCHKOVA.pdf,"Tools: MS Excel, SQL (Oracle), Hive
"
20140,source/Lilya SUCHKOVA.pdf,"EDUCATION
"
20141,source/Lilya SUCHKOVA.pdf,"Higher School of Economics, Moscow
M.Sc. in Data Science & Financial Technologies
Jul 2019
"
20142,source/Lilya SUCHKOVA.pdf,"GPA: 4.5/5.0
Relevant courses: Machine Learning, NLP, Deep Learning, Big Data, Stochastic Processes & Time Series
M.Sc. in Financial Economics
Jun 2015
"
20143,source/Lilya SUCHKOVA.pdf,"GPA: 4.8/5.0, cum laude
Relevant courses: Econometrics, Financial Markets & Instruments, Game Theory
"
20144,source/Lilya SUCHKOVA.pdf,"B.Sc. Applied Mathematics & Computer Science
Jun 2013
"
20145,source/Lilya SUCHKOVA.pdf,"GPA: 4.85/5.0, cum laude
Relevant courses: Optimization, Game Theory & Social Choice, Probability Theory & Statistics, Databases,
Programming (C++, C#, MATLAB)
"
20146,source/Lilya SUCHKOVA.pdf,"SKILLS
"
20147,source/Lilya SUCHKOVA.pdf,"Programming
Python (numpy, pandas, matplotlib, sklearn, lightGBM, XGBoost)
"
20148,source/Lilya SUCHKOVA.pdf,"Databases
MS SQL Server, Teradata
"
20149,source/Lilya SUCHKOVA.pdf,"Models
logistic regression, decision trees, gradient boosting, clustering, t-SNE
"
20150,source/Lilya SUCHKOVA.pdf,"Other
data visualization, statistics, A/B testing
"
20151,source/Lilya SUCHKOVA.pdf,"Tools
SAS, git, bash, VS Code, Jupyter Notebook, Google Colab
"
20152,source/Lilya SUCHKOVA.pdf,"Languages
English (fluent), Russian (native)
"
20153,source/Lilya SUCHKOVA.pdf,"OTHER CERTIFICATIONS
"
20154,source/Lilya SUCHKOVA.pdf,"Introduction to PySpark, DataCamp
Jul 2021
"
20155,source/Lilya SUCHKOVA.pdf,"Introduction to Data Engineering, DataCamp
Jun 2021
"
20156,source/Lilya SUCHKOVA.pdf,"Machine Learning PRO Accelerator, SkillFactory
Dec 2020 - Mar 2021
"
20157,source/Lilya SUCHKOVA.pdf,"Data Visualization with Python by IBM, Coursera
Jan 2021
"
20158,source/Lilya SUCHKOVA.pdf,"Machine Learning with TensorFlow on GCP (2/5 courses) by Google, Coursera
Sep 2020
"
20159,source/Oleg Buhai.docx,"Oleg Buhai
"
20160,source/Oleg Buhai.docx,"368-000-7666 | oaaasandr.buugay@gmail.com | https://www.linkedin.com/in/alex-buhai-95a00027b |
"
20161,source/Oleg Buhai.docx,"https://github.com/OlaaaandrBuhai
"
20162,source/Oleg Buhai.docx,"EDUCATION
"
20163,source/Oleg Buhai.docx,"NTUU  KPI
Kyiv, Ukraine
"
20164,source/Oleg Buhai.docx,"Bachelor of Engineering
Aug. 2015 – May 2019
"
20165,source/Oleg Buhai.docx,"IT-Incubator.io
Front-End Developer
May 2020 – May 2021
"
20166,source/Oleg Buhai.docx,"EXPERIENCE
"
20167,source/Oleg Buhai.docx,"Front-End  Developer
Apr 2023 - Jul 2023
"
20168,source/Oleg Buhai.docx,"Berlin Labs LLC
Remote
"
20169,source/Oleg Buhai.docx,"• Development of small features
"
20170,source/Oleg Buhai.docx,"• Participation in the development of a project for the sale of photo \\ video.
"
20171,source/Oleg Buhai.docx,"• Markup
"
20172,source/Oleg Buhai.docx,"• Fix Bugs
"
20173,source/Oleg Buhai.docx,"Front-End Developer
Jun 2022 – Mar 2023
"
20174,source/Oleg Buhai.docx,"Freelancer
Mlad´a Boleslav, CZ
"
20175,source/Oleg Buhai.docx,"• Development of landing pages;
"
20176,source/Oleg Buhai.docx,"• Development of small features
"
20177,source/Oleg Buhai.docx,"• Participation in the development of a project for the sale of photo \\ video.
"
20178,source/Oleg Buhai.docx,"• Markup
"
20179,source/Oleg Buhai.docx,"• Fix Bugs
"
20180,source/Oleg Buhai.docx,"Production  Supervisor
May 2019 - Dec 2021
"
20181,source/Oleg Buhai.docx,"Sˇkoda Auto
Mlad´a Boleslav, CZ
"
20182,source/Oleg Buhai.docx,"• Addressing technical challenges
"
20183,source/Oleg Buhai.docx,"• Managed both equipment and a team, ensuring smooth operations and quality standards
"
20184,source/Oleg Buhai.docx,"• Addressing technical challenges
"
20185,source/Oleg Buhai.docx,"Graphic Assistant
Dec 2016 – Jul 2017
"
20186,source/Oleg Buhai.docx,"Mindy Support
Kyiv, Ukraine
"
20187,source/Oleg Buhai.docx,"• Data Processing for Neural Networks
"
20188,source/Oleg Buhai.docx,"• Image Processing for Future Use
"
20189,source/Oleg Buhai.docx,"PROJECTS
"
20190,source/Oleg Buhai.docx,"Portfolio | React,JavaScript,CSS
"
20191,source/Oleg Buhai.docx,"• https://oleksandrbuhai.github.io/Portfolio/
"
20192,source/Oleg Buhai.docx,"• Developed a responsive portfolio web site using React
"
20193,source/Oleg Buhai.docx,"• Deployment on GitHub Pages
"
20194,source/Oleg Buhai.docx,"• Working with libraries framer-motion , React styled component, tsparticles
"
20195,source/Oleg Buhai.docx,"TECHNICAL SKILLS
"
20196,source/Oleg Buhai.docx,"Languages: JavaScript,TypeScript HTML/CSS
Frameworks: React,Redux, Redux Toolkit, Next.js, Tailwind CSS, Material-UI
Developer Tools: Git, Visual Studio Code, IntelliJ
"
20197,source/Akhundov Damat.pdf,"Akhundov Damat
"
20198,source/Akhundov Damat.pdf,"SoFTWARE ENGiNEER · BACKEND DEVELoPER
"
20199,source/Akhundov Damat.pdf,"Baku, Azerbaijan
"
20200,source/Akhundov Damat.pdf,"(+994) 51 000-60-17 |
akhundov1damat@gmail.com |
akhunddamat |
akhundov1damat
"
20201,source/Akhundov Damat.pdf,"“Software is art.”
"
20202,source/Akhundov Damat.pdf,"Summary
"
20203,source/Akhundov Damat.pdf,"Current Middle Backend Developer at product company Online Gymnasium. I have experience in developing microservice
architecture, working with databases, parallel tasks, converting files, integrating external services, working with caching, as well
as training new employees. Special‑ izing in RESTful API realization. Using Django REST Framework and FastAPI for this purpose.
Prefer to use FastAPI and developing structure of system manually. Also prefer to use Linux, namely Manjaro. Interested in
challenging tasks related to architecture development and learning new technologies.
"
20204,source/Akhundov Damat.pdf,"Work Experience
"
20205,source/Akhundov Damat.pdf,"Online Gymnasium
Remote
"
20206,source/Akhundov Damat.pdf,"MiDDLE BACKEND DEVELoPER
• Developed database structure via Django ORM.
• Worked with Celery tasks. Applied best practises.
• Implemented integration between BigBlueButton
"
20207,source/Akhundov Damat.pdf,"and Django REST Framework.
"
20208,source/Akhundov Damat.pdf,"• Used Test Driven Development.
• Built structure of the project via style guide.
• Implemented RESTful API microservice.
• Worked with Docker and Docker Compose.
• Realised ORM optimization.
• Developed an application for converting files from
"
20209,source/Akhundov Damat.pdf,"two services (JOD Converter and CloudConvert)
"
20210,source/Akhundov Damat.pdf,"Feb. 2020 ‑ Present.
"
20211,source/Akhundov Damat.pdf,"Freelance
Baku, Azerbaijan
"
20212,source/Akhundov Damat.pdf,"JUNIOR BACKEND DEVELOPER
• Developed payment
"
20213,source/Akhundov Damat.pdf,"system.
"
20214,source/Akhundov Damat.pdf,"• Worked with OpenCV on
"
20215,source/Akhundov Damat.pdf,"Python.
"
20216,source/Akhundov Damat.pdf,"• Realized authentication
"
20217,source/Akhundov Damat.pdf,"system for FastAPI.
"
20218,source/Akhundov Damat.pdf,"Feb. 2019 ‑ Feb. 2020
"
20219,source/Akhundov Damat.pdf,"Skills
"
20220,source/Akhundov Damat.pdf,"DevOps
Docker, Docker Compose
"
20221,source/Akhundov Damat.pdf,"Frameworks
Django REST Framework, Django, FastAPI, REST API
"
20222,source/Akhundov Damat.pdf,"Methodologies
Test Driven Development, Domain Driven Development
"
20223,source/Akhundov Damat.pdf,"Principles
SOLID, YAGNI, DRY
"
20224,source/Akhundov Damat.pdf,"Databases
Postgres, Redis, Cassandra
"
20225,source/Akhundov Damat.pdf,"Programming Languages
Python, C
"
20226,source/Akhundov Damat.pdf,"Languages
English, Russian, Azerbaijani
"
20227,source/Akhundov Damat.pdf,"Education
"
20228,source/Akhundov Damat.pdf,"ASOIU(Azerbaijan State Oil and Industrial University)
Baku, Azerbaijan
"
20229,source/Akhundov Damat.pdf,"B.S. IN INFORMATION TECHNOLOGIES
"
20230,source/Akhundov Damat.pdf,"AND MANAGEMENT
"
20231,source/Akhundov Damat.pdf,"• Got a Full Scholarship.
"
20232,source/Akhundov Damat.pdf,"Oct. 2020 ‑ Oct. 2024
"
20233,source/Akhundov Damat.pdf,"Ramin Mahmudzadeh school of solving Olympiad problems
Baku, Azerbaijan
"
20234,source/Akhundov Damat.pdf,"OLYMPIAD PROBLEMS SOLVER
• Learned to solve problems of
"
20235,source/Akhundov Damat.pdf,"different level of complexity.
"
20236,source/Akhundov Damat.pdf,"Sep. 2018 ‑ 2019
"
20237,source/Akhundov Damat.pdf,"DECEMBER 16, 2021
AKHUNDOV MURAD · RÉSUMÉ
1
"
20238,source/Artyom Poluhin.pdf,"EXPERIENCE
"
20239,source/Artyom Poluhin.pdf,"Artyom Poluhin
"
20240,source/Artyom Poluhin.pdf,"Lead Site Reliability Engineer
89140989647 | rt78@gmail.com |
"
20241,source/Artyom Poluhin.pdf,"linkedin | Authorized to work in the US
"
20242,source/Artyom Poluhin.pdf,"Lead Site Reliability Engineer
May 2017 – Present
"
20243,source/Artyom Poluhin.pdf,"Company1, CA Los Angeles, Remote
"
20244,source/Artyom Poluhin.pdf,"• Led and managed a team of Sr. SREs for 6 years, fostering a collaborative and high-performing multinational
"
20245,source/Artyom Poluhin.pdf,"environment, including setting KPIs, mentoring, developing roadmaps, and championing SRE approaches and culture
across the company.
"
20246,source/Artyom Poluhin.pdf,"• Reduced engineer involvement in incidents by 40% by automating manual instructions.
"
20247,source/Artyom Poluhin.pdf,"• Developed a service that automated the SSL certificate renewal and replacement process.
"
20248,source/Artyom Poluhin.pdf,"• Provisioned infrastructure-as-a-code with self-written tools(Python, Ansible) and Terraform.
"
20249,source/Artyom Poluhin.pdf,"• Migrated the Cloud platform: Project planning, automated migration processes, resource management, and team
"
20250,source/Artyom Poluhin.pdf,"coordination.
"
20251,source/Artyom Poluhin.pdf,"• Enhanced the CI/CD pipelines, resulting in a 30% reduction in update duration.
"
20252,source/Artyom Poluhin.pdf,"• Designed & managed services in AWS: Route 53, ELB, EC2, RDS, S3 including automation of CLI tools.
"
20253,source/Artyom Poluhin.pdf,"• Maintain a 99.99% SLA for a cloud platform, including more than 30 data centers and hundreds of microservices.
"
20254,source/Artyom Poluhin.pdf,"• Reduced hardware and license costs by 20% with expertly managing capacity planning and forecasting, and aligned results
"
20255,source/Artyom Poluhin.pdf,"with marketing, sales, and R&D departments.
"
20256,source/Artyom Poluhin.pdf,"• Implemented an incident management process resulting in a 45% reduction in incidents and MTTR by 40%.
"
20257,source/Artyom Poluhin.pdf,"• Implemented Scrum methodologies to align SRE objectives with broader organizational goals, and enhance
"
20258,source/Artyom Poluhin.pdf,"transparency and accountability.
"
20259,source/Artyom Poluhin.pdf,"Sr Site Reliability Engineer
April 2014 – May 2018
"
20260,source/Artyom Poluhin.pdf,"Company1, CA Los Angeles, Remote
"
20261,source/Artyom Poluhin.pdf,"• Designed an architectural process to review new components, which reduced time to the production by 30%.
"
20262,source/Artyom Poluhin.pdf,"• Designed & developed infrastructure for an on-premise cloud platform including hundreds of physical servers.
"
20263,source/Artyom Poluhin.pdf,"• Defined SLA, SLO, and SLI for infrastructure services, and configured Grafana Dashboards.
"
20264,source/Artyom Poluhin.pdf,"• Reduce update time by 40% by implementing distributed Jenkins infrastructure and designing CI/CD.
"
20265,source/Artyom Poluhin.pdf,"• Developed automated & redundant database architecture based on MariaDB(MySQL).
"
20266,source/Artyom Poluhin.pdf,"Sr. Cloud Platform Engineer
April 2014 – April 2016
"
20267,source/Artyom Poluhin.pdf,"Company1, CA Los Angeles, Remote
"
20268,source/Artyom Poluhin.pdf,"• Managed distributed storage: maintenance, deployment, and update automation.
"
20269,source/Artyom Poluhin.pdf,"• Managed Cloud Platform: Deploy with Ansible, maintained a 99.99% SLA.
"
20270,source/Artyom Poluhin.pdf,"• Designed and developed infrastructure for on-premise cloud platforms.
"
20271,source/Artyom Poluhin.pdf,"• Developed provisioning system that reduced time to production by 40%.
"
20272,source/Artyom Poluhin.pdf,"Sr. System Engineer
May 2013 – April 2014
"
20273,source/Artyom Poluhin.pdf,"Company1
"
20274,source/Artyom Poluhin.pdf,"• Reduced time to production by 40% by automating the deployment of the distributed storage.
"
20275,source/Artyom Poluhin.pdf,"• Implemented monitoring system based on Zabbix and Cacti and covered 90% of systems with monitoring.
"
20276,source/Artyom Poluhin.pdf,"• Optimized hardware configuration and reduced price by server by 25%.
"
20277,source/Artyom Poluhin.pdf,"Linux administrator
July 2008 – May 2013
"
20278,source/Artyom Poluhin.pdf,"Company2
"
20279,source/Artyom Poluhin.pdf,"• Managed Linux infrastructure based on the following services: DHCP, Mail servers, FTP, and DNS.
"
20280,source/Artyom Poluhin.pdf,"• Performed migration from Linux Fedora to Centos.
"
20281,source/Artyom Poluhin.pdf,"• Implemented backups of the core infrastructure services: Databases, Repositories, and Mail servers.
"
20282,source/Artyom Poluhin.pdf,"TECHNICAL SKILLS
"
20283,source/Artyom Poluhin.pdf,"Languages: Python, Bash, SQL, Groovy
Services: Kubernetes, AWS, Prometheus, Jenkins/Gitlab, MySQL, Nginx, HAproxy, Elasticsearch
Tools: Git, Docker, Terraform, Ansible, Grafana, Kibana, PagerDuty
"
20284,source/Artyom Poluhin.pdf,"Processes: Incident and Capacity management, SLA/SLO/SLI, Toil automation, Agile, DevOps methodology, DR
"
20285,source/Artyom Poluhin.pdf,"EDUCATION
"
20286,source/Artyom Poluhin.pdf,"Moscow State University
Major in computer technology
Aug. 2003 – May 2008
"
20287,source/Elena Akterskaia.pdf,"Elena Akterskaia, PhD 
Green Card Holder 
Profile 
"
20288,source/Elena Akterskaia.pdf,"+1 619 111-0525 
"
20289,source/Elena Akterskaia.pdf,"aktersaaa@gmail.com 
"
20290,source/Elena Akterskaia.pdf,"333 Harrison St, San Francisco CA 
"
20291,source/Elena Akterskaia.pdf," 
"
20292,source/Elena Akterskaia.pdf,"• Enthusiastic software engineer with academic and industrial experience (5+ years) in algorithms development and 
"
20293,source/Elena Akterskaia.pdf,"optimization, with focus on efficiency and automation. PhD research experience (finished in 3 years), developed a 
complex numerical simulation approach that allowed modeling failure progression in aircraft fuselage. 
"
20294,source/Elena Akterskaia.pdf,"• Programming: Python (adv.), Matlab (adv.), SQL(int.), C (int.) 
• Numerical: probability theory, simulations, numpy, pandas, scipy, scikit-learn, matplotlib, pytorch 
• ML algorithms: deep learning, computer vision, linear / logistic regression, random forest, gradient boosted trees, 
"
20295,source/Elena Akterskaia.pdf,"SVM, kNN, PCA, k-means 
"
20296,source/Elena Akterskaia.pdf,"Education 
"
20297,source/Elena Akterskaia.pdf,"2019 
Ph.D., Mechanical Engineering, Leibniz University Hannover, Germany, GPA 1.0/1.0 
"
20298,source/Elena Akterskaia.pdf," 
Courses on Advanced Algorithms and Data structures, Machine Learning, Databases and SQL for Data Science, 
"
20299,source/Elena Akterskaia.pdf,"2019 
Programming on Python, System Design, Statistics for Data Science, Programming for competitions 
"
20300,source/Elena Akterskaia.pdf,"2019 
Project Management, Leibniz University Hannover, Germany, Certificate 
"
20301,source/Elena Akterskaia.pdf,"2012 
M.S., Computational Mechanics, Peter the Great St. Petersburg Polytechnic University, Russia, GPA 5.0/5.0 
"
20302,source/Elena Akterskaia.pdf,"2010 
B.C., Computational Mechanics, Peter the Great St. Petersburg Polytechnic University, Russia, GPA 4.95/5.0 
"
20303,source/Elena Akterskaia.pdf,"WORK EXPERIENCE 
"
20304,source/Elena Akterskaia.pdf," 
"
20305,source/Elena Akterskaia.pdf,"2016-2019 
Associate Researcher, Leibniz University Hannover, Germany 
"
20306,source/Elena Akterskaia.pdf,"• Developed a novel multiscale method for modeling and prediction of failure progression in the fuselage aircraft, 
"
20307,source/Elena Akterskaia.pdf,"performed material degradation modeling and established a framework for recalculation of homogenized properties 
to ensure seamless transfer of information from the refined local level to larger global level which allowed to reduce 
computational time up to 50% 
"
20308,source/Elena Akterskaia.pdf,"• Developed automatic pipeline for model creations for the finite element software (full geometry described by nodes 
"
20309,source/Elena Akterskaia.pdf,"and elements locations and properties) and post-processing output data for the part of fuselage model, increasing 
prediction accuracy to 1-3% 
"
20310,source/Elena Akterskaia.pdf,"2018 
Marie Skłodowska-Curie Fellow, Porto University, Portugal 
"
20311,source/Elena Akterskaia.pdf,"• Designed and implemented scripts for automatization of models’ creation and transfer data between models 
2017 
Marie Skłodowska-Curie Fellow, University of Bristol, UK 
"
20312,source/Elena Akterskaia.pdf,"• Formulated discrete cohesive zone model for shell panel structures that allows physical modeling of adhesive layer 
"
20313,source/Elena Akterskaia.pdf,"between panels and leads to decrease in computational time by 75% 
"
20314,source/Elena Akterskaia.pdf,"2008-2015 
Head of optional educational courses 
"
20315,source/Elena Akterskaia.pdf,"• Prospecting for new customers and PR. Teacher of advanced math, physics 
2008-2012 
Research scientist SWE, CompMech Lab Ltd., Russia 
"
20316,source/Elena Akterskaia.pdf,"• Developed a set of programs for automatic parametric model generations to obtain and evaluate homogenized 
"
20317,source/Elena Akterskaia.pdf,"properties of composite materials. Post-processed and analyzed results from simulations of stochastic models to 
investigate influence of random inclusions and their sizes on material level. Hyperparameter search for an optimal 
model for the injection molding simulation of a bumper. 
"
20318,source/Elena Akterskaia.pdf,"Publications 
"
20319,source/Elena Akterskaia.pdf," 
"
20320,source/Elena Akterskaia.pdf,"• Akterskaia M, Camanho P, Jansen E, Arteiro A, Rolfes R. Progressive delamination analysis through two-way global- 
"
20321,source/Elena Akterskaia.pdf,"local coupling approach preserving energy dissipation for single-mode and mixed-mode loading, CS 223, 2019 
"
20322,source/Elena Akterskaia.pdf,"• Akterskaia M, Jansen E, Hallett S, Weaver P, Rolfes R. Progressive Failure Analysis of Stiffened Composite Panels Using 
"
20323,source/Elena Akterskaia.pdf,"a Two-Way Loose Coupling Approach Including Intralaminar Failure and Debonding, AIAA Journal 57, n. 7, 2019 
"
20324,source/Elena Akterskaia.pdf,"• Akterskaia M, Jansen E, Hallett S, Weaver P, Rolfes R. Analysis of skin-stringer debonding in composite panels through 
"
20325,source/Elena Akterskaia.pdf,"a two-way global-local method, Composite Structures 202, 1280–1294, 2018 
"
20326,source/Elena Akterskaia.pdf,"• Akterskaia M, Jansen E, Hühne S, Rolfes R. Efficient progressive failure analysis of multi-stringer stiffened composite 
"
20327,source/Elena Akterskaia.pdf,"panels through a two-way loose coupling global-local approach, Composite Structures.183, 137–145, 2018 
"
20328,source/Elena Akterskaia.pdf,"• Book chapter: Akterskaia M, Jansen E, Hallett S, Weaver P, Rolfes R. Post-buckling progressive failure analysis of 
"
20329,source/Elena Akterskaia.pdf,"composite panels using a two-way global-local coupling approach including intralaminar failure and debonding. In 
Advances in Predictive Models and Methodologies for Numerically Efficient Linear and Nonlinear Analysis of 
Composites. Springer International Publishing, 2019, pp. 83–102 
"
20330,source/Dmitriy Korenyako.docx,"Dmitriy Korenyako
"
20331,source/Dmitriy Korenyako.docx,"Product Designer with 15+ years of background in UI/UX.
Experience in producing efficient user-centered design 
solutions from defining the problem to delivering a final 
product. Strong skills in ideation and art direction. Able to 
function as a project leader as well as an individual contributor. 
Passionate about customer experience and all aspects of design.
"
20332,source/Dmitriy Korenyako.docx,"PORTFOLIO
"
20333,source/Dmitriy Korenyako.docx,"Phone:
+7 (905) 000-4567
"
20334,source/Dmitriy Korenyako.docx,"Email: adrfon@mail.com
"
20335,source/Dmitriy Korenyako.docx,"LinkedIn: www.linkedin.com/in/dfrenyako
"
20336,source/Dmitriy Korenyako.docx,"Country of residence: Russia, ready to relocate, Visa 
assistance needed
"
20337,source/Dmitriy Korenyako.docx,"www.portfolio.url
SKILLS
"
20338,source/Dmitriy Korenyako.docx,"UX: prototypes, mockups, analysis, user 
flows, personas
"
20339,source/Dmitriy Korenyako.docx,"EXPERIENCE
"
20340,source/Dmitriy Korenyako.docx,"Digital Manager — De Fonseca, Moscow
"
20341,source/Dmitriy Korenyako.docx,"MAY 2018 - PRESENT
"
20342,source/Dmitriy Korenyako.docx,"Italian home slippers brand №1
"
20343,source/Dmitriy Korenyako.docx,"•
Managed all digital activities of De Fonseca in Russia.
"
20344,source/Dmitriy Korenyako.docx,"•
Designed the global website with localization in multiple languages.
"
20345,source/Dmitriy Korenyako.docx,"•
Created a UX that resulted in 53% increase of conversion rate.
"
20346,source/Dmitriy Korenyako.docx,"•
Built and delivered a digital strategy which led to a 388% 
increase of online sales
"
20347,source/Dmitriy Korenyako.docx,"•
Increased brand awareness and achieved 5x increase in branded 
search traffic
"
20348,source/Dmitriy Korenyako.docx,"Art Director — Leto, Moscow
"
20349,source/Dmitriy Korenyako.docx,"AUGUST 2016 - APRIL 2018
"
20350,source/Dmitriy Korenyako.docx,"Russian leading digital agency, part of Ark Scholz & Friends Group
"
20351,source/Dmitriy Korenyako.docx,"•
Oversaw the art direction and design for a variety of clients 
including Anheuser-Busch, Bosch, Ferrero, Hyundai, Imperial 
Tobacco, Mercedes- Benz, PepsiCo, Philip Morris, KFC, 
Kotányi, Mazda, SCA (Essity), Pizza Hut, Saint-Gobain, 
Unilever, Valio, X5 Group.
"
20352,source/Dmitriy Korenyako.docx,"•
Led the UX/UI of the client’s internal app from scratch to delivery 
that
effectively saved POS maintenance costs up to 70%
"
20353,source/Dmitriy Korenyako.docx,"•
Led the website design for a leading food retailer from 
analytics and user research to production-ready UI.
"
20354,source/Dmitriy Korenyako.docx,"•
Built new internal processes for rapid design and prototyping with 
InVision
and Marvel
"
20355,source/Dmitriy Korenyako.docx,"Tools: Figma, Photoshop, InVision, Marvel, Excel, PowerPoint, 
Jira
"
20356,source/Dmitriy Korenyako.docx,"Methodologies: Agile, Design Thinking, Customer Development, 
Customer Journey Map, Jobs-to-be done
"
20357,source/Dmitriy Korenyako.docx,"LICENSES & CERTIFICATIONS
"
20358,source/Dmitriy Korenyako.docx,"Google Digital Garage,
The Fundamentals of digital marketing
"
20359,source/Dmitriy Korenyako.docx,"JUNE 2021
"
20360,source/Dmitriy Korenyako.docx,"Google Analytics, Google Analytics Individual 
Qualification
"
20361,source/Dmitriy Korenyako.docx,"JUNE 2021
"
20362,source/Dmitriy Korenyako.docx,"Accenture, Digital Skills: User Experience
"
20363,source/Dmitriy Korenyako.docx,"MAY 2020
"
20364,source/Dmitriy Korenyako.docx,"Designer — KupiVIP, Moscow
"
20365,source/Dmitriy Korenyako.docx,"NOVEMBER 2015 - AUGUST 2016
"
20366,source/Dmitriy Korenyako.docx,"Largest Russian flash sales website, backed by Accel, Intel and 
Mangrove
"
20367,source/Dmitriy Korenyako.docx,"•
Designed the website with 1,5 million MAU being the only 
UX/UI designer in the company.
"
20368,source/Dmitriy Korenyako.docx,"•
Accomplished project in a strict deadline timeframe
"
20369,source/Dmitriy Korenyako.docx,"Designer — SpaceBox, Moscow
"
20370,source/Dmitriy Korenyako.docx,"MAY 2014 - OCTOBER 2015
"
20371,source/Dmitriy Korenyako.docx,"Design consultancy specialized in e-commerce and large-scale intranet 
portals
"
20372,source/Dmitriy Korenyako.docx,"•
Designed a CRM for the biggest Russian online library.
"
20373,source/Dmitriy Korenyako.docx,"•
Conceptualized the intranet UI for one of the largest real estate 
companies
"
20374,source/Dmitriy Korenyako.docx,"•
Successfully designed websites for six company clients.
"
20375,source/Dmitriy Korenyako.docx,"EDUCATION
"
20376,source/Dmitriy Korenyako.docx,"Russian Academy
"
20377,source/Dmitriy Korenyako.docx,"of Public Administration, Moscow — Diploma
"
20378,source/Dmitriy Korenyako.docx,"NOVEMBER 2005 - AUGUST 2006
"
20379,source/Dmitriy Korenyako.docx,"Passed final exam with Distinction Television director,
Diploma
"
20380,source/Dmitriy Korenyako.docx,"Moscow State University of Printing Arts, 
Moscow
— Uncompleted
"
20381,source/Dmitriy Korenyako.docx,"SEPTEMBER 1996 - JANUARY 2001
"
20382,source/Dmitriy Korenyako.docx,"Completed 5173 hours towards a BFA.
"
20383,source/Dmitriy Korenyako.docx,"EXPERIENCE (continued)
"
20384,source/Dmitriy Korenyako.docx,"Product Manager — Apartama, Moscow
"
20385,source/Dmitriy Korenyako.docx,"SEPTEMBER 2011 - FEBRUARY 2014
"
20386,source/Dmitriy Korenyako.docx,"Startup, social commerce platform and furnishing marketplace
"
20387,source/Dmitriy Korenyako.docx,"•
Initiated and completed redesign that led to a 5% (1:20) conversion.
"
20388,source/Dmitriy Korenyako.docx,"•
Boosted number of user registrations, increased customer purchases by 34%
"
20389,source/Dmitriy Korenyako.docx,"•
Progressed with the company's growth, beginning as a designer and promoted to 
product manager.
"
20390,source/Dmitriy Korenyako.docx,"•
Spearheaded a cross-functional team of 5.
"
20391,source/Dmitriy Korenyako.docx,"Lead Web Designer — KM, Moscow
"
20392,source/Dmitriy Korenyako.docx,"SEPTEMBER 2010 - AUGUST 2011
"
20393,source/Dmitriy Korenyako.docx,"The oldest Russian news portal and encyclopedia
"
20394,source/Dmitriy Korenyako.docx,"•
Led redesign of the main website with 3+ million MAU
"
20395,source/Dmitriy Korenyako.docx,"•
Created 120+ unique pages ahead of schedule.
"
20396,source/Dmitriy Korenyako.docx,"Designer — RBC Soft, Moscow
"
20397,source/Dmitriy Korenyako.docx,"AUGUST 2009 - SEPTEMBER 2010
"
20398,source/Dmitriy Korenyako.docx,"Major Russian software company, part of RBC (RosBusinessConsulting) media group
"
20399,source/Dmitriy Korenyako.docx,"•
Designed Russian government websites for Ministry of Telecom and Mass Communications, 
Ministry of Economic Development and Federal Service for Supervision in Education and 
Science.
"
20400,source/Dmitriy Korenyako.docx,"•
Developed numerous PowerPoint decks which helped to secure over $5
million in funding and investments.
"
20401,source/Dmitriy Korenyako.docx,"Designer, DJEM Solutions, Moscow
"
20402,source/Dmitriy Korenyako.docx,"OCTOBER 2007 – MARCH 2009
"
20403,source/Dmitriy Korenyako.docx,"Art Director, BCD Group, Moscow
"
20404,source/Dmitriy Korenyako.docx,"MAY 2003 – SEPTEMBER 2007
"
20405,source/Dmitriy Korenyako.docx,"Art Director, New Publishing Projects, Moscow
"
20406,source/Dmitriy Korenyako.docx,"JULY 2002 – MAY 2003
"
20407,source/Dmitriy Korenyako.docx,"Web Designer, EuroAddress, Moscow
"
20408,source/Dmitriy Korenyako.docx,"OCTOBER 2001 – JUNE 2002
"
20409,source/Dmitriy Korenyako.docx,"Designer, Gazeta.ru, Moscow
"
20410,source/Dmitriy Korenyako.docx,"SEPTEMBER 1999 – OCTOBER 2001
"
20411,source/Dmitriy Korenyako.docx,"Web Designer, Triumvirate, Moscow
"
20412,source/Dmitriy Korenyako.docx,"OCTOBER 1998 — MAY 1999
"
20413,source/Dmitriy Korenyako.docx,"Game Artist, ElectroTECH Multimedia, Moscow
"
20414,source/Dmitriy Korenyako.docx,"SEPTEMBER 1997 — MARCH 1998
"
20415,source/Alexey Melnichnikov.pdf,"  
Alexey Melnichnikov 
"
20416,source/Alexey Melnichnikov.pdf,"Software Engineer 
"
20417,source/Alexey Melnichnikov.pdf," 
"
20418,source/Alexey Melnichnikov.pdf,"Address Moscow, Moscow, 125310 
"
20419,source/Alexey Melnichnikov.pdf,"Phone 77777777777777 
"
20420,source/Alexey Melnichnikov.pdf,"E-mail example@gmail.com 
"
20421,source/Alexey Melnichnikov.pdf,"LinkedIn https://linkedin.com/in/ 
"
20422,source/Alexey Melnichnikov.pdf," 
 
 
"
20423,source/Alexey Melnichnikov.pdf,"An experienced software engineer with expertise in back-end development of large-scale and projects 
"
20424,source/Alexey Melnichnikov.pdf,"from the ground-up to runtime. Skilled in directing development with creative and performance-oriented 
"
20425,source/Alexey Melnichnikov.pdf,"approach. A team player with leadership and mentorship experience, close collaboration with businesses 
to meet the needs of end users. 
"
20426,source/Alexey Melnichnikov.pdf," 
"
20427,source/Alexey Melnichnikov.pdf,"Skills 
"
20428,source/Alexey Melnichnikov.pdf,"Languages: Java, Kotlin, Groovy 
"
20429,source/Alexey Melnichnikov.pdf,"RDBMS: PostgreSQL, Oracle 
"
20430,source/Alexey Melnichnikov.pdf,"NoSQL: MongoDB, Cassandra, Clickhouse, Elasticsearch, Hazelcast, Infinispan 
"
20431,source/Alexey Melnichnikov.pdf," 
"
20432,source/Alexey Melnichnikov.pdf,"Techs: Spring (Core, Cloud, Boot), ORMS (Hibernate, MyBatis), Java specs ( JMS, JAX-RS, JAX-WS), 
"
20433,source/Alexey Melnichnikov.pdf,"JUnit, Spock, Testcontainers, GraphQL, Vert.X, Kafka, RabbitMQ, Docker (Swarm, Compose), 
"
20434,source/Alexey Melnichnikov.pdf,"Proxmox VE, SOA/REST/Web Services, WebSockets 
"
20435,source/Alexey Melnichnikov.pdf,"Tools: Jira, GitHub, BitBucket, GitLab, TeamCity, Ansible 
"
20436,source/Alexey Melnichnikov.pdf,"VCS: Git, Svn, Mercurial (HG) 
"
20437,source/Alexey Melnichnikov.pdf,"Methodology : Agile, Scrum, Kanban, TDD 
"
20438,source/Alexey Melnichnikov.pdf,"Web Servers: Nginx, Tomcat, Netty, Jetty 
"
20439,source/Alexey Melnichnikov.pdf,"Work History 
"
20440,source/Alexey Melnichnikov.pdf," 
"
20441,source/Alexey Melnichnikov.pdf,"Mar 2019 - 
"
20442,source/Alexey Melnichnikov.pdf,"Current 
"
20443,source/Alexey Melnichnikov.pdf,"Software Engineer 
"
20444,source/Alexey Melnichnikov.pdf,"Mail.ru Group, Moscow 
"
20445,source/Alexey Melnichnikov.pdf,"Project: Financial marketplace for entrepreneurs развивай.рф (razvivai.rf) 
Accomplishments: 
"
20446,source/Alexey Melnichnikov.pdf,"Implemented MWP and shipped it to production for 4 months. 
"
20447,source/Alexey Melnichnikov.pdf,"Developed system architecture. 
"
20448,source/Alexey Melnichnikov.pdf,"Profiled and tuned up all JVM apps. As a result, decreased the price of 
"
20449,source/Alexey Melnichnikov.pdf,"infrastructure by two. 
"
20450,source/Alexey Melnichnikov.pdf,"Techs: Java, Kotlin, Groovy, PostgreSQL(debezium), Docker Swarm (migration process 
"
20451,source/Alexey Melnichnikov.pdf," 
 
"
20452,source/Alexey Melnichnikov.pdf,"May 2017 - 
"
20453,source/Alexey Melnichnikov.pdf,"Apr 2020 
"
20454,source/Alexey Melnichnikov.pdf," 
 
 
 
 
 
 
 
 
 
 
 
"
20455,source/Alexey Melnichnikov.pdf,"Apr 2016 - 
"
20456,source/Alexey Melnichnikov.pdf,"Mar 2019 
"
20457,source/Alexey Melnichnikov.pdf," 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
"
20458,source/Alexey Melnichnikov.pdf,"Jul 2014 - 
"
20459,source/Alexey Melnichnikov.pdf,"Apr 2016 
"
20460,source/Alexey Melnichnikov.pdf,"to Kubernetes), Kafka. 
"
20461,source/Alexey Melnichnikov.pdf,"Lead Software Engineer 
"
20462,source/Alexey Melnichnikov.pdf,"Divico LLC, Moscow 
"
20463,source/Alexey Melnichnikov.pdf,"Project: Internal bloggers search platform. Team lead, a distributed team of 5. 
Accomplishments: 
"
20464,source/Alexey Melnichnikov.pdf,"Created infrastructure from scratch using Proxmox virtualization and Docker. 
Organized code review process. 
Official Beta version was shipped on time. 
"
20465,source/Alexey Melnichnikov.pdf,"Created analytics dataflow of YouTube, Instagram, VK bloggers, which helped to 
"
20466,source/Alexey Melnichnikov.pdf,"analyze trends in social networks. That highly increased marketing revenue. 
Created report management which automated major part of manual labour of 
some departments. 
"
20467,source/Alexey Melnichnikov.pdf,"Techs: Java, Scala, PostgreSQL, Clickhouse, Cassandra, Docker Swarm, RabbitMQ, 
Spring Dataflow, Elasticsearch. 
"
20468,source/Alexey Melnichnikov.pdf,"Software Engineer 
"
20469,source/Alexey Melnichnikov.pdf,"Nexign, Moscow 
"
20470,source/Alexey Melnichnikov.pdf,"Projects: 
"
20471,source/Alexey Melnichnikov.pdf,"MegaFon( tier 1 telecom operator ) customer portal API, Billing API, Push 
"
20472,source/Alexey Melnichnikov.pdf,"notifications API, support chat service. 
Opensource template engine development https://github.com/MegafonWebLab 
/histone-java2 
"
20473,source/Alexey Melnichnikov.pdf,"Billing Platform, API Gateway service 
"
20474,source/Alexey Melnichnikov.pdf,"Accomplishments: 
"
20475,source/Alexey Melnichnikov.pdf,"Orchestrated efficient large-scale software deployments, including testing 
features, correcting code and code reviewing. 
"
20476,source/Alexey Melnichnikov.pdf,"I designed and developed a support chat that facilitated communication with 
end users. 
Contributed to Histone2 template engine. 
"
20477,source/Alexey Melnichnikov.pdf,"Main developer of API Gateway service, which served as main API composition 
"
20478,source/Alexey Melnichnikov.pdf,"layer in new Billing platform. Assisted with the interviewing and hiring of software 
engineers. 
"
20479,source/Alexey Melnichnikov.pdf,"Techs: Java, Vert.x, MongonDB, PostgreSQL, RabbitMQ, Zookeeper, Docker Swarm. 
"
20480,source/Alexey Melnichnikov.pdf,"Software Engineer 
"
20481,source/Alexey Melnichnikov.pdf,"Eldorado LLC, Moscow 
"
20482,source/Alexey Melnichnikov.pdf,"Projects: Online store eldorado.ru and mobile application for employees. 
Accomplishments: 
"
20483,source/Alexey Melnichnikov.pdf,"Took a significant part in the development of online platform on SAP Hybris 
platform. 
Rewrote PL/SQL business logic to Java API. 
Created a mobile application using Apache Cordova. 
"
20484,source/Alexey Melnichnikov.pdf,"Techs: Java, JS(Apache Cordova), Oracle. 
"
20485,source/Alexey Melnichnikov.pdf," 
"
20486,source/Alexey Melnichnikov.pdf,"Education 
"
20487,source/Alexey Melnichnikov.pdf," 
"
20488,source/Alexey Melnichnikov.pdf,"Sep 2007 - 
"
20489,source/Alexey Melnichnikov.pdf,"Jun 2013 
"
20490,source/Alexey Melnichnikov.pdf,"Master of Science: Electrical And Electronics Engineering 
Moscow Aviation Institute - Moscow 
"
20491,source/Alexey Melnichnikov.pdf," 
"
20492,source/Alexey Melnichnikov.pdf,"Certifications 
"
20493,source/Alexey Melnichnikov.pdf,"Sep 2016 
Coursera Course Certificates: Functional Programming Principles in Scala 
"
20494,source/Alexey Melnichnikov.pdf," 
"
20495,source/Alexey Melnichnikov.pdf,"Mar 2017 
Coursera Course Certificates: Functional Program Design in Scala 
"
20496,source/Alexey Melnichnikov.pdf," 
"
20497,source/Alexey Melnichnikov.pdf,"Apr 2017 
Coursera Course Certificates: Parallel programming 
"
20498,source/Pavel Egorov .pdf," 
 
"
20499,source/Pavel Egorov .pdf,"anonymous@gmail.com 
+38(000)000 00 00 
 
"
20500,source/Pavel Egorov .pdf,"EDUCATION 
"
20501,source/Pavel Egorov .pdf,"Pavel Egorov 
"
20502,source/Pavel Egorov .pdf," 
 
"
20503,source/Pavel Egorov .pdf,"Languages: 
"
20504,source/Pavel Egorov .pdf,"Python, C, Java, HTML, CSS 
"
20505,source/Pavel Egorov .pdf,"English               
"
20506,source/Pavel Egorov .pdf,"B2+ (Upper-Intermediate) 
"
20507,source/Pavel Egorov .pdf,"Bachelor of Computer Science at Ukrainian Catholic University 
"
20508,source/Pavel Egorov .pdf," 
"
20509,source/Pavel Egorov .pdf,"Relevant courses: Algorithms & Data Structures, Computer System Architecture, 
Object-Oriented Programming, Probability & Statistics, Python Programming, 
Mathematical analysis, Discrete Mathematics. 
"
20510,source/Pavel Egorov .pdf,"EXPERIENCE 
"
20511,source/Pavel Egorov .pdf,"Expected graduation: 
"
20512,source/Pavel Egorov .pdf,"July 2023 
"
20513,source/Pavel Egorov .pdf,"GPA: 93.81/100 
"
20514,source/Pavel Egorov .pdf," 
Python Developer 
March - May 2020 
"
20515,source/Pavel Egorov .pdf,"Project “Emotion Detector” 
Lviv, Ukraine 
"
20516,source/Pavel Egorov .pdf,"● Created a project for my term work at the university that helps Twitter users determine their mood and 
"
20517,source/Pavel Egorov .pdf,"emotions 
"
20518,source/Pavel Egorov .pdf,"● Increased people awareness of their emotional state; reduced the number of depressions and other mental 
"
20519,source/Pavel Egorov .pdf,"illnesses 
"
20520,source/Pavel Egorov .pdf,"● Implemented it using Python; evaluated the mood of Twitter users by Natural Language Processing; 
"
20521,source/Pavel Egorov .pdf,"worked with Database and Twitter API 
"
20522,source/Pavel Egorov .pdf,"● Developed a web application using HTML, CSS, Flask and Dash; hosted it by Pythonanywhere service 
"
20523,source/Pavel Egorov .pdf,"Python Teacher 
March 2020 
"
20524,source/Pavel Egorov .pdf,"CoderDojo 
Lviv, Ukraine 
"
20525,source/Pavel Egorov .pdf,"● Communicated with a group of children and explained to them the basics of Python 
● Involved children and youth in learning programming; increased their knowledge about technical tools, 
"
20526,source/Pavel Egorov .pdf,"programming languages and opportunities for IT education 
"
20527,source/Pavel Egorov .pdf,"● Taught students to create their own programs and projects 
"
20528,source/Pavel Egorov .pdf,"TECHNICAL SKILLS 
 
"
20529,source/Pavel Egorov .pdf,"● Python (NLP, NLTK, JSON, plotly, matplotlib, PEP 8 standard of coding) 
● C, Java, HTML, CSS 
● Web Development (Flask, Dash, Pythonanywhere hosting) 
● API knowledge, Git, PyCharm, VS Code, CLion, IntelliJ IDEA. 
"
20530,source/Pavel Egorov .pdf," 
"
20531,source/Pavel Egorov .pdf,"AWARDS AND ACTIVITIES 
"
20532,source/Pavel Egorov .pdf," 
"
20533,source/Pavel Egorov .pdf,"● Won a scholarship for tuition fees for Bachelor studies based on academic and leadership rewards 
● Won in Synchro Space Hackathon with a project aimed to triple the use of bicycles on the island of 
"
20534,source/Pavel Egorov .pdf,"Khortytsia in Ukraine 
"
20535,source/Pavel Egorov .pdf,"● Participated in ICPC (International Collegiate Programming Contest) 
● Participate in University Parliament where working in a team and creating projects to improve the lives of 
"
20536,source/Pavel Egorov .pdf,"students 
"
20537,source/Pavel Egorov .pdf,"● Volunteer at Lviv Regional Youth Center (July 2018 - Present) where organize social projects for young 
"
20538,source/Pavel Egorov .pdf,"people, contribute to local and national forums and events 
"
20539,source/Pavel Egorov .pdf,"● Spoke on youth lectures about communication skills and opportunities in small cities 
● Volunteered in an orphanage and in a home for the elderly 
● Volunteered at Lviv IT Arena (September 2019), Book Forum Lviv (May 2018 and September 2018), Lviv 
"
20540,source/Pavel Egorov .pdf,"Oratory Open (June 2018) 
"
20541,source/Fedor Shulyak.pdf,"Fedor Shulyak 
"
20542,source/Fedor Shulyak.pdf,"DevOps Engineer 
 
 
 
"
20543,source/Fedor Shulyak.pdf,"Address 
Cambridge, United Kingdom 
"
20544,source/Fedor Shulyak.pdf,"Email 
shaaak11111@gmail.com 
"
20545,source/Fedor Shulyak.pdf,"Phone 
+447795877777 
"
20546,source/Fedor Shulyak.pdf," 
 
"
20547,source/Fedor Shulyak.pdf," 
01 PROFILE 
I am an IT professional over 6 years of experience, mostly as a DevOps Engineer. I have deep 
"
20548,source/Fedor Shulyak.pdf,"experience with various AWS services such as EC2 / RDS / DynamoDB / VPC / Route53 / 
"
20549,source/Fedor Shulyak.pdf,"EKS /S3 / ActiveMQ /Lambda / IAM / Cloudformation, etc. Also, I am proficient with Docker and 
"
20550,source/Fedor Shulyak.pdf,"Kubernetes for containerization tasks as well as Terraform as Infrastructure as Code tasks. Have 
"
20551,source/Fedor Shulyak.pdf,"hands-on experience with Ansible and Chef as configuration management tools, Python, and 
"
20552,source/Fedor Shulyak.pdf,"Shell for scripting means. Computer network experience. 
"
20553,source/Fedor Shulyak.pdf," 
 
"
20554,source/Fedor Shulyak.pdf,"02 SKILLS 
Infrastructure as Code (IaC) 
"
20555,source/Fedor Shulyak.pdf,"Continuous Integration (CI) 
"
20556,source/Fedor Shulyak.pdf,"Terraform 
"
20557,source/Fedor Shulyak.pdf,"Kubernetes (k8s) 
"
20558,source/Fedor Shulyak.pdf,"Docker 
"
20559,source/Fedor Shulyak.pdf,"Ansible 
"
20560,source/Fedor Shulyak.pdf,"Chef 
"
20561,source/Fedor Shulyak.pdf,"Jenkins 
"
20562,source/Fedor Shulyak.pdf,"Teamcity 
"
20563,source/Fedor Shulyak.pdf,"Gitlab-CI 
"
20564,source/Fedor Shulyak.pdf,"Prometheus 
"
20565,source/Fedor Shulyak.pdf,"Amazon AWS 
"
20566,source/Fedor Shulyak.pdf,"Microsoft Azure 
"
20567,source/Fedor Shulyak.pdf,"Python Scripting 
"
20568,source/Fedor Shulyak.pdf,"Shell Scripting 
"
20569,source/Fedor Shulyak.pdf,"Computer Networks 
"
20570,source/Fedor Shulyak.pdf,"Linux 
"
20571,source/Fedor Shulyak.pdf,"Nginx 
"
20572,source/Fedor Shulyak.pdf,"Splunk 
"
20573,source/Fedor Shulyak.pdf," 
03 EMPLOYMENT HISTORY 
"
20574,source/Fedor Shulyak.pdf," 
 
"
20575,source/Fedor Shulyak.pdf,"09/2019 — Present 
DevOps Engineer at Gearset 
Cambridge, United 
"
20576,source/Fedor Shulyak.pdf,"Kingdom 
"
20577,source/Fedor Shulyak.pdf," 
"
20578,source/Fedor Shulyak.pdf,"• Maintenance and development of high-load Kubernetes cluster hosted in AWS (kops / 
"
20579,source/Fedor Shulyak.pdf,"EKS). 
"
20580,source/Fedor Shulyak.pdf,"• Design and maintenance of application build, test, and infrastructure CI pipelines (python, 
"
20581,source/Fedor Shulyak.pdf,"bash, Teamcity). 
"
20582,source/Fedor Shulyak.pdf,"• Development of automated scripts for security and infrastructure control (using python and 
"
20583,source/Fedor Shulyak.pdf,"AWS Lambda). 
"
20584,source/Fedor Shulyak.pdf,"• Configured routine platform security audit (OWASP). 
"
20585,source/Fedor Shulyak.pdf,"• Close work with developers to provide necessary consultation about integration platform 
"
20586,source/Fedor Shulyak.pdf,"features and application itself. 
"
20587,source/Fedor Shulyak.pdf," 
"
20588,source/Fedor Shulyak.pdf," 
"
20589,source/Fedor Shulyak.pdf,"04/2019 — 09/2019 
Site Reliability Engineer at Accenture 
Riga, Latvia 
"
20590,source/Fedor Shulyak.pdf,"• Support of huge high-load development platform based on docker-swarm including 
"
20591,source/Fedor Shulyak.pdf,"multiple applications (Jira / Confluence / Jenkins / Gitlab / BitBucket / Selenium / Artifactory 
"
20592,source/Fedor Shulyak.pdf,"/ Nexus, etc.). 
"
20593,source/Fedor Shulyak.pdf,"• Managing AWS stack infrastructure using Cloudformation and Terraform. 
"
20594,source/Fedor Shulyak.pdf,"• Configuration and system management using Ansible. 
"
20595,source/Fedor Shulyak.pdf," 
 
"
20596,source/Fedor Shulyak.pdf," 
"
20597,source/Fedor Shulyak.pdf,"04/2018 — 04/2019 
DevOps Engineer at Accenture 
Riga, Latvia 
"
20598,source/Fedor Shulyak.pdf," 
"
20599,source/Fedor Shulyak.pdf,"• DevOps team lead and team management. 
"
20600,source/Fedor Shulyak.pdf,"• Developed an isolated continuous integration production system for the client (based on 
"
20601,source/Fedor Shulyak.pdf,"Kubernetes and python automation). 
"
20602,source/Fedor Shulyak.pdf,"• Support of development processes with a configuration of CI/CD jobs and pipelines in 
"
20603,source/Fedor Shulyak.pdf,"Jenkins and GitLab-CI. Configuration and maintain docker images build pipelines and 
"
20604,source/Fedor Shulyak.pdf,"deployment processes to different environments. 
"
20605,source/Fedor Shulyak.pdf,"• System and configuration management using Chef. 
"
20606,source/Fedor Shulyak.pdf,"• Python and shell scripts development. 
"
20607,source/Fedor Shulyak.pdf," 
 
 
"
20608,source/Fedor Shulyak.pdf,"11/2017 — 04/2018 
DevOps Lead at SolbegSoft 
Minsk, Belarus 
"
20609,source/Fedor Shulyak.pdf," 
"
20610,source/Fedor Shulyak.pdf,"• Design and management of the company infrastructure and networks (Mikrotik / HP / 
"
20611,source/Fedor Shulyak.pdf,"Juniper / oVirt / VMWare / Windows Server / Active Directory ). 
"
20612,source/Fedor Shulyak.pdf,"• Achieved high redundancy of the company infrastructure. 
"
20613,source/Fedor Shulyak.pdf,"• Created fluent internal workflows, and implemented DevOps practices for many internal 
"
20614,source/Fedor Shulyak.pdf,"teams. 
"
20615,source/Fedor Shulyak.pdf,"• DevOps team training planning. 
"
20616,source/Fedor Shulyak.pdf,"• Improvement of internal company servers and network infrastructure. 
"
20617,source/Fedor Shulyak.pdf,"• Developed automated CI system for client dynamic websites hosted in AWS using Ansible, 
"
20618,source/Fedor Shulyak.pdf,"python and bash. 
"
20619,source/Fedor Shulyak.pdf," 
"
20620,source/Fedor Shulyak.pdf," 
"
20621,source/Fedor Shulyak.pdf,"03/2017 — 10/2017 
DevOps Engineer at SolbegSoft 
Minsk, Belarus 
"
20622,source/Fedor Shulyak.pdf," 
"
20623,source/Fedor Shulyak.pdf,"• Configuration and maintenance of the high-load web cluster based on the NixOps 
"
20624,source/Fedor Shulyak.pdf,"configuration management and deployment system (Nixops / NixOS / Teamcity / AWS 
"
20625,source/Fedor Shulyak.pdf,"RDS). 
"
20626,source/Fedor Shulyak.pdf,"• Configuration of various CI/CD pipelines using Teamcity (for .Net / PHP / JS etc.). 
"
20627,source/Fedor Shulyak.pdf,"• Design and configuration from scratch web-cluster using Ansible, Terraform and AWS 
"
20628,source/Fedor Shulyak.pdf,"stack. Configuration docker images build for .Net Core-based project. 
"
20629,source/Fedor Shulyak.pdf,"• Configuration of virtualization Hyper-V and oVirt based failover cluster for internal company 
"
20630,source/Fedor Shulyak.pdf,"infrastructure. 
"
20631,source/Fedor Shulyak.pdf,"• Provisioning and maintenance of servers and networks in code-driven infrastructure (AWS) 
"
20632,source/Fedor Shulyak.pdf,"LAN hardware configuration (HP/Mikrotik) using Terraform and Ansible. 
"
20633,source/Fedor Shulyak.pdf," 
"
20634,source/Fedor Shulyak.pdf," 
"
20635,source/Fedor Shulyak.pdf,"09/2016 — 03/2017 
DevOps Engineer at Esodin.by 
Minsk, Belarus 
"
20636,source/Fedor Shulyak.pdf," 
"
20637,source/Fedor Shulyak.pdf,"• Maintenance of the web cluster hosted in AWS using Ansible, Terraform. 
"
20638,source/Fedor Shulyak.pdf,"• Provisioning and support servers, networks hosted in AWS using Terraform. 
"
20639,source/Fedor Shulyak.pdf,"• Design and configuration of continuous integration pipelines in TeamCity. 
"
20640,source/Fedor Shulyak.pdf,"• Configuration and maintenance of .Net Core dockerized microservice system. 
"
20641,source/Fedor Shulyak.pdf,"01/2016 — 08/2016 
System Administrator at Esodin.by 
Minsk, Belarus 
"
20642,source/Fedor Shulyak.pdf," 
"
20643,source/Fedor Shulyak.pdf,"• Technical user support. 
"
20644,source/Fedor Shulyak.pdf,"• LAN laying and installation. 
"
20645,source/Fedor Shulyak.pdf,"• Installation and configuration of services (Active Directory, DHCP, DNS, Samba) based 
"
20646,source/Fedor Shulyak.pdf,"on Windows Server family systems. 
"
20647,source/Fedor Shulyak.pdf,"• High-availability file server configuration using a Debian-based server system with smb 
"
20648,source/Fedor Shulyak.pdf,"protocol and authorization using Active Directory. 
"
20649,source/Fedor Shulyak.pdf,"• Network security configuration with the Kerio gateway system. 
"
20650,source/Fedor Shulyak.pdf,"• Design and support of the Qemu-KVM virtualization cluster for company infrastructure. 
"
20651,source/Fedor Shulyak.pdf,"• Incident management using centralized monitoring and alerting system (Zabbix). 
"
20652,source/Fedor Shulyak.pdf," 
"
20653,source/Fedor Shulyak.pdf,"10/2013 — 08/2015 
System Administrator at School of Business and 
Management of Technology of BSU 
"
20654,source/Fedor Shulyak.pdf,"Minsk, Belarus 
"
20655,source/Fedor Shulyak.pdf,"• LAN layout and installation. 
"
20656,source/Fedor Shulyak.pdf,"• Design, monitoring, and maintenance of LAN based on Cisco vendor equipment. 
"
20657,source/Fedor Shulyak.pdf,"• User technical support. 
"
20658,source/Fedor Shulyak.pdf,"• Configuration of distributed Active Directory federation. 
"
20659,source/Fedor Shulyak.pdf,"• Support of VMware based hypervisor cluster. 
"
20660,source/Fedor Shulyak.pdf,"• The number of supported hosts is about 150. 
"
20661,source/Fedor Shulyak.pdf," 
"
20662,source/Fedor Shulyak.pdf," 
04 COURSES 
"
20663,source/Fedor Shulyak.pdf," 
"
20664,source/Fedor Shulyak.pdf,"Sep 2016 — Nov 2016 
CCNA 1 Introduction to Networks 
"
20665,source/Fedor Shulyak.pdf," 
 
"
20666,source/Fedor Shulyak.pdf,"Dec 2016 — Feb 2017 
CCNA 2 Routing and Switching Essentials 
"
20667,source/Fedor Shulyak.pdf," 
 
"
20668,source/Fedor Shulyak.pdf,"Mar 2017 — Apr 2017 
CCNA 3 Scaling Network 
"
20669,source/Fedor Shulyak.pdf," 
 
"
20670,source/Fedor Shulyak.pdf,"Apr 2017 — Jun 2019 
CCNA 4 Advanced Network 
"
20671,source/Stas Sergeev.docx,"S
tas Sergeev
"
20672,source/Stas Sergeev.docx,"Stas@mail.ru
"
20673,source/Stas Sergeev.docx,"Summary
"
20674,source/Stas Sergeev.docx,"I am an experienced Flutter developer with one and half year of expertise in developing cross- platform 
apps. I have a strong skill set encompassing widget building, state management, and UI/UX design. My expertise 
extends to integrating APIs and ensuring app performance optimization. I am dedicated to thorough testing, 
debugging, and maintaining to ensure high-quality development.
"
20675,source/Stas Sergeev.docx,"Technical Skills
"
20676,source/Stas Sergeev.docx,"• GetX
• Tests
• REST API
• Git/version control
"
20677,source/Stas Sergeev.docx,"• Bloc
• Navigation
• GraphQL
• SOLID principles
"
20678,source/Stas Sergeev.docx,"• Riverpod
• Firebase
• Hive
• Adaptive Layout
"
20679,source/Stas Sergeev.docx,"Professional Experience
"
20680,source/Stas Sergeev.docx,"IT Solutions Management International
Remote Work
"
20681,source/Stas Sergeev.docx,"Flutter Developer
August 2023 – September 2023
"
20682,source/Stas Sergeev.docx,"•
Developed a cross-platform open source messenger in collaboration with a team of six people to 
define features and enhance the user experience
"
20683,source/Stas Sergeev.docx,"•
Enhanced the app by incorporating new features, which involved writing unit, widget, and end-to-
end tests, adding animations of varying complexity, implementation of essential business logic and 
fixing bugs
"
20684,source/Stas Sergeev.docx,"•
Participated in the app design process to ensure a user-friendly and visually appealing product
"
20685,source/Stas Sergeev.docx,"•
Engaged in code review processes and employed Git version control for code
"
20686,source/Stas Sergeev.docx,"Wordly Games
Remote Work
"
20687,source/Stas Sergeev.docx,"Flutter Developer
March 2023 – July 2023
"
20688,source/Stas Sergeev.docx,"•
Developed and maintained gaming app for guessing words, for both Android and iOS platforms, ensuring 
compatibility and optimal performance
"
20689,source/Stas Sergeev.docx,"•
Collaborated with team of five people to define application features, functionalities, and user 
experience
"
20690,source/Stas Sergeev.docx,"•
Implemented deep link integration, added appropriate routing logic to ensure the app 
correctly handled deep link navigation
"
20691,source/Stas Sergeev.docx,"•
Participated in code reviews and Utilized Git version control for code
"
20692,source/Stas Sergeev.docx,"•
Implemented pixel-perfect screens designed on Figma
"
20693,source/Stas Sergeev.docx,"•
Optimized gaming experience by improving logic in different sections of play
"
20694,source/Stas Sergeev.docx,"Freelance
Remote Work
"
20695,source/Stas Sergeev.docx,"Flutter freelance orders
December 2022 – February 2023
"
20696,source/Stas Sergeev.docx,"•
Worked with RESTful APIs and integrated data from various sources
"
20697,source/Stas Sergeev.docx,"•
Fixed exceptions related to type of variable
"
20698,source/Stas Sergeev.docx,"•
Solved issues regarding to layout overflow
"
20699,source/Stas Sergeev.docx,"•
Improved performance of the apps
"
20700,source/Stas Sergeev.docx,"•
Handled issues with correct display of localization
"
20701,source/Stas Sergeev.docx,"Education
"
20702,source/Stas Sergeev.docx,"Courses:
"
20703,source/Stas Sergeev.docx,"Flutter & Dart - The Complete Guide 
Flutter Foundations
"
20704,source/Stas Sergeev.docx,"English – Upper-intermediate: I can study 
technical documentation in origin language
Russian – Fluent
"
20705,source/Stas Sergeev.docx,"Ulyanovsk Civil Aviation Institute
December 2021
Specialization: Flight operation and Air 
traffic Control
•
Private Pilot License
"
20706,source/Stas Sergeev.docx,"•
Commercial Pilot License
"
20707,source/AHMAT SULEIMENOV.docx,"AHMAT SULEIMENOV
"
20708,source/AHMAT SULEIMENOV.docx,"+971 50 000 9004 ￿ ahmat.suleimenov@nyu.edu ￿ linkedin.com/akaaasuleimenov ￿ 
akaaaleimenov.github.io
"
20709,source/AHMAT SULEIMENOV.docx,"EDUCATION
"
20710,source/AHMAT SULEIMENOV.docx,"New  York  University  Abu  Dhabi
Expected May 2024
"
20711,source/AHMAT SULEIMENOV.docx,"B.S. of Computer Science and Mathematics
GPA: 
3.88/4.00 Relevant Coursework: Software Engineering, Computer Systems Organizations, Algorithms,
Data Structures, Autonomous and Social Robots, iOS University
"
20712,source/AHMAT SULEIMENOV.docx,"42 Software Engineering School
Aug 2019 - Aug 2020
"
20713,source/AHMAT SULEIMENOV.docx,"Software Engineering
Fremont, CA
"
20714,source/AHMAT SULEIMENOV.docx,"• Implemented 10+ C library functions
• Taught 50+ new students the foundation of C programming language and terminal usage
• Built a fully working copy of the shell
"
20715,source/AHMAT SULEIMENOV.docx,"Nazarbayev Intellectual School
Sep 2015 - May 2019
"
20716,source/AHMAT SULEIMENOV.docx,"A-level education in Computer Science, Mathematics, and Physics
GPA:  3.92/4.00
"
20717,source/AHMAT SULEIMENOV.docx,"EXPERIENCE
"
20718,source/AHMAT SULEIMENOV.docx,"Lead  Developer
Jun 2021 - Present
"
20719,source/AHMAT SULEIMENOV.docx,"Impact Admissions
Nur-Sultan, KZ
"
20720,source/AHMAT SULEIMENOV.docx,"• Programmed a bot to modify scores of 98 students and post leader board in telegram and Google Sheets.
• Researched market of 10 Ed Tech companies, compared their gains, and tested their platform on 20 students.
• Developing an admissions prediction platform that analyzes student’s essays, exams, and grades
"
20721,source/AHMAT SULEIMENOV.docx,"Unix  Lab  Tutor
Aug 2021 - Present
"
20722,source/AHMAT SULEIMENOV.docx,"New York University Abu Dhabi
Abu Dhabi, UAE
"
20723,source/AHMAT SULEIMENOV.docx,"• Assisting students with their assignments, CS concepts, and personal tech projects
• Leading CS related workshops on a monthly basis with more than 30 students attending regularly
"
20724,source/AHMAT SULEIMENOV.docx,"PROJECTS
"
20725,source/AHMAT SULEIMENOV.docx,"Fire Fighting Robot  Python/Gearsbot
May 2021 - Jul 2021
"
20726,source/AHMAT SULEIMENOV.docx,"• Constructed a robot system able to detect survivors in burning buildings and clear obstacles in its path
"
20727,source/AHMAT SULEIMENOV.docx,"Virtual  File  System   C++/STL/OOP/Linux/Sorting algorithms
Mar 2021 - Apr 2021
"
20728,source/AHMAT SULEIMENOV.docx,"• Implemented a user-friendly, private file system on C++
• Designed the ability to modify file using Linux commands
"
20729,source/AHMAT SULEIMENOV.docx,"Doodle Jump   Python/Processing
Nov 2020 - Dec 2020
"
20730,source/AHMAT SULEIMENOV.docx,"• Programmed from scratch a Doodle jump game on Processing IDE
"
20731,source/AHMAT SULEIMENOV.docx,"ACTIVITES
"
20732,source/AHMAT SULEIMENOV.docx,"• Google Developers Club - Co-Lead, supervising work of various teams
Aug 2021 - Present
"
20733,source/AHMAT SULEIMENOV.docx,"• ACM ICPC Team - Team Leader, competing in ACM ICPC
Jun 2021 - Present
"
20734,source/AHMAT SULEIMENOV.docx,"• IEEE - Member, competing in IEEEXtreme and hackathons
Dec 2020 - Present
"
20735,source/AHMAT SULEIMENOV.docx,"AWARDS
"
20736,source/AHMAT SULEIMENOV.docx,"• Astana Innovations Challenge Hackathon - Top 2 among 50+ teams
• Republican Mathematics Olympiad Bronze Medalist - Top 15 among 200+ participants
• Future Leaders Exchange Program (FLEX) - Top 2% among 5000+ applicants
"
20737,source/AHMAT SULEIMENOV.docx,"SKILLS
"
20738,source/AHMAT SULEIMENOV.docx,"• Programming Languages: Python, C++, C, Dart, JavaScript, HTML/CSS
• Frameworks/Tools: Git, Flutter, SQL, Pandas, Photoshop, Figma
"
20739,source/Kairat KHISAMIEV.pdf,"Kairat KHISAMIEV
"
20740,source/Kairat KHISAMIEV.pdf,"Senior JavaScript Developer with 6 YoE
"
20741,source/Kairat KHISAMIEV.pdf,"aiaa3t@gmail.com • Belgrade, Serbia
"
20742,source/Kairat KHISAMIEV.pdf,"Languages: JavaScript/TypeScript; Technologies: React, React Native, Next.js, Nest, CSS, CSS in JS, Playwright; Databases: PostgreSQL, Mongo,
Elastic, Redis; Other: Docker;
Familiar with: Nuxt, Vue, C++, Go, Kubernetes
"
20743,source/Kairat KHISAMIEV.pdf,"PROFESSIONAL EXPERIENCE
Archetype AI
August 2023 – October 2023
"
20744,source/Kairat KHISAMIEV.pdf,"Full stack Nest, React developer. Archetype AI - multimodal AI foundation model that fuses real-time sensor data with natural language.
"
20745,source/Kairat KHISAMIEV.pdf,"●
Prototyped and implemented a scalable real-time low-latency (under 1 second) camera streaming service for following image processing
with AI tools;
"
20746,source/Kairat KHISAMIEV.pdf,"●
Prototyped an internal streamer’s visualizer for real-time stream playing;
"
20747,source/Kairat KHISAMIEV.pdf,"●
On a very tight schedule unblocked a release of a major product by implementing a scalable real-time low-latency (under 1 second) camera
streaming service providing video feed to AI tools for processing at Archetype AI.
"
20748,source/Kairat KHISAMIEV.pdf,"Technologies: TypeScript, React, Nest, Socket.io, shadcn/ui, jest, vitest, npm.
"
20749,source/Kairat KHISAMIEV.pdf,"Spotnana (Vendor at Akvelon Inc)
February 2022 – August 2023
"
20750,source/Kairat KHISAMIEV.pdf,"Frontend React/React Native developer. Spotnana - Travel-as-a-Service; powers unparalleled global travel experiences.
"
20751,source/Kairat KHISAMIEV.pdf,"●
Reduced app loading time from 400 to 200 milliseconds, improved design consistency and user experience and accessibility by transitioning
an old frontend UI design system to a new MUI 5-based one with lazy components;
"
20752,source/Kairat KHISAMIEV.pdf,"●
Implemented features that gained Spotnana partnerships with Amazon, Walmart, and Meta;
"
20753,source/Kairat KHISAMIEV.pdf,"●
Added extensive telemetry that significantly improved team's effectiveness by providing insights into user experience.
"
20754,source/Kairat KHISAMIEV.pdf,"●
Reduced CI/CD running time from 50 minutes to 30 by optimizing unit tests and sharing best practices with the team;
"
20755,source/Kairat KHISAMIEV.pdf,"●
Increased code test coverage from 80% to 85%;
"
20756,source/Kairat KHISAMIEV.pdf,"●
Improved developer experience and code quality by configuring eslint rules;
"
20757,source/Kairat KHISAMIEV.pdf,"●
Reduced total bundle size for 100kb by removing redux state manager, switching moment to days;
"
20758,source/Kairat KHISAMIEV.pdf,"●
Tightly interacted with a product manager and designer resulting in the implementation of consistent user-friendly UI;
"
20759,source/Kairat KHISAMIEV.pdf,"●
Led a team of 3 developers.
"
20760,source/Kairat KHISAMIEV.pdf,"Technologies: TypeScript, React, React-Native, i18n, react-query, design system, Material UI, lerna, turborepo, jest, react testing library, playwright.
"
20761,source/Kairat KHISAMIEV.pdf,"Rentals-Platform (Vendor at Akvelon Inc)
March 2020 – November 2021
"
20762,source/Kairat KHISAMIEV.pdf,"Full stack Node, React, Vue developer. Rentals-Platform - is the premier online classifieds site for renting recreational vehicles.
"
20763,source/Kairat KHISAMIEV.pdf,"●
Architected, built and supported Dealer and Shopping frontends and backends throughout the app's lifecycle;
"
20764,source/Kairat KHISAMIEV.pdf,"●
Automated the tax rates calculation by integration with Avalara tax calculation service;
"
20765,source/Kairat KHISAMIEV.pdf,"●
Automated the customer support service actions by implementing admin tools for complex booking refund and update scenarios;
"
20766,source/Kairat KHISAMIEV.pdf,"●
Assisted in the migration of 100 new customers to the rentals platform by migrating databases and continuously syncing databases from third-
party services;
"
20767,source/Kairat KHISAMIEV.pdf,"●
Led a team of 3 developers.
"
20768,source/Kairat KHISAMIEV.pdf,"Technologies: JavaScript/TypeScript, Next.js, Nest, Nuxt, AWS Functions, S3, Mongo, PostgreSQL, Hasura, Elastic Search, Kibana, Bootstrap,
Material UI Core, MobX, Vuex.
"
20769,source/Kairat KHISAMIEV.pdf,"Maana (Vendor at Akvelon Inc)
May 2019 – March 2020
"
20770,source/Kairat KHISAMIEV.pdf,"Frontend React developer. Maana - solution for Oil and Gas companies to optimize their data with intelligent systems
"
20771,source/Kairat KHISAMIEV.pdf,"●
Implemented a real-time data analyzing tool and notification system using Material-UI;
"
20772,source/Kairat KHISAMIEV.pdf,"●
Helped gain a new partnership by implementing MS Azure SSO which was a keystone requirement of the new
"
20773,source/Kairat KHISAMIEV.pdf,"client. Technologies: JavaScript/TypeScript, React, React-Apollo, Material UI.
"
20774,source/Kairat KHISAMIEV.pdf,"National energy company (Vendor at Optisoft)
January 2018 – May 2019
"
20775,source/Kairat KHISAMIEV.pdf,"Full-stack NET Developer/React developer. Project for real-time fleet management of over 1000 cars.
"
20776,source/Kairat KHISAMIEV.pdf,"●
Architected and built REST API and database structure;
"
20777,source/Kairat KHISAMIEV.pdf,"●
Automated entire business operational workflow: booking vehicles, maintaining vehicles, and budget
"
20778,source/Kairat KHISAMIEV.pdf,"calculation. Technologies: JavaScript, C#, React, Redux, Asp net core, EF core, Postgresql.
"
20779,source/Kairat KHISAMIEV.pdf,"CERTIFICATION
"
20780,source/Kairat KHISAMIEV.pdf,"AWS Certified Cloud Practioner, Amazon Web Services, Dec 2021, Certification ID: GJRNHZDDFJEEQ69S
"
20781,source/Kairat KHISAMIEV.pdf,"EDUCATION
"
20782,source/Kairat KHISAMIEV.pdf,"Bachelor's Degree in Applied Computer Science Kazan National Research Technical University named after A. N. Tupolev.
"
20783,source/Evgenii Kalinin.pdf,"Evgenii Kalinin 
"
20784,source/Evgenii Kalinin.pdf,"MyHomeCity, Ohio | 513-000-0000 | xxxxxxx@gmail.com | https://www.linkedin.com/in/xxxxxxxxxx/ 
"
20785,source/Evgenii Kalinin.pdf," 
SUMMARY 
"
20786,source/Evgenii Kalinin.pdf,"IT professional with more than 15 years of experience in the field. Quick learner. Has a wide variety of skills in 
networking, IT infrastructure, operating systems, virtualization, cloud technologies, databases, system design, 
deployment automation, monitoring and more. Adept at utilizing consistent and organized practices to 
achieve company goals, even in high-pressure environments. 
"
20787,source/Evgenii Kalinin.pdf," 
PROFESSIONAL EXPERIENCE 
"
20788,source/Evgenii Kalinin.pdf," 
Technical Operations Manager | MyCurrentCompany | MyHomeCity, OH 
July 2019 – Current 
"
20789,source/Evgenii Kalinin.pdf,"• Led 7 projects from Managed Services Operations side through the entire project life cycle, successfully 
"
20790,source/Evgenii Kalinin.pdf,"meeting SLA conditions. 
"
20791,source/Evgenii Kalinin.pdf,"• Implemented changes to the monitoring systems that resulted in reduction of the number of incidents by 
"
20792,source/Evgenii Kalinin.pdf,"20%. 
"
20793,source/Evgenii Kalinin.pdf,"• Made improvements to the alert management process that decreased the number of monitoring events 
"
20794,source/Evgenii Kalinin.pdf,"by 70% and reduced LOE for the L1 support team accordingly. 
"
20795,source/Evgenii Kalinin.pdf,"• Prepared detailed technical plans and instructions for engineering teams conducting maintenance 
"
20796,source/Evgenii Kalinin.pdf,"windows. 
"
20797,source/Evgenii Kalinin.pdf,"• Designed and implemented components for large-scale systems, including but not limited to: network 
"
20798,source/Evgenii Kalinin.pdf,"design, load balancing, capacity planning, performance analysis, disaster recovery, CI/CD, autoscaling. 
"
20799,source/Evgenii Kalinin.pdf,"• Worked on triage, investigation and resolution of Production incidents. 
• Guided, coached and lead project teams, delegating tasks and evaluating performance and progression of 
"
20800,source/Evgenii Kalinin.pdf,"project pace. 
"
20801,source/Evgenii Kalinin.pdf," 
Lead IT Engineer | MyCurrentCompany 
January 2017 – July 2019 
"
20802,source/Evgenii Kalinin.pdf,"• Implemented monitoring systems and performance analysis tools based on Prometheus, Victoria Metrics, 
"
20803,source/Evgenii Kalinin.pdf,"Grafana, ICINGA. 
"
20804,source/Evgenii Kalinin.pdf,"• Implemented deployment automation processes based on GitLab CI, Ansible, AWX, Jenkins, Rundeck and 
"
20805,source/Evgenii Kalinin.pdf,"other automation solutions. 
"
20806,source/Evgenii Kalinin.pdf,"• Developed Bash and Python wrappers for legacy automation jobs and monitoring tools. 
• Supported migration of legacy solutions to environments based on Docker and Kubernetes. 
• Organized migration of software solutions to virtualized environments based on KVM, Hyper-V, VMWare. 
"
20807,source/Evgenii Kalinin.pdf," 
IT Engineer | MyCurrentCompany 
April 2014 – January 2017 
"
20808,source/Evgenii Kalinin.pdf,"• Utilized knowledge of Linux operating system, network equipment and protocols to perform 
"
20809,source/Evgenii Kalinin.pdf,"administration, performance analysis and troubleshooting of large-scale software solutions in Production 
and Non-Production environments. 
"
20810,source/Evgenii Kalinin.pdf,"• Acquired experience in administration and troubleshooting of systems based on Linux, Weblogic, Java, 
"
20811,source/Evgenii Kalinin.pdf,"Oracle DB, Oracle RAC. 
"
20812,source/Evgenii Kalinin.pdf,"• Developed Bash and Python scripts to automate day-to-day activities of Managed Services Operations 
"
20813,source/Evgenii Kalinin.pdf,"team. 
"
20814,source/Evgenii Kalinin.pdf,"• Supported implementation of new ticketing systems based on Jira. 
"
20815,source/Evgenii Kalinin.pdf,"Head of Network Operations Department | MyExCompany | Saratov, Russian Federation February 2012 – April 2014 
"
20816,source/Evgenii Kalinin.pdf,"• Completed migration of the backbone network nodes in regional data centers from Cisco 7200 series to 
"
20817,source/Evgenii Kalinin.pdf,"Cisco ASR 9000 series 
"
20818,source/Evgenii Kalinin.pdf,"• Implemented new network monitoring and incident management strategies with proactive approach. 
"
20819,source/Evgenii Kalinin.pdf,"That decreased the number of incidents by about 30%, improved SLIs and reduced average resolution time 
for Sev.1 and Sev.2 incidents by at least 10%. 
"
20820,source/Evgenii Kalinin.pdf,"• Provided technical guidance and expertise to the Network Development and Network Operation teams. 
"
20821,source/Evgenii Kalinin.pdf," 
Lead Network Operations Engineer | MyExCompany 
September 2010 – February 2012 
"
20822,source/Evgenii Kalinin.pdf,"• Implemented IPv6 on the backbone network and RAS devices. 
• Implemented IGMP over MPLS on the backbone network to provide triple play services to the customers 
• Performed troubleshooting for Juniper, Cisco and other network equipment using port mirroring and 
"
20823,source/Evgenii Kalinin.pdf,"deep packet analysis. 
"
20824,source/Evgenii Kalinin.pdf,"• Deployed hardware-based and software-based PBX setups with GSM gateways, SIP and different kinds of 
"
20825,source/Evgenii Kalinin.pdf,"trunks. 
"
20826,source/Evgenii Kalinin.pdf,"• Troubleshot complex multi-vendor network service provider issues. 
• Collaborated with vendors to identify best options for optimizing network performance. 
• Implemented new network monitoring strategy based on Cricket and a self-made alerting system. 
"
20827,source/Evgenii Kalinin.pdf," 
Network Operations Engineer | MyExCompany 
March 2008 – September 2010 
"
20828,source/Evgenii Kalinin.pdf,"• Utilized knowledge of TCP/IP stack and other network protocols like OSPF, ISIS, BGP, MPLS to provide 
"
20829,source/Evgenii Kalinin.pdf,"reliable operations of a large region-scaled network. 
"
20830,source/Evgenii Kalinin.pdf,"• Utilized knowledge of Cisco, Juniper, Dell, Huawei, D-Link and network equipment of other vendors to 
"
20831,source/Evgenii Kalinin.pdf,"support day-to-day work of the Network Operations Department 
"
20832,source/Evgenii Kalinin.pdf,"• Used deep knowledge of network protocols to analyze the traffic captured from the network devices 0to 
"
20833,source/Evgenii Kalinin.pdf,"troubleshoot network issues. 
"
20834,source/Evgenii Kalinin.pdf,"• Performed network devices provisioning. 
• Monitored network capacity and performance to diagnose and resolve complex network problems. 
"
20835,source/Evgenii Kalinin.pdf," 
SKILLS 
"
20836,source/Evgenii Kalinin.pdf,"ITIL • Linux • System Administration • Ansible • AWX • Jenkins • CI/CD • Gitlab CI • Docker • Kubernetes • KVM, QEMU, 
Hyper-V, VMWare • Oracle DB, RAC, ASM • Weblogic • System Design • High Availability • Performance Monitoring • 
Fault Monitoring • Capacity Planning • Load Balancing • SSL • TLS • TSDB - Prometheus, InfluxDB • Grafana • 
Networking, Firewalls, VPN • Cisco, Juniper • Routing - BGP, OSPF, MPLS • L2 networking • VoIP • SIP • RTP/SRTP • 
Dial Plans • Communication channel equipment 
"
20837,source/Evgenii Kalinin.pdf," 
PROGRAMMING AND SCRIPTING 
"
20838,source/Evgenii Kalinin.pdf,"Python • Shell / Bash • C • Java • JavaScript • SQL, PL/SQL • WLST 
"
20839,source/Evgenii Kalinin.pdf," 
EDUCATION 
"
20840,source/Evgenii Kalinin.pdf,"Saratov State University | Saratov, Russian Federation | 1999 – 2004 
"
20841,source/Evgenii Kalinin.pdf,"Field of Study – Computer Science 
Degree Obtained – University Diploma, Engineering 
"
20842,source/DENIS NEBESNOV.pdf,"DENIS NEBESNOV
"
20843,source/DENIS NEBESNOV.pdf,"+7-921-000-00-61 ⋄ Alanya Turkey ⋄ Open to relocation
"
20844,source/DENIS NEBESNOV.pdf,"daaaesnov@gmail.com ⋄ Linkedin ⋄ Telegram
"
20845,source/DENIS NEBESNOV.pdf,"SUMMARY
"
20846,source/DENIS NEBESNOV.pdf,"With over a decade of experience in IT Project Development, Service Operations, and Project Management, I have
consistently demonstrated my ability to lead and deliver successful outcomes. I've led diverse teams ranging from
5 to 40 members, effectively optimizing resource allocation for project success. My collaborative approach
extends across all organizational levels, from frontline workers to senior executives. I've managed budgets
ranging from
$50k to $2mln, ensuring efficient resource utilization. My expertise lies in adeptly navigating complex
environments, addressing policy challenges, and overcoming bureaucratic obstacles while consistently achieving
project objectives.
"
20847,source/DENIS NEBESNOV.pdf,"PROFESSIONAL EXPERIENCE
"
20848,source/DENIS NEBESNOV.pdf,"ITSM independent consultant | Part time Project manager, Freelance
Jul 2022 - Current
"
20849,source/DENIS NEBESNOV.pdf,"• Assisted with redesign process workflows, roles and responsibilities, documentation, and associated tools to
"
20850,source/DENIS NEBESNOV.pdf,"reduce silos between teams and increase efficiency and decrease average time to resolution from 24 hours
to 8 working hours.
"
20851,source/DENIS NEBESNOV.pdf,"• Consulted with ITSM tool selection by identifying key aspects for compare and business requirements,
"
20852,source/DENIS NEBESNOV.pdf,"policies and current team experience. Researched 8 products and arranged 4 demonstrations with vendors
or its partners.
"
20853,source/DENIS NEBESNOV.pdf,"Service Manager, Gazpromneft
Apr 2021 - Jul 2022
"
20854,source/DENIS NEBESNOV.pdf,"• Provided a cloud-based service CaaS (Containers as a Service) to approximately 120 internal development
"
20855,source/DENIS NEBESNOV.pdf,"teams by managing service team of 8 engineers (3 FTE of 2nd line engineers, 3 FTE of development and
maintain engineers + 2 FTE of 1st line support specialists).
"
20856,source/DENIS NEBESNOV.pdf,"• Developed and presented a new service, payment, and ordering process, negotiated over 100 projects and
"
20857,source/DENIS NEBESNOV.pdf,"secured and signed contracts with over 80% of them.
"
20858,source/DENIS NEBESNOV.pdf,"• Streamlined end-to-end workflow and adjusted Jira for Support and Development teams. As a result,
"
20859,source/DENIS NEBESNOV.pdf,"Increased number of incidents and requests resolved within SLA from 80% to 92%.
"
20860,source/DENIS NEBESNOV.pdf,"• Conducted collaborative meetings, enhancing planning efficiency and reducing consultancy requests from
"
20861,source/DENIS NEBESNOV.pdf,"20% to less than 5%. This effort also eliminated service incidents due to communication issues and speeded
up service request assignments from 5 to 2 hours using a clear matrix and definitions.
"
20862,source/DENIS NEBESNOV.pdf,"• Optimized monitoring processes and implemented Grafana dashboards, resulting in a remarkable 83%
"
20863,source/DENIS NEBESNOV.pdf,"reduction in monthly report preparation time from 24 hours to just 4 hours. This enhanced issue
investigations, provided strong evidence during discussions, and effectively identified and addressed
performance bottlenecks, leading to significant time and resource savings.
"
20864,source/DENIS NEBESNOV.pdf,"• Contributed to the launch of new services (CaaS, DaaS, PaaS) and established a comprehensive service
"
20865,source/DENIS NEBESNOV.pdf,"catalog for the transition team. This involved developing architecture, budgets, service request catalogs,
defining objectives, tariffs, developing SLAs, and contracts.
"
20866,source/DENIS NEBESNOV.pdf,"Head of the Support Team, Kirovsky zavod
Jun 2012 - Mar 2021
"
20867,source/DENIS NEBESNOV.pdf,"•
Established and supervised technical support services, leading a team of 8 to 12 engineers covering
"
20868,source/DENIS NEBESNOV.pdf,"both 1st and 2nd lines of support. Maintained over 5000 CI and delivered support to approximately 2500
users.
"
20869,source/DENIS NEBESNOV.pdf,"•
Enhanced the Service Desk tool by implementing streamlined workflows tailored to request types,
"
20870,source/DENIS NEBESNOV.pdf,"optimizing alerts, generating reports, and updating the service portfolio. This transitioned 30% of requests
from phone or email to 80% through the customer portal, freeing up more time for maintenance and service
requests.
"
20871,source/DENIS NEBESNOV.pdf,"• By initiating and managing the development of a PC inventory tool for 5000+ assets and introducing an
"
20872,source/DENIS NEBESNOV.pdf,"annual technical audit for precise infrastructure insight, cost forecasting, and risk management, I improved
asset-accounting alignment, simplified inventory processes, and saved 10-15% in CAPEX on user devices.
"
20873,source/DENIS NEBESNOV.pdf,"• In partnership with Ricoh, I enhanced the printing service by implementing a secure printing management
"
20874,source/DENIS NEBESNOV.pdf,"system, Streamline NX, and unifying devices. This resulted in significant cost savings, with expenditures
dropping from 1.2 million rubles per year for toner and spare parts to 800 thousand rubles. Additionally, we
reduced incident requests by over 80%.
"
20875,source/DENIS NEBESNOV.pdf,"Project Manager, Kirov-Enorgomash
Apr 2010 – Jun 2012
"
20876,source/DENIS NEBESNOV.pdf,"• Managed a complex Nuclear Power Plant device development project, overseeing all stages from design to
"
20877,source/DENIS NEBESNOV.pdf,"commissioning. With a budget exceeding 200 million rubles, over 5000 parts, a height requirement of 120
meters, and a load capacity of 80+ tons, I ensured successful project completion while meeting deadlines,
ensuring quality, and coordinating with contractors
"
20878,source/DENIS NEBESNOV.pdf,"• Analyzed cost projections, identified gaps in expenses and project duration estimates, and successfully
"
20879,source/DENIS NEBESNOV.pdf,"negotiated contract changes, adding 30 million rubles to the contract cost and extending the due date by
three years. Additionally, optimized control operations, saving over 20 million rubles and cutting production
time by three months.
"
20880,source/DENIS NEBESNOV.pdf,"SKILLS
"
20881,source/DENIS NEBESNOV.pdf,"Tools and methodology: ITSM, Jira, Manage Engine, HPSM, BPMN, Waterfall, Kanban, Scrum, Power BI· MS
Project, MS Excel, Grafana
"
20882,source/DENIS NEBESNOV.pdf,"Skills: Leadership, Project Management, Communication, Emotional intelligence, Coaching and Mentoring,
Strategic Planning, Operation management, HR Management, Compliance and Regulations, Quality Control,
Inventory Management, Risk Management
"
20883,source/DENIS NEBESNOV.pdf,"Language skills: Russian: native, English: Proficient (C1)
"
20884,source/DENIS NEBESNOV.pdf,"EDUCATION
"
20885,source/DENIS NEBESNOV.pdf,"Peter the Great St. Petersburg Polytechnic University
BS: Information Technology in Industry
2010
"
20886,source/Konstantin Alex.docx,"Back End Developer
"
20887,source/Konstantin Alex.docx,"10+ years of extensive experience as a back end web developer with a focus on creating websites and different customer 
services. During this time I've been creating more than 200 websites. I've been working with PHP since 2008. Also have 
experience with Python, Java, and Android mobile development. Absolutely comfortable working remotely and know how to 
stay organized and how to work in a remote team. I love to learn new things, and I pick up on new concepts fast, especially in 
a hands-on environment. My goal is to find a full-time remote position in an international company and to grow up as a 
professional.
"
20888,source/Konstantin Alex.docx,"Technical Skills
"
20889,source/Konstantin Alex.docx,"PHP (OOP, SOLID, Patterns) | Symfony | WordPress | Python | Django | Flask | Java | VueJS | Slim | WebPack | Git | HTML 
| CSS | jQuery | PHPUnit | MySQL | PostgreSQL | MongoDB | Redis | AWS | Rest API | SOAP | Composer | Docker | 
Scrum | Linux | RabbitMQ | Sphinx | JavaScript
"
20890,source/Konstantin Alex.docx,"Work Experience
"
20891,source/Konstantin Alex.docx,"Senior Back End Developer
"
20892,source/Konstantin Alex.docx,"RT Labs
Aug 2020 - Present
"
20893,source/Konstantin Alex.docx,"Participated in development of SAAS platform for creating ~200-250k government websites. Developed a REST API 
module for communication between the base platform and websites. Developed service for creating patches and central 
updating websites.
"
20894,source/Konstantin Alex.docx,"●
working in a team with remote coworkers: developers, analytics, and designers
"
20895,source/Konstantin Alex.docx,"●
elements and pages of base websites
"
20896,source/Konstantin Alex.docx,"●
logging system
"
20897,source/Konstantin Alex.docx,"Senior Back End Developer
"
20898,source/Konstantin Alex.docx,"WebWay
May 2017 - Aug 2020
"
20899,source/Konstantin Alex.docx,"Created a website for one of the biggest insurance companies.
"
20900,source/Konstantin Alex.docx,"●
25+ calculators and forms to buy a new policy, to send a report, or to ask some questions
"
20901,source/Konstantin Alex.docx,"●
analytical system with reports, graphics, and filters
"
20902,source/Konstantin Alex.docx,"●
connections with different services (SOAP and REST)
"
20903,source/Konstantin Alex.docx,"●
connection with payment systems and receipt printing system
"
20904,source/Konstantin Alex.docx,"●
automatic testing of all forms
"
20905,source/Konstantin Alex.docx,"Website for one of the famous business coaches in Russia.
"
20906,source/Konstantin Alex.docx,"●
website with a possibility to choose and order physical or digital content (books, CD, DVD, MP3, etc)
"
20907,source/Konstantin Alex.docx,"●
a personal cabinet for the customers
"
20908,source/Konstantin Alex.docx,"●
a ticket system for the event when you can choose the cost of your ticket, buy this ticket, and print it
"
20909,source/Konstantin Alex.docx,"Back End Developer
"
20910,source/Konstantin Alex.docx,"Individ
Aug 2016 - May 2017
"
20911,source/Konstantin Alex.docx,"My main focus was on the Bitrix framework. I was responsible for development of new projects and technical support of 
current projects.
"
20912,source/Konstantin Alex.docx,"●
created a website for a chain of federal medicine clinics
"
20913,source/Konstantin Alex.docx,"●
e-store for a big tech company with many pages, services, and connections
"
20914,source/Konstantin Alex.docx,"●
technical support of current projects
"
20915,source/Konstantin Alex.docx,"Back End Developer
"
20916,source/Konstantin Alex.docx,"NetCat
Mar 2013 - Aug 2016
"
20917,source/Konstantin Alex.docx,"For this company I worked as a tech writer and as a developer. For this company I:
"
20918,source/Konstantin Alex.docx,"●
rewrote all official documentation for developers and users
"
20919,source/Konstantin Alex.docx,"●
created module «Bills» for the main product of company
"
20920,source/Konstantin Alex.docx,"●
tested components of the system
"
20921,source/Konstantin Alex.docx,"●
communicated with other remote developers
"
20922,source/Konstantin Alex.docx,"●
performed technical support of other developers
"
20923,source/Konstantin Alex.docx,"Full Stack Developer
"
20924,source/Konstantin Alex.docx,"The South Urals Chamber Of Commerce And Industry
Feb 2010 - Mar 2013
"
20925,source/Konstantin Alex.docx,"My main role is the development and support of the company's main website and support services. Communicated with the 
company's customers and created websites for them.
"
20926,source/Konstantin Alex.docx,"●
finished courses as a specialist with creating security tokens.
"
20927,source/Konstantin Alex.docx,"●
worked as a coach and taught people how to work in a auction platforms
"
20928,source/Konstantin Alex.docx,"Full Stack Developer
"
20929,source/Konstantin Alex.docx,"Web Group «W»
Nov 2008 - Feb 2010
"
20930,source/Konstantin Alex.docx,"Created a social-network for the builder's community, a portal for a regional city with different services. At this 
"
20931,source/Konstantin Alex.docx,"company I was responsible for:
"
20932,source/Konstantin Alex.docx,"●
development of new projects
"
20933,source/Konstantin Alex.docx,"●
technical support of current projects
"
20934,source/Konstantin Alex.docx,"●
review code to increase the code quality and working with other developers
"
20935,source/Konstantin Alex.docx,"Education
"
20936,source/Konstantin Alex.docx,"Master in Computer Science (2002 — 2006)
"
20937,source/JOHN SMITH.pdf,"JOHN SMITH 
"
20938,source/JOHN SMITH.pdf,"+99999999 · johnsmith@gmail.com 
"
20939,source/JOHN SMITH.pdf,"linkedin.com/in/johnsmith/ · github.com/john_smith 
"
20940,source/JOHN SMITH.pdf," 
"
20941,source/JOHN SMITH.pdf,"EDUCATION 
"
20942,source/JOHN SMITH.pdf,"Some University · Astana, Kazakhstan 
"
20943,source/JOHN SMITH.pdf,"B.S. in Computer Science 
• Selected coursework: Computer Systems and Organization · Programming Languages · Performance and 
"
20944,source/JOHN SMITH.pdf,"Data Structures · Formal Languages ·Algorithms 
"
20945,source/JOHN SMITH.pdf,"• Activity: Some club 
"
20946,source/JOHN SMITH.pdf," 
"
20947,source/JOHN SMITH.pdf,"EXPERIENCE 
"
20948,source/JOHN SMITH.pdf,"Company · Software Developer Intern · Astana, Kazakhstan 
Jun 2023-Aug 2023 
"
20949,source/JOHN SMITH.pdf,"• Implemented a synchronous API polling feature in an iOS app, reducing picture loading latency by 67%. 
• Developed login and registration functionality, enhancing user security with IOS Keychain and streamlining the 
"
20950,source/JOHN SMITH.pdf,"onboarding process for about 500 registered users. 
"
20951,source/JOHN SMITH.pdf,"• Refactored the existing Python API codebase on FastAPI to support new database architecture. 
"
20952,source/JOHN SMITH.pdf," 
"
20953,source/JOHN SMITH.pdf,"PROJECTS 
"
20954,source/JOHN SMITH.pdf,"Grocery Store 
• Developed an MVC-based application for a grocery store, utilizing REST API for data retrieval. 
• Employed UICollectionView to populate the screen with a wide range of grocery products. 
• Implemented validation for the UITextField, ensuring data integrity before allowing users to proceed with the 
"
20955,source/JOHN SMITH.pdf,"checkout process. 
"
20956,source/JOHN SMITH.pdf,"Messenger 
• Integrated Firebase as the backend service for storing and managing users' messages, ensuring real-time 
"
20957,source/JOHN SMITH.pdf,"synchronization and data persistence. 
"
20958,source/JOHN SMITH.pdf,"• Effectively managed dependencies using CocoaPods, specifically to incorporate animations for the launch 
"
20959,source/JOHN SMITH.pdf,"screen, enhancing the overall user experience. 
"
20960,source/JOHN SMITH.pdf,"Clima 
• Designed and developed a weather application for iOS devices. 
• Implemented geolocation functionality to determine the user's current location and display the weather 
"
20961,source/JOHN SMITH.pdf,"temperature based on their geolocation using Core Location. 
"
20962,source/JOHN SMITH.pdf,"• Integrated the OpenWeather API to fetch weather data for a specified city, providing accurate weather 
"
20963,source/JOHN SMITH.pdf,"information. 
"
20964,source/JOHN SMITH.pdf,"News 
• News app written on the MVC architecture. [infinite scroll, divided into 6 categories, polling api] 
 
"
20965,source/JOHN SMITH.pdf,"SKILLS 
"
20966,source/JOHN SMITH.pdf,"• Programming Languages: Swift, C++, C, Python, Java. 
• Technologies and Frameworks: OOP, UIKit, SwiftUI, Firebase Cloud Firestore, Cocoapods, Git, AutoLayout, 
"
20967,source/JOHN SMITH.pdf,"RestAPI, UsersDefaults, Core Data, JSON Decoding, MVC/MVP 
"
20968,source/Petr Ivanov.docx,"Saint-Petersburg, 
Russia Linkedin
"
20969,source/Petr Ivanov.docx,"+7 (123) 456 79 90
noreplay@mail.ru
"
20970,source/Petr Ivanov.docx,"I am a site reliability engineer. Now, I am working at edge services team. We do high-load front services. For 
example:
"
20971,source/Petr Ivanov.docx,"- improvement to infrastructure, tools and processes;
- efficiently scale services; improvement to infrastructure, tools and processes;
- increasing optimization and automation.
"
20972,source/Petr Ivanov.docx,"Work Experience
"
20973,source/Petr Ivanov.docx,"Site reliability engineer
Company name
Mar 2020 - Present
"
20974,source/Petr Ivanov.docx,"Edge services(frontend) team
Moscow, Russia
"
20975,source/Petr Ivanov.docx,"Administration of the fronts' infrastructure.
Achievements:
"
20976,source/Petr Ivanov.docx,"• Developed dashboard with auto-discover information about our servers;
• Deployed MVP multi-regions openstack installation with sr-iov;
• Updated and developed notification system about problem with our services;
• Moved test stages to new scheme and configuration under ansible control;
• Migrated part of services to HTTP/3.
"
20977,source/Petr Ivanov.docx,"System administrator
Old company name
Jan 2018 - Mar 2020
"
20978,source/Petr Ivanov.docx,"Cloud team
Moscow, Russia
"
20979,source/Petr Ivanov.docx,"Administration of the cloud's projects servers. ~2000 Linux servers/containers:
"
20980,source/Petr Ivanov.docx,"• Architecture design;
• Automation, deployment and support of various environments - 
development, testing, production;
"
20981,source/Petr Ivanov.docx,"• Capacity planning, implementation of monitoring the quality of the project;
• Ensuring fault tolerance and scaling of projects.
"
20982,source/Petr Ivanov.docx,"Achievements:
"
20983,source/Petr Ivanov.docx,"• Deployed and supported s3 infrastructure;
• Migrated from Microsoft document editor to own editor infrastructure, which 
was based on AppName software;
"
20984,source/Petr Ivanov.docx,"• Moved test stages to the current OS versions and added configuration 
management via puppet;
"
20985,source/Petr Ivanov.docx,"• Developed new backup system for databases.
"
20986,source/Petr Ivanov.docx,"Jr System administrator
Old company name
Dec 2016 - Jan 2018
"
20987,source/Petr Ivanov.docx,"Petr Ivanov
"
20988,source/Petr Ivanov.docx,"Storage team
Moscow, Russia
"
20989,source/Petr Ivanov.docx,"Administration of mail storages, files storages, photo/video storages (~3000 Linux 
servers/containers).
"
20990,source/Petr Ivanov.docx,"• Supporting server infrastructure;
• Automation, monitoring, ensuring fault tolerance and scaling of projects.
"
20991,source/Petr Ivanov.docx,"Achievements:
"
20992,source/Petr Ivanov.docx,"• Automated servers’ setup processes;
• Deployed part of new mail storage system.
"
20993,source/Petr Ivanov.docx,"Duty System Engineer
Old company name
Aug 2016 - Dec 2016
"
20994,source/Petr Ivanov.docx,"Duty engineer team
Moscow, Russia
"
20995,source/Petr Ivanov.docx,"Worked at monitoring team:
"
20996,source/Petr Ivanov.docx,"•
Monitoring quality of projects and network
"
20997,source/Petr Ivanov.docx,"•
HW and SW troubleshooting
"
20998,source/Petr Ivanov.docx,"•
Automation of monitoring tasks.
"
20999,source/Petr Ivanov.docx,"Duty System Administrator
Old company name
Apr 2015 - Aug 2016
"
21000,source/Petr Ivanov.docx,"Data center’s engineer team
Moscow, Russia
"
21001,source/Petr Ivanov.docx,"Worked at data center's engineers team:
"
21002,source/Petr Ivanov.docx,"•
Monitoring quality of projects and network;
"
21003,source/Petr Ivanov.docx,"•
Troubleshooting;
"
21004,source/Petr Ivanov.docx,"•
Initial identification of problems from logs.
"
21005,source/Petr Ivanov.docx,"Technical Support Engineer
Old old company name
Aug 2014 - Apr 2015
"
21006,source/Petr Ivanov.docx,"Technical support team
Moscow, Russia
"
21007,source/Petr Ivanov.docx,"Worked at support team in back:
"
21008,source/Petr Ivanov.docx,"•
Responded to IT incidents;
"
21009,source/Petr Ivanov.docx,"•
Troubleshooting;
"
21010,source/Petr Ivanov.docx,"•
Installation of updates, monitoring of software complexes;
"
21011,source/Petr Ivanov.docx,"•
Provided advice on the operation of standard PC applications and peripherals.
"
21012,source/Petr Ivanov.docx,"Education and Certiﬁcations
"
21013,source/Petr Ivanov.docx,"●
B.Sc. Applied Informatics in Economics, Institute of Mechanics and Power Engineering, 
Moscow.
2011 – 2015
"
21014,source/Petr Ivanov.docx,"●
Developing web services in Go - language basics, Coursera
"
21015,source/Petr Ivanov.docx,"Technologies and Languages
"
21016,source/Petr Ivanov.docx,"●
Languages: Python, Go, Bash
"
21017,source/Petr Ivanov.docx,"●
Technologies stack:
"
21018,source/Petr Ivanov.docx,"○
Debian/CentOS/LXC;
"
21019,source/Petr Ivanov.docx,"○
Nginx/Apache;
"
21020,source/Petr Ivanov.docx,"○
Ansible/Salt/Puppet;
"
21021,source/Petr Ivanov.docx,"○
Git;
"
21022,source/Petr Ivanov.docx,"○
Mysql/Postgres;
"
21023,source/Petr Ivanov.docx,"○
Grafana;
"
21024,source/Petr Ivanov.docx,"○
Openstack;
"
21025,source/Petr Ivanov.docx,"○
Docker/Kubernetes;
"
21026,source/Petr Ivanov.docx,"○
MongoDB/Tarantool;
"
21027,source/Petr Ivanov.docx,"○
Memcached;
"
21028,source/Petr Ivanov.docx,"○
DNS and mail services.
"
21029,source/Pavel Orlov.docx,"pavel.o@outlook.co
"
21030,source/Pavel Orlov.docx,"m
"
21031,source/Pavel Orlov.docx,"Senior Frontend Developer & Team Lead
+7 91 9000-0000
"
21032,source/Pavel Orlov.docx,"Visa sponsorship required
"
21033,source/Pavel Orlov.docx,"T-shaped, responsible, and collaborative Software Engineer and Team Lead. 8+ years of experience of development 
in startups, consultancies, and product companies. Advanced skills in frontend development, an expert in 
JavaScript, various frontend frameworks, and libraries. Comprehensive knowledge of Java and backend utilities. 
Passionate about user experience and clear software architecture. Fond of teamwork and productive meetings.
"
21034,source/Pavel Orlov.docx,"Technical Skills 
"
21035,source/Pavel Orlov.docx,"Languages
TypeScript, JavaScript, Java, Golang
"
21036,source/Pavel Orlov.docx,"Frameworks & libs
ReactJS, Svelte, Effector, Recoil, Redux, Apollo GraphQL, TreeJS, OSM, ExpressJS, Spring
"
21037,source/Pavel Orlov.docx,"Professional Experience 
"
21038,source/Pavel Orlov.docx,"Remedy Inc
Senior Frontend Engineer & Team Lead
Dec 2019 ‑ present
"
21039,source/Pavel Orlov.docx,"Developed a flexible platform to allow customers to choose a clinic and get or order some medical services online
"
21040,source/Pavel Orlov.docx,"￿
Migrated a complex legacy project from JavaScript/AngularJS to TypeScript/React with unit and integrating 
testing
"
21041,source/Pavel Orlov.docx,"￿
Significantly increased accessibility for users with mobile devices
"
21042,source/Pavel Orlov.docx,"￿
Developed and implemented UI-library with Unit tests and documentation based on Storybook
"
21043,source/Pavel Orlov.docx,"￿
Designed frontend architecture
"
21044,source/Pavel Orlov.docx,"￿
Leading and influencing software engineering best practices within teams for the full software 
development life cycle, including documentation, design, coding standards, code reviews, building, 
testing, deployment, and other operations.
"
21045,source/Pavel Orlov.docx,"￿
Led a team of 5 members
"
21046,source/Pavel Orlov.docx,"Vinavis
"
21047,source/Pavel Orlov.docx,"Senior Software Engineer
Nov 2018 ‑ Dec 2019
"
21048,source/Pavel Orlov.docx,"Developed a high-loaded management system for unmanned vehicles
"
21049,source/Pavel Orlov.docx,"￿
Architected and developed a scalable real-time ReactJS application
"
21050,source/Pavel Orlov.docx,"￿
Improved performance from 10 to 60 FPS for the most loaded parts of the app
"
21051,source/Pavel Orlov.docx,"￿
Implemented CI/CD for the frontend part of the application
"
21052,source/Pavel Orlov.docx,"￿
Developed and Implemented multi-domain OAuth-based authentication
"
21053,source/Pavel Orlov.docx,"￿
Developed and Implemented JS library for on-map data visualization
"
21054,source/Pavel Orlov.docx,"￿
Coordinated teamwork of 3 developers
"
21055,source/Pavel Orlov.docx,"ITeco
"
21056,source/Pavel Orlov.docx,"Software Engineer & Senior Software Engineer
Apr 2016 ‑ Nov 2018
"
21057,source/Pavel Orlov.docx,"Developed and successfully delivered SPA (part of a complex enterprise solution) for letting clients book deposit 
boxes online for one of the biggest banks in Russia
"
21058,source/Pavel Orlov.docx,"￿
Developed and implemented a module for remote printing
"
21059,source/Pavel Orlov.docx,"￿
Created about 20 new components for internal UI library
"
21060,source/Pavel Orlov.docx,"￿
Achieved 90+% test coverage on the Backend side
"
21061,source/Pavel Orlov.docx,"￿
Implemented integration with other banking modules and flows
"
21062,source/Pavel Orlov.docx,"￿
Made several major CI/CD improvements which allowed to reduce deployment time from 17 to 3 minutes
"
21063,source/Pavel Orlov.docx,"￿
Interviewed 30 candidates, mentored 4 junior engineers
"
21064,source/Pavel Orlov.docx,"Freelance & Web Studios (SEMark, Consulting plus)
"
21065,source/Pavel Orlov.docx,"Web developer & Lead Web Developer
Sep 2012 ‑ Feb 2016
"
21066,source/Pavel Orlov.docx,"￿
Developed various company projects as a full‑stack JavaScript/PHP & Python developer
"
21067,source/Pavel Orlov.docx,"￿
Led development of Web and Mobile application
"
21068,source/Pavel Orlov.docx,"￿
Developed and delivered a solution for municipalities to allow local governments to handle incoming citizen’s 
application
"
21069,source/Pavel Orlov.docx,"￿
Processed incoming business requirement
"
21070,source/Pavel Orlov.docx,"￿
Delivering innovative technical solutions to improve business outcomes
"
21071,source/Pavel Orlov.docx,"￿
Implemented integration with third-party APIs
"
21072,source/Pavel Orlov.docx,"Education 
"
21073,source/Pavel Orlov.docx,"Master of Computer Science
State Technical University, 
"
21074,source/Pavel Orlov.docx,"2016
"
21075,source/Mikhail Mukhamatulin.pdf,"Mikhail Mukhamatulin 
"
21076,source/Mikhail Mukhamatulin.pdf,"+7-981-809-26-88 | mikeee.mukhamatulin@gmail.com  
"
21077,source/Mikhail Mukhamatulin.pdf,"EMPLOYMENT 
"
21078,source/Mikhail Mukhamatulin.pdf,"Deutsche Bank 
Jan 2019 - Present 
"
21079,source/Mikhail Mukhamatulin.pdf,"Software Engineer, Associate 
Saint Petersburg, Russia 
"
21080,source/Mikhail Mukhamatulin.pdf,"• Standardized inter-process communications methods between micro-frontend applications by developing gRPC 
"
21081,source/Mikhail Mukhamatulin.pdf,"message broker service in C# and promoting its adoption across teams 
"
21082,source/Mikhail Mukhamatulin.pdf,"• Implemented REST API reverse-proxy using ASP.NET for gRPC services of frontend applications, which 
"
21083,source/Mikhail Mukhamatulin.pdf,"drastically simplified a mocking of communication between apps for E2E testing and increased code coverage 
"
21084,source/Mikhail Mukhamatulin.pdf,"• Ported several WPF views of monolith C# desktop application to micro-frontend Typescript Angular apps, which 
"
21085,source/Mikhail Mukhamatulin.pdf,"reduced initial application size and gave the ability to independently deploy those view components 
"
21086,source/Mikhail Mukhamatulin.pdf,"• Decreased time of opening web-based application popups from 10 seconds to less than 2 in 95% of cases, by 
"
21087,source/Mikhail Mukhamatulin.pdf,"creating preload and reuse mechanism of renderer processes in Chromium Embedded Framework 
"
21088,source/Mikhail Mukhamatulin.pdf,"• Developed extension JavaScript API which gave the ability to applications launched inside the embedded browser 
"
21089,source/Mikhail Mukhamatulin.pdf,"of desktop client to manipulate the browser window properties and interact with applications platform 
"
21090,source/Mikhail Mukhamatulin.pdf,"• Fixed various critical bugs of CEF running on client’s restrictive environments and, thus, unblocked migration of 
"
21091,source/Mikhail Mukhamatulin.pdf,"several applications and removed the company’s reputational risks 
"
21092,source/Mikhail Mukhamatulin.pdf,"Swordfish Security 
May 2018 - Dec 2018 
"
21093,source/Mikhail Mukhamatulin.pdf,"Full Stack .NET Developer 
Saint Petersburg, Russia 
"
21094,source/Mikhail Mukhamatulin.pdf,"• Developed a secure cross-platform local secrets’ storage service for macOS and Windows on .NET Core, which 
"
21095,source/Mikhail Mukhamatulin.pdf,"simplified and sped up desktop client application development 
"
21096,source/Mikhail Mukhamatulin.pdf,"• Substantially increased application testability and shortened release cycle from 3 months to 2 weeks by leading 
"
21097,source/Mikhail Mukhamatulin.pdf,"MVVM adoption inside team for desktop client application development 
"
21098,source/Mikhail Mukhamatulin.pdf,"• Implemented a cross-session caching mechanism of client-server requests, which has reduced the desktop 
"
21099,source/Mikhail Mukhamatulin.pdf,"application’s startup time by 80% 
"
21100,source/Mikhail Mukhamatulin.pdf,"• Won first place on the company’s internal hackathon by creating an experimental iOS application to install and 
"
21101,source/Mikhail Mukhamatulin.pdf,"update security certificates on mobile devices using animated QR-codes 
"
21102,source/Mikhail Mukhamatulin.pdf,"Belkasoft 
Oct 2015 - Apr 2018 
"
21103,source/Mikhail Mukhamatulin.pdf,"Software Engineer 
Saint Petersburg, Russia 
"
21104,source/Mikhail Mukhamatulin.pdf,"• Decreased disk image scan time by 22% and reduced application’s CPU load by 17%, by implementing an 
"
21105,source/Mikhail Mukhamatulin.pdf,"asynchronous C# API for reading data from the various file systems and disk images 
"
21106,source/Mikhail Mukhamatulin.pdf,"• Designed and developed the application’s dashboard page with charts of the latest disk image scans, which was 
"
21107,source/Mikhail Mukhamatulin.pdf,"widely used in the application’s promotion materials and greatly increased the appeal of the product to customers 
"
21108,source/Mikhail Mukhamatulin.pdf,"• Separated a pipeline of building Lucene search index by moving it to a dedicated process that handles a persistent 
"
21109,source/Mikhail Mukhamatulin.pdf,"job queue and, thus, improved reliability and simplified workflow of disk image scan 
"
21110,source/Mikhail Mukhamatulin.pdf,"• Developed SQLite3 database file parser with support of reading freelist, unallocated space, rollback journal, and 
"
21111,source/Mikhail Mukhamatulin.pdf,"write-ahead log, which gave access to deleted entries and allowed to work with damaged database files 
"
21112,source/Mikhail Mukhamatulin.pdf,"• Created an alternative implementation of Android Debug Bridge protocol, which allowed to capture whole mobile 
"
21113,source/Mikhail Mukhamatulin.pdf,"device storage image via USB for the following data analysis 
"
21114,source/Mikhail Mukhamatulin.pdf,"EDUCATION 
"
21115,source/Mikhail Mukhamatulin.pdf,"Saint Petersburg State University 
Sep 2012 - Jul 2016 
"
21116,source/Mikhail Mukhamatulin.pdf,"Bachelor of Science in Applied Mathematics and Computer Science | GPA: 3.76 (4.76/5) 
Saint Petersburg, Russia 
"
21117,source/Mikhail Mukhamatulin.pdf,"PROJECTS 
"
21118,source/Mikhail Mukhamatulin.pdf,"AnkiOneClick | Popup dictionary extension for Chrome which allows creating unknown foreign word flashcards with 
translations for Anki (TypeScript, React, Python, Flask) 
"
21119,source/Mikhail Mukhamatulin.pdf,"SpbBuildingAgeMaps | Data Visualization of buildings ages in Saint Petersburg based on information parsed from 
several sources and built using OpenStreetMap and CartoDB (C#, SQLite) 
"
21120,source/Mikhail Mukhamatulin.pdf,"TECHNICAL SKILLS 
"
21121,source/Mikhail Mukhamatulin.pdf,"Languages: C#, TypeScript, JavaScript, Python, C++ 
Databases: MSSQL, MySQL, SQLite 
Frameworks: WPF, Xamarin, ASP.NET, React, Angular, Backbone.js 
Technologies: CEF, Node.js, Electron, gRPC, Lucene 
"
21122,source/ANDREW MIRONOV.pdf," 
"
21123,source/ANDREW MIRONOV.pdf," 
"
21124,source/ANDREW MIRONOV.pdf,"ANDREW MIRONOV 
"
21125,source/ANDREW MIRONOV.pdf," 
"
21126,source/ANDREW MIRONOV.pdf,"Moscow, Russia • +79257810000 •cv@mail.me 
"
21127,source/ANDREW MIRONOV.pdf," 
 
 
 
 
"
21128,source/ANDREW MIRONOV.pdf,"September 2018 - 
Present 
"
21129,source/ANDREW MIRONOV.pdf,"Senior Full Stack Developer 
"
21130,source/ANDREW MIRONOV.pdf,"Work History 
"
21131,source/ANDREW MIRONOV.pdf,"DevOps Engineer / Lead Developer of the Platform Team 
"
21132,source/ANDREW MIRONOV.pdf,"Heartland Retail (50 employees, web-based POS system) 
"
21133,source/ANDREW MIRONOV.pdf,"Led the migration to Docker and Kubernetes 
Built a Kubernetes platform from scratch with dedicated staging and production environments 
Created a CI pipeline in Buildkite for the staging and production environments 
Packaged the system components into 29+ Terraform modules and 4+ Helm charts 
Setup Datadog dashboards and alerts for infrastructure monitoring 
Migrated the development environment from Vagrant to 15 Docker services, and built tooling 
around that 
Implemented a platform for on-demand testing environments allowing developers to spin up an 
independent copy of the application in under 5 minutes 
Moved all clients from Rackspace to Kubernetes on AWS, and saving thousands of dollars in 
monthly infrastructure costs 
Introduced the RFC discussion process to gather team feedback before implementing features 
Extracted a loosely coupled internal service out of the monolith and designed a distributed event 
log with Redis Stream 
"
21134,source/ANDREW MIRONOV.pdf," 
 
"
21135,source/ANDREW MIRONOV.pdf,"Technologies: Redis, Kubernetes, Terraform, Helm. 
"
21136,source/ANDREW MIRONOV.pdf," 
"
21137,source/ANDREW MIRONOV.pdf,"May 2015 - 
September 2018 
"
21138,source/ANDREW MIRONOV.pdf,"Senior Full Stack Developer 
"
21139,source/ANDREW MIRONOV.pdf,"Heartland Retail (50 employees, web-based POS system) 
"
21140,source/ANDREW MIRONOV.pdf,"Independently developed dozens of new modules by analyzing the requirements and coming up 
with an integrated full-stack solution 
Extended the reporting system with several dimensions and metrics 
Integrated the application with Shopify enabling hundreds of clients to start selling online during 
the COVID-19 lockdown 
Connected the POS with Scraffic Traffic Counting services and QuickBooks accounting software 
Developed the Sales Plans, Layaway and Employee Timecards modules integrated with the 
reporting system 
"
21141,source/ANDREW MIRONOV.pdf," 
 
"
21142,source/ANDREW MIRONOV.pdf,"Technologies: React, JavaScript, TypeScript, Ruby, Sinatra, Rails, PostgreSQL. 
"
21143,source/ANDREW MIRONOV.pdf," 
"
21144,source/ANDREW MIRONOV.pdf,"Feb 2015 - Present 
Full Stack Developer / Founder 
"
21145,source/ANDREW MIRONOV.pdf,"Masterbot (RU) (1 employee, bot platform for Telegram) 
"
21146,source/ANDREW MIRONOV.pdf,"Spearheaded the chatbot revolution on Telegram 
Launched a chat marketing platform reaching 25,000+ of subscribers for the most popular Russian 
blogger, Ilya Varlamov 
Arranged a contract with a large Russian news media outlet, Moslenta 
Set up a marketing solution for a popular collaborative blog, Dirty 
"
21147,source/ANDREW MIRONOV.pdf," 
 
"
21148,source/ANDREW MIRONOV.pdf,"Technologies: Ruby, Rails, MySQL. 
"
21149,source/ANDREW MIRONOV.pdf,"May 2011 - Feb 2015 
Senior Full Stack Developer / CIO 
"
21150,source/ANDREW MIRONOV.pdf,"7 Pikes (30 employees, POS for pharmacies) 
"
21151,source/ANDREW MIRONOV.pdf,"Led a team of 20 engineers in developing an ERP/POS system 
Coordinated the installation of the software at 1,000+ pharmacies 
Designed and implemented resilient software architecture 
Developed the core Sales module integrated with cash drawers and payment terminals 
Integrated software with accounting and human resources systems 1C 
Assisted with recruiting and interviewing of new and potential developers 
"
21152,source/ANDREW MIRONOV.pdf," 
 
"
21153,source/ANDREW MIRONOV.pdf,"Technologies: Ruby, Rails, MySQL, Chef. 
"
21154,source/ANDREW MIRONOV.pdf," 
"
21155,source/ANDREW MIRONOV.pdf,"Jul 2010 - May 2012 
Full Stack Developer / Founder 
"
21156,source/ANDREW MIRONOV.pdf,"Jaconda (2 employees, project team chat) 
"
21157,source/ANDREW MIRONOV.pdf,"Launched a chat platform for engineering teams that is used by hundreds of leading-edge remote 
companies 
Found a way to provide group chat for Google Talk using any instant messengers 
Contributed file transfers, vCards, and chat statuses support to the popular open-source Ruby 
XMPP library 
"
21158,source/ANDREW MIRONOV.pdf," 
 
"
21159,source/ANDREW MIRONOV.pdf,"Technologies: Ruby, Rails, MySQL, EventMachine for XMPP integration. 
"
21160,source/ANDREW MIRONOV.pdf," 
"
21161,source/ANDREW MIRONOV.pdf,"Jul 2007 - Jul 2010 
Full Stack Developer / Team Lead 
"
21162,source/ANDREW MIRONOV.pdf,"Piluli.ru (50 employees, the largest Russian online pharmacy) 
"
21163,source/ANDREW MIRONOV.pdf,"Lead a team of six developers in building a business process management system for the largest 
online pharmacy in Russia 
Integrated SIP calling and built an interface for a small call center of five operators 
Automated order placement and distribution across ten suppliers 
Provided technical guidance to team members 
"
21164,source/ANDREW MIRONOV.pdf," 
 
"
21165,source/ANDREW MIRONOV.pdf,"Technologies: Ruby, Rails, MySQL. 
"
21166,source/ANDREW MIRONOV.pdf," 
"
21167,source/ANDREW MIRONOV.pdf,"Education 
"
21168,source/ANDREW MIRONOV.pdf,"2005 - 2010 
Master's Degree, Mathematician/Programmer specialization 
"
21169,source/ANDREW MIRONOV.pdf,"Orenburg State University (OSU) 
"
21170,source/ANDREW MIRONOV.pdf," 
"
21171,source/ANDREW MIRONOV.pdf,"2005 - 2010 
Additional Qualification, Russian-English translator 
"
21172,source/ANDREW MIRONOV.pdf,"Orenburg State University (OSU) 
"
21173,source/ANDREW MIRONOV.pdf," 
"
21174,source/ANDREW MIRONOV.pdf,"Certifications 
"
21175,source/ANDREW MIRONOV.pdf,"Ruby Association Certified Ruby Programmer Silver 
"
21176,source/ANDREW MIRONOV.pdf,"Ruby Association LLC 
"
21177,source/ANDREW MIRONOV.pdf," 
"
21178,source/ANDREW MIRONOV.pdf,"Certified Professional 
"
21179,source/ANDREW MIRONOV.pdf,"ICAgile 
"
21180,source/ANDREW MIRONOV.pdf," 
"
21181,source/ANDREW MIRONOV.pdf,"Lean/Kanban Professional 
"
21182,source/ANDREW MIRONOV.pdf,"LeanKanban University 
"
21183,source/ANDREW MIRONOV.pdf,"Languages 
"
21184,source/ANDREW MIRONOV.pdf,"Russian — Native 
English — Advanced 
"
21185,source/ANDREW MIRONOV.pdf," 
 
"
21186,source/ANDREW MIRONOV.pdf,"Open-Source Projects 
"
21187,source/ANDREW MIRONOV.pdf," 
 
"
21188,source/ANDREW MIRONOV.pdf,"react-redux-loading-bar - Open-sourced a loading bar (aka, progress bar) for Redux and React 
"
21189,source/ANDREW MIRONOV.pdf,"blather - Contributed SOCKS5, vCards and chat state notifications support to Ruby XMPP client (XEP-0096, XEP-0065, XEP-0047, XEP- 
0054, XEP-0085) 
"
21190,source/ANDREW MIRONOV.pdf,"external-dns - Contributed support for ExternalName services 
"
21191,source/ANDREW MIRONOV.pdf," 
 
"
21192,source/ANDREW MIRONOV.pdf,"Interests & Hobbies 
"
21193,source/ANDREW MIRONOV.pdf,"Automating my home with Home Assistant on a Raspberry Pi 
Seeing the world https://mrnv.me/s8mu 
CrossFit training 
Downhill skiing 
Occasional writing at https://blog.mironov.live 
"
21194,source/ANDREW MIRONOV.pdf," 
"
21195,source/ANDREW MIRONOV.pdf," 
"
21196,source/Alexandr Petrov.docx,"Alexandr Petrov
"
21197,source/Alexandr Petrov.docx,"Russia (open to relocate) | mail@gmail.com | https://www.linkedin.com/in/user/ 
"
21198,source/Alexandr Petrov.docx,"Visa sponsorship required
"
21199,source/Alexandr Petrov.docx,"Summary
• 5+ years of experience in building massively scalable systems (mostly using Java and Kotlin) both from 
scratch and diving into an existing codebase.
• Currently I’m a backend developer (Java, Kotlin) in the e-commerce startup.
"
21200,source/Alexandr Petrov.docx,"Skills
"
21201,source/Alexandr Petrov.docx,"Languages: Java, Kotlin, SQL, JavaScript, PHP, 
C++
Technologies: stateless microservices, AWS, Spring, 
Hibernate, Protobuf/gRPC, GWT, AOP, Redis, 
SOLR, JUnit, Maven, Gradle, perf, async-profiler, 
WebDriver, Qt
Tools: TeamCity, YourKit, VisualVM, IBM TMDA, 
jconsole, jhat, Jenkins/Hudson
Source control: Git
OS: MacOS, Ubuntu
Databases: PostgreSQL, MySQL, Clickhouse
IDE: IntelliJ IDEA
Application servers: Jetty
"
21202,source/Alexandr Petrov.docx,"Work experience
"
21203,source/Alexandr Petrov.docx,"Accomplishments:
"
21204,source/Alexandr Petrov.docx,"￿performed major version upgrade for 
backbone technologies such as Java and GWT
"
21205,source/Alexandr Petrov.docx,"￿designed and implemented rolling upgrade for the 
most highly loaded service
"
21206,source/Alexandr Petrov.docx,"￿designed and implemented new shard routing 
scheme
"
21207,source/Alexandr Petrov.docx,"￿fixed an issue in database driver that cut down 
CPU load by 30%
"
21208,source/Alexandr Petrov.docx,"￿designed, implemented and proposed new queue 
scheduling scheme that reduced latency by a 
factor of 10
"
21209,source/Alexandr Petrov.docx,"Software Engineer, ACME, Russia
Jan 2015 — present
"
21210,source/Alexandr Petrov.docx,"Projects:
1.
Shard routing revamp (Java, Kotlin, PostgreSQL). Mostly as a single developer, the design was 
thoroughly discussed with team leads and CTO.
"
21211,source/Alexandr Petrov.docx,"Accomplishments:
￿implemented and supported rolling upgrade for the most highly loaded service
"
21212,source/Alexandr Petrov.docx,"￿designed and implemented new shard routing scheme. Reduced memory consumption by 90%, shortened 
release time and significantly reduced database load
"
21213,source/Alexandr Petrov.docx,"￿made new design stateless, breaking the release dependencies
"
21214,source/Alexandr Petrov.docx,"￿reduced database load caused by data migration between the shards
"
21215,source/Alexandr Petrov.docx,"2. Integration for partnership (Java, Kotlin, PostgreSQL). Team of two.
"
21216,source/Alexandr Petrov.docx,"Accomplishments:
￿led technical communication with partner development team
"
21217,source/Alexandr Petrov.docx,"￿redesigned data importing service from scratch
"
21218,source/Alexandr Petrov.docx,"￿proposed a new queue scheduling scheme. Used queue lookup to improve latency
"
21219,source/Alexandr Petrov.docx,"3. Data denormalization (Java, PostgreSQL). Team of two.
"
21220,source/Alexandr Petrov.docx,"Accomplishments:
￿denormalized one of the most sophisticated data structure in the project
"
21221,source/Alexandr Petrov.docx,"￿came up with the design for spreading the load on database caused by denormalization of shared data
"
21222,source/Alexandr Petrov.docx,"4. New auth metadata service (Java, Kotlin, PostgreSQL). Team of three.
"
21223,source/Alexandr Petrov.docx,"Accomplishments:
"
21224,source/Alexandr Petrov.docx,"￿separated auth logic from monolith app into another service
"
21225,source/Alexandr Petrov.docx,"￿used AOP to keep common code in one place
"
21226,source/Alexandr Petrov.docx,"5. General
"
21227,source/Alexandr Petrov.docx,"Accomplishments:
￿used pg_buffercache to trace issue with well indexed query being slow
"
21228,source/Alexandr Petrov.docx,"￿used perf utility to trace database driver issue and made a talk on it
"
21229,source/Alexandr Petrov.docx,"￿implemented webhook service from scratch
"
21230,source/Alexandr Petrov.docx,"Software Engineer, Oceanic Airlines, Russia
Jan 2014 - Dec 2014
"
21231,source/Alexandr Petrov.docx,"Projects:
1.
Smart house system (Java, GWT). Team of 5+.
"
21232,source/Alexandr Petrov.docx,"Accomplishments:
"
21233,source/Alexandr Petrov.docx,"￿implemented an SVG redactor for sensors in the rooms
"
21234,source/Alexandr Petrov.docx,"2. Food ordering service for trains (Java). Team of 3. 
"
21235,source/Alexandr Petrov.docx,"Accomplishments:
"
21236,source/Alexandr Petrov.docx,"￿implemented REST API for the service
"
21237,source/Alexandr Petrov.docx,"Software Engineer, Ultor Mining Corporation
Jun 2012 - Dec 2013
"
21238,source/Alexandr Petrov.docx,"Projects:
1. QA automation
"
21239,source/Alexandr Petrov.docx,"Accomplishments:
￿implemented testing framework using WebDriver and PageObject pattern
"
21240,source/Alexandr Petrov.docx,"￿set up headless CI that performed tests using WebDriver
"
21241,source/Alexandr Petrov.docx,"Education
"
21242,source/Alexandr Petrov.docx,"Master's Degree in Computer Science
2009-2014
"
21243,source/Alexandr Petrov.docx,"Ulyanovsk state technical university
Department of Information systems and technologies
"
21244,source/Firyan Artem.docx,"Summary
"
21245,source/Firyan Artem.docx,"Firyan 
Artem
"
21246,source/Firyan Artem.docx,"Senior Unity 
Developer
"
21247,source/Firyan Artem.docx,"somfirl@gmail.com | 
linkedin.com | +375 
29 000 99 99
"
21248,source/Firyan Artem.docx,"Motivated Unity Developer with 5+ years of experience, multiple shipped projects for Android and iOS, extensive 
knowledge of C#, familiarity with CI/CD (Jenkins), SOLID and DRY code practices, and expertise in implementing 
cross-platform and platform-specific features. An efficient communicator and team player. Enjoy coaching and 
being coached, breaking complex tasks into solvable ones, and applying math and algorithms for problem tackling.
"
21249,source/Firyan Artem.docx,"Work experience
"
21250,source/Firyan Artem.docx,"Lead Unity Developer
Minsk, Belarus
"
21251,source/Firyan Artem.docx,"CompanyName
Dec 2017 - Present
"
21252,source/Firyan Artem.docx,"●
As a team lead of 4 developers, developed games with 50M+ installs (GameName1, GameName2).
"
21253,source/Firyan Artem.docx,"●
Improved and structured company-wide code-sharing practices (firstly, via Git submodules; after, via packages 
in Unity Package Manager) along with using separated assemblies and explicit structure for reducing code 
coupling and decreasing recompile time by 20%.
"
21254,source/Firyan Artem.docx,"●
Integrated into the company’s projects multiple 3-rd party services, including native frameworks for Android 
and iOS (Firebase, MoPub, AppsFlyer, IronSource, Spine animations, Facebook, Tapjoy, etc.). Also 
implemented multiple wrappers for them, which decreased the average integration time into the project from 2 
weeks to 1-2 days.
"
21255,source/Firyan Artem.docx,"●
Created and maintained build automation pipelines both on the Unity side and on the CI/CD side (Jenkins; 
multiple options for build customization, testing, and deployment).
"
21256,source/Firyan Artem.docx,"●
Optimized application performance: app startup time (up to 2.5 times faster), memory management and 
performance improvement (allowed to support older devices), Android ANR (led to more frequent GooglePlay 
featuring).
"
21257,source/Firyan Artem.docx,"●
Have been interviewing applicants for Unity developer positions for 3 years and increased the engineering 
team by 30+ employees.
"
21258,source/Firyan Artem.docx,"●
Supervised and mentored a total of 10+ developers in the company.
"
21259,source/Firyan Artem.docx,"●
Standardized and wrote the company’s code style guide.
"
21260,source/Firyan Artem.docx,"●
Switched projects from SVN to Git, which allowed to establish proper code reviews via pull requests.
"
21261,source/Firyan Artem.docx,"Unity Developer
Minsk, Belarus
"
21262,source/Firyan Artem.docx,"CompanyName
Mar 2016 - Dec 2017
"
21263,source/Firyan Artem.docx,"●
As a newly assigned lead developer, shipped a project with previous long-term development (GameName3).
"
21264,source/Firyan Artem.docx,"●
Implemented peer-to-peer multiplayer via Apple Game Center, which increased DAU by about 80%.
"
21265,source/Firyan Artem.docx,"●
Contributed to adapting the existing iOS development pipeline for the Android platform.
"
21266,source/Firyan Artem.docx,"Software Developer
Minsk, Belarus
"
21267,source/Firyan Artem.docx,"CompanyName
Aug 2015 - Mar 2016
"
21268,source/Firyan Artem.docx,"●
Supported and implemented new functionality for the company’s live iOS project (GameName4).
"
21269,source/Firyan Artem.docx,"Technical Skills
"
21270,source/Firyan Artem.docx,"Education
"
21271,source/Firyan Artem.docx,"C# | Unity | Jenkins | Java | Objective-C | Git | Xcode | 
Android Studio | Bash | Python
"
21272,source/Firyan Artem.docx,"Master’s Degree in Computer Science
Minsk, Belarus
"
21273,source/Firyan Artem.docx,"Belarusian State University
Sep 2009 - Jun 2015
"
21274,source/David Samoylov.pdf,"David Samoylov
"
21275,source/David Samoylov.pdf,"+7 (707) 000-76-27 | eaaanesmlv@gmail.com | linkedin.com/in/aaaenesmlv
"
21276,source/David Samoylov.pdf,"ABOUT
"
21277,source/David Samoylov.pdf,"A Software Engineer with 5 years of extensive experience in designing, developing, and maintaining robust backend
applications. Enthusiastic about enhancing my core skills while also keeping up with the latest industry trends and
best practices.
"
21278,source/David Samoylov.pdf,"EXPERIENCE
"
21279,source/David Samoylov.pdf,"Kaspersky
Moscow, Russia
"
21280,source/David Samoylov.pdf,"Research Developer
Apr. 2021 – Aug. 2023
"
21281,source/David Samoylov.pdf,"• Developed and maintained a development environment for anti-malware records, complemented by an
"
21282,source/David Samoylov.pdf,"integrated version control system and support for distributed compilation across multiple platforms.
"
21283,source/David Samoylov.pdf,"• Implemented a command-line tool to facilitate the creation of Visual Studio projects and the generation of C++
"
21284,source/David Samoylov.pdf,"DLLs for debugging purposes, which significantly improved malware analysts workflow.
"
21285,source/David Samoylov.pdf,"• Created a log analysis tool that helped to identify recurring problems and establish connections between
"
21286,source/David Samoylov.pdf,"seemingly unrelated issues, which enhanced team troubleshooting capabilities.
"
21287,source/David Samoylov.pdf,"• Collaborated with a team to employ an application metric collection system, integrating it with Grafana for
"
21288,source/David Samoylov.pdf,"dashboards and alerts, resulting in reduced incident response time from hours to minutes.
"
21289,source/David Samoylov.pdf,"• Accomplished the migration of the anti-malware records from Perforce to Git.
"
21290,source/David Samoylov.pdf,"• Developed a plugin that performs static code analysis of a domain-specific programming language.
"
21291,source/David Samoylov.pdf,"• Migrated a project CI pipeline from TeamCity to Azure DevOps.
"
21292,source/David Samoylov.pdf,"Komdiagnostika
Orenburg, Russia
"
21293,source/David Samoylov.pdf,"Software Engineer
Aug. 2018 – Apr. 2021
"
21294,source/David Samoylov.pdf,"• Developed and maintained a software solution for vibration-based condition monitoring, automated
"
21295,source/David Samoylov.pdf,"spectrum analysis and predictive maintenance.
"
21296,source/David Samoylov.pdf,"• Implemented a database disk usage prediction system, enhancing monitoring capabilities.
"
21297,source/David Samoylov.pdf,"• Participated in application profiling and optimization and accelerated spectrum harmonic analysis
"
21298,source/David Samoylov.pdf,"algorithm up to four times.
"
21299,source/David Samoylov.pdf,"• Engineered a portable device for vibration analysis, including designing the UI layout, developing the
"
21300,source/David Samoylov.pdf,"application architecture, and implementing the software for data collection and analysis.
"
21301,source/David Samoylov.pdf,"EDUCATION
"
21302,source/David Samoylov.pdf,"Orenburg State University
Orenburg, Russia
"
21303,source/David Samoylov.pdf,"Master of Science in Mathematics and Computer Science
Sep. 2016 – Jun. 2018
"
21304,source/David Samoylov.pdf,"Orenburg State University
Orenburg, Russia
"
21305,source/David Samoylov.pdf,"Bachelor of Science in Mechanical Engineering
Sep. 2012 – Jun. 2016
"
21306,source/David Samoylov.pdf,"TECHNICAL SKILLS
"
21307,source/David Samoylov.pdf,"Languages: C#, PowerShell, Python, SQL. Familiar with C/C++ Frameworks: .NET, .NET
Framework, WPF. Familiar with ASP.NET Core Developer Tools: Git, TFS, TeamCity,
Azure DevOps, Elasticsearch, Grafana Libraries: NUnit, xUnit, Serilog, NLog,
"
21308,source/David Samoylov.pdf,"Benchmark.NET, Dapper
"
21309,source/BOGDANOV NIKOLA.pdf,"BOGDANOV NIKOLA 
"
21310,source/BOGDANOV NIKOLA.pdf," +7(927)9067111 
 a@bogbbbb.co 
"
21311,source/BOGDANOV NIKOLA.pdf,"EDUCATION 
"
21312,source/BOGDANOV NIKOLA.pdf,"Higher School of Economics, Moscow 
Sep 2019 - Expected Jun 2023 
"
21313,source/BOGDANOV NIKOLA.pdf,"Bachelor in Applied Mathematics and Computer Science 
 
GPA: 8.68/10.0 
"
21314,source/BOGDANOV NIKOLA.pdf,"WORK EXPERIENCE 
"
21315,source/BOGDANOV NIKOLA.pdf,"Software Engineering Intern 
Sept 2020 - Dec 2020 
"
21316,source/BOGDANOV NIKOLA.pdf,"Sibur 
 
Moscow, Russia 
"
21317,source/BOGDANOV NIKOLA.pdf,"· Improved path nding algorithm by implementing new rules and restrictions, which resulted in average 
"
21318,source/BOGDANOV NIKOLA.pdf,"commute time reduction by approximately 50% 
"
21319,source/BOGDANOV NIKOLA.pdf,"· Researched the possibility of gRPC framework usage to transfer les larger than 500 MB 
 
"
21320,source/BOGDANOV NIKOLA.pdf,"TECHNICAL SKILLS 
"
21321,source/BOGDANOV NIKOLA.pdf,"Programming Languages 
C++, Python, JavaScript, C#, Java 
"
21322,source/BOGDANOV NIKOLA.pdf,"Technologies 
JSON, REST, SQL, HTML, CSS, LaTeX 
"
21323,source/BOGDANOV NIKOLA.pdf,"Tools 
Git, GitHub, Visual Studio, PyCharm, Docker, Linux 
"
21324,source/BOGDANOV NIKOLA.pdf,"PERSONAL  PROJECTS 
"
21325,source/BOGDANOV NIKOLA.pdf,"lksh-sport 
"
21326,source/BOGDANOV NIKOLA.pdf,"· Implemented REST API for the sports site using Python and Flask, that processed approximately 200 
"
21327,source/BOGDANOV NIKOLA.pdf,"teams and players registration requests 
"
21328,source/BOGDANOV NIKOLA.pdf,"· Developed a telegram bot using Python allowing the administrator to approve or decline the requests 
"
21329,source/BOGDANOV NIKOLA.pdf,"Snake game 
"
21330,source/BOGDANOV NIKOLA.pdf,"· Implemented a clone of the snake game in C++, using SDL2.0 
"
21331,source/BOGDANOV NIKOLA.pdf,"RuzoomBot 
"
21332,source/BOGDANOV NIKOLA.pdf,"· Developed a telegram bot using Python that sends noti cations about upcoming classes to subscribed 
"
21333,source/BOGDANOV NIKOLA.pdf,"chats 
"
21334,source/BOGDANOV NIKOLA.pdf,"Imaginarium (Dixit) 
"
21335,source/BOGDANOV NIKOLA.pdf,"· Developed backend for the online version of a game Dixit using Python 
· Created the UI design using HTML5 and CSS3, deployed the project using Heroku 
"
21336,source/BOGDANOV NIKOLA.pdf,"Flappy AI 
"
21337,source/BOGDANOV NIKOLA.pdf,"· Created a clone of a appy bird game using HTML5 and JS 
· Developed a self-playing mode using a single perceptron and a genetical algorithm to update the 
"
21338,source/BOGDANOV NIKOLA.pdf,"population 
"
21339,source/BOGDANOV NIKOLA.pdf," 
"
21340,source/BOGDANOV NIKOLA.pdf,"ACHIEVEMENTS 
"
21341,source/BOGDANOV NIKOLA.pdf,"All Russian team programming Olympiad 
2018 
"
21342,source/BOGDANOV NIKOLA.pdf,"Finalist - 124th place of about 500 
"
21343,source/BOGDANOV NIKOLA.pdf,"All Russian Olympics  Information Technologies 
2018 
"
21344,source/BOGDANOV NIKOLA.pdf,"Gold medalist - 17th place of about 1400 
"
21345,source/BOGDANOV NIKOLA.pdf,"All Russian project contest Great Challenges 
2018 
"
21346,source/BOGDANOV NIKOLA.pdf,"Winner - member of one of 12 winning teams out of more than 40,000 participants 
"
21347,source/BOGDANOV NIKOLA.pdf,"GSOM-Hack Hackathon 
2020 
"
21348,source/BOGDANOV NIKOLA.pdf,"Winner 
"
21349,source/BOGDANOV NIKOLA.pdf,"· Solved the given task as a Pickup and Delivery Problem with Time Windows using a genetic algorithm 
"
21350,source/BOGDANOV NIKOLA.pdf,"written in C++, showing results 3 times better than the next competitor 
"
21351,source/BOGDANOV NIKOLA.pdf,"· As a result, the team was invited for the internship at Sibur 
"
21352,source/Pavel Prysiazhniuk.pdf,"Pavel Prysiazhniuk
"
21353,source/Pavel Prysiazhniuk.pdf,"FRONT END DEVELOPER
"
21354,source/Pavel Prysiazhniuk.pdf,"Lynnwood, WA —taaay.pr401@gmail.com — (425) 000-6524 — Linkedin
"
21355,source/Pavel Prysiazhniuk.pdf,"SUMMARY
"
21356,source/Pavel Prysiazhniuk.pdf,"Skilled Front End engineer with 6 years of experience in architecting, building, and delivering scalable solutions in the fintech,
e-commerce, and entertainment industries. I have expertise in coaching, mentoring, and interviewing engineers. I’m looking for a
project that will solve real problems and where I can see the value I bring to clients.
"
21357,source/Pavel Prysiazhniuk.pdf,"EDUCATION
"
21358,source/Pavel Prysiazhniuk.pdf,"College of Service and Design
Bila Tserkva, Kyiv Oblast
"
21359,source/Pavel Prysiazhniuk.pdf,"Bachelor’s degrees in Information Technology
Sept. 2012 – June 2015
"
21360,source/Pavel Prysiazhniuk.pdf,"Markup course
HTML & CSS, MUI, Ant Design
July 2016
"
21361,source/Pavel Prysiazhniuk.pdf,"IT-INCUBATOR course
React, Redux, TypeScript, JavaScript
August 2016
"
21362,source/Pavel Prysiazhniuk.pdf,"EXPERIENCE
"
21363,source/Pavel Prysiazhniuk.pdf,"Attract group
Las Vegas, NV
"
21364,source/Pavel Prysiazhniuk.pdf,"Front end developer
May 2019 - Present
"
21365,source/Pavel Prysiazhniuk.pdf,"• Boosted web-app rendering time 2x using Server-Side Rendering.
• Sped up rendering of detected objects in the play mode by 30x (up to 30fps with 5000 detected objects in each frame)
• Improved the velocity of displaying data of tracked object in real-time by 50%
• Increased the accuracy of audio and video processing from 100ms up to 17ms
• Created an API SDK with data normalization for 3 platforms (Web, Mobile, Desktop) which reduced time to develop a web
"
21366,source/Pavel Prysiazhniuk.pdf,"application 4x.
"
21367,source/Pavel Prysiazhniuk.pdf,"• A go-to person in the company in the area of Server-Side Rendering.
• Built a solution for QA to quickly test on different users, which reduced time to log in from 1-2 min to 10 sec.
• Created reusable components for React and React Native apps, which reduced time to develop a mobile app by 20-30%.
"
21368,source/Pavel Prysiazhniuk.pdf,"It-incubator
Vilnius, LT
"
21369,source/Pavel Prysiazhniuk.pdf,"Mentor of students
April 2018 - May 2019
"
21370,source/Pavel Prysiazhniuk.pdf,"• The process of identifying common mistakes among students has been optimized, which has increased the speed and level of
"
21371,source/Pavel Prysiazhniuk.pdf,"passing test tasks by 15%.
"
21372,source/Pavel Prysiazhniuk.pdf,"• Developed mentoring and training programs
• Implemented new approaches and technologies on the company level
• Conflict resolution, problem-solving
• Technical Support & Code Review
"
21373,source/Pavel Prysiazhniuk.pdf,"Esverito
Krakow, PL
"
21374,source/Pavel Prysiazhniuk.pdf,"Front end developer
May 2017 - April 2018
"
21375,source/Pavel Prysiazhniuk.pdf,"Project: CRM for a tourism company. Web and mobile apps for online tickets booking.
"
21376,source/Pavel Prysiazhniuk.pdf,"• Performance optimization for displaying and loading comments and replies for a video stream.
• Accelerated work and processing requests from users 5 times for operators, automating work processes within the company
"
21377,source/Pavel Prysiazhniuk.pdf,"through the development of CRM.
"
21378,source/Pavel Prysiazhniuk.pdf,"TECHNOLOGIES
"
21379,source/Pavel Prysiazhniuk.pdf,"Languages: JavaScript, TypeScript, NodeJS
Frameworks/Libraries: React, NextJs, NestJs, D3.js, GraphQL, Axios, Apollo client, Express
State Managers: Redux, GraphQL, Apollo client
Management and Deployment: Git, Google cloud, PostgreSQL, MongoDB, Redis, Amazon services, Docker, Jenkins, Google API,
DataDog, Elasticsearch, Kibana
HTML/CSS: HTML & CSS, MUI, Ant Design
Tools/Utilities: PWA, NPM, SSG, REST API, Websockets, Gulp/Webpack, Storybook, Cypress, Jest testing, i18n, Stripe, PayPal, Square
"
